function assert(e, t) {
  if (!e) throw t
}

function DMCommand(e, t) {
  this.action = e, this.triple = t, this.toString = function() {
    return "Command(" + e + ", " + t + ")"
  }
}

function DMCommandHandler(e) {
  this.__setNext = function() {
    var t = this.__next;
    return this.__next = e, t ? t : !0
  }, this.__setNext(e), this.__invokeNext = function(e) {
    return this.__next ? this.__next.handle(e) : !1
  }, this.handle = function(e) {
    return this.process(e) ? !0 : this.__invokeNext(e)
  }, this.process = function() {
    return !1
  }
}

function MetaTagHandler(next) {
  DMCommandHandler.apply(this, [next]), this.process = function(command) {
    with(command.triple) if (!(subject instanceof ERDF.Resource && subject.isCurrentDocument() && object instanceof ERDF.Literal)) return !1
  }
}

function printf() {
  for (var e = arguments[0], t = 1; arguments.length > t; t++) e = e.replace("%" + (t - 1), arguments[t]);
  return e
}

function _evenMoreEvilHack(e, t) {
  if (window.ActiveXObject) {
    var i = new ActiveXObject("MSXML.DomDocument");
    return i.loadXML(e), i
  }
  if (window.XMLHttpRequest) {
    var o = new XMLHttpRequest;
    return o.open("GET", "data:" + (t || "application/xml") + ";charset=utf-8," + encodeURIComponent(e), !1), o.overrideMimeType && o.overrideMimeType(t), o.send(null), o.responseXML
  }
}

function _evilSafariHack(e) {
  var t = e,
    i = "data:text/xml;charset=utf-8," + encodeURIComponent(t),
    o = null,
    n = new XMLHttpRequest;
  return n.open("GET", i), n.onload = function() {
    o = n.responseXML
  }, n.send(null), o
}

function init() {
  if (ORYX.Log.debug("Querying editor instances"), ORYX.Editor.setMissingClasses(), window.onOryxResourcesLoaded) window.onOryxResourcesLoaded();
  else {
    var e = window.location.search.substring(4),
      t = "./service/model/" + e + "/json";
    ORYX.Editor.createByUrl(t)
  }
}

function wireServices(e) {
  e.factory("Account", ["$rootScope", "$http", "$q", function(e, t, i) {
    return {
      get: function() {
        var o = i.defer();
        return t.get(ACTIVITI.CONFIG.contextRoot + "/app/rest/account", {
          ignoreErrors: !0
        }).success(function(t) {
          e.account = t, o.resolve()
        }).error(function(e) {
          o.reject(e)
        }), o.promise
      }
    }
  }]), e.factory("AuthenticationSharedService", ["$rootScope", "$http", "authService", "$q", function(e, t, i, o) {
    return {
      authenticate: function() {
        var i = o.defer();
        return t.get(ACTIVITI.CONFIG.contextRoot + "/app/rest/authenticate", {
          ignoreErrors: !0,
          ignoreAuthModule: "ignoreAuthModule"
        }).success(function(t) {
          e.account = t, e.$broadcast("event:auth-authConfirmed"), i.resolve()
        }).error(function(t) {
          i.reject(t), e.$broadcast("event:auth-loginRequired")
        }), i.promise
      },
      login: function(o) {
        var n = "j_username=" + encodeURIComponent(o.username) + "&j_password=" + encodeURIComponent(o.password) + "&_spring_security_remember_me=true&submit=Login";
        t.post(ACTIVITI.CONFIG.contextRoot + "/app/authentication", n, {
          headers: {
            "Content-Type": "application/x-www-form-urlencoded"
          },
          ignoreAuthModule: "ignoreAuthModule",
          ignoreErrors: !0
        }).success(function(t, n, r, s) {
          e.authenticationError = !1, o.success && o.success(t, n, r, s), i.loginConfirmed()
        }).error(function(t, i, n, r) {
          e.$broadcast("event:auth-loginFailed"), o.error && o.error(t, i, n, r)
        })
      },
      logout: function() {
        e.authenticated = !1, e.authenticationError = !1, t.get(ACTIVITI.CONFIG.contextRoot + "/app/logout").success(function() {
          e.login = null, i.loginCancelled({
            isFromLogout: !0
          })
        })
      }
    }
  }]), e.controller("LoginController", ["$scope", "$location", "AuthenticationSharedService", function(e, t, i) {
    e.status = {
      loading: !1
    }, e.login = function() {
      e.status.loading = !0, i.login({
        username: e.username,
        password: e.password,
        success: function() {
          e.status.loading = !1
        },
        error: function() {
          e.status.loading = !1
        }
      })
    }
  }]), e.controller("LogoutController", ["$location", "AuthenticationSharedService", "$cookieStore", function(e, t) {
    t.logout()
  }])
}
if (!ORYX) var ORYX = {};
if (ORYX.I18N || (ORYX.I18N = {}), ORYX.I18N.Language = "en_us", ORYX.I18N.Oryx || (ORYX.I18N.Oryx = {}), ORYX.I18N.Oryx.title = "Oryx", ORYX.I18N.Oryx.noBackendDefined = "Caution! \nNo Backend defined.\n The requested model cannot be loaded. Try to load a configuration with a save plugin.", ORYX.I18N.Oryx.pleaseWait = "Please wait while loading...", ORYX.I18N.Oryx.notLoggedOn = "Not logged on", ORYX.I18N.Oryx.editorOpenTimeout = "The editor does not seem to be started yet. Please check, whether you have a popup blocker enabled and disable it or allow popups for this site. We will never display any commercials on this site.", ORYX.I18N.AddDocker || (ORYX.I18N.AddDocker = {}), ORYX.I18N.AddDocker.group = "Docker", ORYX.I18N.AddDocker.add = "Add Docker", ORYX.I18N.AddDocker.addDesc = "Add a Docker to an edge, by clicking on it", ORYX.I18N.AddDocker.del = "Delete Docker", ORYX.I18N.AddDocker.delDesc = "Delete a Docker", ORYX.I18N.Arrangement || (ORYX.I18N.Arrangement = {}), ORYX.I18N.Arrangement.groupZ = "Z-Order", ORYX.I18N.Arrangement.btf = "Bring To Front", ORYX.I18N.Arrangement.btfDesc = "Bring to Front", ORYX.I18N.Arrangement.btb = "Bring To Back", ORYX.I18N.Arrangement.btbDesc = "Bring To Back", ORYX.I18N.Arrangement.bf = "Bring Forward", ORYX.I18N.Arrangement.bfDesc = "Bring Forward", ORYX.I18N.Arrangement.bb = "Bring Backward", ORYX.I18N.Arrangement.bbDesc = "Bring Backward", ORYX.I18N.Arrangement.groupA = "Alignment", ORYX.I18N.Arrangement.ab = "Alignment Bottom", ORYX.I18N.Arrangement.abDesc = "Bottom", ORYX.I18N.Arrangement.am = "Alignment Middle", ORYX.I18N.Arrangement.amDesc = "Middle", ORYX.I18N.Arrangement.at = "Alignment Top", ORYX.I18N.Arrangement.atDesc = "Top", ORYX.I18N.Arrangement.al = "Alignment Left", ORYX.I18N.Arrangement.alDesc = "Left", ORYX.I18N.Arrangement.ac = "Alignment Center", ORYX.I18N.Arrangement.acDesc = "Center", ORYX.I18N.Arrangement.ar = "Alignment Right", ORYX.I18N.Arrangement.arDesc = "Right", ORYX.I18N.Arrangement.as = "Alignment Same Size", ORYX.I18N.Arrangement.asDesc = "Same Size", ORYX.I18N.Edit || (ORYX.I18N.Edit = {}), ORYX.I18N.Edit.group = "Edit", ORYX.I18N.Edit.cut = "Cut", ORYX.I18N.Edit.cutDesc = "Cuts the selection into an Oryx clipboard", ORYX.I18N.Edit.copy = "Copy", ORYX.I18N.Edit.copyDesc = "Copies the selection into an Oryx clipboard", ORYX.I18N.Edit.paste = "Paste", ORYX.I18N.Edit.pasteDesc = "Pastes the Oryx clipboard to the canvas", ORYX.I18N.Edit.del = "Delete", ORYX.I18N.Edit.delDesc = "Deletes all selected shapes", ORYX.I18N.EPCSupport || (ORYX.I18N.EPCSupport = {}), ORYX.I18N.EPCSupport.group = "EPC", ORYX.I18N.EPCSupport.exp = "Export EPC", ORYX.I18N.EPCSupport.expDesc = "Export diagram to EPML", ORYX.I18N.EPCSupport.imp = "Import EPC", ORYX.I18N.EPCSupport.impDesc = "Import an EPML file", ORYX.I18N.EPCSupport.progressExp = "Exporting model", ORYX.I18N.EPCSupport.selectFile = "Select an EPML (.empl) file to import.", ORYX.I18N.EPCSupport.file = "File", ORYX.I18N.EPCSupport.impPanel = "Import EPML File", ORYX.I18N.EPCSupport.impBtn = "Import", ORYX.I18N.EPCSupport.close = "Close", ORYX.I18N.EPCSupport.error = "Error", ORYX.I18N.EPCSupport.progressImp = "Import...", ORYX.I18N.ERDFSupport || (ORYX.I18N.ERDFSupport = {}), ORYX.I18N.ERDFSupport.exp = "Export to ERDF", ORYX.I18N.ERDFSupport.expDesc = "Export to ERDF", ORYX.I18N.ERDFSupport.imp = "Import from ERDF", ORYX.I18N.ERDFSupport.impDesc = "Import from ERDF", ORYX.I18N.ERDFSupport.impFailed = "Request for import of ERDF failed.", ORYX.I18N.ERDFSupport.impFailed2 = "An error while importing occurs! <br/>Please check error message: <br/><br/>", ORYX.I18N.ERDFSupport.error = "Error", ORYX.I18N.ERDFSupport.noCanvas = "The xml document has no Oryx canvas node included!", ORYX.I18N.ERDFSupport.noSS = "The Oryx canvas node has no stencil set definition included!", ORYX.I18N.ERDFSupport.wrongSS = "The given stencil set does not fit to the current editor!", ORYX.I18N.ERDFSupport.selectFile = "Select an ERDF (.xml) file or type in the ERDF to import it!", ORYX.I18N.ERDFSupport.file = "File", ORYX.I18N.ERDFSupport.impERDF = "Import ERDF", ORYX.I18N.ERDFSupport.impBtn = "Import", ORYX.I18N.ERDFSupport.impProgress = "Importing...", ORYX.I18N.ERDFSupport.close = "Close", ORYX.I18N.ERDFSupport.deprTitle = "Really export to eRDF?", ORYX.I18N.ERDFSupport.deprText = "Exporting to eRDF is not recommended anymore because the support will be stopped in future versions of the Oryx editor. If possible, export the model to JSON. Do you want to export anyway?", ORYX.I18N.jPDLSupport || (ORYX.I18N.jPDLSupport = {}), ORYX.I18N.jPDLSupport.group = "ExecBPMN", ORYX.I18N.jPDLSupport.exp = "Export to jPDL", ORYX.I18N.jPDLSupport.expDesc = "Export to jPDL", ORYX.I18N.jPDLSupport.imp = "Import from jPDL", ORYX.I18N.jPDLSupport.impDesc = "Import jPDL File", ORYX.I18N.jPDLSupport.impFailedReq = "Request for import of jPDL failed.", ORYX.I18N.jPDLSupport.impFailedJson = "Transformation of jPDL failed.", ORYX.I18N.jPDLSupport.impFailedJsonAbort = "Import aborted.", ORYX.I18N.jPDLSupport.loadSseQuestionTitle = "jBPM stencil set extension needs to be loaded", ORYX.I18N.jPDLSupport.loadSseQuestionBody = "In order to import jPDL, the stencil set extension has to be loaded. Do you want to proceed?", ORYX.I18N.jPDLSupport.expFailedReq = "Request for export of model failed.", ORYX.I18N.jPDLSupport.expFailedXml = "Export to jPDL failed. Exporter reported: ", ORYX.I18N.jPDLSupport.error = "Error", ORYX.I18N.jPDLSupport.selectFile = "Select an jPDL (.xml) file or type in the jPDL to import it!", ORYX.I18N.jPDLSupport.file = "File", ORYX.I18N.jPDLSupport.impJPDL = "Import jPDL", ORYX.I18N.jPDLSupport.impBtn = "Import", ORYX.I18N.jPDLSupport.impProgress = "Importing...", ORYX.I18N.jPDLSupport.close = "Close", ORYX.I18N.Save || (ORYX.I18N.Save = {}), ORYX.I18N.Save.group = "File", ORYX.I18N.Save.save = "Save", ORYX.I18N.Save.saveDesc = "Save", ORYX.I18N.Save.saveAs = "Save As...", ORYX.I18N.Save.saveAsDesc = "Save As...", ORYX.I18N.Save.unsavedData = "There are unsaved data, please save before you leave, otherwise your changes get lost!", ORYX.I18N.Save.newProcess = "New Process", ORYX.I18N.Save.saveAsTitle = "Save as...", ORYX.I18N.Save.saveBtn = "Save", ORYX.I18N.Save.close = "Close", ORYX.I18N.Save.savedAs = "Saved As", ORYX.I18N.Save.saved = "Saved!", ORYX.I18N.Save.failed = "Saving failed.", ORYX.I18N.Save.noRights = "You have no rights to save changes.", ORYX.I18N.Save.saving = "Saving", ORYX.I18N.Save.saveAsHint = "The process diagram is stored under:", ORYX.I18N.File || (ORYX.I18N.File = {}), ORYX.I18N.File.group = "File", ORYX.I18N.File.print = "Print", ORYX.I18N.File.printDesc = "Print current model", ORYX.I18N.File.pdf = "Export as PDF", ORYX.I18N.File.pdfDesc = "Export as PDF", ORYX.I18N.File.info = "Info", ORYX.I18N.File.infoDesc = "Info", ORYX.I18N.File.genPDF = "Generating PDF", ORYX.I18N.File.genPDFFailed = "Generating PDF failed.", ORYX.I18N.File.printTitle = "Print", ORYX.I18N.File.printMsg = "We are currently experiencing problems with the printing function. We recommend using the PDF Export to print the diagram. Do you really want to continue printing?", ORYX.I18N.Grouping || (ORYX.I18N.Grouping = {}), ORYX.I18N.Grouping.grouping = "Grouping", ORYX.I18N.Grouping.group = "Group", ORYX.I18N.Grouping.groupDesc = "Groups all selected shapes", ORYX.I18N.Grouping.ungroup = "Ungroup", ORYX.I18N.Grouping.ungroupDesc = "Deletes the group of all selected Shapes", ORYX.I18N.Loading || (ORYX.I18N.Loading = {}), ORYX.I18N.Loading.waiting = "Please wait...", ORYX.I18N.PropertyWindow || (ORYX.I18N.PropertyWindow = {}), ORYX.I18N.PropertyWindow.name = "Name", ORYX.I18N.PropertyWindow.value = "Value", ORYX.I18N.PropertyWindow.selected = "selected", ORYX.I18N.PropertyWindow.clickIcon = "Click Icon", ORYX.I18N.PropertyWindow.add = "Add", ORYX.I18N.PropertyWindow.rem = "Remove", ORYX.I18N.PropertyWindow.complex = "Editor for a Complex Type", ORYX.I18N.PropertyWindow.text = "Editor for a Text Type", ORYX.I18N.PropertyWindow.ok = "Ok", ORYX.I18N.PropertyWindow.cancel = "Cancel", ORYX.I18N.PropertyWindow.dateFormat = "m/d/y", ORYX.I18N.ShapeMenuPlugin || (ORYX.I18N.ShapeMenuPlugin = {}), ORYX.I18N.ShapeMenuPlugin.drag = "Drag", ORYX.I18N.ShapeMenuPlugin.clickDrag = "Click or drag", ORYX.I18N.ShapeMenuPlugin.morphMsg = "Morph shape", ORYX.I18N.SyntaxChecker || (ORYX.I18N.SyntaxChecker = {}), ORYX.I18N.SyntaxChecker.group = "Verification", ORYX.I18N.SyntaxChecker.name = "Syntax Checker", ORYX.I18N.SyntaxChecker.desc = "Check Syntax", ORYX.I18N.SyntaxChecker.noErrors = "There are no syntax errors.", ORYX.I18N.SyntaxChecker.invalid = "Invalid answer from server.", ORYX.I18N.SyntaxChecker.checkingMessage = "Checking ...", ORYX.I18N.FormHandler || (ORYX.I18N.FormHandler = {}), ORYX.I18N.FormHandler.group = "FormHandling", ORYX.I18N.FormHandler.name = "FormHandler", ORYX.I18N.FormHandler.desc = "Testing from handling", ORYX.I18N.Deployer || (ORYX.I18N.Deployer = {}), ORYX.I18N.Deployer.group = "Deployment", ORYX.I18N.Deployer.name = "Deployer", ORYX.I18N.Deployer.desc = "Deploy to engine", ORYX.I18N.Tester || (ORYX.I18N.Tester = {}), ORYX.I18N.Tester.group = "Testing", ORYX.I18N.Tester.name = "Test process", ORYX.I18N.Tester.desc = "Open the test component to test this process definition", ORYX.I18N.Undo || (ORYX.I18N.Undo = {}), ORYX.I18N.Undo.group = "Undo", ORYX.I18N.Undo.undo = "Undo", ORYX.I18N.Undo.undoDesc = "Undo the last action", ORYX.I18N.Undo.redo = "Redo", ORYX.I18N.Undo.redoDesc = "Redo the last undone action", ORYX.I18N.View || (ORYX.I18N.View = {}), ORYX.I18N.View.group = "Zoom", ORYX.I18N.View.zoomIn = "Zoom In", ORYX.I18N.View.zoomInDesc = "Zoom into the model", ORYX.I18N.View.zoomOut = "Zoom Out", ORYX.I18N.View.zoomOutDesc = "Zoom out of the model", ORYX.I18N.View.zoomStandard = "Zoom Standard", ORYX.I18N.View.zoomStandardDesc = "Zoom to the standard level", ORYX.I18N.View.zoomFitToModel = "Zoom fit to model", ORYX.I18N.View.zoomFitToModelDesc = "Zoom to fit the model size", ORYX.I18N.XFormsSerialization || (ORYX.I18N.XFormsSerialization = {}), ORYX.I18N.XFormsSerialization.group = "XForms Serialization", ORYX.I18N.XFormsSerialization.exportXForms = "XForms Export", ORYX.I18N.XFormsSerialization.exportXFormsDesc = "Export XForms+XHTML markup", ORYX.I18N.XFormsSerialization.importXForms = "XForms Import", ORYX.I18N.XFormsSerialization.importXFormsDesc = "Import XForms+XHTML markup", ORYX.I18N.XFormsSerialization.noClientXFormsSupport = "No XForms support", ORYX.I18N.XFormsSerialization.noClientXFormsSupportDesc = '<h2>Your browser does not support XForms. Please install the <a href="https://addons.mozilla.org/firefox/addon/824" target="_blank">Mozilla XForms Add-on</a> for Firefox.</h2>', ORYX.I18N.XFormsSerialization.ok = "Ok", ORYX.I18N.XFormsSerialization.selectFile = "Select a XHTML (.xhtml) file or type in the XForms+XHTML markup to import it!", ORYX.I18N.XFormsSerialization.selectCss = "Please insert url of css file", ORYX.I18N.XFormsSerialization.file = "File", ORYX.I18N.XFormsSerialization.impFailed = "Request for import of document failed.", ORYX.I18N.XFormsSerialization.impTitle = "Import XForms+XHTML document", ORYX.I18N.XFormsSerialization.expTitle = "Export XForms+XHTML document", ORYX.I18N.XFormsSerialization.impButton = "Import", ORYX.I18N.XFormsSerialization.impProgress = "Importing...", ORYX.I18N.XFormsSerialization.close = "Close", ORYX.I18N.PropertyWindow.title = "Properties", ORYX.I18N.ShapeRepository || (ORYX.I18N.ShapeRepository = {}), ORYX.I18N.ShapeRepository.title = "Shape Repository", ORYX.I18N.Save.dialogDesciption = "Please enter a name, a description and a comment.", ORYX.I18N.Save.dialogLabelTitle = "Title", ORYX.I18N.Save.dialogLabelDesc = "Description", ORYX.I18N.Save.dialogLabelType = "Type", ORYX.I18N.Save.dialogLabelComment = "Revision comment", ORYX.I18N.Perspective || (ORYX.I18N.Perspective = {}), ORYX.I18N.Perspective.no = "No Perspective", ORYX.I18N.Perspective.noTip = "Unload the current perspective", ORYX.I18N.JSONSupport = {
  imp: {
    name: "Import from JSON",
    desc: "Imports a model from JSON",
    group: "Export",
    selectFile: "Select an JSON (.json) file or type in JSON to import it!",
    file: "File",
    btnImp: "Import",
    btnClose: "Close",
    progress: "Importing ...",
    syntaxError: "Syntax error"
  },
  exp: {
    name: "Export to JSON",
    desc: "Exports current model to JSON",
    group: "Export"
  }
}, ORYX.I18N.JSONImport || (ORYX.I18N.JSONImport = {}), ORYX.I18N.JSONImport.title = "JSON Import", ORYX.I18N.JSONImport.wrongSS = "The stencil set of the imported file ({0}) does not match to the loaded stencil set ({1}).", ORYX.I18N.RDFExport || (ORYX.I18N.RDFExport = {}), ORYX.I18N.RDFExport.group = "Export", ORYX.I18N.RDFExport.rdfExport = "Export to RDF", ORYX.I18N.RDFExport.rdfExportDescription = "Exports current model to the XML serialization defined for the Resource Description Framework (RDF)", ORYX.I18N.SyntaxChecker.BPMN || (ORYX.I18N.SyntaxChecker.BPMN = {}), ORYX.I18N.SyntaxChecker.BPMN_NO_SOURCE = "An edge must have a source.", ORYX.I18N.SyntaxChecker.BPMN_NO_TARGET = "An edge must have a target.", ORYX.I18N.SyntaxChecker.BPMN_DIFFERENT_PROCESS = "Source and target node must be contained in the same process.", ORYX.I18N.SyntaxChecker.BPMN_SAME_PROCESS = "Source and target node must be contained in different pools.", ORYX.I18N.SyntaxChecker.BPMN_FLOWOBJECT_NOT_CONTAINED_IN_PROCESS = "A flow object must be contained in a process.", ORYX.I18N.SyntaxChecker.BPMN_ENDEVENT_WITHOUT_INCOMING_CONTROL_FLOW = "An end event must have an incoming sequence flow.", ORYX.I18N.SyntaxChecker.BPMN_STARTEVENT_WITHOUT_OUTGOING_CONTROL_FLOW = "A start event must have an outgoing sequence flow.", ORYX.I18N.SyntaxChecker.BPMN_STARTEVENT_WITH_INCOMING_CONTROL_FLOW = "Start events must not have incoming sequence flows.", ORYX.I18N.SyntaxChecker.BPMN_ATTACHEDINTERMEDIATEEVENT_WITH_INCOMING_CONTROL_FLOW = "Attached intermediate events must not have incoming sequence flows.", ORYX.I18N.SyntaxChecker.BPMN_ATTACHEDINTERMEDIATEEVENT_WITHOUT_OUTGOING_CONTROL_FLOW = "Attached intermediate events must have exactly one outgoing sequence flow.", ORYX.I18N.SyntaxChecker.BPMN_ENDEVENT_WITH_OUTGOING_CONTROL_FLOW = "End events must not have outgoing sequence flows.", ORYX.I18N.SyntaxChecker.BPMN_EVENTBASEDGATEWAY_BADCONTINUATION = "Event-based gateways must not be followed by gateways or subprocesses.", ORYX.I18N.SyntaxChecker.BPMN_NODE_NOT_ALLOWED = "Node type is not allowed.", ORYX.I18N.SyntaxChecker.IBPMN || (ORYX.I18N.SyntaxChecker.IBPMN = {}), ORYX.I18N.SyntaxChecker.IBPMN_NO_ROLE_SET = "Interactions must have a sender and a receiver role set", ORYX.I18N.SyntaxChecker.IBPMN_NO_INCOMING_SEQFLOW = "This node must have incoming sequence flow.", ORYX.I18N.SyntaxChecker.IBPMN_NO_OUTGOING_SEQFLOW = "This node must have outgoing sequence flow.", ORYX.I18N.SyntaxChecker.InteractionNet || (ORYX.I18N.SyntaxChecker.InteractionNet = {}), ORYX.I18N.SyntaxChecker.InteractionNet_SENDER_NOT_SET = "Sender not set", ORYX.I18N.SyntaxChecker.InteractionNet_RECEIVER_NOT_SET = "Receiver not set", ORYX.I18N.SyntaxChecker.InteractionNet_MESSAGETYPE_NOT_SET = "Message type not set", ORYX.I18N.SyntaxChecker.InteractionNet_ROLE_NOT_SET = "Role not set", ORYX.I18N.SyntaxChecker.EPC || (ORYX.I18N.SyntaxChecker.EPC = {}), ORYX.I18N.SyntaxChecker.EPC_NO_SOURCE = "Each edge must have a source.", ORYX.I18N.SyntaxChecker.EPC_NO_TARGET = "Each edge must have a target.", ORYX.I18N.SyntaxChecker.EPC_NOT_CONNECTED = "Node must be connected with edges.", ORYX.I18N.SyntaxChecker.EPC_NOT_CONNECTED_2 = "Node must be connected with more edges.", ORYX.I18N.SyntaxChecker.EPC_TOO_MANY_EDGES = "Node has too many connected edges.", ORYX.I18N.SyntaxChecker.EPC_NO_CORRECT_CONNECTOR = "Node is no correct connector.", ORYX.I18N.SyntaxChecker.EPC_MANY_STARTS = "There must be only one start event.", ORYX.I18N.SyntaxChecker.EPC_FUNCTION_AFTER_OR = "There must be no functions after a splitting OR/XOR.", ORYX.I18N.SyntaxChecker.EPC_PI_AFTER_OR = "There must be no process interface after a splitting OR/XOR.", ORYX.I18N.SyntaxChecker.EPC_FUNCTION_AFTER_FUNCTION = "There must be no function after a function.", ORYX.I18N.SyntaxChecker.EPC_EVENT_AFTER_EVENT = "There must be no event after an event.", ORYX.I18N.SyntaxChecker.EPC_PI_AFTER_FUNCTION = "There must be no process interface after a function.", ORYX.I18N.SyntaxChecker.EPC_FUNCTION_AFTER_PI = "There must be no function after a process interface.", ORYX.I18N.SyntaxChecker.EPC_SOURCE_EQUALS_TARGET = "Edge must connect two distinct nodes.", ORYX.I18N.SyntaxChecker.PetriNet || (ORYX.I18N.SyntaxChecker.PetriNet = {}), ORYX.I18N.SyntaxChecker.PetriNet_NOT_BIPARTITE = "The graph is not bipartite", ORYX.I18N.SyntaxChecker.PetriNet_NO_LABEL = "Label not set for a labeled transition", ORYX.I18N.SyntaxChecker.PetriNet_NO_ID = "There is a node without id", ORYX.I18N.SyntaxChecker.PetriNet_SAME_SOURCE_AND_TARGET = "Two flow relationships have the same source and target", ORYX.I18N.SyntaxChecker.PetriNet_NODE_NOT_SET = "A node is not set for a flowrelationship", ORYX.I18N.Edge = "Edge", ORYX.I18N.Node = "Node", ORYX.I18N.SyntaxChecker.notice = "Move the mouse over a red cross icon to see the error message.", ORYX.I18N.RESIZE || (ORYX.I18N.RESIZE = {}), ORYX.I18N.RESIZE.tipGrow = "Increase canvas size:", ORYX.I18N.RESIZE.tipShrink = "Decrease canvas size:", ORYX.I18N.RESIZE.N = "Top", ORYX.I18N.RESIZE.W = "Left", ORYX.I18N.RESIZE.S = "Down", ORYX.I18N.RESIZE.E = "Right", ORYX.I18N.Layouting || (ORYX.I18N.Layouting = {}), ORYX.I18N.Layouting.doing = "Layouting...", ORYX.I18N.SyntaxChecker.MULT_ERRORS = "Multiple Errors", ORYX.I18N.PropertyWindow || (ORYX.I18N.PropertyWindow = {}), ORYX.I18N.PropertyWindow.oftenUsed = "Often used", ORYX.I18N.PropertyWindow.moreProps = "More Properties", ORYX.I18N.SyntaxChecker.BPMN2 || (ORYX.I18N.SyntaxChecker.BPMN2 = {}), ORYX.I18N.SyntaxChecker.BPMN2_DATA_INPUT_WITH_INCOMING_DATA_ASSOCIATION = "A Data Input must not have any incoming Data Associations.", ORYX.I18N.SyntaxChecker.BPMN2_DATA_OUTPUT_WITH_OUTGOING_DATA_ASSOCIATION = "A Data Output must not have any outgoing Data Associations.", ORYX.I18N.SyntaxChecker.BPMN2_EVENT_BASED_TARGET_WITH_TOO_MANY_INCOMING_SEQUENCE_FLOWS = "Targets of Event-based Gateways may only have one incoming Sequence Flow.", ORYX.I18N.SyntaxChecker.BPMN2_EVENT_BASED_WITH_TOO_LESS_OUTGOING_SEQUENCE_FLOWS = "An Event-based Gateway must have two or more outgoing Sequence Flows.", ORYX.I18N.SyntaxChecker.BPMN2_EVENT_BASED_EVENT_TARGET_CONTRADICTION = "If Message Intermediate Events are used in the configuration, then Receive Tasks must not be used and vice versa.", ORYX.I18N.SyntaxChecker.BPMN2_EVENT_BASED_WRONG_TRIGGER = "Only the following Intermediate Event triggers are valid: Message, Signal, Timer, Conditional and Multiple.", ORYX.I18N.SyntaxChecker.BPMN2_EVENT_BASED_WRONG_CONDITION_EXPRESSION = "The outgoing Sequence Flows of the Event Gateway must not have a condition expression.", ORYX.I18N.SyntaxChecker.BPMN2_EVENT_BASED_NOT_INSTANTIATING = "The Gateway does not meet the conditions to instantiate the process. Please use a start event or an instantiating attribute for the gateway.", ORYX.I18N.SyntaxChecker.BPMN2_GATEWAYDIRECTION_MIXED_FAILURE = "The Gateway must have both multiple incoming and outgoing Sequence Flows.", ORYX.I18N.SyntaxChecker.BPMN2_GATEWAYDIRECTION_CONVERGING_FAILURE = "The Gateway must have multiple incoming but most NOT have multiple outgoing Sequence Flows.", ORYX.I18N.SyntaxChecker.BPMN2_GATEWAYDIRECTION_DIVERGING_FAILURE = "The Gateway must NOT have multiple incoming but must have multiple outgoing Sequence Flows.", ORYX.I18N.SyntaxChecker.BPMN2_GATEWAY_WITH_NO_OUTGOING_SEQUENCE_FLOW = "A Gateway must have a minimum of one outgoing Sequence Flow.", ORYX.I18N.SyntaxChecker.BPMN2_RECEIVE_TASK_WITH_ATTACHED_EVENT = "Receive Tasks used in Event Gateway configurations must not have any attached Intermediate Events.", ORYX.I18N.SyntaxChecker.BPMN2_EVENT_SUBPROCESS_BAD_CONNECTION = "An Event Subprocess must not have any incoming or outgoing Sequence Flow.", ORYX.I18N.SyntaxChecker.BPMN_MESSAGE_FLOW_NOT_CONNECTED = "At least one side of the Message Flow has to be connected.", ORYX.I18N.SyntaxChecker.BPMN2_TOO_MANY_INITIATING_MESSAGES = "A Choreography Activity may only have one initiating message.", ORYX.I18N.SyntaxChecker.BPMN_MESSAGE_FLOW_NOT_ALLOWED = "A Message Flow is not allowed here.", ORYX.I18N.SyntaxChecker.BPMN2_EVENT_BASED_WITH_TOO_LESS_INCOMING_SEQUENCE_FLOWS = "An Event-based Gateway that is not instantiating must have a minimum of one incoming Sequence Flow.", ORYX.I18N.SyntaxChecker.BPMN2_TOO_FEW_INITIATING_PARTICIPANTS = "A Choreography Activity must have one initiating Participant (white).", ORYX.I18N.SyntaxChecker.BPMN2_TOO_MANY_INITIATING_PARTICIPANTS = "A Choreography Acitivity must not have more than one initiating Participant (white).", ORYX.I18N.SyntaxChecker.COMMUNICATION_AT_LEAST_TWO_PARTICIPANTS = "The communication must be connected to at least two participants.", ORYX.I18N.SyntaxChecker.MESSAGEFLOW_START_MUST_BE_PARTICIPANT = "The message flow's source must be a participant.", ORYX.I18N.SyntaxChecker.MESSAGEFLOW_END_MUST_BE_PARTICIPANT = "The message flow's target must be a participant.", ORYX.I18N.SyntaxChecker.CONV_LINK_CANNOT_CONNECT_CONV_NODES = "The conversation link must connect a communication or sub conversation node with a participant.", ORYX.I18N.PropertyWindow.dateFormat = "d/m/y", ORYX.I18N.View.East = "Attributes", ORYX.I18N.View.West = "Modeling Elements", ORYX.I18N.Oryx.title = "Signavio", ORYX.I18N.Oryx.pleaseWait = "Please wait while the Signavio Process Editor is loading...", ORYX.I18N.Edit.cutDesc = "Cuts the selection into the clipboard", ORYX.I18N.Edit.copyDesc = "Copies the selection into the clipboard", ORYX.I18N.Edit.pasteDesc = "Pastes the clipboard to the canvas", ORYX.I18N.ERDFSupport.noCanvas = "The xml document has no canvas node included!", ORYX.I18N.ERDFSupport.noSS = "The Signavio Process Editor canvas node has no stencil set definition included!", ORYX.I18N.ERDFSupport.deprText = "Exporting to eRDF is not recommended anymore because the support will be stopped in future versions of the Signavio Process Editor. If possible, export the model to JSON. Do you want to export anyway?", ORYX.I18N.Save.pleaseWait = "Please wait<br/>while saving...", ORYX.I18N.Save.saveAs = "Save a copy...", ORYX.I18N.Save.saveAsDesc = "Save a copy...", ORYX.I18N.Save.saveAsTitle = "Save a copy...", ORYX.I18N.Save.savedAs = "Copy saved", ORYX.I18N.Save.savedDescription = "The process diagram is stored under", ORYX.I18N.Save.notAuthorized = "You are currently not logged in. Please <a href='/p/login' target='_blank'>log in</a> in a new window so that you can save the current diagram.", ORYX.I18N.Save.transAborted = "The saving request took too long. You may use a faster internet connection. If you use wireless LAN, please check the strength of your connection.", ORYX.I18N.Save.noRights = "You do not have the required rights to store that model. Please check in the <a href='/p/explorer' target='_blank'>Signavio Explorer</a>, if you still have the rights to write in the target directory.", ORYX.I18N.Save.comFailed = "The communication with the Signavio server failed. Please check your internet connection. If the problem resides, please contact the Signavio Support via the envelope symbol in the toolbar.", ORYX.I18N.Save.failed = "Something went wrong when trying to save your diagram. Please try again. If the problem resides, please contact the Signavio Support via the envelope symbol in the toolbar.", ORYX.I18N.Save.exception = "Some exceptions are raised while trying to save your diagram. Please try again. If the problem resides, please contact the Signavio Support via the envelope symbol in the toolbar.", ORYX.I18N.Save.retrieveData = "Please wait, data is retrieving.", ORYX.I18N.ShapeMenuPlugin || (ORYX.I18N.ShapeMenuPlugin = {}), ORYX.I18N.ShapeMenuPlugin.morphMsg = "Transform shape", ORYX.I18N.ShapeMenuPlugin.morphWarningTitleMsg = "Transform shape", ORYX.I18N.ShapeMenuPlugin.morphWarningMsg = "There are child shape which can not be contained in the transformed element.<br/>Do you want to transform anyway?", !Signavio) var Signavio = {};
if (Signavio.I18N || (Signavio.I18N = {}), Signavio.I18N.Editor || (Signavio.I18N.Editor = {}), Signavio.I18N.Editor.Linking || (Signavio.I18N.Editor.Linking = {}), Signavio.I18N.Editor.Linking.CreateDiagram = "Create a new diagram", Signavio.I18N.Editor.Linking.UseDiagram = "Use existing diagram", Signavio.I18N.Editor.Linking.UseLink = "Use web link", Signavio.I18N.Editor.Linking.Close = "Close", Signavio.I18N.Editor.Linking.Cancel = "Cancel", Signavio.I18N.Editor.Linking.UseName = "Adopt diagram name", Signavio.I18N.Editor.Linking.UseNameHint = "Replaces the current name of the modeling element ({type}) with the name of the linked diagram.", Signavio.I18N.Editor.Linking.CreateTitle = "Establish link", Signavio.I18N.Editor.Linking.AlertSelectModel = "You have to select a model.", Signavio.I18N.Editor.Linking.ButtonLink = "Link diagram", Signavio.I18N.Editor.Linking.LinkNoAccess = "You have no access to this diagram.", Signavio.I18N.Editor.Linking.LinkUnavailable = "The diagram is unavailable.", Signavio.I18N.Editor.Linking.RemoveLink = "Remove link", Signavio.I18N.Editor.Linking.EditLink = "Edit Link", Signavio.I18N.Editor.Linking.OpenLink = "Open", Signavio.I18N.Editor.Linking.BrokenLink = "The link is broken!", Signavio.I18N.Editor.Linking.PreviewTitle = "Preview", Signavio.I18N.Glossary_Support || (Signavio.I18N.Glossary_Support = {}), Signavio.I18N.Glossary_Support.renameEmpty = "No dictionary entry", Signavio.I18N.Glossary_Support.renameLoading = "Searching...", ORYX.I18N.PropertyWindow || (ORYX.I18N.PropertyWindow = {}), ORYX.I18N.PropertyWindow.oftenUsed = "Main properties", ORYX.I18N.PropertyWindow.moreProps = "More properties", ORYX.I18N.PropertyWindow.btnOpen = "Open", ORYX.I18N.PropertyWindow.btnRemove = "Remove", ORYX.I18N.PropertyWindow.btnEdit = "Edit", ORYX.I18N.PropertyWindow.btnUp = "Move up", ORYX.I18N.PropertyWindow.btnDown = "Move down", ORYX.I18N.PropertyWindow.createNew = "Create new", ORYX.I18N.PropertyWindow || (ORYX.I18N.PropertyWindow = {}), ORYX.I18N.PropertyWindow.oftenUsed = "Main attributes", ORYX.I18N.PropertyWindow.moreProps = "More attributes", ORYX.I18N.PropertyWindow.characteristicNr = "Cost &amp; Resource Analysis", ORYX.I18N.PropertyWindow.meta = "Custom attributes", ORYX.I18N.PropertyWindow.Category || (ORYX.I18N.PropertyWindow.Category = {}), ORYX.I18N.PropertyWindow.Category.popular = "Main Attributes", ORYX.I18N.PropertyWindow.Category.characteristicnr = "Cost &amp; Resource Analysis", ORYX.I18N.PropertyWindow.Category.others = "More Attributes", ORYX.I18N.PropertyWindow.Category.meta = "Custom Attributes", ORYX.I18N.PropertyWindow.ListView || (ORYX.I18N.PropertyWindow.ListView = {}), ORYX.I18N.PropertyWindow.ListView.title = "Edit: ", ORYX.I18N.PropertyWindow.ListView.dataViewLabel = "Already existing entries.", ORYX.I18N.PropertyWindow.ListView.dataViewEmptyText = "No list entries.", ORYX.I18N.PropertyWindow.ListView.addEntryLabel = "Add a new entry", ORYX.I18N.PropertyWindow.ListView.buttonAdd = "Add", ORYX.I18N.PropertyWindow.ListView.save = "Save", ORYX.I18N.PropertyWindow.ListView.cancel = "Cancel", Signavio.I18N.Buttons || (Signavio.I18N.Buttons = {}), Signavio.I18N.Buttons.save = "Save", Signavio.I18N.Buttons.cancel = "Cancel", Signavio.I18N.Buttons.remove = "Remove", Signavio.I18N.btn || (Signavio.I18N.btn = {}), Signavio.I18N.btn.btnEdit = "Edit", Signavio.I18N.btn.btnRemove = "Remove", Signavio.I18N.btn.moveUp = "Move up", Signavio.I18N.btn.moveDown = "Move down", Signavio.I18N.field || (Signavio.I18N.field = {}), Signavio.I18N.field.Url = "URL", Signavio.I18N.field.UrlLabel = "Label", !ORYX) var ORYX = {};
ORYX.Utils = {
  getParamFromUrl: function(e) {
    e = e.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var t = "[\\?&]" + e + "=([^&#]*)",
      i = RegExp(t),
      o = i.exec(window.location.href);
    return null == o ? null : o[1]
  },
  adjustLightness: function() {
    return arguments[0]
  },
  adjustGradient: function(e, t) {
    if (ORYX.CONFIG.DISABLE_GRADIENT && e) {
      var i = t.getAttributeNS(null, "stop-color") || "#ffffff";
      $A(e.getElementsByTagName("stop")).each(function(e) {
        e != t && e.setAttributeNS(null, "stop-color", i)
      })
    }
  }
}, XMLNS = {
  ATOM: "http://www.w3.org/2005/Atom",
  XHTML: "http://www.w3.org/1999/xhtml",
  ERDF: "http://purl.org/NET/erdf/profile",
  RDFS: "http://www.w3.org/2000/01/rdf-schema#",
  RDF: "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
  RAZIEL: "http://b3mn.org/Raziel",
  SCHEMA: ""
};
var Kickstart = {
  started: !1,
  callbacks: [],
  alreadyLoaded: [],
  PATH: "",
  load: function() {
    Kickstart.kick()
  },
  kick: function() {
    Kickstart.started || (Kickstart.started = !0, Kickstart.callbacks.each(function(e) {
      window.setTimeout(e, 1)
    }))
  },
  register: function(callback) {
    with(Kickstart) started ? window.setTimeout(callback, 1) : Kickstart.callbacks.push(callback)
  },
  require: function(e) {
    return Kickstart.alreadyLoaded.member(e) ? !1 : Kickstart.include(e)
  },
  include: function(e) {
    var t = document.getElementsByTagNameNS(XMLNS.XHTML, "head")[0],
      i = document.createElementNS(XMLNS.XHTML, "script");
    return i.setAttributeNS(XMLNS.XHTML, "type", "text/javascript"), i.src = Kickstart.PATH + e, t.appendChild(i), Kickstart.alreadyLoaded.push(e), !0
  }
};
Event.observe(window, "load", Kickstart.load);
var ERDF = {
  LITERAL: 1,
  RESOURCE: 2,
  DELIMITERS: [".", "-"],
  HASH: "#",
  HYPHEN: "-",
  schemas: [],
  callback: void 0,
  log: void 0,
  init: function(e) {
    ERDF.callback = e, ERDF.registerSchema("schema", XMLNS.SCHEMA), ERDF.registerSchema("rdfs", XMLNS.RDFS)
  },
  run: function() {
    return ERDF._checkProfile() && ERDF.parse()
  },
  parse: function() {
    ERDF.__startTime = new Date;
    var e = document.getElementsByTagNameNS(XMLNS.XHTML, "body"),
      t = {
        type: ERDF.RESOURCE,
        value: ""
      },
      i = ERDF._parseDocumentMetadata() && ERDF._parseFromTag(e[0], t);
    return ERDF.__stopTime = new Date, (ERDF.__stopTime - ERDF.__startTime) / 1e3, i
  },
  _parseDocumentMetadata: function() {
    var e = document.getElementsByTagNameNS(XMLNS.XHTML, "head"),
      t = e[0].getElementsByTagNameNS(XMLNS.XHTML, "link"),
      i = e[0].getElementsByTagNameNS(XMLNS.XHTML, "meta");
    return $A(t).each(function(e) {
      var t = e.getAttribute("rel"),
        i = e.getAttribute("rev"),
        o = e.getAttribute("href");
      ERDF._parseTriplesFrom(ERDF.RESOURCE, "", t, ERDF.RESOURCE, o), ERDF._parseTriplesFrom(ERDF.RESOURCE, o, i, ERDF.RESOURCE, "")
    }), $A(i).each(function(e) {
      var t = e.getAttribute("name"),
        i = e.getAttribute("content");
      ERDF._parseTriplesFrom(ERDF.RESOURCE, "", t, ERDF.LITERAL, i)
    }), !0
  },
  _parseFromTag: function(e, t, i) {
    if (e && e.namespaceURI && e.namespaceURI == XMLNS.XHTML) {
      i || (i = 0);
      var o = e.getAttribute("id");
      if (e.nodeName.endsWith(":a") || "a" == e.nodeName) {
        var n = e.getAttribute("rel"),
          r = e.getAttribute("rev"),
          s = e.getAttribute("href"),
          a = e.getAttribute("title"),
          l = e.textContent;
        ERDF._parseTriplesFrom(t.type, t.value, n, ERDF.RESOURCE, s, function(e) {
          var t = a ? a : l;
          ERDF._parseTriplesFrom(e.object.type, e.object.value, "rdfs.label", ERDF.LITERAL, t)
        }), ERDF._parseTriplesFrom(t.type, t.value, r, ERDF.RESOURCE, ""), ERDF._parseTypeTriplesFrom(t.type, t.value, n)
      } else if (e.nodeName.endsWith(":img") || "img" == e.nodeName) {
        var n = e.getAttribute("class"),
          s = e.getAttribute("src"),
          d = e.getAttribute("alt");
        ERDF._parseTriplesFrom(t.type, t.value, n, ERDF.RESOURCE, s, function(e) {
          var t = d;
          ERDF._parseTriplesFrom(e.object.type, e.object.value, "rdfs.label", ERDF.LITERAL, t)
        })
      }
      var n = e.getAttribute("class"),
        a = e.getAttribute("title"),
        l = e.textContent,
        c = a ? a : l;
      ERDF._parseTriplesFrom(t.type, t.value, n, ERDF.LITERAL, c), o && (t = {
        type: ERDF.RESOURCE,
        value: ERDF.HASH + o
      }), ERDF._parseTypeTriplesFrom(t.type, t.value, n);
      var p = e.childNodes;
      p && $A(p).each(function(e) {
        e.nodeType == e.ELEMENT_NODE && ERDF._parseFromTag(e, t, i + 1)
      })
    }
  },
  _parseTriplesFrom: function(e, t, i, o, n, r) {
    i && i.toLowerCase().split(" ").each(function(e) {
      var i = ERDF.schemas.find(function(t) {
        return !1 || ERDF.DELIMITERS.find(function(i) {
          return e.startsWith(t.prefix + i)
        })
      });
      if (i && n) {
        e = e.substring(i.prefix.length + 1, e.length);
        var s = ERDF.registerTriple(new ERDF.Resource(t), {
          prefix: i.prefix,
          name: e
        }, o == ERDF.RESOURCE ? new ERDF.Resource(n) : new ERDF.Literal(n));
        r && r(s)
      }
    })
  },
  _parseTypeTriplesFrom: function(e, t, i, o) {
    i && i.toLowerCase().split(" ").each(function(i) {
      var n = ERDF.schemas.find(function(e) {
        return !1 || ERDF.DELIMITERS.find(function(t) {
          return i.startsWith(ERDF.HYPHEN + e.prefix + t)
        })
      });
      if (n && t) {
        i = i.substring(n.prefix.length + 2, i.length);
        var r = ERDF.registerTriple(e == ERDF.RESOURCE ? new ERDF.Resource(t) : new ERDF.Literal(t), {
          prefix: "rdf",
          name: "type"
        }, new ERDF.Resource(n.namespace + i));
        o && o(r)
      }
    })
  },
  _checkProfile: function() {
    var e = document.getElementsByTagNameNS(XMLNS.XHTML, "head"),
      t = e[0].getAttribute("profile");
    return t && t.split(" ").member(XMLNS.ERDF) ? !0 : !1
  },
  __stripHashes: function(e) {
    return e && "function" == typeof e.substring && "#" == e.substring(0, 1) ? e.substring(1, e.length) : e
  },
  registerSchema: function(e, t) {
    ERDF.schemas.push({
      prefix: e,
      namespace: t
    })
  },
  registerTriple: function(e, t, i) {
    "schema" == t.prefix.toLowerCase() && this.registerSchema(t.name, i.value);
    var o = new ERDF.Triple(e, t, i);
    return ERDF.callback(o), o
  },
  __enhanceObject: function() {
    this.isResource = function() {
      return this.type == ERDF.RESOURCE
    }, this.isLocal = function() {
      return this.isResource() && this.value.startsWith("#")
    }, this.isCurrentDocument = function() {
      return this.isResource() && "" == this.value
    }, this.getId = function() {
      return this.isLocal() ? ERDF.__stripHashes(this.value) : !1
    }, this.isLiteral = function() {
      return this.type == ERDF.LIITERAL
    }
  },
  serialize: function(e) {
    return e ? e.constructor == String ? e : e.constructor == Boolean ? e ? "true" : "false" : "" + e : ""
  }
};
ERDF.Triple = function(e, t, i) {
  this.subject = e, this.predicate = t, this.object = i, this.toString = function() {
    return "[ERDF.Triple] " + ("" + this.subject) + " " + this.predicate.prefix + ":" + this.predicate.name + " " + ("" + this.object)
  }
}, ERDF.Resource = function(e) {
  this.type = ERDF.RESOURCE, this.value = e, ERDF.__enhanceObject.apply(this), this.toString = function() {
    return "&lt;" + this.value + "&gt;"
  }
}, ERDF.Literal = function(e) {
  this.type = ERDF.LITERAL, this.value = ERDF.serialize(e), ERDF.__enhanceObject.apply(this), this.toString = function() {
    return '"' + this.value + '"'
  }
};
var USE_ASYNCHRONOUS_REQUESTS = !0,
  DISCARD_UNUSED_TRIPLES = !0,
  PREFER_SPANS_OVER_DIVS = !0,
  PREFER_TITLE_OVER_TEXTNODE = !1,
  RESOURCE_ID_PREFIX = "resource",
  SHOW_DEBUG_ALERTS_WHEN_SAVING = !1,
  SHOW_EXTENDED_DEBUG_INFORMATION = !1,
  USE_ARESS_WORKAROUNDS = !0,
  RESOURCE_CREATED = 1,
  RESOURCE_REMOVED = 2,
  RESOURCE_SAVED = 4,
  RESOURCE_RELOADED = 8,
  RESOURCE_SYNCHRONIZED = 16,
  TRIPLE_REMOVE = 1,
  TRIPLE_ADD = 2,
  TRIPLE_RELOAD = 4,
  TRIPLE_SAVE = 8,
  PROCESSDATA_REF = "processdata",
  DataManager = {
    init: function() {
      ERDF.init(DataManager._registerTriple), DataManager.__synclocal()
    },
    _triples: [],
    _registerTriple: function(e) {
      DataManager._triples.push(e)
    },
    __synclocal: function() {
      DataManager._triples = [], ERDF.run()
    },
    __synchronizeShape: function(e) {
      var t = ResourceManager.getResource(e.resourceId),
        i = e.serialize();
      return i.each(function(t) {
        var i = "resource" == t.type,
          o = new ERDF.Triple(new ERDF.Resource(e.resourceId), {
            prefix: t.prefix,
            name: t.name
          }, i ? new ERDF.Resource(t.value) : new ERDF.Literal(t.value));
        DataManager.setObject(o)
      }), t
    },
    __storeShape: function(e) {
      var t = DataManager.__synchronizeShape(e);
      t.save()
    },
    __forceExistance: function(e) {
      if ($(e.resourceId)) {
        var t = $(e.resourceId),
          i = $A(t.childNodes);
        i.each(function(e) {
          t.removeChild(e)
        })
      } else $$("." + PROCESSDATA_REF)[0] || DataManager.graft(XMLNS.XHTML, document.getElementsByTagNameNS(XMLNS.XHTML, "body").item(0), ["div", {
        "class": PROCESSDATA_REF,
        style: "display:none;"
      }]), DataManager.graft(XMLNS.XHTML, $$("." + PROCESSDATA_REF)[0], ["div", {
        id: e.resourceId,
        "class": e instanceof ORYX.Core.Canvas ? "-oryx-canvas" : void 0
      }])
    },
    __persistShape: function(e) {
      var t = e.serialize(),
        i = new ERDF.Resource(e.resourceId);
      DataManager.removeTriples(DataManager.query(i, void 0, void 0)), t.each(function(e) {
        var t = "resource" == e.type ? new ERDF.Resource(e.value) : new ERDF.Literal(e.value);
        DataManager.addTriple(new ERDF.Triple(i, {
          prefix: e.prefix,
          name: e.name
        }, t))
      })
    },
    __persistDOM: function(e) {
      var t = e.getCanvas(),
        i = t.getChildShapes(!0),
        o = "";
      return i.each(function(e) {
        DataManager.__forceExistance(e)
      }), DataManager.__renderCanvas(e), o += DataManager.serialize($(ERDF.__stripHashes(e.getCanvas().resourceId)), !0), i.each(function(e) {
        DataManager.__persistShape(e), o += DataManager.serialize($(ERDF.__stripHashes(e.resourceId)), !0)
      }), o
    },
    __renderCanvas: function(e) {
      var t = e.getCanvas(),
        i = e.getStencilSets(),
        o = t.getChildShapes(!0);
      DataManager.__forceExistance(t), DataManager.__persistShape(t);
      var n = new ERDF.Resource(t.resourceId);
      DataManager.removeTriples(DataManager.query(n, void 0, void 0)), DataManager.addTriple(new ERDF.Triple(n, {
        prefix: "oryx",
        name: "mode"
      }, new ERDF.Literal("writable"))), DataManager.addTriple(new ERDF.Triple(n, {
        prefix: "oryx",
        name: "mode"
      }, new ERDF.Literal("fullscreen"))), i.values().each(function(e) {
        DataManager.addTriple(new ERDF.Triple(n, {
          prefix: "oryx",
          name: "stencilset"
        }, new ERDF.Resource(e.source().replace(/&/g, "%26")))), DataManager.addTriple(new ERDF.Triple(n, {
          prefix: "oryx",
          name: "ssnamespace"
        }, new ERDF.Resource(e.namespace()))), e.extensions().keys().each(function(e) {
          DataManager.addTriple(new ERDF.Triple(n, {
            prefix: "oryx",
            name: "ssextension"
          }, new ERDF.Literal(e)))
        })
      }), o.each(function(e) {
        DataManager.addTriple(new ERDF.Triple(n, {
          prefix: "oryx",
          name: "render"
        }, new ERDF.Resource("#" + e.resourceId)))
      })
    },
    __counter: 0,
    __provideId: function() {
      for (; $(RESOURCE_ID_PREFIX + DataManager.__counter);) DataManager.__counter++;
      return RESOURCE_ID_PREFIX + DataManager.__counter
    },
    serializeDOM: function(e) {
      return DataManager.__persistDOM(e)
    },
    syncGlobal: function(e) {
      return DataManager.__syncglobal(e)
    },
    __syncglobal: function(e) {
      var t = e.getCanvas(),
        i = t.getChildShapes(!0);
      i.select(function(e) {
        return !$(e.resourceId)
      }).each(function(e) {
        if (USE_ARESS_WORKAROUNDS) {
          var t = e.properties["raziel-type"],
            i = '<div xmlns="http://www.w3.org/1999/xhtml"><span class="raziel-type">' + t + "</span></div>",
            o = ResourceManager.__createResource(i);
          e.resourceId = o.id()
        } else {
          var o = ResourceManager.__createResource();
          e.resourceId = o.id()
        }
      }), i.each(function(e) {
        DataManager.__storeShape(e)
      })
    },
    serialize: function(e, t) {
      if (e.nodeType == e.ELEMENT_NODE) {
        var i = $A(e.childNodes),
          o = $A(e.attributes),
          n = new String(e.getAttribute("class")),
          r = n.split(" ").member("transient");
        if (r) return "";
        var s = "<" + e.nodeName;
        return t || (s += ' xmlns="' + (e.namespaceURI ? e.namespaceURI : XMLNS.XHTML) + '" xmlns:oryx="http://oryx-editor.org"'), o.each(function(e) {
          s += " " + e.nodeName + '="' + e.nodeValue + '"'
        }), 0 == i.length ? s += "/>" : (s += ">", i.each(function(e) {
          s += DataManager.serialize(e, !0)
        }), s += "</" + e.nodeName + ">"), s
      }
      return e.nodeType == e.TEXT_NODE ? e.nodeValue : void 0
    },
    addTriple: function(e) {
      if (!e.subject.type == ERDF.LITERAL) throw "Cannot add the triple " + ("" + e) + " because the subject is not a resource.";
      var t = ERDF.__stripHashes(e.subject.value),
        i = $(t);
      if (!i) throw "Cannot add the triple " + ("" + e) + ' because the subject "' + t + '" is not in the document.';
      return e.object.type == ERDF.LITERAL ? DataManager.graft(XMLNS.XHTML, i, ["span", {
        "class": e.predicate.prefix + "-" + e.predicate.name
      }, e.object.value.escapeHTML()]) : DataManager.graft(XMLNS.XHTML, i, ["a", {
        rel: e.predicate.prefix + "-" + e.predicate.name,
        href: e.object.value
      }]), !0
    },
    removeTriples: function(e) {
      var t = e.select(function(e) {
        return DataManager.__removeTriple(e)
      });
      return t
    },
    removeTriple: function(e) {
      var t = DataManager.__removeTriple(e);
      return t
    },
    __removeTriple: function(e) {
      if (!e.subject.type == ERDF.LITERAL) throw "Cannot remove the triple " + ("" + e) + " because the subject is not a resource.";
      var t = ERDF.__stripHashes(e.subject.value),
        i = $(t);
      if (!i) throw "Cannot remove the triple " + ("" + e) + " because the subject is not in the document.";
      if (e.object.type == ERDF.LITERAL) {
        var o = DataManager.__removeTripleRecursively(e, i);
        return o
      }
    },
    __removeTripleRecursively: function(e, t) {
      if (t.nodeType != t.ELEMENT_NODE) return !1;
      var i = new String(t.getAttribute("class")),
        o = $A(t.childNodes);
      if (i.include(e.predicate.prefix + "-" + e.predicate.name)) {
        var n = t.textContent;
        return e.object.type == ERDF.LITERAL && e.object.value == n && t.parentNode.removeChild(t), !0
      }
      return o.each(function(t) {
        DataManager.__removeTripleRecursively(e, t)
      }), !1
    },
    graft: function(e, t, i, o) {
      o = o || t && t.ownerDocument || document;
      var n;
      if (void 0 === i) echo("Can't graft an undefined value");
      else if (i.constructor == String) n = o.createTextNode(i);
      else
        for (var r = 0; i.length > r; r++) {
          if (0 === r && i[r].constructor == String) {
            var s = i[r].match(/^([a-z][a-z0-9]*)\.([^\s\.]+)$/i);
            if (s) {
              n = o.createElementNS(e, s[1]), n.setAttributeNS(null, "class", s[2]);
              continue
            }
            if (s = i[r].match(/^([a-z][a-z0-9]*)$/i)) {
              n = o.createElementNS(e, s[1]);
              continue
            }
            n = o.createElementNS(e, "span"), n.setAttribute(null, "class", "namelessFromLOL")
          }
          if (void 0 === i[r]) echo("Can't graft an undefined value in a list!");
          else if (i[r].constructor == String || i[r].constructor == Array) this.graft(e, n, i[r], o);
          else if (i[r].constructor == Number) this.graft(e, n, "" + i[r], o);
          else if (i[r].constructor == Object)
            for (var a in i[r]) n.setAttributeNS(null, a, i[r][a]);
          else {
            if (i[r].constructor != Boolean) throw "Object " + i[r] + " is inscrutable as an graft arglet.";
            this.graft(e, n, i[r] ? "true" : "false", o)
          }
        }
      return t && t.appendChild(n), Element.extend(n)
    },
    setObject: function(e) {
      var t = DataManager.query(e.subject, e.predicate, void 0);
      return DataManager.removeTriples(t), DataManager.addTriple(e), !0
    },
    query: function(e, t, i) {
      return DataManager._triples.select(function(o) {
        var n = e ? o.subject.type == e.type && o.subject.value == e.value : !0;
        return t && (n = n && (t.prefix ? o.predicate.prefix == t.prefix : !0), n = n && (t.name ? o.predicate.name == t.name : !0)), n = n && (i ? o.object.type == i.type && o.object.value == i.value : !0)
      })
    }
  };
Kickstart.register(DataManager.init);
var chain = new MetaTagHandler,
  command = new DMCommand(TRIPLE_ADD, new ERDF.Triple(new ERDF.Resource(""), "rdf:tool", new ERDF.Literal("")));
ResourceManager = {
  __corrupt: !1,
  __latelyCreatedResource: void 0,
  __listeners: $H(),
  __token: 1,
  addListener: function(e, t) {
    if (!(e instanceof Function)) throw "Resource event listener is not a function!";
    if (!t) throw "Invalid mask for resource event listener registration.";
    var i = {
        listener: e,
        mask: t
      },
      o = ResourceManager.__token++;
    return ResourceManager.__listeners[o] = i, o
  },
  removeListener: function(e) {
    return ResourceManager.__listners.remove(e)
  },
  __Event: function(e, t) {
    this.action = e, this.resourceId = t
  },
  __dispatchEvent: function(e) {
    ResourceManager.__listeners.values().each(function(t) {
      return e.action & t.mask ? t.listener(e) : void 0
    })
  },
  getResource: function(e) {
    e = ERDF.__stripHashes(e);
    var t = DataManager.query(new ERDF.Resource("#" + e), {
      prefix: "raziel",
      name: "entry"
    }, void 0);
    if (1 == t.length && t[0].object.isResource()) {
      var i = t[0].object.value;
      return new ResourceManager.__Resource(e, i)
    }
    throw "Resource with id " + e + " not recognized as such. " + (t.length > 1 ? " There is more than one raziel:entry URL." : " There is no raziel:entry URL.")
  },
  __createResource: function(e) {
    var t = DataManager.query(new ERDF.Resource(""), {
      prefix: "raziel",
      name: "collection"
    }, void 0);
    if (1 == t.length && t[0].object.isResource()) {
      var i = t[0].object.value,
        o = void 0,
        n = e ? e : '<div xmlns="http://www.w3.org/1999/xhtml"></div>';
      return ResourceManager.__request("POST", i, n, function() {
        var e = this.responseXML,
          t = e.childNodes[0],
          i = t.getAttribute("id");
        $$("." + PROCESSDATA_REF)[0] || DataManager.graft(XMLNS.XHTML, document.getElementsByTagNameNS(XMLNS.XHTML, "body").item(0), ["div", {
          "class": PROCESSDATA_REF,
          style: "display:none;"
        }]), $$("." + PROCESSDATA_REF)[0].appendChild(t.cloneNode(!0)), DataManager.__synclocal(), o = new ResourceManager.getResource(i), ResourceManager.__resourceActionSucceeded(this, RESOURCE_CREATED, void 0)
      }, function() {
        ResourceManager.__resourceActionFailed(this, RESOURCE_CREATED, void 0)
      }, !1), o
    }
    throw "Could not create resource! raziel:collection URL is missing!"
  },
  __Resource: function(e, t) {
    this.__id = e, this.__url = t, this.id = function() {
      return this.__id
    }, this.url = function() {
      return this.__url
    }, this.reload = function() {
      var e = this.__url,
        t = this.__id;
      ResourceManager.__request("GET", e, null, function() {
        ResourceManager.__resourceActionSucceeded(this, RESOURCE_RELOADED, t)
      }, function() {
        ResourceManager.__resourceActionFailed(this, RESURCE_RELOADED, t)
      }, USE_ASYNCHRONOUS_REQUESTS)
    }, this.save = function(e) {
      var t = this.__url,
        i = this.__id;
      data = DataManager.serialize($(i)), ResourceManager.__request("PUT", t, data, function() {
        ResourceManager.__resourceActionSucceeded(this, e ? RESOURCE_SAVED | RESOURCE_SYNCHRONIZED : RESOURCE_SAVED, i)
      }, function() {
        ResourceManager.__resourceActionFailed(this, e ? RESOURCE_SAVED | RESOURCE_SYNCHRONIZED : RESOURCE.SAVED, i)
      }, USE_ASYNCHRONOUS_REQUESTS)
    }, this.remove = function() {
      var e = this.__url,
        t = this.__id;
      ResourceManager.__request("DELETE", e, null, function() {
        ResourceManager.__resourceActionSucceeded(this, RESOURCE_REMOVED, t)
      }, function() {
        ResourceManager.__resourceActionFailed(this, RESOURCE_REMOVED, t)
      }, USE_ASYNCHRONOUS_REQUESTS)
    }
  },
  request: function(e, t) {
    var i = {
      method: "get",
      asynchronous: !0,
      parameters: {}
    };
    Object.extend(i, t || {});
    var o = Hash.toQueryString(i.parameters);
    return o && (e += (e.include("?") ? "&" : "?") + o), ResourceManager.__request(i.method, e, i.data, i.onSuccess instanceof Function ? function() {
      i.onSuccess(this)
    } : void 0, i.onFailure instanceof Function ? function() {
      i.onFailure(this)
    } : void 0, i.asynchronous && USE_ASYNCHRONOUS_REQUESTS, i.headers)
  },
  __request: function(e, t, i, o, n, r, s) {
    var a = Try.these(function() {
      return new XMLHttpRequest
    }, function() {
      return new ActiveXObject("Msxml2.XMLHTTP")
    }, function() {
      return new ActiveXObject("Microsoft.XMLHTTP")
    });
    if (!a) {
      if (!this.__corrupt) throw "This browser does not provide any AJAX functionality. You will not be able to use the software provided with the page you are viewing. Please consider installing appropriate extensions.";
      return this.__corrupt = !0, !1
    }
    o instanceof Function && (a.onload = o), n instanceof Function && (a.onerror = n);
    var l = $H(s);
    l.keys().each(function(e) {
      a.setRequestHeader(e, l[e])
    });
    try {
      SHOW_DEBUG_ALERTS_WHEN_SAVING && alert(e + " " + t + "\n" + SHOW_EXTENDED_DEBUG_INFORMATION ? i : ""), a.open(e, t, r ? !0 : !1), a.send(i)
    } catch (d) {
      return !1
    }
    return !0
  },
  __resourceActionSucceeded: function(e, t, i) {
    var o = e.status,
      n = e.responseText;
    if (SHOW_DEBUG_ALERTS_WHEN_SAVING && alert(o + " " + url + "\n" + SHOW_EXTENDED_DEBUG_INFORMATION ? data : ""), o >= 300) throw "The server responded with an error: " + o + "\n" + (SHOW_EXTENDED_DEBUG_INFORMATION ? +data : "If you need additional information here, including the data sent by the server, consider setting SHOW_EXTENDED_DEBUG_INFORMATION to true.");
    switch (t) {
      case RESOURCE_REMOVED:
        var n = e.responseXML,
          r = n.childNodes[0],
          i = r.getAttribute("id"),
          s = document.getElementById(i);
        s.parentNode.removeChild(s);
        break;
      case RESOURCE_CREATED:
        break;
      case RESOURCE_SAVED | RESOURCE_SYNCHRONIZED:
        DataManager.__synclocal();
      case RESOURCE_SAVED:
        break;
      case RESOURCE_RELOADED:
        var n = e.responseXML,
          r = n.childNodes[0],
          i = r.getAttribute("id"),
          s = document.getElementById(i);
        s.parentNode.removeChild(s), $$(PROCESSDATA_REF)[0] || DataManager.graft(XMLNS.XHTML, document.getElementsByTagNameNS(XMLNS.XHTML, "body").item(0), ["div", {
          "class": PROCESSDATA_REF,
          style: "display:none;"
        }]), $$(PROCESSDATA_REF)[0].appendChild(r.cloneNode(!0)), DataManager.__synclocal();
        break;
      default:
        DataManager.__synclocal()
    }
    ResourceManager.__dispatchEvent(new ResourceManager.__Event(t, i))
  },
  __resourceActionFailed: function() {
    throw "Fatal: Resource action failed. There is something horribly wrong with either the server, the transport protocol or your online status. Sure you're online?"
  }
};
var Clazz = function() {};
if (Clazz.prototype.construct = function() {}, Clazz.extend = function(e) {
  var t = function() {
      arguments[0] !== Clazz && this.construct.apply(this, arguments)
    },
    i = new this(Clazz),
    o = this.prototype;
  for (var n in e) {
    var r = e[n];
    r instanceof Function && (r.$ = o), i[n] = r
  }
  return t.prototype = i, t.extend = this.extend, t
}, !ORYX) var ORYX = {};
if (ORYX.CONFIG || (ORYX.CONFIG = {}), ORYX.CONFIG.ROOT_PATH = "editor/", ORYX.CONFIG.EXPLORER_PATH = "explorer", ORYX.CONFIG.LIBS_PATH = "libs", ORYX.CONFIG.SERVER_HANDLER_ROOT = "service", ORYX.CONFIG.SERVER_EDITOR_HANDLER = ORYX.CONFIG.SERVER_HANDLER_ROOT + "/editor", ORYX.CONFIG.SERVER_MODEL_HANDLER = ORYX.CONFIG.SERVER_HANDLER_ROOT + "/model", ORYX.CONFIG.STENCILSET_HANDLER = ORYX.CONFIG.SERVER_HANDLER_ROOT + "/editor_stencilset?embedsvg=true&url=true&namespace=", ORYX.CONFIG.STENCIL_SETS_URL = ORYX.CONFIG.SERVER_HANDLER_ROOT + "/editor_stencilset", ORYX.CONFIG.PLUGINS_CONFIG = "editor-app/plugins.xml", ORYX.CONFIG.SYNTAXCHECKER_URL = ORYX.CONFIG.SERVER_HANDLER_ROOT + "/syntaxchecker", ORYX.CONFIG.DEPLOY_URL = ORYX.CONFIG.SERVER_HANDLER_ROOT + "/model/deploy", ORYX.CONFIG.MODEL_LIST_URL = ORYX.CONFIG.SERVER_HANDLER_ROOT + "/models", ORYX.CONFIG.FORM_FLOW_LIST_URL = ORYX.CONFIG.SERVER_HANDLER_ROOT + "/formflows", ORYX.CONFIG.FORM_FLOW_IMAGE_URL = ORYX.CONFIG.SERVER_HANDLER_ROOT + "/formflow", ORYX.CONFIG.FORM_LIST_URL = ORYX.CONFIG.SERVER_HANDLER_ROOT + "/forms", ORYX.CONFIG.FORM_IMAGE_URL = ORYX.CONFIG.SERVER_HANDLER_ROOT + "/form", ORYX.CONFIG.SUB_PROCESS_LIST_URL = ORYX.CONFIG.SERVER_HANDLER_ROOT + "/subprocesses", ORYX.CONFIG.SUB_PROCESS_IMAGE_URL = ORYX.CONFIG.SERVER_HANDLER_ROOT + "/subprocess", ORYX.CONFIG.TEST_SERVICE_URL = ORYX.CONFIG.SERVER_HANDLER_ROOT + "/service/", ORYX.CONFIG.SERVICE_LIST_URL = ORYX.CONFIG.SERVER_HANDLER_ROOT + "/services", ORYX.CONFIG.CONDITION_ELEMENT_LIST_URL = ORYX.CONFIG.SERVER_HANDLER_ROOT + "/conditionelements", ORYX.CONFIG.VARIABLEDEF_ELEMENT_LIST_URL = ORYX.CONFIG.SERVER_HANDLER_ROOT + "/variabledefinitionelements", ORYX.CONFIG.VALIDATOR_LIST_URL = ORYX.CONFIG.SERVER_HANDLER_ROOT + "/validators", ORYX.CONFIG.SS_EXTENSIONS_FOLDER = ORYX.CONFIG.ROOT_PATH + "stencilsets/extensions/", ORYX.CONFIG.SS_EXTENSIONS_CONFIG = ORYX.CONFIG.SERVER_HANDLER_ROOT + "/editor_ssextensions", ORYX.CONFIG.ORYX_NEW_URL = "/new", ORYX.CONFIG.BPMN_LAYOUTER = ORYX.CONFIG.ROOT_PATH + "bpmnlayouter", ORYX.CONFIG.EXPRESSION_METADATA_URL = ORYX.CONFIG.SERVER_HANDLER_ROOT + "/expression-metadata", ORYX.CONFIG.DATASOURCE_METADATA_URL = ORYX.CONFIG.SERVER_HANDLER_ROOT + "/datasource-metadata", !ORYX) var ORYX = {};
ORYX.CONFIG || (ORYX.CONFIG = {}), ORYX.CONFIG.BACKEND_SWITCH = !0, ORYX.CONFIG.PANEL_LEFT_WIDTH = 250, ORYX.CONFIG.PANEL_RIGHT_COLLAPSED = !0, ORYX.CONFIG.PANEL_RIGHT_WIDTH = 300, ORYX.CONFIG.APPNAME = "KISBPM", ORYX.CONFIG.WEB_URL = ".", ORYX.CONFIG.BLANK_IMAGE = ORYX.CONFIG.LIBS_PATH + "/ext-2.0.2/resources/images/default/s.gif", ORYX.CONFIG.OFFSET_HEADER = 61, ORYX.CONFIG.SHOW_GRIDLINE = !0, ORYX.CONFIG.MODE_READONLY = "readonly", ORYX.CONFIG.MODE_FULLSCREEN = "fullscreen", ORYX.CONFIG.WINDOW_HEIGHT = 800, ORYX.CONFIG.PREVENT_LOADINGMASK_AT_READY = !1, ORYX.CONFIG.PLUGINS_ENABLED = !0, ORYX.CONFIG.PLUGINS_FOLDER = "Plugins/", ORYX.CONFIG.BPMN20_SCHEMA_VALIDATION_ON = !0, ORYX.CONFIG.NAMESPACE_ORYX = "http://www.b3mn.org/oryx", ORYX.CONFIG.NAMESPACE_SVG = "http://www.w3.org/2000/svg", ORYX.CONFIG.CANVAS_WIDTH = 1200, ORYX.CONFIG.CANVAS_HEIGHT = 1050, ORYX.CONFIG.CANVAS_RESIZE_INTERVAL = 100, ORYX.CONFIG.CANVAS_MIN_WIDTH = 800, ORYX.CONFIG.CANVAS_MIN_HEIGHT = 300, ORYX.CONFIG.SELECTED_AREA_PADDING = 4, ORYX.CONFIG.CANVAS_BACKGROUND_COLOR = "none", ORYX.CONFIG.GRID_DISTANCE = 30, ORYX.CONFIG.GRID_ENABLED = !0, ORYX.CONFIG.ZOOM_OFFSET = .1, ORYX.CONFIG.DEFAULT_SHAPE_MARGIN = 60, ORYX.CONFIG.SCALERS_SIZE = 7, ORYX.CONFIG.MINIMUM_SIZE = 20, ORYX.CONFIG.MAXIMUM_SIZE = 1e4, ORYX.CONFIG.OFFSET_MAGNET = 15, ORYX.CONFIG.OFFSET_EDGE_LABEL_TOP = 8, ORYX.CONFIG.OFFSET_EDGE_LABEL_BOTTOM = 8, ORYX.CONFIG.OFFSET_EDGE_BOUNDS = 5, ORYX.CONFIG.COPY_MOVE_OFFSET = 30, ORYX.CONFIG.BORDER_OFFSET = 14, ORYX.CONFIG.MAX_NUM_SHAPES_NO_GROUP = 20, ORYX.CONFIG.SHAPEMENU_CREATE_OFFSET_CORNER = 30, ORYX.CONFIG.SHAPEMENU_CREATE_OFFSET = 45, ORYX.CONFIG.SHAPEMENU_RIGHT = "Oryx_Right", ORYX.CONFIG.SHAPEMENU_BOTTOM = "Oryx_Bottom", ORYX.CONFIG.SHAPEMENU_LEFT = "Oryx_Left", ORYX.CONFIG.SHAPEMENU_TOP = "Oryx_Top", ORYX.CONFIG.MORPHITEM_DISABLED = "Oryx_MorphItem_disabled", ORYX.CONFIG.TYPE_STRING = "string", ORYX.CONFIG.TYPE_BOOLEAN = "boolean", ORYX.CONFIG.TYPE_INTEGER = "integer", ORYX.CONFIG.TYPE_FLOAT = "float", ORYX.CONFIG.TYPE_COLOR = "color", ORYX.CONFIG.TYPE_DATE = "date", ORYX.CONFIG.TYPE_CHOICE = "choice", ORYX.CONFIG.TYPE_URL = "url", ORYX.CONFIG.TYPE_DIAGRAM_LINK = "diagramlink", ORYX.CONFIG.TYPE_COMPLEX = "complex", ORYX.CONFIG.TYPE_MULTIPLECOMPLEX = "multiplecomplex", ORYX.CONFIG.TYPE_TEXT = "text", ORYX.CONFIG.TYPE_KISBPM_MULTIINSTANCE = "kisbpm-multiinstance", ORYX.CONFIG.TYPE_MODEL_LINK = "modellink", ORYX.CONFIG.TYPE_FORM_FLOW_LINK = "formflowlink", ORYX.CONFIG.TYPE_FORM_LINK = "formlink", ORYX.CONFIG.TYPE_SUB_PROCESS_LINK = "subprocess-link", ORYX.CONFIG.TYPE_SERVICE_LINK = "servicelink", ORYX.CONFIG.TYPE_CONDITIONS = "conditions", ORYX.CONFIG.TYPE_VARIABLES = "variables", ORYX.CONFIG.TYPE_LISTENER = "listener", ORYX.CONFIG.TYPE_EPC_FREQ = "epcfrequency", ORYX.CONFIG.TYPE_GLOSSARY_LINK = "glossarylink", ORYX.CONFIG.TYPE_EXPRESSION = "expression", ORYX.CONFIG.TYPE_DATASOURCE = "datasource", ORYX.CONFIG.TYPE_DATASOURCE_MINIMAL = "datasource-minimal", ORYX.CONFIG.TYPE_VALIDATORS = "validators", ORYX.CONFIG.LABEL_LINE_DISTANCE = 2, ORYX.CONFIG.LABEL_DEFAULT_LINE_HEIGHT = 12, ORYX.CONFIG.ENABLE_MORPHMENU_BY_HOVER = !1, ORYX.CONFIG.EDITOR_ALIGN_BOTTOM = 1, ORYX.CONFIG.EDITOR_ALIGN_MIDDLE = 2, ORYX.CONFIG.EDITOR_ALIGN_TOP = 4, ORYX.CONFIG.EDITOR_ALIGN_LEFT = 8, ORYX.CONFIG.EDITOR_ALIGN_CENTER = 16, ORYX.CONFIG.EDITOR_ALIGN_RIGHT = 32, ORYX.CONFIG.EDITOR_ALIGN_SIZE = 48, ORYX.CONFIG.EVENT_MOUSEDOWN = "mousedown", ORYX.CONFIG.EVENT_MOUSEUP = "mouseup", ORYX.CONFIG.EVENT_MOUSEOVER = "mouseover", ORYX.CONFIG.EVENT_MOUSEOUT = "mouseout", ORYX.CONFIG.EVENT_MOUSEMOVE = "mousemove", ORYX.CONFIG.EVENT_DBLCLICK = "dblclick", ORYX.CONFIG.EVENT_KEYDOWN = "keydown", ORYX.CONFIG.EVENT_KEYUP = "keyup", ORYX.CONFIG.EVENT_LOADED = "editorloaded", ORYX.CONFIG.EVENT_SAVED = "editorSaved", ORYX.CONFIG.EVENT_EXECUTE_COMMANDS = "executeCommands", ORYX.CONFIG.EVENT_STENCIL_SET_LOADED = "stencilSetLoaded", ORYX.CONFIG.EVENT_SELECTION_CHANGED = "selectionchanged", ORYX.CONFIG.EVENT_SHAPEADDED = "shapeadded", ORYX.CONFIG.EVENT_SHAPEREMOVED = "shaperemoved", ORYX.CONFIG.EVENT_PROPERTY_CHANGED = "propertyChanged", ORYX.CONFIG.EVENT_DRAGDROP_START = "dragdrop.start", ORYX.CONFIG.EVENT_SHAPE_MENU_CLOSE = "shape.menu.close", ORYX.CONFIG.EVENT_DRAGDROP_END = "dragdrop.end", ORYX.CONFIG.EVENT_RESIZE_START = "resize.start", ORYX.CONFIG.EVENT_RESIZE_END = "resize.end", ORYX.CONFIG.EVENT_DRAGDOCKER_DOCKED = "dragDocker.docked", ORYX.CONFIG.EVENT_HIGHLIGHT_SHOW = "highlight.showHighlight", ORYX.CONFIG.EVENT_HIGHLIGHT_HIDE = "highlight.hideHighlight", ORYX.CONFIG.EVENT_LOADING_ENABLE = "loading.enable", ORYX.CONFIG.EVENT_LOADING_DISABLE = "loading.disable", ORYX.CONFIG.EVENT_LOADING_STATUS = "loading.status", ORYX.CONFIG.EVENT_OVERLAY_SHOW = "overlay.show", ORYX.CONFIG.EVENT_OVERLAY_HIDE = "overlay.hide", ORYX.CONFIG.EVENT_ARRANGEMENT_TOP = "arrangement.setToTop", ORYX.CONFIG.EVENT_ARRANGEMENT_BACK = "arrangement.setToBack", ORYX.CONFIG.EVENT_ARRANGEMENT_FORWARD = "arrangement.setForward", ORYX.CONFIG.EVENT_ARRANGEMENT_BACKWARD = "arrangement.setBackward", ORYX.CONFIG.EVENT_PROPWINDOW_PROP_CHANGED = "propertyWindow.propertyChanged", ORYX.CONFIG.EVENT_LAYOUT_ROWS = "layout.rows", ORYX.CONFIG.EVENT_LAYOUT_BPEL = "layout.BPEL", ORYX.CONFIG.EVENT_LAYOUT_BPEL_VERTICAL = "layout.BPEL.vertical", ORYX.CONFIG.EVENT_LAYOUT_BPEL_HORIZONTAL = "layout.BPEL.horizontal", ORYX.CONFIG.EVENT_LAYOUT_BPEL_SINGLECHILD = "layout.BPEL.singlechild", ORYX.CONFIG.EVENT_LAYOUT_BPEL_AUTORESIZE = "layout.BPEL.autoresize", ORYX.CONFIG.EVENT_AUTOLAYOUT_LAYOUT = "autolayout.layout", ORYX.CONFIG.EVENT_UNDO_EXECUTE = "undo.execute", ORYX.CONFIG.EVENT_UNDO_ROLLBACK = "undo.rollback", ORYX.CONFIG.EVENT_BUTTON_UPDATE = "toolbar.button.update", ORYX.CONFIG.EVENT_LAYOUT = "layout.dolayout", ORYX.CONFIG.EVENT_GLOSSARY_LINK_EDIT = "glossary.link.edit", ORYX.CONFIG.EVENT_GLOSSARY_SHOW = "glossary.show.info", ORYX.CONFIG.EVENT_GLOSSARY_NEW = "glossary.show.new", ORYX.CONFIG.EVENT_DOCKERDRAG = "dragTheDocker", ORYX.CONFIG.EVENT_CANVAS_SCROLL = "canvas.scroll", ORYX.CONFIG.EVENT_SHOW_PROPERTYWINDOW = "propertywindow.show", ORYX.CONFIG.EVENT_ABOUT_TO_SAVE = "file.aboutToSave", ORYX.CONFIG.SELECTION_HIGHLIGHT_SIZE = 5, ORYX.CONFIG.SELECTION_HIGHLIGHT_COLOR = "#4444FF", ORYX.CONFIG.SELECTION_HIGHLIGHT_COLOR2 = "#9999FF", ORYX.CONFIG.SELECTION_HIGHLIGHT_STYLE_CORNER = "corner", ORYX.CONFIG.SELECTION_HIGHLIGHT_STYLE_RECTANGLE = "rectangle", ORYX.CONFIG.SELECTION_VALID_COLOR = "#00FF00", ORYX.CONFIG.SELECTION_INVALID_COLOR = "#FF0000", ORYX.CONFIG.DOCKER_DOCKED_COLOR = "#00FF00", ORYX.CONFIG.DOCKER_UNDOCKED_COLOR = "#FF0000", ORYX.CONFIG.DOCKER_SNAP_OFFSET = 10, ORYX.CONFIG.EDIT_OFFSET_PASTE = 10, ORYX.CONFIG.KEY_CODE_X = 88, ORYX.CONFIG.KEY_CODE_C = 67, ORYX.CONFIG.KEY_CODE_V = 86, ORYX.CONFIG.KEY_CODE_DELETE = 46, ORYX.CONFIG.KEY_CODE_META = 224, ORYX.CONFIG.KEY_CODE_BACKSPACE = 8, ORYX.CONFIG.KEY_CODE_LEFT = 37, ORYX.CONFIG.KEY_CODE_RIGHT = 39, ORYX.CONFIG.KEY_CODE_UP = 38, ORYX.CONFIG.KEY_CODE_DOWN = 40, ORYX.CONFIG.KEY_Code_enter = 12, ORYX.CONFIG.KEY_Code_left = 37, ORYX.CONFIG.KEY_Code_right = 39, ORYX.CONFIG.KEY_Code_top = 38, ORYX.CONFIG.KEY_Code_bottom = 40, ORYX.CONFIG.META_KEY_META_CTRL = "metactrl", ORYX.CONFIG.META_KEY_ALT = "alt", ORYX.CONFIG.META_KEY_SHIFT = "shift", ORYX.CONFIG.KEY_ACTION_DOWN = "down", ORYX.CONFIG.KEY_ACTION_UP = "up", ORYX.CONFIG.FORM_ROW_WIDTH = 350, ORYX.CONFIG.FORM_GROUP_MARGIN = 5, ORYX.CONFIG.FORM_GROUP_EMPTY_HEIGHT = 100, ORYX.CONFIG.FORM_ELEMENT_ID_PREFIX = "http://b3mn.org/stencilset/xforms", ORYX.CONFIG.FORM_ELEMENT_TYPE_ROOT = "http://b3mn.org/stencilset/xforms#XForm", ORYX.CONFIG.FORM_ELEMENT_TYPE_GROUP = "http://b3mn.org/stencilset/xforms#Group", ORYX.CONFIG.FORM_ELEMENT_TYPE_REPEATING_GROUP = "http://b3mn.org/stencilset/xforms#RepeatingGroup", ORYX.CONFIG.FORM_ELEMENT_TYPE_LABEL_FIELD = "http://b3mn.org/stencilset/xforms#LabelField";
var ORYX_LOGLEVEL_TRACE = 5,
  ORYX_LOGLEVEL_DEBUG = 4,
  ORYX_LOGLEVEL_INFO = 3,
  ORYX_LOGLEVEL_WARN = 2,
  ORYX_LOGLEVEL_ERROR = 1,
  ORYX_LOGLEVEL_FATAL = 0,
  ORYX_LOGLEVEL = 3,
  ORYX_CONFIGURATION_DELAY = 100,
  ORYX_CONFIGURATION_WAIT_ATTEMPTS = 10;
if (!ORYX) var ORYX = {};
if (ORYX = Object.extend(ORYX, {
  PATH: ORYX.CONFIG.ROOT_PATH,
  URLS: [],
  alreadyLoaded: [],
  configrationRetries: 0,
  Version: "0.1.1",
  availablePlugins: [],
  Log: {
    __appenders: [{
      append: function(e) {
        "undefined" != typeof console && void 0 !== console.log && console.log(e)
      }
    }],
    trace: function() {
      ORYX_LOGLEVEL >= ORYX_LOGLEVEL_TRACE && ORYX.Log.__log("TRACE", arguments)
    },
    debug: function() {
      ORYX_LOGLEVEL >= ORYX_LOGLEVEL_DEBUG && ORYX.Log.__log("DEBUG", arguments)
    },
    info: function() {
      ORYX_LOGLEVEL >= ORYX_LOGLEVEL_INFO && ORYX.Log.__log("INFO", arguments)
    },
    warn: function() {
      ORYX_LOGLEVEL >= ORYX_LOGLEVEL_WARN && ORYX.Log.__log("WARN", arguments)
    },
    error: function() {
      ORYX_LOGLEVEL >= ORYX_LOGLEVEL_ERROR && ORYX.Log.__log("ERROR", arguments)
    },
    fatal: function() {
      ORYX_LOGLEVEL >= ORYX_LOGLEVEL_FATAL && ORYX.Log.__log("FATAL", arguments)
    },
    __log: function(e, t) {
      t[0] = (new Date).getTime() + " " + e + " " + t[0];
      var i = printf.apply(null, t);
      ORYX.Log.__appenders.each(function(e) {
        e.append(i)
      })
    },
    addAppender: function(e) {
      ORYX.Log.__appenders.push(e)
    }
  },
  load: function() {
    if (ORYX.Log.debug("Oryx begins loading procedure."), "undefined" == typeof Prototype || "undefined" == typeof Element || Element.Methods === void 0 || 1.5 > parseFloat(Prototype.Version.split(".")[0] + "." + Prototype.Version.split(".")[1])) throw "Application requires the Prototype JavaScript framework >= 1.5.3";
    ORYX.Log.debug("Prototype > 1.5 found."), ORYX._load()
  },
  _load: function() {
    ORYX.loadPlugins()
  },
  loadPlugins: function() {
    ORYX.CONFIG.PLUGINS_ENABLED ? ORYX._loadPlugins() : ORYX.Log.warn("Ignoring plugins, loading Core only."), init()
  },
  _loadPlugins: function() {
    var e = ORYX.CONFIG.PLUGINS_CONFIG;
    ORYX.Log.debug("Loading plugin configuration from '%0'.", e), new Ajax.Request(e, {
      asynchronous: !1,
      method: "get",
      onSuccess: function(e) {
        ORYX.Log.info("Plugin configuration file loaded.");
        var t = e.responseXML,
          i = [],
          o = $A(t.getElementsByTagName("properties"));
        o.each(function(e) {
          var t = $A(e.childNodes);
          t.each(function(e) {
            var t = new Hash,
              o = $A(e.attributes);
            o.each(function(e) {
              t[e.nodeName] = e.nodeValue
            }), o.length > 0 && i.push(t)
          })
        });
        var n = t.getElementsByTagName("plugin");
        $A(n).each(function(e) {
          var t = new Hash;
          if ($A(e.attributes).each(function(e) {
            t[e.nodeName] = e.nodeValue
          }), !t.name) return ORYX.Log.error("A plugin is not providing a name. Ingnoring this plugin."), void 0;
          if (!t.source) return ORYX.Log.error("Plugin with name '%0' doesn't provide a source attribute.", t.name), void 0;
          var o = e.getElementsByTagName("property"),
            n = [];
          $A(o).each(function(e) {
            var t = new Hash,
              i = $A(e.attributes);
            i.each(function(e) {
              t[e.nodeName] = e.nodeValue
            }), i.length > 0 && n.push(t)
          }), n = n.concat(i), t.properties = n;
          var r, s = e.getElementsByTagName("requires");
          $A(s).each(function(e) {
            var t = $A(e.attributes).find(function(e) {
              return "namespace" == e.name
            });
            t && t.nodeValue && (r || (r = {
              namespaces: []
            }), r.namespaces.push(t.nodeValue))
          }), r && (t.requires = r);
          var a, l = e.getElementsByTagName("notUsesIn");
          $A(l).each(function(e) {
            var t = $A(e.attributes).find(function(e) {
              return "namespace" == e.name
            });
            t && t.nodeValue && (a || (a = {
              namespaces: []
            }), a.namespaces.push(t.nodeValue))
          }), a && (t.notUsesIn = a);
          var d = ORYX.PATH + ORYX.CONFIG.PLUGINS_FOLDER + t.source;
          ORYX.Log.debug("Requireing '%0'", d), ORYX.Log.info("Plugin '%0' successfully loaded.", t.name), ORYX.availablePlugins.push(t)
        })
      },
      onFailure: this._loadPluginsOnFails
    })
  },
  _loadPluginsOnFails: function() {
    ORYX.Log.error("Plugin configuration file not available.")
  }
}), !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.SVG || (ORYX.Core.SVG = {}), ORYX.Core.SVG.EditPathHandler = Clazz.extend({
  construct: function() {
    arguments.callee.$.construct.apply(this, arguments), this.x = 0, this.y = 0, this.oldX = 0, this.oldY = 0, this.deltaWidth = 1, this.deltaHeight = 1, this.d = ""
  },
  init: function(e, t, i, o, n, r) {
    this.x = e, this.y = t, this.oldX = i, this.oldY = o, this.deltaWidth = n, this.deltaHeight = r, this.d = ""
  },
  editPointsAbs: function(e) {
    if (e instanceof Array) {
      for (var t, i, o = [], n = 0; e.length > n; n++) t = (parseFloat(e[n]) - this.oldX) * this.deltaWidth + this.x, n++, i = (parseFloat(e[n]) - this.oldY) * this.deltaHeight + this.y, o.push(t), o.push(i);
      return o
    }
  },
  editPointsRel: function(e) {
    if (e instanceof Array) {
      for (var t, i, o = [], n = 0; e.length > n; n++) t = parseFloat(e[n]) * this.deltaWidth, n++, i = parseFloat(e[n]) * this.deltaHeight, o.push(t), o.push(i);
      return o
    }
  },
  arcAbs: function(e, t, i, o, n, r, s) {
    var a = this.editPointsAbs([r, s]),
      l = this.editPointsRel([e, t]);
    this.d = this.d.concat(" A" + l[0] + " " + l[1] + " " + i + " " + o + " " + n + " " + a[0] + " " + a[1] + " ")
  },
  arcRel: function(e, t, i, o, n, r, s) {
    var a = this.editPointsRel([e, t, r, s]);
    this.d = this.d.concat(" a" + a[0] + " " + a[1] + " " + i + " " + o + " " + n + " " + a[2] + " " + a[3] + " ")
  },
  curvetoCubicAbs: function(e, t, i, o, n, r) {
    var s = this.editPointsAbs([e, t, i, o, n, r]);
    this.d = this.d.concat(" C" + s[0] + " " + s[1] + " " + s[2] + " " + s[3] + " " + s[4] + " " + s[5] + " ")
  },
  curvetoCubicRel: function(e, t, i, o, n, r) {
    var s = this.editPointsRel([e, t, i, o, n, r]);
    this.d = this.d.concat(" c" + s[0] + " " + s[1] + " " + s[2] + " " + s[3] + " " + s[4] + " " + s[5] + " ")
  },
  linetoHorizontalAbs: function(e) {
    var t = this.editPointsAbs([e, 0]);
    this.d = this.d.concat(" H" + t[0] + " ")
  },
  linetoHorizontalRel: function(e) {
    var t = this.editPointsRel([e, 0]);
    this.d = this.d.concat(" h" + t[0] + " ")
  },
  linetoAbs: function(e, t) {
    var i = this.editPointsAbs([e, t]);
    this.d = this.d.concat(" L" + i[0] + " " + i[1] + " ")
  },
  linetoRel: function(e, t) {
    var i = this.editPointsRel([e, t]);
    this.d = this.d.concat(" l" + i[0] + " " + i[1] + " ")
  },
  movetoAbs: function(e, t) {
    var i = this.editPointsAbs([e, t]);
    this.d = this.d.concat(" M" + i[0] + " " + i[1] + " ")
  },
  movetoRel: function(e, t) {
    var i;
    i = "" === this.d ? this.editPointsAbs([e, t]) : this.editPointsRel([e, t]), this.d = this.d.concat(" m" + i[0] + " " + i[1] + " ")
  },
  curvetoQuadraticAbs: function(e, t, i, o) {
    var n = this.editPointsAbs([e, t, i, o]);
    this.d = this.d.concat(" Q" + n[0] + " " + n[1] + " " + n[2] + " " + n[3] + " ")
  },
  curvetoQuadraticRel: function(e, t, i, o) {
    var n = this.editPointsRel([e, t, i, o]);
    this.d = this.d.concat(" q" + n[0] + " " + n[1] + " " + n[2] + " " + n[3] + " ")
  },
  curvetoCubicSmoothAbs: function(e, t, i, o) {
    var n = this.editPointsAbs([e, t, i, o]);
    this.d = this.d.concat(" S" + n[0] + " " + n[1] + " " + n[2] + " " + n[3] + " ")
  },
  curvetoCubicSmoothRel: function(e, t, i, o) {
    var n = this.editPointsRel([e, t, i, o]);
    this.d = this.d.concat(" s" + n[0] + " " + n[1] + " " + n[2] + " " + n[3] + " ")
  },
  curvetoQuadraticSmoothAbs: function(e, t) {
    var i = this.editPointsAbs([e, t]);
    this.d = this.d.concat(" T" + i[0] + " " + i[1] + " ")
  },
  curvetoQuadraticSmoothRel: function(e, t) {
    var i = this.editPointsRel([e, t]);
    this.d = this.d.concat(" t" + i[0] + " " + i[1] + " ")
  },
  linetoVerticalAbs: function(e) {
    var t = this.editPointsAbs([0, e]);
    this.d = this.d.concat(" V" + t[1] + " ")
  },
  linetoVerticalRel: function(e) {
    var t = this.editPointsRel([0, e]);
    this.d = this.d.concat(" v" + t[1] + " ")
  },
  closePath: function() {
    this.d = this.d.concat(" z")
  }
}), !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.SVG || (ORYX.Core.SVG = {}), ORYX.Core.SVG.MinMaxPathHandler = Clazz.extend({
  construct: function() {
    arguments.callee.$.construct.apply(this, arguments), this.minX = void 0, this.minY = void 0, this.maxX = void 0, this.maxY = void 0, this._lastAbsX = void 0, this._lastAbsY = void 0
  },
  calculateMinMax: function(e) {
    if (e instanceof Array)
      for (var t, i, o = 0; e.length > o; o++) t = parseFloat(e[o]), o++, i = parseFloat(e[o]), this.minX = void 0 !== this.minX ? Math.min(this.minX, t) : t, this.maxX = void 0 !== this.maxX ? Math.max(this.maxX, t) : t, this.minY = void 0 !== this.minY ? Math.min(this.minY, i) : i, this.maxY = void 0 !== this.maxY ? Math.max(this.maxY, i) : i, this._lastAbsX = t, this._lastAbsY = i
  },
  arcAbs: function(e, t, i, o, n, r, s) {
    this.calculateMinMax([r, s])
  },
  arcRel: function(e, t, i, o, n, r, s) {
    this.calculateMinMax([this._lastAbsX + r, this._lastAbsY + s])
  },
  curvetoCubicAbs: function(e, t, i, o, n, r) {
    this.calculateMinMax([e, t, i, o, n, r])
  },
  curvetoCubicRel: function(e, t, i, o, n, r) {
    this.calculateMinMax([this._lastAbsX + e, this._lastAbsY + t, this._lastAbsX + i, this._lastAbsY + o, this._lastAbsX + n, this._lastAbsY + r])
  },
  linetoHorizontalAbs: function(e) {
    this.calculateMinMax([e, this._lastAbsY])
  },
  linetoHorizontalRel: function(e) {
    this.calculateMinMax([this._lastAbsX + e, this._lastAbsY])
  },
  linetoAbs: function(e, t) {
    this.calculateMinMax([e, t])
  },
  linetoRel: function(e, t) {
    this.calculateMinMax([this._lastAbsX + e, this._lastAbsY + t])
  },
  movetoAbs: function(e, t) {
    this.calculateMinMax([e, t])
  },
  movetoRel: function(e, t) {
    this._lastAbsX && this._lastAbsY ? this.calculateMinMax([this._lastAbsX + e, this._lastAbsY + t]) : this.calculateMinMax([e, t])
  },
  curvetoQuadraticAbs: function(e, t, i, o) {
    this.calculateMinMax([e, t, i, o])
  },
  curvetoQuadraticRel: function(e, t, i, o) {
    this.calculateMinMax([this._lastAbsX + e, this._lastAbsY + t, this._lastAbsX + i, this._lastAbsY + o])
  },
  curvetoCubicSmoothAbs: function(e, t, i, o) {
    this.calculateMinMax([e, t, i, o])
  },
  curvetoCubicSmoothRel: function(e, t, i, o) {
    this.calculateMinMax([this._lastAbsX + e, this._lastAbsY + t, this._lastAbsX + i, this._lastAbsY + o])
  },
  curvetoQuadraticSmoothAbs: function(e, t) {
    this.calculateMinMax([e, t])
  },
  curvetoQuadraticSmoothRel: function(e, t) {
    this.calculateMinMax([this._lastAbsX + e, this._lastAbsY + t])
  },
  linetoVerticalAbs: function(e) {
    this.calculateMinMax([this._lastAbsX, e])
  },
  linetoVerticalRel: function(e) {
    this.calculateMinMax([this._lastAbsX, this._lastAbsY + e])
  },
  closePath: function() {}
}), !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.SVG || (ORYX.Core.SVG = {}), ORYX.Core.SVG.PointsPathHandler = Clazz.extend({
  construct: function() {
    arguments.callee.$.construct.apply(this, arguments), this.points = [], this._lastAbsX = void 0, this._lastAbsY = void 0
  },
  addPoints: function(e) {
    if (e instanceof Array)
      for (var t, i, o = 0; e.length > o; o++) t = parseFloat(e[o]), o++, i = parseFloat(e[o]), this.points.push(t), this.points.push(i), this._lastAbsX = t, this._lastAbsY = i
  },
  arcAbs: function(e, t, i, o, n, r, s) {
    this.addPoints([r, s])
  },
  arcRel: function(e, t, i, o, n, r, s) {
    this.addPoints([this._lastAbsX + r, this._lastAbsY + s])
  },
  curvetoCubicAbs: function(e, t, i, o, n, r) {
    this.addPoints([n, r])
  },
  curvetoCubicRel: function(e, t, i, o, n, r) {
    this.addPoints([this._lastAbsX + n, this._lastAbsY + r])
  },
  linetoHorizontalAbs: function(e) {
    this.addPoints([e, this._lastAbsY])
  },
  linetoHorizontalRel: function(e) {
    this.addPoints([this._lastAbsX + e, this._lastAbsY])
  },
  linetoAbs: function(e, t) {
    this.addPoints([e, t])
  },
  linetoRel: function(e, t) {
    this.addPoints([this._lastAbsX + e, this._lastAbsY + t])
  },
  movetoAbs: function(e, t) {
    this.addPoints([e, t])
  },
  movetoRel: function(e, t) {
    this._lastAbsX && this._lastAbsY ? this.addPoints([this._lastAbsX + e, this._lastAbsY + t]) : this.addPoints([e, t])
  },
  curvetoQuadraticAbs: function(e, t, i, o) {
    this.addPoints([i, o])
  },
  curvetoQuadraticRel: function(e, t, i, o) {
    this.addPoints([this._lastAbsX + i, this._lastAbsY + o])
  },
  curvetoCubicSmoothAbs: function(e, t, i, o) {
    this.addPoints([i, o])
  },
  curvetoCubicSmoothRel: function(e, t, i, o) {
    this.addPoints([this._lastAbsX + i, this._lastAbsY + o])
  },
  curvetoQuadraticSmoothAbs: function(e, t) {
    this.addPoints([e, t])
  },
  curvetoQuadraticSmoothRel: function(e, t) {
    this.addPoints([this._lastAbsX + e, this._lastAbsY + t])
  },
  linetoVerticalAbs: function(e) {
    this.addPoints([this._lastAbsX, e])
  },
  linetoVerticalRel: function(e) {
    this.addPoints([this._lastAbsX, this._lastAbsY + e])
  },
  closePath: function() {}
}), NAMESPACE_ORYX = "http://www.b3mn.org/oryx", NAMESPACE_SVG = "http://www.w3.org/2000/svg/", !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.SVG || (ORYX.Core.SVG = {}), ORYX.Core.SVG.SVGMarker = Clazz.extend({
  construct: function(e) {
    arguments.callee.$.construct.apply(this, arguments), this.id = void 0, this.element = e, this.refX = void 0, this.refY = void 0, this.markerWidth = void 0, this.markerHeight = void 0, this.oldRefX = void 0, this.oldRefY = void 0, this.oldMarkerWidth = void 0, this.oldMarkerHeight = void 0, this.optional = !1, this.enabled = !0, this.minimumLength = void 0, this.resize = !1, this.svgShapes = [], this._init()
  },
  _init: function() {
    if ("[object SVGMarkerElement]" != this.element) throw "SVGMarker: Argument is not an instance of SVGMarkerElement.";
    this.id = this.element.getAttributeNS(null, "id");
    var e = this.element.getAttributeNS(null, "refX");
    this.refX = e ? parseFloat(e) : 0;
    var t = this.element.getAttributeNS(null, "refY");
    this.refY = t ? parseFloat(t) : 0;
    var i = this.element.getAttributeNS(null, "markerWidth");
    this.markerWidth = i ? parseFloat(i) : 3;
    var o = this.element.getAttributeNS(null, "markerHeight");
    this.markerHeight = o ? parseFloat(o) : 3, this.oldRefX = this.refX, this.oldRefY = this.refY, this.oldMarkerWidth = this.markerWidth, this.oldMarkerHeight = this.markerHeight;
    var n = this.element.getAttributeNS(NAMESPACE_ORYX, "optional");
    n ? (n = n.strip(), this.optional = "yes" === n.toLowerCase()) : this.optional = !1;
    var r = this.element.getAttributeNS(NAMESPACE_ORYX, "enabled");
    r ? (r = r.strip(), this.enabled = !("no" === r.toLowerCase())) : this.enabled = !0;
    var s = this.element.getAttributeNS(NAMESPACE_ORYX, "minimumLength");
    s && (this.minimumLength = parseFloat(s));
    var a = this.element.getAttributeNS(NAMESPACE_ORYX, "resize");
    a ? (a = a.strip(), this.resize = "yes" === a.toLowerCase()) : this.resize = !1
  },
  _getSVGShapes: function(e) {
    if (e.hasChildNodes) {
      var t = [],
        i = this;
      return $A(e.childNodes).each(function(e) {
        try {
          var o = new ORYX.Core.SVG.SVGShape(e);
          t.push(o)
        } catch (n) {
          t = t.concat(i._getSVGShapes(e))
        }
      }), t
    }
  },
  update: function() {
    this.oldRefX = this.refX, this.oldRefY = this.refY, this.oldMarkerWidth = this.markerWidth, this.oldMarkerHeight = this.markerHeight
  },
  toString: function() {
    return this.element ? "SVGMarker " + this.element.id : "SVGMarker " + this.element
  }
}), NAMESPACE_ORYX = "http://www.b3mn.org/oryx", NAMESPACE_SVG = "http://www.w3.org/2000/svg/", !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.SVG || (ORYX.Core.SVG = {}), ORYX.Core.SVG.SVGShape = Clazz.extend({
  construct: function(e) {
    arguments.callee.$.construct.apply(this, arguments), this.type, this.element = e, this.x = void 0, this.y = void 0, this.width = void 0, this.height = void 0, this.oldX = void 0, this.oldY = void 0, this.oldWidth = void 0, this.oldHeight = void 0, this.radiusX = void 0, this.radiusY = void 0, this.isHorizontallyResizable = !1, this.isVerticallyResizable = !1, this.anchorLeft = !1, this.anchorRight = !1, this.anchorTop = !1, this.anchorBottom = !1, this.allowDockers = !0, this.resizeMarkerMid = !1, this.editPathParser, this.editPathHandler, this.init()
  },
  init: function() {
    if (ORYX.Editor.checkClassType(this.element, SVGRectElement) || ORYX.Editor.checkClassType(this.element, SVGImageElement)) {
      this.type = "Rect";
      var e = this.element.getAttributeNS(null, "x");
      if (!e) throw "Missing attribute in element " + this.element;
      this.oldX = parseFloat(e);
      var t = this.element.getAttributeNS(null, "y");
      if (!t) throw "Missing attribute in element " + this.element;
      this.oldY = parseFloat(t);
      var i = this.element.getAttributeNS(null, "width");
      if (!i) throw "Missing attribute in element " + this.element;
      this.oldWidth = parseFloat(i);
      var o = this.element.getAttributeNS(null, "height");
      if (!o) throw "Missing attribute in element " + this.element;
      this.oldHeight = parseFloat(o)
    } else if (ORYX.Editor.checkClassType(this.element, SVGCircleElement)) {
      this.type = "Circle";
      var n = void 0,
        r = void 0,
        s = this.element.getAttributeNS(null, "cx");
      if (!s) throw "Missing attribute in element " + this.element;
      n = parseFloat(s);
      var a = this.element.getAttributeNS(null, "cy");
      if (!a) throw "Missing attribute in element " + this.element;
      r = parseFloat(a);
      var l = this.element.getAttributeNS(null, "r");
      if (!l) throw "Missing attribute in element " + this.element;
      this.radiusX = parseFloat(l), this.oldX = n - this.radiusX, this.oldY = r - this.radiusX, this.oldWidth = 2 * this.radiusX, this.oldHeight = 2 * this.radiusX
    } else if (ORYX.Editor.checkClassType(this.element, SVGEllipseElement)) {
      this.type = "Ellipse";
      var n = void 0,
        r = void 0,
        s = this.element.getAttributeNS(null, "cx");
      if (!s) throw "Missing attribute in element " + this.element;
      n = parseFloat(s);
      var a = this.element.getAttributeNS(null, "cy");
      if (!a) throw "Missing attribute in element " + this.element;
      r = parseFloat(a);
      var d = this.element.getAttributeNS(null, "rx");
      if (!d) throw "Missing attribute in element " + this.element;
      this.radiusX = parseFloat(d);
      var c = this.element.getAttributeNS(null, "ry");
      if (!c) throw "Missing attribute in element " + this.element;
      this.radiusY = parseFloat(c), this.oldX = n - this.radiusX, this.oldY = r - this.radiusY, this.oldWidth = 2 * this.radiusX, this.oldHeight = 2 * this.radiusY
    } else if (ORYX.Editor.checkClassType(this.element, SVGLineElement)) {
      this.type = "Line";
      var p = void 0,
        u = void 0,
        h = void 0,
        m = void 0,
        f = this.element.getAttributeNS(null, "x1");
      if (!f) throw "Missing attribute in element " + this.element;
      p = parseFloat(f);
      var g = this.element.getAttributeNS(null, "y1");
      if (!g) throw "Missing attribute in element " + this.element;
      u = parseFloat(g);
      var v = this.element.getAttributeNS(null, "x2");
      if (!v) throw "Missing attribute in element " + this.element;
      h = parseFloat(v);
      var I = this.element.getAttributeNS(null, "y2");
      if (!I) throw "Missing attribute in element " + this.element;
      m = parseFloat(I), this.oldX = Math.min(p, h), this.oldY = Math.min(u, m), this.oldWidth = Math.abs(p - h), this.oldHeight = Math.abs(u - m)
    } else if (ORYX.Editor.checkClassType(this.element, SVGPolylineElement) || ORYX.Editor.checkClassType(this.element, SVGPolygonElement)) {
      this.type = "Polyline";
      var S = [];
      if (this.element.points && this.element.points.numberOfItems)
        for (var O = 0, R = this.element.points.numberOfItems; R > O; O++) S.push(this.element.points.getItem(O).x), S.push(this.element.points.getItem(O).y);
      else {
        var E = this.element.getAttributeNS(null, "points");
        if (!E) throw "Missing attribute in element " + this.element;
        E = E.replace(/,/g, " "), S = E.split(" "), S = S.without("")
      }
      if (!(S && S.length && S.length > 1)) throw "Missing attribute in element " + this.element;
      for (var y = parseFloat(S[0]), T = parseFloat(S[1]), b = parseFloat(S[0]), C = parseFloat(S[1]), O = 0; S.length > O; O++) y = Math.min(y, parseFloat(S[O])), b = Math.max(b, parseFloat(S[O])), O++, T = Math.min(T, parseFloat(S[O])), C = Math.max(C, parseFloat(S[O]));
      this.oldX = y, this.oldY = T, this.oldWidth = b - y, this.oldHeight = C - T
    } else {
      if (!ORYX.Editor.checkClassType(this.element, SVGPathElement)) throw "Element is not a shape.";
      this.type = "Path", this.editPathParser = new PathParser, this.editPathHandler = new ORYX.Core.SVG.EditPathHandler, this.editPathParser.setHandler(this.editPathHandler);
      var N = new PathParser,
        A = new ORYX.Core.SVG.MinMaxPathHandler;
      N.setHandler(A), N.parsePath(this.element), this.oldX = A.minX, this.oldY = A.minY, this.oldWidth = A.maxX - A.minX, this.oldHeight = A.maxY - A.minY, delete N, delete A
    }
    var F = this.element.getAttributeNS(NAMESPACE_ORYX, "resize");
    F ? (F = F.toLowerCase(), this.isHorizontallyResizable = F.match(/horizontal/) ? !0 : !1, this.isVerticallyResizable = F.match(/vertical/) ? !0 : !1) : (this.isHorizontallyResizable = !1, this.isVerticallyResizable = !1);
    var D = this.element.getAttributeNS(NAMESPACE_ORYX, "anchors");
    if (D) {
      D = D.replace("/,/g", " ");
      for (var P = D.split(" ").without(""), O = 0; P.length > O; O++) switch (P[O].toLowerCase()) {
        case "left":
          this.anchorLeft = !0;
          break;
        case "right":
          this.anchorRight = !0;
          break;
        case "top":
          this.anchorTop = !0;
          break;
        case "bottom":
          this.anchorBottom = !0
      }
    }
    if (ORYX.Editor.checkClassType(this.element, SVGPathElement)) {
      var M = this.element.getAttributeNS(NAMESPACE_ORYX, "allowDockers");
      M && (this.allowDockers = "no" === M.toLowerCase() ? !1 : !0);
      var _ = this.element.getAttributeNS(NAMESPACE_ORYX, "resizeMarker-mid");
      _ && (this.resizeMarkerMid = "yes" === _.toLowerCase() ? !0 : !1)
    }
    this.x = this.oldX, this.y = this.oldY, this.width = this.oldWidth, this.height = this.oldHeight
  },
  update: function() {
    if (this.x !== this.oldX || this.y !== this.oldY || this.width !== this.oldWidth || this.height !== this.oldHeight) {
      switch (this.type) {
        case "Rect":
          this.x !== this.oldX && this.element.setAttributeNS(null, "x", this.x), this.y !== this.oldY && this.element.setAttributeNS(null, "y", this.y), this.width !== this.oldWidth && this.element.setAttributeNS(null, "width", this.width), this.height !== this.oldHeight && this.element.setAttributeNS(null, "height", this.height);
          break;
        case "Circle":
          this.radiusX = (this.width < this.height ? this.width : this.height) / 2, this.element.setAttributeNS(null, "cx", this.x + this.width / 2), this.element.setAttributeNS(null, "cy", this.y + this.height / 2), this.element.setAttributeNS(null, "r", this.radiusX);
          break;
        case "Ellipse":
          this.radiusX = this.width / 2, this.radiusY = this.height / 2, this.element.setAttributeNS(null, "cx", this.x + this.radiusX), this.element.setAttributeNS(null, "cy", this.y + this.radiusY), this.element.setAttributeNS(null, "rx", this.radiusX), this.element.setAttributeNS(null, "ry", this.radiusY);
          break;
        case "Line":
          this.x !== this.oldX && this.element.setAttributeNS(null, "x1", this.x), this.y !== this.oldY && this.element.setAttributeNS(null, "y1", this.y), (this.x !== this.oldX || this.width !== this.oldWidth) && this.element.setAttributeNS(null, "x2", this.x + this.width), (this.y !== this.oldY || this.height !== this.oldHeight) && this.element.setAttributeNS(null, "y2", this.y + this.height);
          break;
        case "Polyline":
          var e = this.element.getAttributeNS(null, "points");
          if (e && (e = e.replace(/,/g, " ").split(" ").without(""), e && e.length && e.length > 1)) {
            for (var t = 0 === this.oldWidth ? 0 : this.width / this.oldWidth, i = 0 === this.oldHeight ? 0 : this.height / this.oldHeight, o = "", n = 0; e.length > n; n++) {
              var r = (parseFloat(e[n]) - this.oldX) * t + this.x;
              n++;
              var s = (parseFloat(e[n]) - this.oldY) * i + this.y;
              o += r + " " + s + " "
            }
            this.element.setAttributeNS(null, "points", o)
          }
          break;
        case "Path":
          var t = 0 === this.oldWidth ? 0 : this.width / this.oldWidth,
            i = 0 === this.oldHeight ? 0 : this.height / this.oldHeight;
          this.editPathHandler.init(this.x, this.y, this.oldX, this.oldY, t, i), this.editPathParser.parsePath(this.element), this.element.setAttributeNS(null, "d", this.editPathHandler.d)
      }
      this.oldX = this.x, this.oldY = this.y, this.oldWidth = this.width, this.oldHeight = this.height
    }
    delete this.visible, delete this.handler
  },
  isPointIncluded: function(e, t) {
    if (!e || !t || !this.isVisible()) return !1;
    switch (this.type) {
      case "Rect":
        return e >= this.x && this.x + this.width >= e && t >= this.y && this.y + this.height >= t;
      case "Circle":
        return ORYX.Core.Math.isPointInEllipse(e, t, this.x + this.width / 2, this.y + this.height / 2, this.radiusX, this.radiusX);
      case "Ellipse":
        return ORYX.Core.Math.isPointInEllipse(e, t, this.x + this.radiusX, this.y + this.radiusY, this.radiusX, this.radiusY);
      case "Line":
        return ORYX.Core.Math.isPointInLine(e, t, this.x, this.y, this.x + this.width, this.y + this.height);
      case "Polyline":
        var i = this.element.getAttributeNS(null, "points");
        return i ? (i = i.replace(/,/g, " ").split(" ").without(""), i = i.collect(function(e) {
          return parseFloat(e)
        }), ORYX.Core.Math.isPointInPolygone(e, t, i)) : !1;
      case "Path":
        if (!this.handler) {
          var o = new PathParser;
          this.handler = new ORYX.Core.SVG.PointsPathHandler, o.setHandler(this.handler), o.parsePath(this.element)
        }
        return ORYX.Core.Math.isPointInPolygone(e, t, this.handler.points);
      default:
        return !1
    }
  },
  isVisible: function(e) {
    if (void 0 !== this.visible) return this.visible;
    e || (e = this.element);
    var t = !1;
    try {
      t = !!e.ownerSVGElement
    } catch (i) {}
    if (t) {
      if (ORYX.Editor.checkClassType(e, SVGGElement) && e.className && "me" == e.className.baseVal) return this.visible = !0, this.visible;
      var o = e.getAttributeNS(null, "fill"),
        n = e.getAttributeNS(null, "stroke");
      if (o && "none" == o && n && "none" == n) this.visible = !1;
      else {
        var r = e.getAttributeNS(null, "display");
        this.visible = r ? "none" == r ? !1 : !0 : this.isVisible(e.parentNode)
      }
    } else this.visible = !0;
    return this.visible
  },
  toString: function() {
    return this.element ? "SVGShape " + this.element.id : "SVGShape " + this.element
  }
}), !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.SVG || (ORYX.Core.SVG = {}), ORYX.Core.SVG.Label = Clazz.extend({
  _characterSets: ["%W", "@", "m", "wDGMOQ?????#+=<>~^", "ABCHKNRSUVXZ??????????&", "bdghnopqux???????????ETY1234567890?????_????${}*????`???????????", "aeksvyz?????FLP????????????????", "c-", 'rtJ"/()[]:;!|\\', "fjI., ", "'", "il"],
  _characterSetValues: [15, 14, 13, 11, 10, 9, 8, 7, 6, 5, 4, 3],
  construct: function(e) {
    if (arguments.callee.$.construct.apply(this, arguments), !e.textElement) throw "Label: No parameter textElement.";
    if (!ORYX.Editor.checkClassType(e.textElement, SVGTextElement)) throw "Label: Parameter textElement is not an SVGTextElement.";
    this.invisibleRenderPoint = -5e3, this.node = e.textElement, this.node.setAttributeNS(null, "stroke-width", "0pt"), this.node.setAttributeNS(null, "letter-spacing", "-0.01px"), this.shapeId = e.shapeId, this.id, this.fitToElemId, this.edgePosition, this.x, this.y, this.oldX, this.oldY, this.isVisible = !0, this._text, this._verticalAlign, this._horizontalAlign, this._rotate, this._rotationPoint, this.anchorLeft, this.anchorRight, this.anchorTop, this.anchorBottom, this._isChanged = !0;
    var t = this.node.getAttributeNS(null, "id");
    t && (this.id = t), this.fitToElemId = this.node.getAttributeNS(ORYX.CONFIG.NAMESPACE_ORYX, "fittoelem"), this.fitToElemId && (this.fitToElemId = this.shapeId + this.fitToElemId);
    var i = this.node.getAttributeNS(ORYX.CONFIG.NAMESPACE_ORYX, "align");
    i && (i = i.replace(/,/g, " "), i = i.split(" "), i = i.without(""), i.each(function(e) {
      switch (e) {
        case "top":
        case "middle":
        case "bottom":
          this._verticalAlign || (this._originVerticalAlign = this._verticalAlign = e);
          break;
        case "left":
        case "center":
        case "right":
          this._horizontalAlign || (this._originHorizontalAlign = this._horizontalAlign = e)
      }
    }.bind(this))), this.edgePosition = this.node.getAttributeNS(ORYX.CONFIG.NAMESPACE_ORYX, "edgePosition"), this.edgePosition && (this.originEdgePosition = this.edgePosition = this.edgePosition.toLowerCase()), this.offsetTop = this.node.getAttributeNS(ORYX.CONFIG.NAMESPACE_ORYX, "offsetTop") || ORYX.CONFIG.OFFSET_EDGE_LABEL_TOP, this.offsetTop && (this.offsetTop = parseInt(this.offsetTop)), this.offsetBottom = this.node.getAttributeNS(ORYX.CONFIG.NAMESPACE_ORYX, "offsetBottom") || ORYX.CONFIG.OFFSET_EDGE_LABEL_BOTTOM, this.offsetBottom && (this.offsetBottom = parseInt(this.offsetBottom));
    var o = this.node.getAttributeNS(ORYX.CONFIG.NAMESPACE_ORYX, "rotate");
    if (o) try {
      this._rotate = parseFloat(o)
    } catch (n) {
      this._rotate = 0
    } else this._rotate = 0;
    var r = this.node.getAttributeNS(ORYX.CONFIG.NAMESPACE_ORYX, "anchors");
    if (r) {
      r = r.replace("/,/g", " ");
      for (var s = r.split(" ").without(""), a = 0; s.length > a; a++) switch (s[a].toLowerCase()) {
        case "left":
          this.originAnchorLeft = this.anchorLeft = !0;
          break;
        case "right":
          this.originAnchorRight = this.anchorRight = !0;
          break;
        case "top":
          this.originAnchorTop = this.anchorTop = !0;
          break;
        case "bottom":
          this.originAnchorBottom = this.anchorBottom = !0
      }
    }
    this._verticalAlign || (this._verticalAlign = "bottom"), this._horizontalAlign || (this._horizontalAlign = "left");
    var l = this.node.getAttributeNS(null, "x");
    l && (this.oldX = this.x = parseFloat(l));
    var d = this.node.getAttributeNS(null, "y");
    d && (this.oldY = this.y = parseFloat(d)), this.text(this.node.textContent)
  },
  resetAnchorPosition: function() {
    this.anchorLeft = this.originAnchorLeft || !1, this.anchorRight = this.originAnchorRight || !1, this.anchorTop = this.originAnchorTop || !1, this.anchorBottom = this.originAnchorBottom || !1
  },
  isOriginAnchorLeft: function() {
    return this.originAnchorLeft || !1
  },
  isOriginAnchorRight: function() {
    return this.originAnchorRight || !1
  },
  isOriginAnchorTop: function() {
    return this.originAnchorTop || !1
  },
  isOriginAnchorBottom: function() {
    return this.originAnchorBottom || !1
  },
  isAnchorLeft: function() {
    return this.anchorLeft || !1
  },
  isAnchorRight: function() {
    return this.anchorRight || !1
  },
  isAnchorTop: function() {
    return this.anchorTop || !1
  },
  isAnchorBottom: function() {
    return this.anchorBottom || !1
  },
  getX: function() {
    try {
      var e = this.node.x.baseVal.getItem(0).value;
      switch (this.horizontalAlign()) {
        case "left":
          return e;
        case "center":
          return e - this.getWidth() / 2;
        case "right":
          return e - this.getWidth()
      }
      return this.node.getBBox().x
    } catch (t) {
      return this.x
    }
  },
  setX: function(e) {
    this.position ? this.position.x = e : this.setOriginX(e)
  },
  getY: function() {
    try {
      return this.node.getBBox().y
    } catch (e) {
      return this.y
    }
  },
  setY: function(e) {
    this.position ? this.position.y = e : this.setOriginY(e)
  },
  setOriginX: function(e) {
    this.x = e
  },
  setOriginY: function(e) {
    this.y = e
  },
  getWidth: function() {
    try {
      try {
        var e, t = this.node.childNodes;
        if (0 == t.length) e = this.node.getBBox().width;
        else
          for (var i = 0, o = t.length; o > i; ++i) {
            var n = t[i].getComputedTextLength();
            (e === void 0 || n > e) && (e = n)
          }
        return e + (0 == e % 2 ? 0 : 1)
      } catch (r) {
        return this.node.getBBox().width
      }
    } catch (s) {
      return 0
    }
  },
  getOriginUpperLeft: function() {
    var e = this.x,
      t = this.y;
    switch (this._horizontalAlign) {
      case "center":
        e -= this.getWidth() / 2;
        break;
      case "right":
        e -= this.getWidth()
    }
    switch (this._verticalAlign) {
      case "middle":
        t -= this.getHeight() / 2;
        break;
      case "bottom":
        t -= this.getHeight()
    }
    return {
      x: e,
      y: t
    }
  },
  getHeight: function() {
    try {
      return this.node.getBBox().height
    } catch (e) {
      return 0
    }
  },
  getCenter: function() {
    var e = {
      x: this.getX(),
      y: this.getY()
    };
    return e.x += this.getWidth() / 2, e.y += this.getHeight() / 2, e
  },
  setPosition: function(e) {
    e && void 0 !== e.x && void 0 !== e.y ? this.position = e : delete this.position, this.position && (delete this._referencePoint, delete this.edgePosition), this._isChanged = !0, this.update()
  },
  getPosition: function() {
    return this.position
  },
  setReferencePoint: function(e) {
    e ? this._referencePoint = e : delete this._referencePoint, this._referencePoint && delete this.position
  },
  getReferencePoint: function() {
    return this._referencePoint || void 0
  },
  changed: function() {
    this._isChanged = !0
  },
  registerOnChange: function(e) {
    this.changeCallbacks || (this.changeCallbacks = []), e instanceof Function && !this.changeCallbacks.include(e) && this.changeCallbacks.push(e)
  },
  unregisterOnChange: function(e) {
    this.changeCallbacks && e instanceof Function && this.changeCallbacks.include(e) && (this.changeCallbacks = this.changeCallbacks.without(e))
  },
  isUpdating: function() {
    return !!this._isUpdating
  },
  getOriginEdgePosition: function() {
    return this.originEdgePosition
  },
  getEdgePosition: function() {
    return this.edgePosition || null
  },
  setEdgePosition: function(e) {
    ["starttop", "startmiddle", "startbottom", "midtop", "midbottom", "endtop", "endbottom"].include(e) ? (this.edgePosition = e, delete this.position, delete this._referencePoint) : delete this.edgePosition
  },
  update: function(e) {
    var t = this.x,
      i = this.y;
    if (this.position && (t = this.position.x, i = this.position.y), t = Math.floor(t), i = Math.floor(i), this._isChanged || t !== this.oldX || i !== this.oldY || e === !0)
      if (this.isVisible) {
        this._isChanged = !1, this._isUpdating = !0, this.node.setAttributeNS(null, "x", t), this.node.setAttributeNS(null, "y", i), this.node.removeAttributeNS(null, "fill-opacity"), this.oldX = t, this.oldY = i, this.position || this.getReferencePoint() ? this.node.removeAttributeNS(null, "transform") : void 0 !== this._rotate && (this._rotationPoint ? this.node.setAttributeNS(null, "transform", "rotate(" + this._rotate + " " + Math.floor(this._rotationPoint.x) + " " + Math.floor(this._rotationPoint.y) + ")") : this.node.setAttributeNS(null, "transform", "rotate(" + this._rotate + " " + Math.floor(t) + " " + Math.floor(i) + ")"));
        for (var o = this._text.split("\n");
             "" == o.last();) o.pop();
        this.node.ownerDocument && ((this.fitToElemId || this._textHasChanged) && (this.node.textContent = "", o.each(function(e) {
          var t = this.node.ownerDocument.createElementNS(ORYX.CONFIG.NAMESPACE_SVG, "tspan");
          t.textContent = e.trim(), this.fitToElemId && (t.setAttributeNS(null, "x", this.invisibleRenderPoint), t.setAttributeNS(null, "y", this.invisibleRenderPoint)), "" === t.textContent && (t.textContent = " "), this.node.appendChild(t)
        }.bind(this)), delete this._textHasChanged, delete this.indices), this.isVisible && this.fitToElemId && this.node.setAttributeNS(null, "visibility", "hidden"), this.fitToElemId ? window.setTimeout(this._checkFittingToReferencedElem.bind(this), 0) : window.setTimeout(this._positionText.bind(this), 0))
      } else this.node.textContent = ""
  },
  _checkFittingToReferencedElem: function() {
    try {
      var e = $A(this.node.getElementsByTagNameNS(ORYX.CONFIG.NAMESPACE_SVG, "tspan")),
        t = [],
        i = this.node.ownerDocument.getElementById(this.fitToElemId);
      if (i) {
        for (var o = i.getBBox(), n = this.getFontSize(), r = 0; e.length > r; r++) {
          var s = e[r],
            a = this._getRenderedTextLength(s, void 0, void 0, n),
            l = 0 != this._rotate && 0 != this._rotate % 180 && 0 == this._rotate % 90 ? o.height : o.width;
          if (a > l) {
            for (var d = 0, c = 0, p = this.getTrimmedTextLength(s.textContent), u = 0; p > u; u++) {
              var h = this._getRenderedTextLength(s, d, u - d, n);
              if (h > l - 2) {
                var m = this.node.ownerDocument.createElementNS(ORYX.CONFIG.NAMESPACE_SVG, "tspan");
                d >= c ? (c = 0 == u ? u : u - 1, m.textContent = s.textContent.slice(d, c).trim()) : m.textContent = s.textContent.slice(d, ++c).trim(), m.setAttributeNS(null, "x", this.invisibleRenderPoint), m.setAttributeNS(null, "y", this.invisibleRenderPoint), t.push(m), d = c
              } else {
                var f = s.textContent.charAt(u);
                (" " == f || "-" == f || "." == f || "," == f || ";" == f || ":" == f) && (c = u)
              }
            }
            s.textContent = s.textContent.slice(d).trim()
          }
          t.push(s)
        }
        for (; this.node.hasChildNodes();) this.node.removeChild(this.node.childNodes[0]);
        for (; t.length > 0;) this.node.appendChild(t.shift())
      }
    } catch (g) {
      ORYX.Log.fatal("Error " + g)
    }
    window.setTimeout(this._positionText.bind(this), 0)
  },
  _positionText: function() {
    try {
      var e = this.node.childNodes,
        t = this.getFontSize(this.node),
        i = [],
        o = this.x,
        n = this.y;
      this.position && (o = this.position.x, n = this.position.y), o = Math.floor(o), n = Math.floor(n);
      var r = 0,
        s = [],
        a = this.indices || $R(0, e.length - 1).toArray(),
        l = a.length;
      switch (a.each(function(a) {
        if (void 0 !== a) {
          var d = e[r++];
          if ("" === d.textContent.trim()) i.push(d);
          else {
            var c = 0;
            switch (this._verticalAlign) {
              case "bottom":
                c = -(l - a - 1) * t;
                break;
              case "middle":
                c = -(l / 2 - a - 1) * t, c -= ORYX.CONFIG.LABEL_LINE_DISTANCE / 2;
                break;
              case "top":
                c = a * t, c += t
            }
            d.setAttributeNS(null, "dy", Math.floor(c)), d.setAttributeNS(null, "x", o), d.setAttributeNS(null, "y", n), s.push(a)
          }
        }
      }.bind(this)), s.length = e.length, this.indices = this.indices || s, i.each(function(e) {
        this.node.removeChild(e)
      }.bind(this)), this._horizontalAlign) {
        case "left":
          this.node.setAttributeNS(null, "text-anchor", "start");
          break;
        case "center":
          this.node.setAttributeNS(null, "text-anchor", "middle");
          break;
        case "right":
          this.node.setAttributeNS(null, "text-anchor", "end")
      }
    } catch (d) {
      this._isChanged = !0
    }
    this.isVisible && this.node.removeAttributeNS(null, "visibility"), delete this._isUpdating, (this.changeCallbacks || []).each(function(e) {
      e.apply(e)
    })
  },
  _getRenderedTextLength: function(e, t, i) {
    return void 0 === t ? e.getComputedTextLength() : e.getSubStringLength(t, i)
  },
  _estimateTextWidth: function(e, t) {
    for (var i = 0, o = 0; e.length > o; o++) i += this._estimateCharacterWidth(e.charAt(o));
    return i * (t / 14)
  },
  _estimateCharacterWidth: function(e) {
    for (var t = 0; this._characterSets.length > t; t++)
      if (this._characterSets[t].indexOf(e) >= 0) return this._characterSetValues[t];
    return 9
  },
  getReferencedElementWidth: function() {
    var e = this.node.ownerDocument.getElementById(this.fitToElemId);
    if (e) {
      var t = e.getBBox();
      if (t) return 0 != this._rotate && 0 != this._rotate % 180 && 0 == this._rotate % 90 ? t.height : t.width
    }
    return void 0
  },
  text: function() {
    switch (arguments.length) {
      case 0:
        return this._text;
      case 1:
        var e = this._text;
        arguments[0] ? (this._text = "" + arguments[0], null != this._text && void 0 != this._text && (this._text = this._text.replace(/ {2,}/g, " "))) : this._text = "", e !== this._text && (this._isChanged = !0, this._textHasChanged = !0);
        break;
      default:
    }
  },
  getOriginVerticalAlign: function() {
    return this._originVerticalAlign
  },
  verticalAlign: function() {
    switch (arguments.length) {
      case 0:
        return this._verticalAlign;
      case 1:
        if (["top", "middle", "bottom"].member(arguments[0])) {
          var e = this._verticalAlign;
          this._verticalAlign = arguments[0], this._verticalAlign !== e && (this._isChanged = !0)
        }
        break;
      default:
    }
  },
  getOriginHorizontalAlign: function() {
    return this._originHorizontalAlign
  },
  horizontalAlign: function() {
    switch (arguments.length) {
      case 0:
        return this._horizontalAlign;
      case 1:
        if (["left", "center", "right"].member(arguments[0])) {
          var e = this._horizontalAlign;
          this._horizontalAlign = arguments[0], this._horizontalAlign !== e && (this._isChanged = !0)
        }
        break;
      default:
    }
  },
  rotate: function() {
    switch (arguments.length) {
      case 0:
        return this._rotate;
      case 1:
        this._rotate != arguments[0] && (this._rotate = arguments[0], this._rotationPoint = void 0, this._isChanged = !0);
      case 2:
        this._rotate == arguments[0] && this._rotationPoint && this._rotationPoint.x == arguments[1].x && this._rotationPoint.y == arguments[1].y || (this._rotate = arguments[0], this._rotationPoint = arguments[1], this._isChanged = !0)
    }
  },
  hide: function() {
    this.isVisible && (this.isVisible = !1, this._isChanged = !0)
  },
  show: function() {
    this.isVisible || (this.isVisible = !0, this._isChanged = !0, this._textHasChanged = !0)
  },
  getInheritedFontSize: function(e) {
    if (e && e.getAttributeNS) {
      var t = e.getAttributeNS(null, "font-size");
      return t ? parseFloat(t) : ORYX.Editor.checkClassType(e, SVGSVGElement) ? void 0 : this.getInheritedFontSize(e.parentNode)
    }
  },
  getFontSize: function() {
    var e = this.node.getElementsByTagNameNS(ORYX.CONFIG.NAMESPACE_SVG, "tspan"),
      t = this.getInheritedFontSize(this.node);
    return t || (t = e[0] && /Firefox[\/\s](\d+\.\d+)/.test(navigator.userAgent) && new Number(RegExp.$1) >= 3 ? e[0].getExtentOfChar(0).height : ORYX.CONFIG.LABEL_DEFAULT_LINE_HEIGHT, 0 >= t && (t = ORYX.CONFIG.LABEL_DEFAULT_LINE_HEIGHT)), t && this.node.setAttribute("oryx:fontSize", t), t
  },
  getTrimmedTextLength: function(e) {
    e = e.strip().gsub("  ", " ");
    var t;
    do t = e.length, e = e.gsub("  ", " "); while (t > e.length);
    return e.length
  },
  getOffsetBottom: function() {
    return this.offsetBottom
  },
  getOffsetTop: function() {
    return this.offsetTop
  },
  deserialize: function(e, t) {
    if (e && e.x !== void 0 && e.y !== void 0) {
      if (this.setPosition({
        x: e.x,
        y: e.y
      }), e.distance !== void 0) {
        var i = t.dockers[e.from],
          o = t.dockers[e.to];
        i && o && this.setReferencePoint({
          dirty: !0,
          distance: e.distance,
          intersection: {
            x: e.x,
            y: e.y
          },
          orientation: e.orientation,
          segment: {
            from: i,
            fromIndex: e.from,
            fromPosition: i.bounds.center(),
            to: o,
            toIndex: e.to,
            toPosition: o.bounds.center()
          }
        })
      }
      e.left && (this.anchorLeft = !0), e.right && (this.anchorRight = !0), e.top && (this.anchorTop = !0), e.bottom && (this.anchorBottom = !0), e.valign && this.verticalAlign(e.valign), e.align && this.horizontalAlign(e.align)
    } else e && e.edge !== void 0 && this.setEdgePosition(e.edge)
  },
  serialize: function() {
    if (this.getEdgePosition()) return this.getOriginEdgePosition() !== this.getEdgePosition() ? {
      edge: this.getEdgePosition()
    } : null;
    if (this.position) {
      var e = {
        x: this.position.x,
        y: this.position.y
      };
      return this.isAnchorLeft() && this.isAnchorLeft() !== this.isOriginAnchorLeft() && (e.left = !0), this.isAnchorRight() && this.isAnchorRight() !== this.isOriginAnchorRight() && (e.right = !0), this.isAnchorTop() && this.isAnchorTop() !== this.isOriginAnchorTop() && (e.top = !0), this.isAnchorBottom() && this.isAnchorBottom() !== this.isOriginAnchorBottom() && (e.bottom = !0), this.getOriginVerticalAlign() !== this.verticalAlign() && (e.valign = this.verticalAlign()), this.getOriginHorizontalAlign() !== this.horizontalAlign() && (e.align = this.horizontalAlign()), e
    }
    if (this.getReferencePoint()) {
      var t = this.getReferencePoint();
      return {
        distance: t.distance,
        x: t.intersection.x,
        y: t.intersection.y,
        from: t.segment.fromIndex,
        to: t.segment.toIndex,
        orientation: t.orientation,
        valign: this.verticalAlign(),
        align: this.horizontalAlign()
      }
    }
    return null
  },
  toString: function() {
    return "Label " + this.id
  }
}), !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.Math || (ORYX.Core.Math = {}), ORYX.Core.Math.midPoint = function(e, t) {
  return {
    x: (e.x + t.x) / 2,
    y: (e.y + t.y) / 2
  }
}, ORYX.Core.Math.isPointInLine = function(e, t, i, o, n, r, s) {
  if (s = s ? Math.abs(s) : 1, s >= Math.abs(i - n) && s >= Math.abs(e - i) && s >= t - Math.max(o, r) && s >= Math.min(o, r) - t) return !0;
  if (s >= Math.abs(o - r) && s >= Math.abs(t - o) && s >= e - Math.max(i, n) && s >= Math.min(i, n) - e) return !0;
  if (e > Math.max(i, n) || Math.min(i, n) > e) return !1;
  if (t > Math.max(o, r) || Math.min(o, r) > t) return !1;
  var a = (o - r) / (i - n);
  return s > Math.abs(t - (a * e + o - a * i))
}, ORYX.Core.Math.isPointInEllipse = function(e, t, i, o, n, r) {
  if (void 0 === i || void 0 === o || void 0 === n || void 0 === r) throw "ORYX.Core.Math.isPointInEllipse needs a ellipse with these properties: x, y, radiusX, radiusY";
  var s = (e - i) / n,
    a = (t - o) / r;
  return 1 > s * s + a * a
}, ORYX.Core.Math.isPointInPolygone = function(e, t, i) {
  if (3 > arguments.length) throw "ORYX.Core.Math.isPointInPolygone needs two arguments";
  var o = i.length - 1;
  (i[0] !== i[o - 1] || i[1] !== i[o]) && (i.push(i[0]), i.push(i[1]));
  for (var n, r, s, a, l, d = 0, c = 0; i.length - 3 > c;)
    if (n = i[c], r = i[++c], s = i[++c], a = i[c + 1], l = (t - r) * (s - n) - (e - n) * (a - r), r >= t != a >= t && (d += a - r >= 0 ? l >= 0 : 0 >= l), !l && e >= Math.min(n, s) && Math.max(n, s) >= e && t >= Math.min(r, a) && Math.max(r, a) >= t) return !0;
  return d % 2 ? !0 : !1
}, ORYX.Core.Math.distancePointLinie = function(e, t, i, o) {
  var n = ORYX.Core.Math.getPointOfIntersectionPointLine(e, t, i, o);
  return n ? ORYX.Core.Math.getDistancePointToPoint(i, n) : null
}, ORYX.Core.Math.getDistancePointToPoint = function(e, t) {
  return Math.sqrt(Math.pow(e.x - t.x, 2) + Math.pow(e.y - t.y, 2))
}, ORYX.Core.Math.getDistanceBetweenTwoPoints = function(e, t, i) {
  return ORYX.Core.Math.getDistancePointToPoint(i, e) / ORYX.Core.Math.getDistancePointToPoint(e, t)
}, ORYX.Core.Math.pointIsLeftOfLine = function(e, t, i) {
  var o = ORYX.Core.Math.getVector(e, t),
    n = ORYX.Core.Math.getVector(e, i);
  return o.x * n.y - n.x * o.y > 0
}, ORYX.Core.Math.getPointBetweenTwoPoints = function(e, t, i) {
  return i = Math.max(Math.min(i || 0, 1), 0), 0 === i ? e : 1 === i ? t : {
    x: e.x + (t.x - e.x) * i,
    y: e.y + (t.y - e.y) * i
  }
}, ORYX.Core.Math.getVector = function(e, t) {
  return {
    x: t.x - e.x,
    y: t.y - e.y
  }
}, ORYX.Core.Math.getIdentityVector = function(e) {
  2 == arguments.length && (e = ORYX.Core.Math.getVector(arguments[0], arguments[1]));
  var t = Math.sqrt(e.x * e.x + e.y * e.y);
  return {
    x: e.x / (t || 1),
    y: e.y / (t || 1)
  }
}, ORYX.Core.Math.getOrthogonalIdentityVector = function(e, t) {
  var i = 1 == arguments.length ? e : ORYX.Core.Math.getIdentityVector(e, t);
  return {
    x: i.y,
    y: -i.x
  }
}, ORYX.Core.Math.getPointOfIntersectionPointLine = function(e, t, i, o) {
  var n = Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2);
  if (0 == n) return void 0;
  var r = ((i.x - e.x) * (t.x - e.x) + (i.y - e.y) * (t.y - e.y)) / n;
  return !o || r >= 0 && 1 >= r ? (pointOfIntersection = {}, pointOfIntersection.x = e.x + r * (t.x - e.x), pointOfIntersection.y = e.y + r * (t.y - e.y), pointOfIntersection) : void 0
}, ORYX.Core.Math.getTranslatedPoint = function(e, t) {
  var i = t.a * e.x + t.c * e.y + 1 * t.e,
    o = t.b * e.x + t.d * e.y + 1 * t.f;
  return {
    x: i,
    y: o
  }
}, ORYX.Core.Math.getInverseMatrix = function(e) {
  var t = ORYX.Core.Math.getDeterminant(e),
    i = e;
  return {
    a: t * (1 * i.d - 0 * i.f),
    b: t * (0 * i.f - 1 * i.b),
    c: t * (0 * i.e - 1 * i.c),
    d: t * (1 * i.a - 0 * i.e),
    e: t * (i.c * i.f - i.e * i.d),
    f: t * (i.e * i.b - i.a * i.f)
  }
}, ORYX.Core.Math.getDeterminant = function(e) {
  return 1 * e.a * e.d + 0 * e.c * e.f + 0 * e.e * e.b - 0 * e.e * e.d - 1 * e.c * e.b - 0 * e.a * e.f
}, ORYX.Core.Math.getTranslatedBoundingBox = function(e) {
  var t = e.getCTM(),
    i = e.getBBox(),
    o = ORYX.Core.Math.getTranslatedPoint({
      x: i.x,
      y: i.y
    }, t),
    n = ORYX.Core.Math.getTranslatedPoint({
      x: i.x,
      y: i.y + i.height
    }, t),
    r = ORYX.Core.Math.getTranslatedPoint({
      x: i.x + i.width,
      y: i.y
    }, t),
    s = ORYX.Core.Math.getTranslatedPoint({
      x: i.x + i.width,
      y: i.y + i.height
    }, t),
    a = {
      x: Math.min(o.x, n.x, r.x, s.x),
      y: Math.min(o.y, n.y, r.y, s.y)
    },
    l = {
      x: Math.max(o.x, n.x, r.x, s.x),
      y: Math.max(o.y, n.y, r.y, s.y)
    };
  return {
    x: a.x,
    y: a.y,
    width: l.x - a.x,
    height: l.y - a.y
  }
}, ORYX.Core.Math.getAngle = function(e, t) {
  if (e.x == t.x && e.y == t.y) return 0;
  var i = 180 * Math.asin(Math.sqrt(Math.pow(e.y - t.y, 2)) / Math.sqrt(Math.pow(t.x - e.x, 2) + Math.pow(e.y - t.y, 2))) / Math.PI;
  return t.x >= e.x && t.y <= e.y ? i : t.x < e.x && t.y <= e.y ? 180 - i : t.x < e.x && t.y > e.y ? 180 + i : 360 - i
}, new function() {
  function e(e, r, s, a, l, d) {
    var c = 0;
    return r > d ? c |= i : a > r && (c |= o), e > l ? c |= t : s > e && (c |= n), c
  }
  var t = 2,
    i = 8,
    o = 4,
    n = 1;
  ORYX.Core.Math.isRectOverLine = function() {
    return !!ORYX.Core.Math.clipLineOnRect.apply(ORYX.Core.Math, arguments)
  }, ORYX.Core.Math.clipLineOnRect = function(r, s, a, l, d, c, p, u) {
    var h, m, f, g = 0,
      v = !1,
      I = !1;
    h = e(r, s, d, c, p, u), m = e(a, l, d, c, p, u);
    do {
      if (0 == (h | m)) v = !0, I = !0;
      else if ((h & m) > 0) I = !0;
      else {
        var S = 0,
          O = 0;
        f = 0 != h ? h : m, (f & i) > 0 ? (S = r + (a - r) * (u - s) / (l - s), O = u) : (f & o) > 0 ? (S = r + (a - r) * (c - s) / (l - s), O = c) : (f & t) > 0 ? (O = s + (l - s) * (p - r) / (a - r), S = p) : (f & n) > 0 && (O = s + (l - s) * (d - r) / (a - r), S = d), f == h ? (r = S, s = O, h = e(r, s, d, c, p, u)) : (a = S, l = O, m = e(a, l, d, c, p, u))
      }
      g++
    } while (1 != I && 5e3 > g);
    return v ? {
      a: {
        x: r,
        y: s
      },
      b: {
        x: a,
        y: l
      }
    } : null
  }
}, !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.StencilSet || (ORYX.Core.StencilSet = {}), ORYX.Core.StencilSet.Stencil = {
  construct: function(e, t, i, o, n, r) {
    if (arguments.callee.$.construct.apply(this, arguments), !e) throw "Stencilset seems corrupt.";
    if (!t) throw "Stencil does not provide namespace.";
    if (!i) throw "Stencil does not provide SVG source.";
    if (!o) throw "Fatal internal error loading stencilset.";
    if (this._source = i, this._jsonStencil = e, this._stencilSet = o, this._namespace = t, this._propertyPackages = n, r && !this._jsonStencil.position && (this._jsonStencil.position = r), this._view, this._properties = new Hash, !this._jsonStencil.type || "edge" !== this._jsonStencil.type && "node" !== this._jsonStencil.type) throw "ORYX.Core.StencilSet.Stencil(construct): Type is not defined.";
    if (!this._jsonStencil.id || "" === this._jsonStencil.id) throw "ORYX.Core.StencilSet.Stencil(construct): Id is not defined.";
    if (!this._jsonStencil.title || "" === this._jsonStencil.title) throw "ORYX.Core.StencilSet.Stencil(construct): Title is not defined.";
    this._jsonStencil.description || (this._jsonStencil.description = ""), this._jsonStencil.groups || (this._jsonStencil.groups = []), this._jsonStencil.roles || (this._jsonStencil.roles = []), this._jsonStencil.roles.push(this._jsonStencil.id), this._jsonStencil.roles.each(function(e, i) {
      this._jsonStencil.roles[i] = t + e
    }.bind(this)), this._jsonStencil.roles = this._jsonStencil.roles.uniq(), this._jsonStencil.id = t + this._jsonStencil.id, this.postProcessProperties(), this._jsonStencil.serialize || (this._jsonStencil.serialize = {}), this._jsonStencil.deserialize || (this._jsonStencil.deserialize = {}), this._jsonStencil.layout || (this._jsonStencil.layout = []);
    var s = i + "view/" + e.view;
    if (this._jsonStencil.view.trim().match(/</)) {
      var a = new DOMParser,
        l = a.parseFromString(this._jsonStencil.view, "text/xml");
      if (!ORYX.Editor.checkClassType(l.documentElement, SVGSVGElement)) throw "ORYX.Core.StencilSet.Stencil(_loadSVGOnSuccess): The response is not a SVG document.";
      this._view = l.documentElement
    } else new Ajax.Request(s, {
      asynchronous: !1,
      method: "get",
      onSuccess: this._loadSVGOnSuccess.bind(this),
      onFailure: this._loadSVGOnFailure.bind(this)
    })
  },
  postProcessProperties: function() {
    if (this._jsonStencil.icon = ORYX.CONFIG.SERVER_HANDLER_ROOT + "/stencilsetitem/" + this._jsonStencil.objectId + "/image", this._jsonStencil.propertyPackages && this._jsonStencil.propertyPackages instanceof Array) {
      var e = this._jsonStencil.hiddenPropertyPackages;
      this._jsonStencil.propertyPackages.each(function(t) {
        var i = this._propertyPackages[t];
        i && i.each(function(t) {
          var i = new ORYX.Core.StencilSet.Property(t, this._namespace, this);
          this._properties[i.prefix() + "-" + i.id()] = i, e.indexOf(i.id()) > -1 && i.hide()
        }.bind(this))
      }.bind(this))
    }
    this._jsonStencil.properties && this._jsonStencil.properties instanceof Array && this._jsonStencil.properties.each(function(e) {
      var t = new ORYX.Core.StencilSet.Property(e, this._namespace, this);
      this._properties[t.prefix() + "-" + t.id()] = t
    }.bind(this))
  },
  equals: function(e) {
    return this.id() === e.id()
  },
  stencilSet: function() {
    return this._stencilSet
  },
  type: function() {
    return this._jsonStencil.type
  },
  namespace: function() {
    return this._namespace
  },
  id: function() {
    return this._jsonStencil.id
  },
  idWithoutNs: function() {
    return this.id().replace(this.namespace(), "")
  },
  title: function() {
    return ORYX.Core.StencilSet.getTranslation(this._jsonStencil, "title")
  },
  description: function() {
    return ORYX.Core.StencilSet.getTranslation(this._jsonStencil, "description")
  },
  groups: function() {
    return ORYX.Core.StencilSet.getTranslation(this._jsonStencil, "groups")
  },
  position: function() {
    return isNaN(this._jsonStencil.position) ? 0 : this._jsonStencil.position
  },
  view: function() {
    return this._view.cloneNode(!0) || this._view
  },
  icon: function() {
    return this._jsonStencil.icon
  },
  fixedAspectRatio: function() {
    return this._jsonStencil.fixedAspectRatio === !0
  },
  hasMultipleRepositoryEntries: function() {
    return this.getRepositoryEntries().length > 0
  },
  getRepositoryEntries: function() {
    return this._jsonStencil.repositoryEntries ? $A(this._jsonStencil.repositoryEntries) : $A([])
  },
  properties: function() {
    return this._properties.values()
  },
  property: function(e) {
    return this._properties[e]
  },
  roles: function() {
    return this._jsonStencil.roles
  },
  defaultAlign: function() {
    return this._jsonStencil.defaultAlign ? this._jsonStencil.defaultAlign : "east"
  },
  serialize: function() {
    return this._jsonStencil.serialize
  },
  deserialize: function() {
    return this._jsonStencil.deserialize
  },
  layout: function() {
    return this._jsonStencil.layout
  },
  addProperty: function(e, t) {
    if (e && t) {
      var i = new ORYX.Core.StencilSet.Property(e, t, this);
      this._properties[i.prefix() + "-" + i.id()] = i
    }
  },
  removeProperty: function(e) {
    if (e) {
      var t = this._properties.values().find(function(t) {
        return e == t.id()
      });
      t && delete this._properties[t.prefix() + "-" + t.id()]
    }
  },
  _loadSVGOnSuccess: function(e) {
    var t = null;
    if (t = e.responseXML, !ORYX.Editor.checkClassType(t.documentElement, SVGSVGElement)) throw "ORYX.Core.StencilSet.Stencil(_loadSVGOnSuccess): The response is not a SVG document.";
    this._view = t.documentElement
  },
  _loadSVGOnFailure: function() {
    throw "ORYX.Core.StencilSet.Stencil(_loadSVGOnFailure): Loading SVG document failed."
  },
  toString: function() {
    return "Stencil " + this.title() + " (" + this.id() + ")"
  }
}, ORYX.Core.StencilSet.Stencil = Clazz.extend(ORYX.Core.StencilSet.Stencil), !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.StencilSet || (ORYX.Core.StencilSet = {}), ORYX.Core.StencilSet.Property = Clazz.extend({
  construct: function(e, t, i) {
    arguments.callee.$.construct.apply(this, arguments), this._jsonProp = e || ORYX.Log.error("Parameter jsonProp is not defined."), this._namespace = t || ORYX.Log.error("Parameter namespace is not defined."), this._stencil = i || ORYX.Log.error("Parameter stencil is not defined."), this._items = {}, this._complexItems = {}, this._hidden = !1, e.id = e.id || ORYX.Log.error("ORYX.Core.StencilSet.Property(construct): Id is not defined."), e.id = e.id.toLowerCase(), e.type ? e.type = e.type.toLowerCase() : (ORYX.Log.info("Type is not defined for stencil '%0', id '%1'. Falling back to 'String'.", i, e.id), e.type = "string"), e.prefix = e.prefix || "oryx", e.title = e.title || "", e.value = e.value || "", e.description = e.description || "", e.readonly = e.readonly || !1, e.optional = e.optional !== !1, this._jsonProp.refToView ? this._jsonProp.refToView instanceof Array || (this._jsonProp.refToView = [this._jsonProp.refToView]) : this._jsonProp.refToView = [];
    var o = this.getMinForType(e.type);
    void 0 === e.min || null === e.min ? e.min = o : o > e.min && (e.min = o);
    var n = this.getMaxForType(e.type);
    if (void 0 === e.max || null === e.max ? e.max = n : e.max > n && (e.min = n), e.fillOpacity || (e.fillOpacity = !1), e.lightness = "number" != typeof e.lightness ? 1 : Math.max(0, Math.min(1, e.lightness)), e.strokeOpacity || (e.strokeOpacity = !1), (void 0 === e.length || null === e.length) && (e.length = Number.MAX_VALUE), e.wrapLines || (e.wrapLines = !1), e.dateFormat || (e.dateFormat = ORYX.I18N.PropertyWindow.dateFormat || "m/d/y"), e.fill || (e.fill = !1), e.stroke || (e.stroke = !1), e.inverseBoolean || (e.inverseBoolean = !1), e.directlyEditable || 0 == e.directlyEditable || (e.directlyEditable = !0), e.visible !== !1 && (e.visible = !0), e.isList !== !0 && (e.isList = !1, e.list && e.list instanceof Array || (e.list = [])), e.category || (e.category = e.popular ? "popular" : "others"), e.alwaysAppearInMultiselect || (e.alwaysAppearInMultiselect = !1), e.type === ORYX.CONFIG.TYPE_CHOICE) {
      if (!(e.items && e.items instanceof Array)) throw "ORYX.Core.StencilSet.Property(construct): No property items defined.";
      e.items.each(function(e) {
        this._items[e.value.toLowerCase()] = new ORYX.Core.StencilSet.PropertyItem(e, t, this)
      }.bind(this))
    } else(e.type === ORYX.CONFIG.TYPE_COMPLEX || e.type == ORYX.CONFIG.TYPE_MULTIPLECOMPLEX) && e.complexItems && e.complexItems instanceof Array && e.complexItems.each(function(e) {
      this._complexItems[e.id.toLowerCase()] = new ORYX.Core.StencilSet.ComplexPropertyItem(e, t, this)
    }.bind(this))
  },
  getMinForType: function(e) {
    return e.toLowerCase() == ORYX.CONFIG.TYPE_INTEGER ? -Math.pow(2, 31) : -Number.MAX_VALUE + 1
  },
  getMaxForType: function(e) {
    return e.toLowerCase() == ORYX.CONFIG.TYPE_INTEGER ? Math.pow(2, 31) - 1 : Number.MAX_VALUE
  },
  equals: function(e) {
    return this._namespace === e.namespace() && this.id() === e.id() ? !0 : !1
  },
  namespace: function() {
    return this._namespace
  },
  stencil: function() {
    return this._stencil
  },
  id: function() {
    return this._jsonProp.id
  },
  prefix: function() {
    return this._jsonProp.prefix
  },
  type: function() {
    return this._jsonProp.type
  },
  inverseBoolean: function() {
    return this._jsonProp.inverseBoolean
  },
  category: function() {
    return this._jsonProp.category
  },
  setCategory: function(e) {
    this._jsonProp.category = e
  },
  directlyEditable: function() {
    return this._jsonProp.directlyEditable
  },
  visible: function() {
    return this._jsonProp.visible
  },
  title: function() {
    return ORYX.Core.StencilSet.getTranslation(this._jsonProp, "title")
  },
  value: function() {
    return this._jsonProp.value
  },
  readonly: function() {
    return this._jsonProp.readonly
  },
  optional: function() {
    return this._jsonProp.optional
  },
  description: function() {
    return ORYX.Core.StencilSet.getTranslation(this._jsonProp, "description")
  },
  refToView: function() {
    return this._jsonProp.refToView
  },
  min: function() {
    return this._jsonProp.min
  },
  max: function() {
    return this._jsonProp.max
  },
  fillOpacity: function() {
    return this._jsonProp.fillOpacity
  },
  strokeOpacity: function() {
    return this._jsonProp.strokeOpacity
  },
  length: function() {
    return this._jsonProp.length ? this._jsonProp.length : Number.MAX_VALUE
  },
  wrapLines: function() {
    return this._jsonProp.wrapLines
  },
  dateFormat: function() {
    return this._jsonProp.dateFormat
  },
  fill: function() {
    return this._jsonProp.fill
  },
  lightness: function() {
    return this._jsonProp.lightness
  },
  stroke: function() {
    return this._jsonProp.stroke
  },
  items: function() {
    return $H(this._items).values()
  },
  item: function(e) {
    return e ? this._items[e.toLowerCase()] : null
  },
  toString: function() {
    return "Property " + this.title() + " (" + this.id() + ")"
  },
  complexItems: function() {
    return $H(this._complexItems).values()
  },
  complexItem: function(e) {
    return e ? this._complexItems[e.toLowerCase()] : null
  },
  complexAttributeToView: function() {
    return this._jsonProp.complexAttributeToView || ""
  },
  isList: function() {
    return !!this._jsonProp.isList
  },
  getListItems: function() {
    return this._jsonProp.list
  },
  linkableType: function() {
    return this._jsonProp.linkableType || ""
  },
  alwaysAppearInMultiselect: function() {
    return this._jsonProp.alwaysAppearInMultiselect
  },
  popular: function() {
    return this._jsonProp.popular || !1
  },
  setPopular: function() {
    this._jsonProp.popular = !0
  },
  hide: function() {
    this._hidden = !0
  },
  isHidden: function() {
    return this._hidden
  }
}), !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.StencilSet || (ORYX.Core.StencilSet = {}), ORYX.Core.StencilSet.PropertyItem = Clazz.extend({
  construct: function(e, t, i) {
    if (arguments.callee.$.construct.apply(this, arguments), !e) throw "ORYX.Core.StencilSet.PropertyItem(construct): Parameter jsonItem is not defined.";
    if (!t) throw "ORYX.Core.StencilSet.PropertyItem(construct): Parameter namespace is not defined.";
    if (!i) throw "ORYX.Core.StencilSet.PropertyItem(construct): Parameter property is not defined.";
    if (this._jsonItem = e, this._namespace = t, this._property = i, !e.value) throw "ORYX.Core.StencilSet.PropertyItem(construct): Value is not defined.";
    this._jsonItem.refToView ? this._jsonItem.refToView instanceof Array || (this._jsonItem.refToView = [this._jsonItem.refToView]) : this._jsonItem.refToView = []
  },
  equals: function(e) {
    return this.property().equals(e.property()) && this.value() === e.value()
  },
  namespace: function() {
    return this._namespace
  },
  property: function() {
    return this._property
  },
  value: function() {
    return this._jsonItem.value
  },
  title: function() {
    return ORYX.Core.StencilSet.getTranslation(this._jsonItem, "title")
  },
  refToView: function() {
    return this._jsonItem.refToView
  },
  icon: function() {
    return this._jsonItem.icon ? this.property().stencil()._source + "icons/" + this._jsonItem.icon : ""
  },
  toString: function() {
    return "PropertyItem " + this.property() + " (" + this.value() + ")"
  }
}), !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.StencilSet || (ORYX.Core.StencilSet = {}), ORYX.Core.StencilSet.ComplexPropertyItem = Clazz.extend({
  construct: function(e, t, i) {
    if (arguments.callee.$.construct.apply(this, arguments), !e) throw "ORYX.Core.StencilSet.ComplexPropertyItem(construct): Parameter jsonItem is not defined.";
    if (!t) throw "ORYX.Core.StencilSet.ComplexPropertyItem(construct): Parameter namespace is not defined.";
    if (!i) throw "ORYX.Core.StencilSet.ComplexPropertyItem(construct): Parameter property is not defined.";
    if (this._jsonItem = e, this._namespace = t, this._property = i, this._items = new Hash, this._complexItems = new Hash, !e.name) throw "ORYX.Core.StencilSet.ComplexPropertyItem(construct): Name is not defined.";
    if (!e.type) throw "ORYX.Core.StencilSet.ComplexPropertyItem(construct): Type is not defined.";
    if (e.type = e.type.toLowerCase(), e.type === ORYX.CONFIG.TYPE_CHOICE) {
      if (!(e.items && e.items instanceof Array)) throw "ORYX.Core.StencilSet.Property(construct): No property items defined.";
      e.items.each(function(e) {
        this._items[e.value] = new ORYX.Core.StencilSet.PropertyItem(e, t, this)
      }.bind(this))
    } else if (e.type === ORYX.CONFIG.TYPE_COMPLEX) {
      if (!(e.complexItems && e.complexItems instanceof Array)) throw "ORYX.Core.StencilSet.Property(construct): No property items defined.";
      e.complexItems.each(function(e) {
        this._complexItems[e.id] = new ORYX.Core.StencilSet.ComplexPropertyItem(e, t, this)
      }.bind(this))
    }
  },
  equals: function(e) {
    return this.property().equals(e.property()) && this.name() === e.name()
  },
  namespace: function() {
    return this._namespace
  },
  property: function() {
    return this._property
  },
  name: function() {
    return ORYX.Core.StencilSet.getTranslation(this._jsonItem, "name")
  },
  id: function() {
    return this._jsonItem.id
  },
  type: function() {
    return this._jsonItem.type
  },
  optional: function() {
    return this._jsonItem.optional
  },
  width: function() {
    return this._jsonItem.width
  },
  value: function() {
    return this._jsonItem.value
  },
  items: function() {
    return this._items.values()
  },
  complexItems: function() {
    return this._complexItems.values()
  },
  disable: function() {
    return this._jsonItem.disable
  }
}), !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.StencilSet || (ORYX.Core.StencilSet = {}), ORYX.Core.StencilSet.Rules = {
  construct: function() {
    arguments.callee.$.construct.apply(this, arguments), this._stencilSets = [], this._stencils = [], this._containerStencils = [], this._cachedConnectSET = new Hash, this._cachedConnectSE = new Hash, this._cachedConnectTE = new Hash, this._cachedCardSE = new Hash, this._cachedCardTE = new Hash, this._cachedContainPC = new Hash, this._cachedMorphRS = new Hash, this._connectionRules = new Hash, this._cardinalityRules = new Hash, this._containmentRules = new Hash, this._morphingRules = new Hash, this._layoutRules = new Hash
  },
  initializeRules: function(e) {
    var t = this._stencilSets.find(function(t) {
      return t.namespace() == e.namespace()
    });
    if (t) {
      var o = this._stencilSets.clone();
      return o = o.without(t), o.push(e), this._stencilSets = [], this._stencils = [], this._containerStencils = [], this._cachedConnectSET = new Hash, this._cachedConnectSE = new Hash, this._cachedConnectTE = new Hash, this._cachedCardSE = new Hash, this._cachedCardTE = new Hash, this._cachedContainPC = new Hash, this._cachedMorphRS = new Hash, this._connectionRules = new Hash, this._cardinalityRules = new Hash, this._containmentRules = new Hash, this._morphingRules = new Hash, this._layoutRules = new Hash, o.each(function(e) {
        this.initializeRules(e)
      }.bind(this)), void 0
    }
    this._stencilSets.push(e);
    var n = new Hash(e.jsonRules()),
      r = e.namespace(),
      s = e.stencils();
    e.extensions().values().each(function(e) {
      e.rules && (e.rules.connectionRules && (n.connectionRules = n.connectionRules.concat(e.rules.connectionRules)), e.rules.cardinalityRules && (n.cardinalityRules = n.cardinalityRules.concat(e.rules.cardinalityRules)), e.rules.containmentRules && (n.containmentRules = n.containmentRules.concat(e.rules.containmentRules)), e.rules.morphingRules && (n.morphingRules = n.morphingRules.concat(e.rules.morphingRules))), e.stencils && (s = s.concat(e.stencils))
    }), this._stencils = this._stencils.concat(e.stencils());
    var a = this._connectionRules;
    n.connectionRules && n.connectionRules.each(function(e) {
      this._isRoleOfOtherNamespace(e.role) ? a[e.role] || (a[e.role] = new Hash) : a[r + e.role] || (a[r + e.role] = new Hash), e.connects.each(function(t) {
        var i = [];
        t.to && (t.to instanceof Array || (t.to = [t.to]), t.to.each(function(e) {
          this._isRoleOfOtherNamespace(e) ? i.push(e) : i.push(r + e)
        }.bind(this)));
        var o, n;
        o = this._isRoleOfOtherNamespace(e.role) ? e.role : r + e.role, n = this._isRoleOfOtherNamespace(t.from) ? t.from : r + t.from, a[o][n] = a[o][n] ? a[o][n].concat(i) : i
      }.bind(this))
    }.bind(this));
    var l = this._cardinalityRules;
    n.cardinalityRules && n.cardinalityRules.each(function(e) {
      var t;
      if (t = this._isRoleOfOtherNamespace(e.role) ? e.role : r + e.role, !l[t]) {
        l[t] = {};
        for (i in e) l[t][i] = e[i]
      }
      var o = new Hash;
      e.outgoingEdges && e.outgoingEdges.each(function(e) {
        this._isRoleOfOtherNamespace(e.role) ? o[e.role] = e : o[r + e.role] = e
      }.bind(this)), l[t].outgoingEdges = o;
      var n = new Hash;
      e.incomingEdges && e.incomingEdges.each(function(e) {
        this._isRoleOfOtherNamespace(e.role) ? n[e.role] = e : n[r + e.role] = e
      }.bind(this)), l[t].incomingEdges = n
    }.bind(this));
    var d = this._containmentRules;
    n.containmentRules && n.containmentRules.each(function(e) {
      var t;
      this._isRoleOfOtherNamespace(e.role) ? t = e.role : (this._containerStencils.push(r + e.role), t = r + e.role), d[t] || (d[t] = []), (e.contains || []).each(function(e) {
        this._isRoleOfOtherNamespace(e) ? d[t].push(e) : d[t].push(r + e)
      }.bind(this))
    }.bind(this));
    var c = this._morphingRules;
    n.morphingRules && n.morphingRules.each(function(e) {
      var t;
      t = this._isRoleOfOtherNamespace(e.role) ? e.role : r + e.role, c[t] || (c[t] = []), e.preserveBounds || (e.preserveBounds = !1), e.baseMorphs.each(function(e) {
        var i = this._getStencilById(r + e);
        i && c[t].push(i)
      }.bind(this))
    }.bind(this));
    var p = this._layoutRules;
    if (n.layoutRules) {
      var u = function(e) {
        return {
          edgeRole: e.edgeRole || void 0,
          t: e.t || 1,
          r: e.r || 1,
          b: e.b || 1,
          l: e.l || 1
        }
      };
      n.layoutRules.each(function(e) {
        var t;
        t = this._isRoleOfOtherNamespace(e.role) ? e.role : r + e.role, p[t] || (p[t] = {}), e["in"] && (p[t]["in"] = u(e["in"])), e.ins && (p[t].ins = (e.ins || []).map(function(e) {
          return u(e)
        })), e.out && (p[t].out = u(e.out)), e.outs && (p[t].outs = (e.outs || []).map(function(e) {
          return u(e)
        }))
      }.bind(this))
    }
  },
  _getStencilById: function(e) {
    return this._stencils.find(function(t) {
      return t.id() == e
    })
  },
  _cacheConnect: function(e) {
    if (result = this._canConnect(e), e.sourceStencil && e.targetStencil) {
      var t = this._cachedConnectSET[e.sourceStencil.id()];
      t || (t = new Hash, this._cachedConnectSET[e.sourceStencil.id()] = t);
      var i = t[e.edgeStencil.id()];
      i || (i = new Hash, t[e.edgeStencil.id()] = i), i[e.targetStencil.id()] = result
    } else if (e.sourceStencil) {
      var t = this._cachedConnectSE[e.sourceStencil.id()];
      t || (t = new Hash, this._cachedConnectSE[e.sourceStencil.id()] = t), t[e.edgeStencil.id()] = result
    } else {
      var o = this._cachedConnectTE[e.targetStencil.id()];
      o || (o = new Hash, this._cachedConnectTE[e.targetStencil.id()] = o), o[e.edgeStencil.id()] = result
    }
    return result
  },
  _cacheCard: function(e) {
    if (e.sourceStencil) {
      var t = this._cachedCardSE[e.sourceStencil.id()];
      t || (t = new Hash, this._cachedCardSE[e.sourceStencil.id()] = t);
      var i = this._getMaximumNumberOfOutgoingEdge(e);
      void 0 == i && (i = -1), t[e.edgeStencil.id()] = i
    }
    if (e.targetStencil) {
      var o = this._cachedCardTE[e.targetStencil.id()];
      o || (o = new Hash, this._cachedCardTE[e.targetStencil.id()] = o);
      var i = this._getMaximumNumberOfIncomingEdge(e);
      void 0 == i && (i = -1), o[e.edgeStencil.id()] = i
    }
  },
  _cacheContain: function(e) {
    var t = [this._canContain(e), this._getMaximumOccurrence(e.containingStencil, e.containedStencil)];
    void 0 == t[1] && (t[1] = -1);
    var i = this._cachedContainPC[e.containingStencil.id()];
    return i || (i = new Hash, this._cachedContainPC[e.containingStencil.id()] = i), i[e.containedStencil.id()] = t, t
  },
  _cacheMorph: function(e) {
    var t = this._cachedMorphRS[e];
    return t || (t = [], this._morphingRules.keys().include(e) && (t = this._stencils.select(function(t) {
      return t.roles().include(e)
    })), this._cachedMorphRS[e] = t), t
  },
  outgoingEdgeStencils: function(e) {
    if (!e.sourceShape && !e.sourceStencil) return [];
    e.sourceShape && (e.sourceStencil = e.sourceShape.getStencil());
    var t = [];
    return this._stencils.each(function(i) {
      if ("edge" === i.type()) {
        var o = Object.clone(e);
        o.edgeStencil = i, this.canConnect(o) && t.push(i)
      }
    }.bind(this)), t
  },
  incomingEdgeStencils: function(e) {
    if (!e.targetShape && !e.targetStencil) return [];
    e.targetShape && (e.targetStencil = e.targetShape.getStencil());
    var t = [];
    return this._stencils.each(function(i) {
      if ("edge" === i.type()) {
        var o = Object.clone(e);
        o.edgeStencil = i, this.canConnect(o) && t.push(i)
      }
    }.bind(this)), t
  },
  sourceStencils: function(e) {
    if (!e || !e.edgeShape && !e.edgeStencil) return [];
    e.targetShape && (e.targetStencil = e.targetShape.getStencil()), e.edgeShape && (e.edgeStencil = e.edgeShape.getStencil());
    var t = [];
    return this._stencils.each(function(i) {
      var o = Object.clone(e);
      o.sourceStencil = i, this.canConnect(o) && t.push(i)
    }.bind(this)), t
  },
  targetStencils: function(e) {
    if (!e || !e.edgeShape && !e.edgeStencil) return [];
    e.sourceShape && (e.sourceStencil = e.sourceShape.getStencil()), e.edgeShape && (e.edgeStencil = e.edgeShape.getStencil());
    var t = [];
    return this._stencils.each(function(i) {
      var o = Object.clone(e);
      o.targetStencil = i, this.canConnect(o) && t.push(i)
    }.bind(this)), t
  },
  canConnect: function(e) {
    if (!e || !e.sourceShape && !e.sourceStencil && !e.targetShape && !e.targetStencil || !e.edgeShape && !e.edgeStencil) return !1;
    e.sourceShape && (e.sourceStencil = e.sourceShape.getStencil()), e.targetShape && (e.targetStencil = e.targetShape.getStencil()), e.edgeShape && (e.edgeStencil = e.edgeShape.getStencil());
    var t;
    if (e.sourceStencil && e.targetStencil) {
      var i = this._cachedConnectSET[e.sourceStencil.id()];
      if (i) {
        var o = i[e.edgeStencil.id()];
        if (o) {
          var n = o[e.targetStencil.id()];
          t = void 0 == n ? this._cacheConnect(e) : n
        } else t = this._cacheConnect(e)
      } else t = this._cacheConnect(e)
    } else if (e.sourceStencil) {
      var i = this._cachedConnectSE[e.sourceStencil.id()];
      if (i) {
        var o = i[e.edgeStencil.id()];
        t = void 0 == o ? this._cacheConnect(e) : o
      } else t = this._cacheConnect(e)
    } else {
      var n = this._cachedConnectTE[e.targetStencil.id()];
      if (n) {
        var o = n[e.edgeStencil.id()];
        t = void 0 == o ? this._cacheConnect(e) : o
      } else t = this._cacheConnect(e)
    }
    if (t) {
      if (e.sourceShape) {
        var i = this._cachedCardSE[e.sourceStencil.id()];
        i || (this._cacheCard(e), i = this._cachedCardSE[e.sourceStencil.id()]);
        var r = i[e.edgeStencil.id()];
        void 0 == r && this._cacheCard(e), r = i[e.edgeStencil.id()], -1 != r && (t = e.sourceShape.getOutgoingShapes().all(function(t) {
          return t.getStencil().id() !== e.edgeStencil.id() || (e.edgeShape ? t === e.edgeShape : 0) ? !0 : (r--, r > 0 ? !0 : !1)
        }))
      }
      if (e.targetShape) {
        var n = this._cachedCardTE[e.targetStencil.id()];
        n || (this._cacheCard(e), n = this._cachedCardTE[e.targetStencil.id()]);
        var r = n[e.edgeStencil.id()];
        void 0 == r && this._cacheCard(e), r = n[e.edgeStencil.id()], -1 != r && (t = e.targetShape.getIncomingShapes().all(function(t) {
          return t.getStencil().id() !== e.edgeStencil.id() || (e.edgeShape ? t === e.edgeShape : 0) ? !0 : (r--, r > 0 ? !0 : !1)
        }))
      }
    }
    return t
  },
  _canConnect: function(e) {
    if (!e || !e.sourceShape && !e.sourceStencil && !e.targetShape && !e.targetStencil || !e.edgeShape && !e.edgeStencil) return !1;
    e.sourceShape && (e.sourceStencil = e.sourceShape.getStencil()), e.targetShape && (e.targetStencil = e.targetShape.getStencil()), e.edgeShape && (e.edgeStencil = e.edgeShape.getStencil());
    var t, i = this._getConnectionRulesOfEdgeStencil(e.edgeStencil);
    return t = 0 === i.keys().length ? !1 : e.sourceStencil ? e.sourceStencil.roles().any(function(t) {
      var o = i[t];
      return o ? e.targetStencil ? o.any(function(t) {
        return e.targetStencil.roles().member(t)
      }) : !0 : !1
    }) : i.values().any(function(t) {
      return e.targetStencil.roles().any(function(e) {
        return t.member(e)
      })
    })
  },
  isContainer: function(e) {
    return this._containerStencils.member(e.getStencil().id())
  },
  canContain: function(e) {
    if (!e || !e.containingStencil && !e.containingShape || !e.containedStencil && !e.containedShape) return !1;
    if (e.containedShape && (e.containedStencil = e.containedShape.getStencil()), e.containingShape && (e.containingStencil = e.containingShape.getStencil()), "edge" == e.containedStencil.type()) return !1;
    var t, i = this._cachedContainPC[e.containingStencil.id()];
    if (i ? (t = i[e.containedStencil.id()], t || (t = this._cacheContain(e))) : t = this._cacheContain(e), t[0]) {
      if (-1 == t[1]) return !0;
      if (e.containingShape) {
        var o = t[1];
        return e.containingShape.getChildShapes(!1).all(function(t) {
          return t.getStencil().id() === e.containedStencil.id() ? (o--, o > 0 ? !0 : !1) : !0
        })
      }
      return !0
    }
    return !1
  },
  _canContain: function(e) {
    if (!e || !e.containingStencil && !e.containingShape || !e.containedStencil && !e.containedShape) return !1;
    e.containedShape && (e.containedStencil = e.containedShape.getStencil()), e.containingShape && (e.containingStencil = e.containingShape.getStencil());
    var t;
    return t = e.containingStencil.roles().any(function(t) {
      var i = this._containmentRules[t];
      return i ? i.any(function(t) {
        return e.containedStencil.roles().member(t)
      }) : !1
    }.bind(this))
  },
  morphStencils: function(e) {
    if (!e.stencil && !e.shape) return [];
    e.shape && (e.stencil = e.shape.getStencil());
    var t = [];
    e.stencil.roles().each(function(e) {
      this._cacheMorph(e).each(function(e) {
        t.push(e)
      })
    }.bind(this));
    var i = this.baseMorphs();
    return t = t.uniq().sort(function(e, t) {
      return i.include(e) && !i.include(t) ? -1 : i.include(t) && !i.include(e) ? 1 : 0
    })
  },
  baseMorphs: function() {
    var e = [];
    return this._morphingRules.each(function(t) {
      t.value.each(function(t) {
        e.push(t)
      })
    }), e
  },
  containsMorphingRules: function() {
    return this._stencilSets.any(function(e) {
      return !!e.jsonRules().morphingRules
    })
  },
  connectMorph: function(e) {
    if (!e || !e.sourceShape && !e.sourceStencil && !e.targetShape && !e.targetStencil) return !1;
    e.sourceShape && (e.sourceStencil = e.sourceShape.getStencil()), e.targetShape && (e.targetStencil = e.targetShape.getStencil());
    var t = this.incomingEdgeStencils(e),
      i = this.outgoingEdgeStencils(e),
      o = t.select(function(e) {
        return i.member(e)
      }),
      n = this.baseMorphs().select(function(e) {
        return o.member(e)
      });
    return n.size() > 0 ? n[0] : o.size() > 0 ? o[0] : null
  },
  showInShapeMenu: function(e) {
    return this._stencilSets.any(function(t) {
      return t.jsonRules().morphingRules.any(function(i) {
        return e.roles().include(t.namespace() + i.role) && i.showInShapeMenu !== !1
      })
    })
  },
  preserveBounds: function(e) {
    return this._stencilSets.any(function(t) {
      return t.jsonRules().morphingRules.any(function(i) {
        return e.roles().include(t.namespace() + i.role) && i.preserveBounds
      })
    })
  },
  getLayoutingRules: function(e, t) {
    if (e && e instanceof ORYX.Core.Shape) {
      var i = {
          "in": {},
          out: {}
        },
        o = function(e, o) {
          e && e[o] && ["t", "r", "b", "l"].each(function(t) {
            i[o][t] = Math.max(e[o][t], i[o][t] || 0)
          }), e && e[o + "s"] instanceof Array && ["t", "r", "b", "l"].each(function(n) {
            var r, s = e[o + "s"].find(function(e) {
              return !e.edgeRole
            });
            t instanceof ORYX.Core.Edge && (r = e[o + "s"].find(function(e) {
              return this._hasRole(t, e.edgeRole)
            }.bind(this))), i[o][n] = Math.max(r ? r[n] : s[n], i[o][n] || 0)
          }.bind(this))
        }.bind(this);
      return e.getStencil().roles().each(function(e) {
        this._layoutRules[e] && (o(this._layoutRules[e], "in"), o(this._layoutRules[e], "out"))
      }.bind(this)), ["in", "out"].each(function(e) {
        ["t", "r", "b", "l"].each(function(t) {
          i[e][t] = void 0 !== i[e][t] ? i[e][t] : 1
        })
      }), i
    }
  },
  _hasRole: function(e, t) {
    if (e instanceof ORYX.Core.Shape && t) {
      var i = e.getStencil().roles().any(function(e) {
        return e == t
      });
      return i || e.getStencil().id() == e.getStencil().namespace() + t
    }
  },
  _stencilsWithRole: function(e) {
    return this._stencils.findAll(function(t) {
      return t.roles().member(e) ? !0 : !1
    })
  },
  _edgesWithRole: function(e) {
    return this._stencils.findAll(function(t) {
      return t.roles().member(e) && "edge" === t.type() ? !0 : !1
    })
  },
  _nodesWithRole: function(e) {
    return this._stencils.findAll(function(t) {
      return t.roles().member(e) && "node" === t.type() ? !0 : !1
    })
  },
  _getMaximumOccurrence: function(e, t) {
    var i;
    return t.roles().each(function(e) {
      var t = this._cardinalityRules[e];
      t && t.maximumOccurrence && (i = i ? Math.min(i, t.maximumOccurrence) : t.maximumOccurrence)
    }.bind(this)), i
  },
  _getMaximumNumberOfOutgoingEdge: function(e) {
    if (!e || !e.sourceStencil || !e.edgeStencil) return !1;
    var t;
    return e.sourceStencil.roles().each(function(i) {
      var o = this._cardinalityRules[i];
      o && o.outgoingEdges && e.edgeStencil.roles().each(function(e) {
        var i = o.outgoingEdges[e];
        i && i.maximum && (t = t ? Math.min(t, i.maximum) : i.maximum)
      })
    }.bind(this)), t
  },
  _getMaximumNumberOfIncomingEdge: function(e) {
    if (!e || !e.targetStencil || !e.edgeStencil) return !1;
    var t;
    return e.targetStencil.roles().each(function(i) {
      var o = this._cardinalityRules[i];
      o && o.incomingEdges && e.edgeStencil.roles().each(function(e) {
        var i = o.incomingEdges[e];
        i && i.maximum && (t = t ? Math.min(t, i.maximum) : i.maximum)
      })
    }.bind(this)), t
  },
  _getConnectionRulesOfEdgeStencil: function(e) {
    var t = new Hash;
    return e.roles().each(function(e) {
      this._connectionRules[e] && this._connectionRules[e].each(function(e) {
        t[e.key] = t[e.key] ? t[e.key].concat(e.value) : e.value
      })
    }.bind(this)), t
  },
  _isRoleOfOtherNamespace: function(e) {
    return e.indexOf("#") > 0
  },
  toString: function() {
    return "Rules"
  }
}, ORYX.Core.StencilSet.Rules = Clazz.extend(ORYX.Core.StencilSet.Rules), !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.StencilSet || (ORYX.Core.StencilSet = {}), ORYX.Core.StencilSet.StencilSet = Clazz.extend({
  construct: function(e, t) {
    if (arguments.callee.$.construct.apply(this, arguments), !e) throw "ORYX.Core.StencilSet.StencilSet(construct): Parameter 'source' is not defined.";
    if (e.endsWith("/") && (e = e.substr(0, e.length - 1)), this._extensions = new Hash, this._source = e, this._baseUrl = e.substring(0, e.lastIndexOf("/") + 1), this._jsonObject = {}, this._stencils = new Hash, this._availableStencils = new Hash, ORYX.CONFIG.BACKEND_SWITCH) {
      var i; - 1 !== this._source.indexOf("xforms") ? (i = "xforms", this._baseUrl = "editor/stencilsets/xforms/", this._source = "stencilsets/xforms/xforms.json") : "form-flow" == t.model.modelType ? (i = "form-flow", this._baseUrl = "editor/stencilsets/bpmn2.0/", this._source = "stencilsets/bpmn2.0/bpmn2.0.json") : (i = "bpmn", this._baseUrl = "editor/stencilsets/bpmn2.0/", this._source = "stencilsets/bpmn2.0/bpmn2.0.json"), new Ajax.Request(ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + t.stencilSetId + "/editor?version=" + Date.now(), {
        asynchronous: !1,
        method: "get",
        onSuccess: this._init.bind(this),
        onFailure: this._cancelInit.bind(this)
      })
    } else new Ajax.Request(e, {
      asynchronous: !1,
      method: "get",
      onSuccess: this._init.bind(this),
      onFailure: this._cancelInit.bind(this)
    });
    if (this.errornous) throw "Loading stencil set " + e + " failed."
  },
  findRootStencilName: function() {
    var e = this._stencils.values().find(function(e) {
      return e._jsonStencil.mayBeRoot
    });
    return e || (ORYX.Log.warn("Did not find any stencil that may be root. Taking a guess."), e = this._stencils.values()[0]), e.id()
  },
  equals: function(e) {
    return this.namespace() === e.namespace()
  },
  stencils: function(e, t, i) {
    if (e && t) {
      for (var o = this._availableStencils.values(), n = [e], r = [], s = []; n.size() > 0;) {
        var a = n.pop();
        r.push(a);
        for (var l = o.findAll(function(e) {
          var i = {
            containingStencil: a,
            containedStencil: e
          };
          return t.canContain(i)
        }), d = 0; l.size() > d; d++) r.member(l[d]) || n.push(l[d]);
        s = s.concat(l).uniq()
      }
      s = s.sortBy(function(e) {
        return o.indexOf(e)
      }), i && (s = s.sortBy(function(e) {
        return e.groups().first()
      }));
      var c = o.findAll(function(e) {
        return "edge" == e.type()
      });
      return s = s.concat(c)
    }
    return i ? this._availableStencils.values().sortBy(function(e) {
      return e.groups().first()
    }) : this._availableStencils.values()
  },
  nodes: function() {
    return this._availableStencils.values().findAll(function(e) {
      return "node" === e.type()
    })
  },
  edges: function() {
    return this._availableStencils.values().findAll(function(e) {
      return "edge" === e.type()
    })
  },
  stencil: function(e) {
    return this._stencils[e]
  },
  title: function() {
    return ORYX.Core.StencilSet.getTranslation(this._jsonObject, "title")
  },
  description: function() {
    return ORYX.Core.StencilSet.getTranslation(this._jsonObject, "description")
  },
  namespace: function() {
    return this._jsonObject ? this._jsonObject.namespace : null
  },
  jsonRules: function() {
    return this._jsonObject ? this._jsonObject.rules : null
  },
  source: function() {
    return this._source
  },
  extensions: function() {
    return this._extensions
  },
  addExtension: function(e) {
    new Ajax.Request(e, {
      method: "GET",
      asynchronous: !1,
      onSuccess: function(e) {
        this.addExtensionDirectly(e.responseText)
      }.bind(this),
      onFailure: function(e) {
        ORYX.Log.debug("Loading stencil set extension file failed. The request returned an error." + e)
      }.bind(this),
      onException: function(e) {
        ORYX.Log.debug("Loading stencil set extension file failed. The request returned an error." + e)
      }.bind(this)
    })
  },
  addExtensionDirectly: function(str) {
    try {
      if (eval("var jsonExtension = " + str), jsonExtension["extends"].endsWith("#") || (jsonExtension["extends"] += "#"), jsonExtension["extends"] == this.namespace()) {
        this._extensions[jsonExtension.namespace] = jsonExtension;
        var defaultPosition = this._stencils.keys().size();
        if (jsonExtension.stencils && $A(jsonExtension.stencils).each(function(e) {
          defaultPosition++;
          var t = new ORYX.Core.StencilSet.Stencil(e, this.namespace(), this._baseUrl, this, void 0, defaultPosition);
          this._stencils[t.id()] = t, this._availableStencils[t.id()] = t
        }.bind(this)), jsonExtension.properties) {
          var stencils = this._stencils.values();
          stencils.each(function(e) {
            var t = e.roles();
            jsonExtension.properties.each(function(i) {
              i.roles.any(function(o) {
                return o = jsonExtension["extends"] + o, t.member(o) ? (i.properties.each(function(t) {
                  e.addProperty(t, jsonExtension.namespace)
                }), !0) : !1
              })
            })
          }.bind(this))
        }
        jsonExtension.removeproperties && jsonExtension.removeproperties.each(function(e) {
          var t = this.stencil(jsonExtension["extends"] + e.stencil);
          t && e.properties.each(function(e) {
            t.removeProperty(e)
          })
        }.bind(this)), jsonExtension.removestencils && $A(jsonExtension.removestencils).each(function(e) {
          delete this._availableStencils[jsonExtension["extends"] + e]
        }.bind(this))
      }
    } catch (e) {
      ORYX.Log.debug("StencilSet.addExtension: Something went wrong when initialising the stencil set extension. " + e)
    }
  },
  removeExtension: function(e) {
    var t = this._extensions[e];
    if (t) {
      if (t.stencils && $A(t.stencils).each(function(e) {
        var t = new ORYX.Core.StencilSet.Stencil(e, this.namespace(), this._baseUrl, this);
        delete this._stencils[t.id()], delete this._availableStencils[t.id()]
      }.bind(this)), t.properties) {
        var i = this._stencils.values();
        i.each(function(e) {
          var i = e.roles();
          t.properties.each(function(o) {
            o.roles.any(function(n) {
              return n = t["extends"] + n, i.member(n) ? (o.properties.each(function(t) {
                e.removeProperty(t.id)
              }), !0) : !1
            })
          })
        }.bind(this))
      }
      t.removeproperties && t.removeproperties.each(function(e) {
        var i = this.stencil(t["extends"] + e.stencil);
        if (i) {
          var o = $A(this._jsonObject.stencils).find(function(e) {
            return e.id == i.id()
          });
          e.properties.each(function(e) {
            var t = $A(o.properties).find(function(t) {
              return t.id == e
            });
            i.addProperty(t, this.namespace())
          }.bind(this))
        }
      }.bind(this)), t.removestencils && $A(t.removestencils).each(function(e) {
        var i = t["extends"] + e;
        this._availableStencils[i] = this._stencils[i]
      }.bind(this))
    }
    delete this._extensions[e]
  },
  __handleStencilset: function(response) {
    try {
      eval("this._jsonObject =" + response.responseText)
    } catch (e) {
      throw "Stenciset corrupt: " + e
    }
    if (!this._jsonObject) throw "Error evaluating stencilset. It may be corrupt.";
    with(this._jsonObject) {
      if (!namespace || "" === namespace) throw "Namespace definition missing in stencilset.";
      if (!(stencils instanceof Array)) throw "Stencilset corrupt.";
      namespace.endsWith("#") || (namespace += "#"), title || (title = ""), description || (description = "")
    }
  },
  _init: function(e) {
    this.__handleStencilset(e);
    var t = new Hash;
    this._jsonObject.propertyPackages && $A(this._jsonObject.propertyPackages).each(function(e) {
      t[e.name] = e.properties
    }.bind(this));
    var i = 0;
    $A(this._jsonObject.stencils).each(function(e) {
      i++;
      var o = new ORYX.Core.StencilSet.Stencil(e, this.namespace(), this._baseUrl, this, t, i);
      this._stencils[o.id()] = o, this._availableStencils[o.id()] = o
    }.bind(this))
  },
  _cancelInit: function() {
    this.errornous = !0
  },
  toString: function() {
    return "StencilSet " + this.title() + " (" + this.namespace() + ")"
  }
}), !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.StencilSet || (ORYX.Core.StencilSet = {}), ORYX.Core.StencilSet._stencilSetsByNamespace = new Hash, ORYX.Core.StencilSet._stencilSetsByUrl = new Hash, ORYX.Core.StencilSet._StencilSetNSByEditorInstance = new Hash, ORYX.Core.StencilSet._rulesByEditorInstance = new Hash, ORYX.Core.StencilSet.stencilSets = function(e) {
  var t = ORYX.Core.StencilSet._StencilSetNSByEditorInstance[e],
    i = new Hash;
  return t && t.each(function(e) {
    var t = ORYX.Core.StencilSet.stencilSet(e);
    i[t.namespace()] = t
  }), i
}, ORYX.Core.StencilSet.stencilSet = function(e) {
  ORYX.Log.trace("Getting stencil set %0", e);
  var t = e.split("#", 1);
  return 1 === t.length ? (ORYX.Log.trace("Getting stencil set %0", t[0]), ORYX.Core.StencilSet._stencilSetsByNamespace[t[0] + "#"]) : void 0
}, ORYX.Core.StencilSet.stencil = function(e) {
  ORYX.Log.trace("Getting stencil for %0", e);
  var t = ORYX.Core.StencilSet.stencilSet(e);
  return t ? t.stencil(e) : (ORYX.Log.trace("Cannot fild stencil for %0", e), void 0)
}, ORYX.Core.StencilSet.rules = function(e) {
  return ORYX.Core.StencilSet._rulesByEditorInstance[e] || (ORYX.Core.StencilSet._rulesByEditorInstance[e] = new ORYX.Core.StencilSet.Rules), ORYX.Core.StencilSet._rulesByEditorInstance[e]
}, ORYX.Core.StencilSet.loadStencilSet = function(e, t, i) {
  stencilSet = new ORYX.Core.StencilSet.StencilSet(e, t, i), ORYX.Core.StencilSet._stencilSetsByNamespace[stencilSet.namespace()] = stencilSet, ORYX.Core.StencilSet._stencilSetsByUrl[e] = stencilSet;
  var o = stencilSet.namespace();
  if (ORYX.Core.StencilSet._StencilSetNSByEditorInstance[i] ? ORYX.Core.StencilSet._StencilSetNSByEditorInstance[i].push(o) : ORYX.Core.StencilSet._StencilSetNSByEditorInstance[i] = [o], ORYX.Core.StencilSet._rulesByEditorInstance[i]) ORYX.Core.StencilSet._rulesByEditorInstance[i].initializeRules(stencilSet);
  else {
    var n = new ORYX.Core.StencilSet.Rules;
    n.initializeRules(stencilSet), ORYX.Core.StencilSet._rulesByEditorInstance[i] = n
  }
}, ORYX.Core.StencilSet.getTranslation = function(e, t) {
  var i = ORYX.I18N.Language.toLowerCase(),
    o = e[t + "_" + i];
  return o ? o : (o = e[t + "_" + i.substr(0, 2)], o ? o : e[t])
}, !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.Command = Clazz.extend({
  construct: function() {},
  execute: function() {
    throw "Command.execute() has to be implemented!"
  },
  rollback: function() {
    throw "Command.rollback() has to be implemented!"
  }
}), !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.Bounds = {
  construct: function() {
    this._changedCallbacks = [], this.a = {}, this.b = {}, this.set.apply(this, arguments), this.suspendChange = !1, this.changedWhileSuspend = !1
  },
  _changed: function(e) {
    this.suspendChange ? this.changedWhileSuspend = !0 : (this._changedCallbacks.each(function(t) {
      t(this, e)
    }.bind(this)), this.changedWhileSuspend = !1)
  },
  registerCallback: function(e) {
    this._changedCallbacks.member(e) || this._changedCallbacks.push(e)
  },
  unregisterCallback: function(e) {
    this._changedCallbacks = this._changedCallbacks.without(e)
  },
  set: function() {
    var e = !1;
    switch (arguments.length) {
      case 1:
        this.a.x !== arguments[0].a.x && (e = !0, this.a.x = arguments[0].a.x), this.a.y !== arguments[0].a.y && (e = !0, this.a.y = arguments[0].a.y), this.b.x !== arguments[0].b.x && (e = !0, this.b.x = arguments[0].b.x), this.b.y !== arguments[0].b.y && (e = !0, this.b.y = arguments[0].b.y);
        break;
      case 2:
        var t = Math.min(arguments[0].x, arguments[1].x),
          i = Math.min(arguments[0].y, arguments[1].y),
          o = Math.max(arguments[0].x, arguments[1].x),
          n = Math.max(arguments[0].y, arguments[1].y);
        this.a.x !== t && (e = !0, this.a.x = t), this.a.y !== i && (e = !0, this.a.y = i), this.b.x !== o && (e = !0, this.b.x = o), this.b.y !== n && (e = !0, this.b.y = n);
        break;
      case 4:
        var t = Math.min(arguments[0], arguments[2]),
          i = Math.min(arguments[1], arguments[3]),
          o = Math.max(arguments[0], arguments[2]),
          n = Math.max(arguments[1], arguments[3]);
        this.a.x !== t && (e = !0, this.a.x = t), this.a.y !== i && (e = !0, this.a.y = i), this.b.x !== o && (e = !0, this.b.x = o), this.b.y !== n && (e = !0, this.b.y = n)
    }
    e && this._changed(!0)
  },
  moveTo: function() {
    var e = this.upperLeft();
    switch (arguments.length) {
      case 1:
        this.moveBy({
          x: arguments[0].x - e.x,
          y: arguments[0].y - e.y
        });
        break;
      case 2:
        this.moveBy({
          x: arguments[0] - e.x,
          y: arguments[1] - e.y
        });
        break;
      default:
    }
  },
  moveBy: function() {
    var e = !1;
    switch (arguments.length) {
      case 1:
        var t = arguments[0];
        (0 !== t.x || 0 !== t.y) && (e = !0, this.a.x += t.x, this.b.x += t.x, this.a.y += t.y, this.b.y += t.y);
        break;
      case 2:
        var i = arguments[0],
          o = arguments[1];
        (0 !== i || 0 !== o) && (e = !0, this.a.x += i, this.b.x += i, this.a.y += o, this.b.y += o);
        break;
      default:
    }
    e && this._changed()
  },
  include: function(e) {
    if (void 0 === this.a.x && void 0 === this.a.y && void 0 === this.b.x && void 0 === this.b.y) return e;
    var t = Math.min(this.a.x, e.a.x),
      i = Math.min(this.a.y, e.a.y),
      o = Math.max(this.b.x, e.b.x),
      n = Math.max(this.b.y, e.b.y);
    this.set(t, i, o, n)
  },
  extend: function(e) {
    (0 !== e.x || 0 !== e.y) && (this.b.x += e.x, this.b.y += e.y, this._changed(!0))
  },
  widen: function(e) {
    0 !== e && (this.suspendChange = !0, this.moveBy({
      x: -e,
      y: -e
    }), this.extend({
      x: 2 * e,
      y: 2 * e
    }), this.suspendChange = !1, this.changedWhileSuspend && this._changed(!0))
  },
  upperLeft: function() {
    var e = {};
    return e.x = this.a.x, e.y = this.a.y, e
  },
  lowerRight: function() {
    var e = {};
    return e.x = this.b.x, e.y = this.b.y, e
  },
  width: function() {
    return this.b.x - this.a.x
  },
  height: function() {
    return this.b.y - this.a.y
  },
  center: function() {
    var e = {};
    return e.x = (this.a.x + this.b.x) / 2, e.y = (this.a.y + this.b.y) / 2, e
  },
  midPoint: function() {
    var e = {};
    return e.x = (this.b.x - this.a.x) / 2, e.y = (this.b.y - this.a.y) / 2, e
  },
  centerMoveTo: function() {
    var e = this.center();
    switch (arguments.length) {
      case 1:
        this.moveBy(arguments[0].x - e.x, arguments[0].y - e.y);
        break;
      case 2:
        this.moveBy(arguments[0] - e.x, arguments[1] - e.y)
    }
  },
  isIncluded: function(e, t) {
    var i, o, t;
    switch (arguments.length) {
      case 1:
        i = arguments[0].x, o = arguments[0].y, t = 0;
        break;
      case 2:
        arguments[0].x && arguments[0].y ? (i = arguments[0].x, o = arguments[0].y, t = Math.abs(arguments[1])) : (i = arguments[0], o = arguments[1], t = 0);
        break;
      case 3:
        i = arguments[0], o = arguments[1], t = Math.abs(arguments[2]);
        break;
      default:
        throw "isIncluded needs one, two or three arguments"
    }
    var n = this.upperLeft(),
      r = this.lowerRight();
    return i >= n.x - t && r.x + t >= i && o >= n.y - t && r.y + t >= o ? !0 : !1
  },
  clone: function() {
    return new ORYX.Core.Bounds(this)
  },
  toString: function() {
    return "( " + this.a.x + " | " + this.a.y + " )/( " + this.b.x + " | " + this.b.y + " )"
  },
  serializeForERDF: function() {
    return this.a.x + "," + this.a.y + "," + this.b.x + "," + this.b.y
  }
}, ORYX.Core.Bounds = Clazz.extend(ORYX.Core.Bounds), !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.UIObject = {
  construct: function(e) {
    this.isChanged = !0, this.isResized = !0, this.isVisible = !0, this.isSelectable = !1, this.isResizable = !1, this.isMovable = !1, this.id = ORYX.Editor.provideId(), this.parent = void 0, this.node = void 0, this.children = [], this.bounds = new ORYX.Core.Bounds, this._changedCallback = this._changed.bind(this), this.bounds.registerCallback(this._changedCallback), e && e.eventHandlerCallback && (this.eventHandlerCallback = e.eventHandlerCallback)
  },
  _changed: function(e, t) {
    this.isChanged = !0, this.bounds == e && (this.isResized = t || this.isResized)
  },
  update: function() {
    this.isChanged && (this.refresh(), this.isChanged = !1, this.children.each(function(e) {
      e.update()
    }))
  },
  refresh: function() {},
  getChildren: function() {
    return this.children.clone()
  },
  getParents: function() {
    for (var e = [], t = this.parent; t;) e.push(t), t = t.parent;
    return e
  },
  isParent: function(e) {
    for (var t = this; t;) {
      if (t === e) return !0;
      t = t.parent
    }
    return !1
  },
  getId: function() {
    return this.id
  },
  getChildById: function(e, t) {
    return this.children.find(function(i) {
      if (i.getId() === e) return i;
      if (t) {
        var o = i.getChildById(e, t);
        if (o) return o
      }
    })
  },
  add: function(e) {
    this.children.member(e) ? ORYX.Log.info("add: ORYX.Core.UIObject is already a child of this object.") : (e.parent && e.remove(e), this.children.push(e), e.parent = this, e.node = this.node.appendChild(e.node), e.bounds.registerCallback(this._changedCallback))
  },
  remove: function(e) {
    this.children.member(e) ? (this.children = this._uiObjects.without(e), e.parent = void 0, e.node = this.node.removeChild(e.node), e.bounds.unregisterCallback(this._changedCallback)) : ORYX.Log.info("remove: ORYX.Core.UIObject is not a child of this object.")
  },
  absoluteBounds: function() {
    if (this.parent) {
      var e = this.absoluteXY();
      return new ORYX.Core.Bounds(e.x, e.y, e.x + this.bounds.width(), e.y + this.bounds.height())
    }
    return this.bounds.clone()
  },
  absoluteXY: function() {
    if (this.parent) {
      var e = this.parent.absoluteXY(),
        t = {};
      return t.x = e.x + this.bounds.upperLeft().x, t.y = e.y + this.bounds.upperLeft().y, t
    }
    var t = {};
    return t.x = this.bounds.upperLeft().x, t.y = this.bounds.upperLeft().y, t
  },
  absoluteCenterXY: function() {
    if (this.parent) {
      var e = this.parent.absoluteXY(),
        t = {};
      return t.x = e.x + this.bounds.center().x, t.y = e.y + this.bounds.center().y, t
    }
    var t = {};
    return t.x = this.bounds.center().x, t.y = this.bounds.center().y, t
  },
  hide: function() {
    this.node.setAttributeNS(null, "display", "none"), this.isVisible = !1, this.children.each(function(e) {
      e.hide()
    })
  },
  show: function() {
    this.node.setAttributeNS(null, "display", "inherit"), this.isVisible = !0, this.children.each(function(e) {
      e.show()
    })
  },
  addEventHandlers: function(e) {
    e.addEventListener(ORYX.CONFIG.EVENT_MOUSEDOWN, this._delegateEvent.bind(this), !1), e.addEventListener(ORYX.CONFIG.EVENT_MOUSEMOVE, this._delegateEvent.bind(this), !1), e.addEventListener(ORYX.CONFIG.EVENT_MOUSEUP, this._delegateEvent.bind(this), !1), e.addEventListener(ORYX.CONFIG.EVENT_MOUSEOVER, this._delegateEvent.bind(this), !1), e.addEventListener(ORYX.CONFIG.EVENT_MOUSEOUT, this._delegateEvent.bind(this), !1), e.addEventListener("click", this._delegateEvent.bind(this), !1), e.addEventListener(ORYX.CONFIG.EVENT_DBLCLICK, this._delegateEvent.bind(this), !1)
  },
  _delegateEvent: function(e) {
    this.eventHandlerCallback && this.eventHandlerCallback(e, this)
  },
  toString: function() {
    return "UIObject " + this.id
  }
}, ORYX.Core.UIObject = Clazz.extend(ORYX.Core.UIObject), !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.AbstractShape = ORYX.Core.UIObject.extend({
  construct: function(e, t) {
    arguments.callee.$.construct.apply(this, arguments), this.resourceId = ORYX.Editor.provideId(), this._stencil = t, this._stencil._jsonStencil.superId && (stencilId = this._stencil.id(), superStencilId = stencilId.substring(0, stencilId.indexOf("#") + 1) + t._jsonStencil.superId, stencilSet = this._stencil.stencilSet(), this._stencil = stencilSet.stencil(superStencilId)), this.properties = new Hash, this.propertiesChanged = new Hash, this.hiddenProperties = new Hash, this._stencil.properties().each(function(e) {
      var t = e.prefix() + "-" + e.id();
      this.properties[t] = e.value(), this.propertiesChanged[t] = !0
    }.bind(this));
    var i = ["UserTask", "ServiceTask", "ScriptTask"];
    if (i.indexOf(this._stencil.idWithoutNs()) >= 0) {
      var o = "oryx-isforcompensation";
      this.properties[o] || (this.propertiesChanged["activiti-bpmn-disable-compensation"] = !0);
      var n = "oryx-multiinstance_type";
      this.properties[n] || (this.propertiesChanged["activiti-bpmn-disable-multiinstance"] = !0)
    }
    t._jsonStencil.superId && t.properties().each(function(e) {
      var t = e.prefix() + "-" + e.id(),
        i = e.value(),
        o = this.properties[t];
      this.properties[t] = i, this.propertiesChanged[t] = !0, this._delegateEvent({
        type: ORYX.CONFIG.EVENT_PROPERTY_CHANGED,
        name: t,
        value: i,
        oldValue: o
      })
    }.bind(this))
  },
  layout: function() {},
  getStencil: function() {
    return this._stencil
  },
  getChildShapeByResourceId: function(e) {
    return e = ERDF.__stripHashes(e), this.getChildShapes(!0).find(function(t) {
      return t.resourceId == e
    })
  },
  getChildShapes: function(e, t) {
    var i = [];
    return this.children.each(function(o) {
      o instanceof ORYX.Core.Shape && o.isVisible && (t && t(o), i.push(o), e && (i = i.concat(o.getChildShapes(e, t))))
    }), i
  },
  hasChildShape: function(e) {
    return this.getChildShapes().any(function(t) {
      return t === e || t.hasChildShape(e)
    })
  },
  getChildNodes: function(e, t) {
    var i = [];
    return this.children.each(function(o) {
      o instanceof ORYX.Core.Node && o.isVisible && (t && t(o), i.push(o)), o instanceof ORYX.Core.Shape && e && (i = i.concat(o.getChildNodes(e, t)))
    }), i
  },
  getChildEdges: function(e, t) {
    var i = [];
    return this.children.each(function(o) {
      o instanceof ORYX.Core.Edge && o.isVisible && (t && t(o), i.push(o)), o instanceof ORYX.Core.Shape && e && (i = i.concat(o.getChildEdges(e, t)))
    }), i
  },
  getAbstractShapesAtPosition: function() {
    var e, t;
    switch (arguments.length) {
      case 1:
        e = arguments[0].x, t = arguments[0].y;
        break;
      case 2:
        e = arguments[0], t = arguments[1];
        break;
      default:
        throw "getAbstractShapesAtPosition needs 1 or 2 arguments!"
    }
    if (this.isPointIncluded(e, t)) {
      var i = [];
      i.push(this);
      var o = this.getChildNodes(),
        n = this.getChildEdges();
      return [o, n].each(function(o) {
        var n = new Hash;
        o.each(function(i) {
          if (i.isVisible) {
            var o = i.getAbstractShapesAtPosition(e, t);
            if (o.length > 0) {
              var r = $A(i.node.parentNode.childNodes),
                s = r.indexOf(i.node);
              n[s] = o
            }
          }
        }), n.keys().sort().each(function(e) {
          i = i.concat(n[e])
        })
      }), i
    }
    return []
  },
  setProperty: function(e, t, i) {
    var o = this.properties[e];
    (o !== t || i === !0) && (this.properties[e] = t, this.propertiesChanged[e] = !0, this._changed(), this._isInSetProperty || (this._isInSetProperty = !0, this._delegateEvent({
      type: ORYX.CONFIG.EVENT_PROPERTY_CHANGED,
      elements: [this],
      name: e,
      value: t,
      oldValue: o
    }), delete this._isInSetProperty))
  },
  isPropertyChanged: function() {
    return this.propertiesChanged.any(function(e) {
      return e.value
    })
  },
  setHiddenProperty: function(e, t) {
    if (void 0 === t) return delete this.hiddenProperties[e], void 0;
    var i = this.hiddenProperties[e];
    i !== t && (this.hiddenProperties[e] = t)
  },
  isPointIncluded: function(e, t, i) {
    var o = i ? i : this.absoluteBounds();
    return o.isIncluded(e, t)
  },
  serialize: function() {
    var e = [];
    return e.push({
      name: "type",
      prefix: "oryx",
      value: this.getStencil().id(),
      type: "literal"
    }), this.hiddenProperties.each(function(t) {
      e.push({
        name: t.key.replace("oryx-", ""),
        prefix: "oryx",
        value: t.value,
        type: "literal"
      })
    }.bind(this)), this.getStencil().properties().each(function(t) {
      var i = t.prefix(),
        o = t.id();
      e.push({
        name: o,
        prefix: i,
        value: this.properties[i + "-" + o],
        type: "literal"
      })
    }.bind(this)), e
  },
  deserialize: function(e) {
    e = e.sort(function(e, t) {
      return e = Number(this.properties.keys().member(e.prefix + "-" + e.name)), t = Number(this.properties.keys().member(t.prefix + "-" + t.name)), e > t ? 1 : t > e ? -1 : 0
    }.bind(this)), e.each(function(e) {
      var t = e.name,
        i = e.prefix,
        o = e.value;
      switch ("Object" === Object.prototype.toString.call(o) && (o = JSON.stringify(o)), i + "-" + t) {
        case "raziel-parent":
          if (!this.parent) break;
          var n = this.getCanvas().getChildShapeByResourceId(o);
          n && n.add(this);
          break;
        default:
          var r = this.getStencil().property(i + "-" + t);
          r && r.isList() && "string" == typeof o && (!(o || "").strip() || o.startsWith("[") || o.startsWith("]") || (o = '["' + o.strip() + '"]'), o = ((o || "").strip() || "[]").evalJSON()), this.properties.keys().member(i + "-" + t) ? this.setProperty(i + "-" + t, o) : "bounds" !== t && "parent" !== t && "target" !== t && "dockers" !== t && "docker" !== t && "outgoing" !== t && "incoming" !== t && this.setHiddenProperty(i + "-" + t, o)
      }
    }.bind(this))
  },
  toString: function() {
    return "ORYX.Core.AbstractShape " + this.id
  },
  toJSON: function() {
    var e = {
      resourceId: this.resourceId,
      properties: jQuery.extend({}, this.properties, this.hiddenProperties).inject({}, function(e, t) {
        var i = t[0],
          o = t[1];
        if (this.getStencil().property(i) && this.getStencil().property(i).type() === ORYX.CONFIG.TYPE_COMPLEX && "String" === Object.prototype.toString.call(o)) try {
          o = JSON.parse(o)
        } catch (n) {} else if (o instanceof Date && this.getStencil().property(i)) try {
          o = o.format(this.getStencil().property(i).dateFormat())
        } catch (r) {}
        return i = i.replace(/^[\w_]+-/, ""), e[i] = o, e
      }.bind(this)),
      stencil: {
        id: this.getStencil().idWithoutNs()
      },
      childShapes: this.getChildShapes().map(function(e) {
        return e.toJSON()
      })
    };
    return this.getOutgoingShapes && (e.outgoing = this.getOutgoingShapes().map(function(e) {
      return {
        resourceId: e.resourceId
      }
    })), this.bounds && (e.bounds = {
      lowerRight: this.bounds.lowerRight(),
      upperLeft: this.bounds.upperLeft()
    }), this.dockers && (e.dockers = this.dockers.map(function(e) {
      var t = e.getDockedShape() && e.referencePoint ? e.referencePoint : e.bounds.center();
      return t.getDocker = function() {
        return e
      }, t
    })), jQuery.extend(e, ORYX.Core.AbstractShape.JSONHelper), e.getShape = function() {
      return this
    }.bind(this), e
  }
}), ORYX.Core.AbstractShape.JSONHelper = {
  eachChild: function(e, t, i) {
    if (this.childShapes) {
      var o = [];
      this.childShapes.each(function(n) {
        n.eachChild instanceof Function || jQuery.extend(n, ORYX.Core.AbstractShape.JSONHelper);
        var r = e(n, this);
        r && o.push(r), t && n.eachChild(e, t, i)
      }.bind(this)), i && (this.childShapes = o)
    }
  },
  getShape: function() {
    return null
  },
  getChildShapes: function(e) {
    var t = this.childShapes;
    return e && this.eachChild(function(i) {
      i.getChildShapes instanceof Function || jQuery.extend(i, ORYX.Core.AbstractShape.JSONHelper), t = t.concat(i.getChildShapes(e))
    }, !0), t
  },
  serialize: function() {
    return JSON.stringify(this)
  }
}, !ORYX) var ORYX = {};
ORYX.Core || (ORYX.Core = {}), ORYX.Core.Canvas = ORYX.Core.AbstractShape.extend({
  zoomLevel: 1,
  construct: function(e, t, i) {
    return arguments.callee.$.construct.apply(this, arguments), e && e.width && e.height ? (this.facade = i, this.resourceId = e.id, this.nodes = [], this.edges = [], this.colHighlightState = 0, this.colHighlightEnabled = !1, this.rootNode = ORYX.Editor.graft("http://www.w3.org/2000/svg", e.parentNode, ["svg", {
      id: this.id,
      width: e.width,
      height: e.height
    },
      ["defs", {}]
    ]), this.rootNode.setAttribute("xmlns:xlink", "http://www.w3.org/1999/xlink"), this.rootNode.setAttribute("xmlns:svg", "http://www.w3.org/2000/svg"), this._htmlContainer = ORYX.Editor.graft("http://www.w3.org/1999/xhtml", e.parentNode, ["div", {
      id: "oryx_canvas_htmlContainer",
      style: "position:absolute; top:5px"
    }]), this.underlayNode = ORYX.Editor.graft("http://www.w3.org/2000/svg", this.rootNode, ["svg", {
      id: "underlay-container"
    }]), this.columnHightlight1 = ORYX.Editor.graft("http://www.w3.org/2000/svg", this.underlayNode, ["rect", {
      x: 0,
      width: ORYX.CONFIG.FORM_ROW_WIDTH + 35,
      height: "100%",
      style: "fill: #fff6d5",
      visibility: "hidden"
    }]), this.columnHightlight2 = ORYX.Editor.graft("http://www.w3.org/2000/svg", this.underlayNode, ["rect", {
      x: ORYX.CONFIG.FORM_ROW_WIDTH + 35,
      width: ORYX.CONFIG.FORM_ROW_WIDTH + 25,
      height: "100%",
      style: "fill: #fff6d5",
      visibility: "hidden"
    }]), this.node = ORYX.Editor.graft("http://www.w3.org/2000/svg", this.rootNode, ["g", {},
      ["g", {
        "class": "stencils"
      },
        ["g", {
          "class": "me"
        }],
        ["g", {
          "class": "children"
        }],
        ["g", {
          "class": "edge"
        }]
      ],
      ["g", {
        "class": "svgcontainer"
      }]
    ]), this.node.setAttributeNS(null, "stroke", "none"), this.node.setAttributeNS(null, "font-family", "Verdana, sans-serif"), this.node.setAttributeNS(null, "font-size-adjust", "none"), this.node.setAttributeNS(null, "font-style", "normal"), this.node.setAttributeNS(null, "font-variant", "normal"), this.node.setAttributeNS(null, "font-weight", "normal"), this.node.setAttributeNS(null, "line-heigth", "normal"), this.node.setAttributeNS(null, "font-size", ORYX.CONFIG.LABEL_DEFAULT_LINE_HEIGHT), this.bounds.set(0, 0, e.width, e.height), this.addEventHandlers(this.rootNode.parentNode), this.rootNode.oncontextmenu = function() {
      return !1
    }, void 0) : (ORYX.Log.fatal("Canvas is missing mandatory parameters options.width and options.height."), void 0)
  },
  focus: function() {
    try {
      this.focusEl || (this.focusEl = jQuery("body").append(jQuery('<a href="#" class="x-grid3-focus x-grid3-focus-canvas"/>')), this.focusEl.swallowEvent("click", !0)), this.focusEl.focus.defer(1, this.focusEl), this.focusEl.blur.defer(3, this.focusEl)
    } catch (e) {}
  },
  setHightlightState: function(e) {
    this.colHighlightEnabled && this.colHighlightState != e && (0 == e ? (this.columnHightlight1.setAttribute("visibility", "hidden"), this.columnHightlight2.setAttribute("visibility", "hidden")) : 1 == e ? (this.columnHightlight1.setAttribute("visibility", "visible"), this.columnHightlight2.setAttribute("visibility", "hidden")) : 2 == e ? (this.columnHightlight1.setAttribute("visibility", "hidden"), this.columnHightlight2.setAttribute("visibility", "visible")) : 3 == e && (this.columnHightlight1.setAttribute("visibility", "visible"), this.columnHightlight2.setAttribute("visibility", "visible")), this.colHighlightState = e)
  },
  setHightlightStateBasedOnX: function(e) {
    e > ORYX.CONFIG.FORM_ROW_WIDTH + 30 ? this.setHightlightState(2) : this.setHightlightState(1)
  },
  update: function() {
    this.nodes.each(function(e) {
      this._traverseForUpdate(e)
    }.bind(this));
    var e = this.getStencil().layout();
    e && e.each(function(e) {
      e.shape = this, e.forceExecution = !0, e.target = this.rootNode, this._delegateEvent(e)
    }.bind(this)), this.nodes.invoke("_update"), this.edges.invoke("_update", !0)
  },
  _traverseForUpdate: function(e) {
    var t = e.isChanged;
    return e.getChildNodes(!1, function(e) {
      this._traverseForUpdate(e) && (t = !0)
    }.bind(this)), t ? (e.layout(), !0) : !1
  },
  layout: function() {},
  getChildNodes: function(e, t) {
    if (e || t) {
      var i = [];
      return this.nodes.each(function(o) {
        t && t(o), i.push(o), e && o instanceof ORYX.Core.Shape && (i = i.concat(o.getChildNodes(e, t)))
      }), i
    }
    return this.nodes.clone()
  },
  add: function(e, t, i) {
    e instanceof ORYX.Core.UIObject ? this.children.member(e) ? ORYX.Log.warn("add: ORYX.Core.UIObject is already a child of this object.") : (e.parent && e.parent.remove(e, !0), void 0 != t ? this.children.splice(t, 0, e) : this.children.push(e), e.parent = this, e instanceof ORYX.Core.Shape ? e instanceof ORYX.Core.Edge ? (e.addMarkers(this.rootNode.getElementsByTagNameNS(NAMESPACE_SVG, "defs")[0]), e.node = this.node.childNodes[0].childNodes[2].appendChild(e.node), this.edges.push(e)) : (e.node = this.node.childNodes[0].childNodes[1].appendChild(e.node), this.nodes.push(e)) : e.node = this.node.appendChild(e.node), e.bounds.registerCallback(this._changedCallback), this.eventHandlerCallback && i !== !0 && this.eventHandlerCallback({
      type: ORYX.CONFIG.EVENT_SHAPEADDED,
      shape: e
    })) : ORYX.Log.fatal("add: Parameter is not of type ORYX.Core.UIObject.")
  },
  remove: function(e, t) {
    if (this.children.member(e)) {
      var i = e.parent;
      this.children = this.children.without(e), e.parent = void 0, e instanceof ORYX.Core.Shape ? e instanceof ORYX.Core.Edge ? (e.removeMarkers(), e.node = this.node.childNodes[0].childNodes[2].removeChild(e.node), this.edges = this.edges.without(e)) : (e.node = this.node.childNodes[0].childNodes[1].removeChild(e.node), this.nodes = this.nodes.without(e)) : e.node = this.node.removeChild(e.node), this.eventHandlerCallback && t !== !0 && this.eventHandlerCallback({
        type: ORYX.CONFIG.EVENT_SHAPEREMOVED,
        shape: e,
        parent: i
      }), e.bounds.unregisterCallback(this._changedCallback)
    } else ORYX.Log.warn("remove: ORYX.Core.UIObject is not a child of this object.")
  },
  removeAll: function() {
    for (var e = this.getChildShapes(), t = 0; e.length > t; t++) {
      var i = e[t];
      this.remove(i)
    }
  },
  addShapeObjects: function(e, t) {
    if (e) {
      this.initializingShapes = !0;
      var i = function(e, i) {
          var o = ORYX.Core.StencilSet.stencil(this.getStencil().namespace() + e.stencil.id),
            n = "node" == o.type() ? ORYX.Core.Node : ORYX.Core.Edge,
            r = new n({
              eventHandlerCallback: t
            }, o, this.facade);
          return r.resourceId = e.resourceId, r.node.id = "svg-" + e.resourceId, e.parent = "#" + (e.parent && e.parent.resourceId || i.resourceId), this.add(r), {
            json: e,
            object: r
          }
        }.bind(this),
        o = function(e) {
          var t = [];
          return e.childShapes && e.childShapes.constructor == String && (e.childShapes = JSON.parse(e.childShapes)), e.childShapes.each(function(n) {
            t.push(i(n, e)), t = t.concat(o(n))
          }), t
        }.bind(this),
        n = o({
          childShapes: e,
          resourceId: this.resourceId
        });
      return n.each(function(e) {
        var t = [];
        for (field in e.json.properties) t.push({
          prefix: "oryx",
          name: field,
          value: e.json.properties[field]
        });
        if (e.json.outgoing && e.json.outgoing.each(function(e) {
          t.push({
            prefix: "raziel",
            name: "outgoing",
            value: "#" + e.resourceId
          })
        }), e.object instanceof ORYX.Core.Edge) {
          var i = e.json.target || e.json.outgoing[0];
          i && t.push({
            prefix: "raziel",
            name: "target",
            value: "#" + i.resourceId
          })
        }
        e.json.bounds && t.push({
          prefix: "oryx",
          name: "bounds",
          value: e.json.bounds.upperLeft.x + "," + e.json.bounds.upperLeft.y + "," + e.json.bounds.lowerRight.x + "," + e.json.bounds.lowerRight.y
        }), e.json.dockers && t.push({
          prefix: "oryx",
          name: "dockers",
          value: e.json.dockers.inject("", function(e, t) {
            return e + t.x + " " + t.y + " "
          }) + " #"
        }), t.push({
          prefix: "raziel",
          name: "parent",
          value: e.json.parent
        }), e.__properties = t
      }.bind(this)), n.each(function(e) {
        e.object instanceof ORYX.Core.Node && e.object.deserialize(e.__properties, e.json)
      }), n.each(function(e) {
        e.object instanceof ORYX.Core.Edge && (e.object.deserialize(e.__properties, e.json), e.object._oldBounds = e.object.bounds.clone(), e.object._update())
      }), delete this.initializingShapes, n.pluck("object")
    }
  },
  updateSize: function() {
    var e = 0,
      t = 0,
      i = 100;
    this.getChildShapes(!0, function(o) {
      var n = o.bounds;
      e = Math.max(e, n.lowerRight().x + i), t = Math.max(t, n.lowerRight().y + i)
    }), (e > this.bounds.width() || t > this.bounds.height()) && this.setSize({
      width: Math.max(this.bounds.width(), e),
      height: Math.max(this.bounds.height(), t)
    })
  },
  getRootNode: function() {
    return this.rootNode
  },
  getUnderlayNode: function() {
    return this.underlayNode
  },
  getSvgContainer: function() {
    return this.node.childNodes[1]
  },
  getHTMLContainer: function() {
    return this._htmlContainer
  },
  getShapesWithSharedParent: function(e) {
    return !e || 1 > e.length ? [] : 1 == e.length ? e : e.findAll(function(t) {
      for (var i = t.parent; i;) {
        if (e.member(i)) return !1;
        i = i.parent
      }
      return !0
    })
  },
  setSize: function(e, t) {
    e && e.width && e.height && (this.rootNode.parentNode && (this.rootNode.parentNode.style.width = e.width + "px", this.rootNode.parentNode.style.height = e.height + "px"), this.rootNode.setAttributeNS(null, "width", e.width), this.rootNode.setAttributeNS(null, "height", e.height), t || this.bounds.set({
      a: {
        x: 0,
        y: 0
      },
      b: {
        x: e.width / this.zoomLevel,
        y: e.height / this.zoomLevel
      }
    }))
  },
  getSVGRepresentation: function(e) {
    var t = this.getRootNode().cloneNode(!0);
    this._removeInvisibleElements(t);
    var i, o, n, r;
    this.getChildShapes(!0).each(function(e) {
      var t = e.absoluteBounds(),
        s = t.upperLeft(),
        a = t.lowerRight();
      void 0 == i ? (i = s.x, o = s.y, n = a.x, r = a.y) : (i = Math.min(i, s.x), o = Math.min(o, s.y), n = Math.max(n, a.x), r = Math.max(r, a.y))
    });
    var s, a, l, d, c = 50;
    void 0 == i ? (s = 0, a = 0, l = 0, d = 0) : (s = n, a = r, l = -i + c / 2, d = -o + c / 2), t.setAttributeNS(null, "width", s + c), t.setAttributeNS(null, "height", a + c), t.childNodes[1].removeAttributeNS(null, "transform");
    try {
      var p = t.childNodes[1].childNodes[1];
      p.parentNode.removeChild(p)
    } catch (u) {}
    return e && ($A(t.getElementsByTagNameNS(ORYX.CONFIG.NAMESPACE_SVG, "tspan")).each(function(e) {
      e.textContent = e.textContent.escapeHTML()
    }), $A(t.getElementsByTagNameNS(ORYX.CONFIG.NAMESPACE_SVG, "text")).each(function(e) {
      0 == e.childNodes.length && (e.textContent = e.textContent.escapeHTML())
    })), $A(t.getElementsByTagNameNS(ORYX.CONFIG.NAMESPACE_SVG, "image")).each(function(e) {
      var t = e.getAttributeNS("http://www.w3.org/1999/xlink", "href");
      t.match("^(http|https)://") || (t = window.location.protocol + "//" + window.location.host + t, e.setAttributeNS("http://www.w3.org/1999/xlink", "href", t))
    }), $A(t.getElementsByTagNameNS(ORYX.CONFIG.NAMESPACE_SVG, "a")).each(function(e) {
      e.setAttributeNS("http://www.w3.org/1999/xlink", "xlink:href", (e.getAttributeNS("http://www.w3.org/1999/xlink", "href") || "").escapeHTML())
    }), t
  },
  _removeInvisibleElements: function(e) {
    for (var t = 0; e.childNodes.length > t;) {
      var i = e.childNodes[t];
      i.getAttributeNS && "hidden" === i.getAttributeNS(null, "visibility") ? e.removeChild(i) : (this._removeInvisibleElements(i), t++)
    }
  },
  _delegateEvent: function(e) {
    !this.eventHandlerCallback || e.target != this.rootNode && e.target != this.rootNode.parentNode || this.eventHandlerCallback(e, this)
  },
  toString: function() {
    return "Canvas " + this.id
  },
  toJSON: function() {
    var e = arguments.callee.$.toJSON.apply(this, arguments);
    return e.stencilset = {
      url: this.getStencil().stencilSet().source(),
      namespace: this.getStencil().stencilSet().namespace()
    }, e
  }
});
var idCounter = 0,
  ID_PREFIX = "resource";
if (!ORYX) var ORYX = {};
if (ORYX.Editor = {
  DOMEventListeners: new Hash,
  selection: [],
  zoomLevel: 1,
  construct: function(e) {
    this._eventsQueue = [], this.loadedPlugins = [], this.pluginsData = [], this.modelMetaData = e;
    var t = e;
    if (this.id = t.modelId, e.model && (t = e.model), this.id || (this.id = t.id, this.id || (this.id = ORYX.Editor.provideId())), this.fullscreen = e.fullscreen !== !1, this._initEventListener(), ORYX.CONFIG.BACKEND_SWITCH) {
      var i = (t.stencilset.namespace || t.stencilset.url).replace("#", "%23");
      ORYX.Core.StencilSet.loadStencilSet(i, this.modelMetaData, this.id)
    } else {
      var i = t.stencilset.url;
      ORYX.Core.StencilSet.loadStencilSet(i, this.modelMetaData, this.id)
    }
    this._createCanvas(t.stencil ? t.stencil.id : null, t.properties), this._generateGUI();
    var o = !1,
      n = !1,
      r = function() {
        o && n && this._finishedLoading()
      }.bind(this);
    window.setTimeout(function() {
      this.loadPlugins(), o = !0, r()
    }.bind(this), 100), window.setTimeout(function() {
      this.loadSerialized(t, !0), this.getCanvas().update(), n = !0, r()
    }.bind(this), 200)
  },
  _finishedLoading: function() {
    this.handleEvents({
      type: ORYX.CONFIG.EVENT_LOADED
    })
  },
  _initEventListener: function() {
    document.documentElement.addEventListener(ORYX.CONFIG.EVENT_KEYDOWN, this.catchKeyDownEvents.bind(this), !1), document.documentElement.addEventListener(ORYX.CONFIG.EVENT_KEYUP, this.catchKeyUpEvents.bind(this), !1), this._keydownEnabled = !0, this._keyupEnabled = !0, this.DOMEventListeners[ORYX.CONFIG.EVENT_MOUSEDOWN] = [], this.DOMEventListeners[ORYX.CONFIG.EVENT_MOUSEUP] = [], this.DOMEventListeners[ORYX.CONFIG.EVENT_MOUSEOVER] = [], this.DOMEventListeners[ORYX.CONFIG.EVENT_MOUSEOUT] = [], this.DOMEventListeners[ORYX.CONFIG.EVENT_SELECTION_CHANGED] = [], this.DOMEventListeners[ORYX.CONFIG.EVENT_MOUSEMOVE] = []
  },
  _generateGUI: function() {
    ORYX.CONFIG.WINDOW_HEIGHT;
    var e = this.getCanvas().rootNode.parentNode;
    jQuery("#canvasSection").append(e), e.parentNode && (e.parentNode.setAttributeNS(null, "align", "center"), e.setAttributeNS(null, "align", "left"), this.getCanvas().setSize({
      width: ORYX.CONFIG.CANVAS_WIDTH,
      height: ORYX.CONFIG.CANVAS_HEIGHT
    }))
  },
  getAvailablePlugins: function() {
    var e = ORYX.availablePlugins.clone();
    return e.each(function(e) {
      e.engaged = this.loadedPlugins.find(function(e) {
        return e.type == this.name
      }.bind(e)) ? !0 : !1
    }.bind(this)), e
  },
  loadScript: function(e, t) {
    var i = document.createElement("script");
    i.type = "text/javascript", i.readyState ? i.onreadystatechange = function() {
      ("loaded" == i.readyState || "complete" == i.readyState) && (i.onreadystatechange = null, t())
    } : i.onload = function() {
      t()
    }, i.src = e, document.getElementsByTagName("head")[0].appendChild(i)
  },
  activatePluginByName: function(name, callback, loadTry) {
    var match = this.getAvailablePlugins().find(function(e) {
      return e.name == name
    });
    if (!match || match.engaged && "false" !== match.engaged) callback(!1, match ? "NOTFOUND" : "YETACTIVATED");
    else {
      var loadedStencilSetsNamespaces = this.getStencilSets().keys(),
        facade = this._getPluginFacade(),
        newPlugin, me = this;
      if (ORYX.Log.debug("Initializing plugin '%0'", match.name), match.requires && match.requires.namespaces && !match.requires.namespaces.any(function(e) {
        return loadedStencilSetsNamespaces.indexOf(e) >= 0
      })) callback(!1, "REQUIRESTENCILSET"), ORYX.Log.info("Plugin need a stencilset which is not loaded'", match.name);
      else if (match.notUsesIn && match.notUsesIn.namespaces && match.notUsesIn.namespaces.any(function(e) {
        return loadedStencilSetsNamespaces.indexOf(e) >= 0
      })) callback(!1, "NOTUSEINSTENCILSET"), ORYX.Log.info("Plugin need a stencilset which is not loaded'", match.name);
      else try {
          var className = eval(match.name),
            newPlugin = new className(facade, match);
          newPlugin.type = match.name, newPlugin.registryChanged && newPlugin.registryChanged(me.pluginsData), newPlugin.onSelectionChanged && me.registerOnEvent(ORYX.CONFIG.EVENT_SELECTION_CHANGED, newPlugin.onSelectionChanged.bind(newPlugin)), this.loadedPlugins.push(newPlugin), this.loadedPlugins.each(function(e) {
            e.registryChanged && e.registryChanged(this.pluginsData)
          }.bind(me)), callback(!0)
        } catch (e) {
          if (ORYX.Log.warn("Plugin %0 is not available", match.name), loadTry) return callback(!1, "INITFAILED"), void 0;
          this.loadScript("plugins/scripts/" + match.source, this.activatePluginByName.bind(this, match.name, callback, !0))
        }
    }
  },
  loadPlugins: function() {
    var me = this,
      newPlugins = [],
      loadedStencilSetsNamespaces = this.getStencilSets().keys(),
      facade = this._getPluginFacade();
    ORYX.MashupAPI && ORYX.MashupAPI.loadablePlugins && ORYX.MashupAPI.loadablePlugins instanceof Array && (ORYX.availablePlugins = $A(ORYX.availablePlugins).findAll(function(e) {
      return ORYX.MashupAPI.loadablePlugins.include(e.name)
    }), ORYX.MashupAPI.loadablePlugins.each(function(e) {
      ORYX.availablePlugins.find(function(t) {
        return t.name == e
      }) || ORYX.availablePlugins.push({
        name: e
      })
    })), ORYX.availablePlugins.each(function(value) {
      if (ORYX.Log.debug("Initializing plugin '%0'", value.name), value.requires && value.requires.namespaces && !value.requires.namespaces.any(function(e) {
        return loadedStencilSetsNamespaces.indexOf(e) >= 0
      }) || value.notUsesIn && value.notUsesIn.namespaces && value.notUsesIn.namespaces.any(function(e) {
        return loadedStencilSetsNamespaces.indexOf(e) >= 0
      }) || !value.engaged && void 0 !== value.engaged) ORYX.Log.info("Plugin need a stencilset which is not loaded'", value.name);
      else try {
        var className = eval(value.name);
        if (className) {
          var plugin = new className(facade, value);
          plugin.type = value.name, newPlugins.push(plugin), plugin.engaged = !0
        }
      } catch (e) {
        ORYX.Log.warn("Plugin %0 is not available %1", value.name, e)
      }
    }), newPlugins.each(function(e) {
      e.registryChanged && e.registryChanged(me.pluginsData), e.onSelectionChanged && me.registerOnEvent(ORYX.CONFIG.EVENT_SELECTION_CHANGED, e.onSelectionChanged.bind(e))
    }), this.loadedPlugins = newPlugins, this.registerPluginsOnKeyEvents(), this.setSelection()
  },
  _createCanvas: function(e, t) {
    e ? -1 === e.search(/^http/) && (e = this.getStencilSets().values()[0].namespace() + e) : e = this.getStencilSets().values()[0].findRootStencilName();
    var i = ORYX.Core.StencilSet.stencil(e);
    i || ORYX.Log.fatal("Initialisation failed, because the stencil with the type %0 is not part of one of the loaded stencil sets.", e);
    var o = ORYX.Editor.graft("http://www.w3.org/1999/xhtml", null, ["div"]);
    if (o.addClassName("ORYX_Editor"), this._canvas = new ORYX.Core.Canvas({
      width: ORYX.CONFIG.CANVAS_WIDTH,
      height: ORYX.CONFIG.CANVAS_HEIGHT,
      eventHandlerCallback: this.handleEvents.bind(this),
      id: this.id,
      parentNode: o
    }, i, this._getPluginFacade()), t) {
      var n = [];
      for (field in t) n.push({
        prefix: "oryx",
        name: field,
        value: t[field]
      });
      this._canvas.deserialize(n)
    }
  },
  _getPluginFacade: function() {
    return this._pluginFacade || (this._pluginFacade = {
      activatePluginByName: this.activatePluginByName.bind(this),
      getAvailablePlugins: this.getAvailablePlugins.bind(this),
      offer: this.offer.bind(this),
      getStencilSets: this.getStencilSets.bind(this),
      getStencilSetExtensionDefinition: function() {
        return Object.clone(this.ss_extensions_def || {})
      }.bind(this),
      getRules: this.getRules.bind(this),
      loadStencilSet: this.loadStencilSet.bind(this),
      createShape: this.createShape.bind(this),
      deleteShape: this.deleteShape.bind(this),
      getSelection: this.getSelection.bind(this),
      setSelection: this.setSelection.bind(this),
      updateSelection: this.updateSelection.bind(this),
      getCanvas: this.getCanvas.bind(this),
      importJSON: this.importJSON.bind(this),
      getJSON: this.getJSON.bind(this),
      getSerializedJSON: this.getSerializedJSON.bind(this),
      executeCommands: this.executeCommands.bind(this),
      isExecutingCommands: this.isExecutingCommands.bind(this),
      registerOnEvent: this.registerOnEvent.bind(this),
      unregisterOnEvent: this.unregisterOnEvent.bind(this),
      raiseEvent: this.handleEvents.bind(this),
      enableEvent: this.enableEvent.bind(this),
      disableEvent: this.disableEvent.bind(this),
      eventCoordinates: this.eventCoordinates.bind(this),
      eventCoordinatesXY: this.eventCoordinatesXY.bind(this),
      getModelMetaData: this.getModelMetaData.bind(this)
    }), this._pluginFacade
  },
  isExecutingCommands: function() {
    return !!this.commandExecuting
  },
  executeCommands: function(e) {
    if (this.commandStack || (this.commandStack = []), this.commandStackExecuted || (this.commandStackExecuted = []), this.commandStack = [].concat(this.commandStack).concat(e), !this.commandExecuting) {
      for (this.commandExecuting = !0; this.commandStack.length > 0;) {
        var t = this.commandStack.shift();
        t.execute(), this.commandStackExecuted.push(t)
      }
      this.handleEvents({
        type: ORYX.CONFIG.EVENT_EXECUTE_COMMANDS,
        commands: this.commandStackExecuted
      }), delete this.commandStack, delete this.commandStackExecuted, delete this.commandExecuting, this.updateSelection()
    }
  },
  getJSON: function() {
    delete Array.prototype.toJSON;
    var e = this.getCanvas().toJSON();
    return e.ssextensions = this.getStencilSets().values()[0].extensions().keys().findAll(function(e) {
      return !e.endsWith("/meta#")
    }), e
  },
  getSerializedJSON: function() {
    return JSON.stringify(this.getJSON())
  },
  importJSON: function(e, t) {
    try {
      e = this.renewResourceIds(e)
    } catch (i) {
      throw i
    }
    if (e.stencilset.namespace && e.stencilset.namespace !== this.getCanvas().getStencil().stencilSet().namespace()) return alert(String.format(ORYX.I18N.JSONImport.wrongSS, e.stencilset.namespace, this.getCanvas().getStencil().stencilSet().namespace())), null;
    var o = ORYX.Core.Command.extend({
        construct: function(e, t, i, o) {
          this.jsonObject = e, this.noSelection = i, this.facade = o, this.shapes, this.connections = [], this.parents = new Hash, this.selection = this.facade.getSelection(), this.loadSerialized = t
        },
        execute: function() {
          this.shapes ? (this.shapes.each(function(e) {
            this.parents[e.id].add(e)
          }.bind(this)), this.connections.each(function(e) {
            e[0].setDockedShape(e[1]), e[0].setReferencePoint(e[2]), e[0].update()
          })) : (this.shapes = this.loadSerialized(this.jsonObject), this.shapes.each(function(e) {
            if (e.getDockers) {
              var t = e.getDockers();
              t && (t.length > 0 && this.connections.push([t.first(), t.first().getDockedShape(), t.first().referencePoint]), t.length > 1 && this.connections.push([t.last(), t.last().getDockedShape(), t.last().referencePoint]))
            }
            this.parents[e.id] = e.parent
          }.bind(this))), this.facade.getCanvas().update(), this.noSelection ? this.facade.updateSelection() : this.facade.setSelection(this.shapes), this.facade.getCanvas().updateSize()
        },
        rollback: function() {
          var e = this.facade.getSelection();
          this.shapes.each(function(t) {
            e = e.without(t), this.facade.deleteShape(t)
          }.bind(this)), this.facade.getCanvas().update(), this.facade.setSelection(e)
        }
      }),
      n = new o(e, this.loadSerialized.bind(this), t, this._getPluginFacade());
    return this.executeCommands([n]), n.shapes.clone()
  },
  renewResourceIds: function(e) {
    if ("String" === Object.prototype.toString.call(e)) try {
      var t = e;
      e = JSON.parse(e)
    } catch (i) {
      throw new SyntaxError(i.message)
    } else var t = JSON.stringify(e);
    var o = function(e) {
        return e ? e.map(function(e) {
          return o(e.childShapes).concat(e.resourceId)
        }).flatten() : []
      },
      n = o(e.childShapes);
    return n.each(function(e) {
      var i = ORYX.Editor.provideId();
      t = t.replace(RegExp(e, "g"), i)
    }), JSON.parse(t)
  },
  loadSerialized: function(e, t) {
    if (this.getCanvas(), this.loadSSExtensions(e.ssextensions), t === !0) {
      var i = this.getExtensionForMetaData();
      i && this.loadSSExtension(i)
    }
    var o = this.getCanvas().addShapeObjects(e.childShapes, this.handleEvents.bind(this));
    if (e.properties)
      for (key in e.properties) {
        var n = e.properties[key],
          r = this.getCanvas().getStencil().property("oryx-" + key);
        "string" == typeof n || r && r.isList() || (n = JSON.stringify(n)), this.getCanvas().setProperty("oryx-" + key, n)
      }
    return this.getCanvas().updateSize(), this.selection = [null], this.setSelection([]), o
  },
  getExtensionForMetaData: function() {
    if (!(this.ss_extensions_def && this.ss_extensions_def.extensions instanceof Array)) return null;
    var e = this.getStencilSets(),
      t = this.ss_extensions_def.extensions.find(function(t) {
        return !!e[t["extends"]] && t.namespace.endsWith("/meta#")
      });
    return t ? t.namespace || null : null
  },
  loadSSExtensions: function(e) {
    e && e.each(function(e) {
      this.loadSSExtension(e)
    }.bind(this))
  },
  loadSSExtension: function(e) {
    if (this.ss_extensions_def) {
      var t = this.ss_extensions_def.extensions.find(function(t) {
        return t.namespace == e
      });
      if (!t) return;
      var i = this.getStencilSets()[t["extends"]];
      if (!i) return;
      (t.definition || "").startsWith("/") ? i.addExtension(t.definition) : i.addExtension(ORYX.CONFIG.SS_EXTENSIONS_FOLDER + t.definition), this.getRules().initializeRules(i), this._getPluginFacade().raiseEvent({
        type: ORYX.CONFIG.EVENT_STENCIL_SET_LOADED
      })
    }
  },
  disableEvent: function(e) {
    if (e == ORYX.CONFIG.EVENT_KEYDOWN && (this._keydownEnabled = !1), e == ORYX.CONFIG.EVENT_KEYUP && (this._keyupEnabled = !1), this.DOMEventListeners.keys().member(e)) {
      var t = this.DOMEventListeners.remove(e);
      this.DOMEventListeners["disable_" + e] = t
    }
  },
  enableEvent: function(e) {
    if (e == ORYX.CONFIG.EVENT_KEYDOWN && (this._keydownEnabled = !0), e == ORYX.CONFIG.EVENT_KEYUP && (this._keyupEnabled = !0), this.DOMEventListeners.keys().member("disable_" + e)) {
      var t = this.DOMEventListeners.remove("disable_" + e);
      this.DOMEventListeners[e] = t
    }
  },
  registerOnEvent: function(e, t) {
    this.DOMEventListeners.keys().member(e) || (this.DOMEventListeners[e] = []), this.DOMEventListeners[e].push(t)
  },
  unregisterOnEvent: function(e, t) {
    this.DOMEventListeners.keys().member(e) && (this.DOMEventListeners[e] = this.DOMEventListeners[e].without(t))
  },
  getSelection: function() {
    return this.selection || []
  },
  getStencilSets: function() {
    return ORYX.Core.StencilSet.stencilSets(this.id)
  },
  getRules: function() {
    return ORYX.Core.StencilSet.rules(this.id)
  },
  loadStencilSet: function(e) {
    try {
      ORYX.Core.StencilSet.loadStencilSet(e, this.modelMetaData, this.id), this.handleEvents({
        type: ORYX.CONFIG.EVENT_STENCIL_SET_LOADED
      })
    } catch (t) {
      ORYX.Log.warn("Requesting stencil set file failed. (" + t + ")")
    }
  },
  offer: function(e) {
    this.pluginsData.member(e) || this.pluginsData.push(e)
  },
  registerPluginsOnKeyEvents: function() {
    this.pluginsData.each(function(e) {
      e.keyCodes && e.keyCodes.each(function(t) {
        var i = "key.event";
        i += "." + t.keyAction, t.metaKeys && (t.metaKeys.indexOf(ORYX.CONFIG.META_KEY_META_CTRL) > -1 && (i += "." + ORYX.CONFIG.META_KEY_META_CTRL), t.metaKeys.indexOf(ORYX.CONFIG.META_KEY_ALT) > -1 && (i += "." + ORYX.CONFIG.META_KEY_ALT), t.metaKeys.indexOf(ORYX.CONFIG.META_KEY_SHIFT) > -1 && (i += "." + ORYX.CONFIG.META_KEY_SHIFT)), t.keyCode && (i += "." + t.keyCode), ORYX.Log.debug("Register Plugin on Key Event: %0", i), e.toggle === !0 && e.buttonInstance ? this.registerOnEvent(i, function() {
          e.buttonInstance.toggle(!e.buttonInstance.pressed), e.functionality.call(e, e.buttonInstance, e.buttonInstance.pressed)
        }) : this.registerOnEvent(i, e.functionality)
      }.bind(this))
    }.bind(this))
  },
  isEqual: function(e, t) {
    return e === t || e.length === t.length && e.all(function(e) {
      return t.include(e)
    })
  },
  isDirty: function(e) {
    return e.any(function(e) {
      return e.isPropertyChanged()
    })
  },
  setSelection: function(e, t, i) {
    e || (e = []), e instanceof Array || (e = [e]), e = e.findAll(function(e) {
      return e && e instanceof ORYX.Core.Shape
    }), e[0] instanceof ORYX.Core.Canvas && (e = []), (i || !this.isEqual(this.selection, e) || this.isDirty(e)) && (this.selection = e, this._subSelection = t, this.handleEvents({
      type: ORYX.CONFIG.EVENT_SELECTION_CHANGED,
      elements: e,
      subSelection: t,
      force: !!i
    }))
  },
  updateSelection: function() {
    this.setSelection(this.selection, this._subSelection, !0)
  },
  getCanvas: function() {
    return this._canvas
  },
  createShape: function(e) {
    if (e && e.serialize && e.serialize instanceof Array) {
      var t = e.serialize.find(function(e) {
          return "oryx-type" == e.prefix + "-" + e.name
        }),
        i = ORYX.Core.StencilSet.stencil(t.value);
      if ("node" == i.type()) var o = new ORYX.Core.Node({
        eventHandlerCallback: this.handleEvents.bind(this)
      }, i, this._getPluginFacade());
      else var o = new ORYX.Core.Edge({
        eventHandlerCallback: this.handleEvents.bind(this)
      }, i, this._getPluginFacade());
      return this.getCanvas().add(o), o.deserialize(e.serialize), o
    }
    if (!e || !e.type || !e.namespace) throw "To create a new shape you have to give an argument with type and namespace";
    var o, n = this.getCanvas(),
      r = e.type,
      s = ORYX.Core.StencilSet.stencilSet(e.namespace);
    o = "node" == s.stencil(r).type() ? new ORYX.Core.Node({
      eventHandlerCallback: this.handleEvents.bind(this)
    }, s.stencil(r), this._getPluginFacade()) : new ORYX.Core.Edge({
      eventHandlerCallback: this.handleEvents.bind(this)
    }, s.stencil(r), this._getPluginFacade()), e.template && (o._jsonStencil.properties = e.template._jsonStencil.properties, o.postProcessProperties()), e.parent && o instanceof ORYX.Core.Node ? e.parent.add(o) : n.add(o);
    var a, l = e.position ? e.position : {
      x: 100,
      y: 200
    };
    if (e.connectingType && e.connectedShape && !(o instanceof ORYX.Core.Edge)) {
      a = new ORYX.Core.Edge({
        eventHandlerCallback: this.handleEvents.bind(this)
      }, s.stencil(e.connectingType)), a.dockers.first().setDockedShape(e.connectedShape);
      var d = e.connectedShape.getDefaultMagnet(),
        c = d ? d.bounds.center() : e.connectedShape.bounds.midPoint();
      a.dockers.first().setReferencePoint(c), a.dockers.last().setDockedShape(o), a.dockers.last().setReferencePoint(o.getDefaultMagnet().bounds.center()), n.add(a)
    }
    if (o instanceof ORYX.Core.Edge && e.connectedShape) {
      o.dockers.first().setDockedShape(e.connectedShape), e.connectedShape instanceof ORYX.Core.Node ? (o.dockers.first().setReferencePoint(e.connectedShape.getDefaultMagnet().bounds.center()), o.dockers.last().bounds.centerMoveTo(l)) : o.dockers.first().setReferencePoint(e.connectedShape.bounds.midPoint());
      var p = o.dockers.first(),
        u = o.dockers.last();
      if (p.getDockedShape() && u.getDockedShape()) {
        var h = p.getAbsoluteReferencePoint();
        u.getAbsoluteReferencePoint();
        var m = o.createDocker();
        m.bounds.centerMoveTo({
          x: h.x + (endPont.x - h.x) / 2,
          y: h.y + (endPont.y - h.y) / 2
        })
      }
    } else {
      var f = o.bounds;
      o instanceof ORYX.Core.Node && 1 == o.dockers.length && (f = o.dockers.first().bounds), f.centerMoveTo(l);
      var g = f.upperLeft();
      f.moveBy(-Math.min(g.x, 0), -Math.min(g.y, 0));
      var v = f.lowerRight();
      f.moveBy(-Math.max(v.x - n.bounds.width(), 0), -Math.max(v.y - n.bounds.height(), 0))
    }
    return o instanceof ORYX.Core.Edge && o._update(!1), o instanceof ORYX.Core.Edge || e.dontUpdateSelection || this.setSelection([o]), a && a.alignDockers, o.alignDockers && o.alignDockers(), o
  },
  deleteShape: function(e) {
    e && e.parent && (e.parent.remove(e), e.getOutgoingShapes().each(function(t) {
      var i = t.getDockers().first();
      i && i.getDockedShape() == e && i.setDockedShape(void 0)
    }), e.getIncomingShapes().each(function(t) {
      var i = t.getDockers().last();
      i && i.getDockedShape() == e && i.setDockedShape(void 0)
    }), e.getDockers().each(function(e) {
      e.setDockedShape(void 0)
    }))
  },
  getModelMetaData: function() {
    return this.modelMetaData
  },
  _executeEventImmediately: function(e) {
    this.DOMEventListeners.keys().member(e.event.type) && this.DOMEventListeners[e.event.type].each(function(t) {
      t(e.event, e.arg)
    }.bind(this))
  },
  _executeEvents: function() {
    for (this._queueRunning = !0; this._eventsQueue.length > 0;) {
      var e = this._eventsQueue.shift();
      this._executeEventImmediately(e)
    }
    this._queueRunning = !1
  },
  handleEvents: function(e, t) {
    switch (ORYX.Log.trace("Dispatching event type %0 on %1", e.type, t), e.type) {
      case ORYX.CONFIG.EVENT_MOUSEDOWN:
        this._handleMouseDown(e, t);
        break;
      case ORYX.CONFIG.EVENT_MOUSEMOVE:
        this._handleMouseMove(e, t);
        break;
      case ORYX.CONFIG.EVENT_MOUSEUP:
        this._handleMouseUp(e, t);
        break;
      case ORYX.CONFIG.EVENT_MOUSEOVER:
        this._handleMouseHover(e, t);
        break;
      case ORYX.CONFIG.EVENT_MOUSEOUT:
        this._handleMouseOut(e, t)
    }
    return e.forceExecution ? this._executeEventImmediately({
      event: e,
      arg: t
    }) : this._eventsQueue.push({
      event: e,
      arg: t
    }), this._queueRunning || this._executeEvents(), !1
  },
  isValidEvent: function(e) {
    try {
      var t = ["INPUT", "TEXTAREA"].include(e.target.tagName.toUpperCase()),
        i = e.target.className.include("x-grid3-focus") && !e.target.className.include("x-grid3-focus-canvas");
      return !t && !i
    } catch (e) {
      return !1
    }
  },
  catchKeyUpEvents: function(e) {
    if (this._keyupEnabled && (e || (e = window.event), this.isValidEvent(e))) {
      var t = this.createKeyCombEvent(e, ORYX.CONFIG.KEY_ACTION_UP);
      ORYX.Log.debug("Key Event to handle: %0", t), this.handleEvents({
        type: t,
        event: e
      })
    }
  },
  catchKeyDownEvents: function(e) {
    if (this._keydownEnabled && (e || (e = window.event), this.isValidEvent(e))) {
      var t = this.createKeyCombEvent(e, ORYX.CONFIG.KEY_ACTION_DOWN);
      ORYX.Log.debug("Key Event to handle: %0", t), this.handleEvents({
        type: t,
        event: e
      })
    }
  },
  createKeyCombEvent: function(e, t) {
    var i = e.which || e.keyCode,
      o = "key.event";
    return t && (o += "." + t), (e.ctrlKey || e.metaKey) && (o += "." + ORYX.CONFIG.META_KEY_META_CTRL), e.altKey && (o += "." + ORYX.CONFIG.META_KEY_ALT), e.shiftKey && (o += "." + ORYX.CONFIG.META_KEY_SHIFT), o + "." + i
  },
  _handleMouseDown: function(e, t) {
    var i = this.getCanvas();
    i.focus();
    var o = e.currentTarget,
      n = t,
      r = null !== n && void 0 !== n && n.isSelectable,
      s = null !== n && void 0 !== n && n.isMovable,
      a = e.shiftKey || e.ctrlKey,
      l = 0 === this.selection.length,
      d = this.selection.member(n);
    if (r && l) this.setSelection([n]), ORYX.Log.trace("Rule #1 applied for mouse down on %0", o.id);
    else if (!r || l || a || d)
      if (r && a && !d) {
        var c = this.selection.clone();
        c.push(n), this.setSelection(c), ORYX.Log.trace("Rule #4 applied for mouse down on %0", o.id)
      } else if (r && d && a) {
        var c = this.selection.clone();
        this.setSelection(c.without(n)), ORYX.Log.trace("Rule #6 applied for mouse down on %0", n.id)
      } else {
        if (!r && !s) return this.setSelection([]), ORYX.Log.trace("Rule #2 applied for mouse down on %0", o.id), void 0;
        r || !s || n instanceof ORYX.Core.Controls.Docker ? r && d && !a && (this._subSelection = this._subSelection != n ? n : void 0, this.setSelection(this.selection, this._subSelection), ORYX.Log.trace("Rule #8 applied for mouse down on %0", o.id)) : ORYX.Log.trace("Rule #7 applied for mouse down on %0", o.id)
      } else this.setSelection([n]), ORYX.Log.trace("Rule #3 applied for mouse down on %0", o.id)
  },
  _handleMouseMove: function() {},
  _handleMouseUp: function(e, t) {
    this.getCanvas(), this.eventCoordinates(e)
  },
  _handleMouseHover: function() {},
  _handleMouseOut: function() {},
  eventCoordinates: function(e) {
    var t = this.getCanvas(),
      i = t.node.ownerSVGElement.createSVGPoint();
    i.x = e.clientX, i.y = e.clientY;
    var o = 1;
    if (!isNaN(screen.logicalXDPI) && !isNaN(screen.systemXDPI)) {
      var n = navigator.userAgent;
      if (n.indexOf("MSIE") >= 0) {
        var r = Math.round(100 * (screen.deviceXDPI / screen.logicalXDPI));
        100 !== r && (o = r / 100)
      }
    }
    1 !== o && (i.x = i.x * o, i.y = i.y * o);
    var s = t.node.getScreenCTM();
    return i.matrixTransform(s.inverse())
  },
  eventCoordinatesXY: function(e, t) {
    var i = this.getCanvas(),
      o = i.node.ownerSVGElement.createSVGPoint();
    o.x = e, o.y = t;
    var n = 1;
    if (!isNaN(screen.logicalXDPI) && !isNaN(screen.systemXDPI)) {
      var r = navigator.userAgent;
      if (r.indexOf("MSIE") >= 0) {
        var s = Math.round(100 * (screen.deviceXDPI / screen.logicalXDPI));
        100 !== s && (n = s / 100)
      }
    }
    1 !== n && (o.x = o.x * n, o.y = o.y * n);
    var a = i.node.getScreenCTM();
    return o.matrixTransform(a.inverse())
  }
}, ORYX.Editor = Clazz.extend(ORYX.Editor), ORYX.Editor.createByUrl = function(e) {
  new Ajax.Request(e, {
    method: "GET",
    onSuccess: function(e) {
      var t = JSON.parse(e.responseText);
      new ORYX.Editor(t)
    }.bind(this)
  })
}, ORYX.Editor.graft = function(e, t, i, o) {
  o = o || t && t.ownerDocument || document;
  var n;
  if (void 0 === i) throw "Can't graft an undefined value";
  if (i.constructor == String) n = o.createTextNode(i);
  else
    for (var r = 0; i.length > r; r++) {
      if (0 === r && i[r].constructor == String) {
        var s;
        if (s = i[r].match(/^([a-z][a-z0-9]*)\.([^\s\.]+)$/i)) {
          n = o.createElementNS(e, s[1]), n.setAttributeNS(null, "class", s[2]);
          continue
        }
        if (s = i[r].match(/^([a-z][a-z0-9]*)$/i)) {
          n = o.createElementNS(e, s[1]);
          continue
        }
        n = o.createElementNS(e, "span"), n.setAttribute(null, "class", "namelessFromLOL")
      }
      if (void 0 === i[r]) throw "Can't graft an undefined value in a list!";
      if (i[r].constructor == String || i[r].constructor == Array) this.graft(e, n, i[r], o);
      else if (i[r].constructor == Number) this.graft(e, n, "" + i[r], o);
      else if (i[r].constructor == Object)
        for (var a in i[r]) n.setAttributeNS(null, a, i[r][a])
    }
  return t && t.appendChild && t.appendChild(n), n
}, ORYX.Editor.provideId = function() {
  for (var e = [], t = "0123456789ABCDEF", i = 0; 36 > i; i++) e[i] = Math.floor(16 * Math.random());
  e[14] = 4, e[19] = 8 | 3 & e[19];
  for (var i = 0; 36 > i; i++) e[i] = t[e[i]];
  return e[8] = e[13] = e[18] = e[23] = "-", "oryx_" + e.join("")
}, ORYX.Editor.resizeFix = function() {
  ORYX.Editor._resizeFixTimeout || (ORYX.Editor._resizeFixTimeout = window.setTimeout(function() {
    window.resizeBy(1, 1), window.resizeBy(-1, -1), ORYX.Editor._resizefixTimeout = null
  }, 100))
}, ORYX.Editor.Cookie = {
  callbacks: [],
  onChange: function(e, t) {
    this.callbacks.push(e), this.start(t)
  },
  start: function(e) {
    if (!this.pe) {
      var t = document.cookie;
      this.pe = new PeriodicalExecuter(function() {
        t != document.cookie && (t = document.cookie, this.callbacks.each(function(e) {
          e(this.getParams())
        }.bind(this)))
      }.bind(this), (e || 1e4) / 1e3)
    }
  },
  stop: function() {
    this.pe && (this.pe.stop(), this.pe = null)
  },
  getParams: function() {
    var e = {},
      t = document.cookie;
    return t.split("; ").each(function(t) {
      e[t.split("=")[0]] = t.split("=")[1]
    }), e
  },
  toString: function() {
    return document.cookie
  }
}, ORYX.Editor.SVGClassElementsAreAvailable = !0, ORYX.Editor.setMissingClasses = function() {
  try {} catch (e) {
    ORYX.Editor.SVGClassElementsAreAvailable = !1, SVGSVGElement = "" + document.createElementNS("http://www.w3.org/2000/svg", "svg"), SVGGElement = "" + document.createElementNS("http://www.w3.org/2000/svg", "g"), SVGPathElement = "" + document.createElementNS("http://www.w3.org/2000/svg", "path"), SVGTextElement = "" + document.createElementNS("http://www.w3.org/2000/svg", "text"), SVGRectElement = "" + document.createElementNS("http://www.w3.org/2000/svg", "rect"), SVGImageElement = "" + document.createElementNS("http://www.w3.org/2000/svg", "image"), SVGCircleElement = "" + document.createElementNS("http://www.w3.org/2000/svg", "circle"), SVGEllipseElement = "" + document.createElementNS("http://www.w3.org/2000/svg", "ellipse"), SVGLineElement = "" + document.createElementNS("http://www.w3.org/2000/svg", "line"), SVGPolylineElement = "" + document.createElementNS("http://www.w3.org/2000/svg", "polyline"), SVGPolygonElement = "" + document.createElementNS("http://www.w3.org/2000/svg", "polygon")
  }
}, ORYX.Editor.checkClassType = function(e, t) {
  return ORYX.Editor.SVGClassElementsAreAvailable ? e instanceof t : e == t
}, !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), new function() {
  ORYX.Core.UIEnableDrag = function(e, t, i) {
    this.uiObj = t;
    var o = t.bounds.upperLeft(),
      n = t.node.getScreenCTM();
    this.faktorXY = {
      x: n.a,
      y: n.d
    }, this.scrollNode = t.node.ownerSVGElement.parentNode.parentNode, this.offSetPosition = {
      x: Event.pointerX(e) - o.x * this.faktorXY.x,
      y: Event.pointerY(e) - o.y * this.faktorXY.y
    }, this.offsetScroll = {
      x: this.scrollNode.scrollLeft,
      y: this.scrollNode.scrollTop
    }, this.dragCallback = ORYX.Core.UIDragCallback.bind(this), this.disableCallback = ORYX.Core.UIDisableDrag.bind(this), this.movedCallback = i ? i.movedCallback : void 0, this.upCallback = i ? i.upCallback : void 0, document.documentElement.addEventListener(ORYX.CONFIG.EVENT_MOUSEUP, this.disableCallback, !0), document.documentElement.addEventListener(ORYX.CONFIG.EVENT_MOUSEMOVE, this.dragCallback, !1)
  }, ORYX.Core.UIDragCallback = function(e) {
    var t = {
      x: Event.pointerX(e) - this.offSetPosition.x,
      y: Event.pointerY(e) - this.offSetPosition.y
    };
    t.x -= this.offsetScroll.x - this.scrollNode.scrollLeft, t.y -= this.offsetScroll.y - this.scrollNode.scrollTop, t.x /= this.faktorXY.x, t.y /= this.faktorXY.y, this.uiObj.bounds.moveTo(t), this.movedCallback && this.movedCallback(e)
  }, ORYX.Core.UIDisableDrag = function(e) {
    document.documentElement.removeEventListener(ORYX.CONFIG.EVENT_MOUSEMOVE, this.dragCallback, !1), document.documentElement.removeEventListener(ORYX.CONFIG.EVENT_MOUSEUP, this.disableCallback, !0), this.upCallback && this.upCallback(e), this.upCallback = void 0, this.movedCallback = void 0, Event.stop(e)
  }, ORYX.Core.MoveDockersCommand = ORYX.Core.Command.extend({
    construct: function(e) {
      this.dockers = $H(e), this.edges = $H({})
    },
    execute: function() {
      return this.changes ? (this.executeAgain(), void 0) : (this.changes = $H({}), this.dockers.values().each(function(e) {
        var t = e.docker.parent;
        t && (this.changes[t.getId()] || (this.changes[t.getId()] = {
          edge: t,
          oldDockerPositions: t.dockers.map(function(e) {
            return e.bounds.center()
          })
        }), e.docker.bounds.moveBy(e.offset), this.edges[t.getId()] = t, e.docker.update())
      }.bind(this)), this.edges.each(function(e) {
        this.updateEdge(e.value), this.changes[e.value.getId()] && (this.changes[e.value.getId()].dockerPositions = e.value.dockers.map(function(e) {
          return e.bounds.center()
        }))
      }.bind(this)), void 0)
    },
    updateEdge: function(e) {
      e._update(!0), [e.getOutgoingShapes(), e.getIncomingShapes()].flatten().invoke("_update", [!0])
    },
    executeAgain: function() {
      this.changes.values().each(function(e) {
        this.removeAllDocker(e.edge), e.dockerPositions.each(function(t, i) {
          if (0 != i && i != e.dockerPositions.length - 1) {
            var o = e.edge.createDocker(void 0, t);
            o.bounds.centerMoveTo(t), o.update()
          }
        }.bind(this)), this.updateEdge(e.edge)
      }.bind(this))
    },
    rollback: function() {
      this.changes.values().each(function(e) {
        this.removeAllDocker(e.edge), e.oldDockerPositions.each(function(t, i) {
          if (0 != i && i != e.oldDockerPositions.length - 1) {
            var o = e.edge.createDocker(void 0, t);
            o.bounds.centerMoveTo(t), o.update()
          }
        }.bind(this)), this.updateEdge(e.edge)
      }.bind(this))
    },
    removeAllDocker: function(e) {
      e.dockers.slice(1, e.dockers.length - 1).each(function(t) {
        e.removeDocker(t)
      })
    }
  })
}, !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.Shape = {
  construct: function(e, t, i) {
    arguments.callee.$.construct.apply(this, arguments), this.facade = i, this.dockers = [], this.magnets = [], this._defaultMagnet, this.incoming = [], this.outgoing = [], this.nodes = [], this._dockerChangedCallback = this._dockerChanged.bind(this), this._labels = new Hash, this.node = ORYX.Editor.graft("http://www.w3.org/2000/svg", null, ["g", {
      id: "svg-" + this.resourceId
    },
      ["g", {
        "class": "stencils"
      },
        ["g", {
          "class": "me"
        }],
        ["g", {
          "class": "children",
          style: "overflow:hidden"
        }],
        ["g", {
          "class": "edge"
        }]
      ],
      ["g", {
        "class": "controls"
      },
        ["g", {
          "class": "dockers"
        }],
        ["g", {
          "class": "magnets"
        }]
      ]
    ])
  },
  update: function() {},
  _update: function() {},
  refresh: function() {
    arguments.callee.$.refresh.apply(this, arguments), this.node.ownerDocument && (this.propertiesChanged.each(function(e) {
      if (e.value)
        if ("activiti-bpmn-disable-compensation" === e.key) {
          var t = this.node.ownerDocument.getElementById(this.id + "compensation");
          t && t.ownerSVGElement && t.setAttributeNS(null, "display", "none")
        } else if ("activiti-bpmn-disable-multiinstance" === e.key) {
          var i = this.node.ownerDocument.getElementById(this.id + "parallel");
          i && i.setAttributeNS(null, "display", "none");
          var o = this.node.ownerDocument.getElementById(this.id + "sequential");
          o && o.setAttributeNS(null, "display", "none")
        } else {
          var n = this.properties[e.key],
            r = this.getStencil().property(e.key);
          if (void 0 != r)
            if (this.propertiesChanged[e.key] = !1, r.type() == ORYX.CONFIG.TYPE_CHOICE) {
              r.refToView().each(function(e) {
                if ("" !== e) {
                  var t = this._labels[this.id + e];
                  t && r.item(n) && t.text(r.item(n).title())
                }
              }.bind(this));
              var s = new Hash;
              r.items().each(function(e) {
                e.refToView().each(function(t) {
                  if ("" != t) {
                    var i = this.node.ownerDocument.getElementById(this.id + t);
                    i && (s[i.id] && n != e.value() || (i.setAttributeNS(null, "display", n == e.value() ? "inherit" : "none"), s[i.id] = i), ORYX.Editor.checkClassType(i, SVGImageElement) && i.setAttributeNS("http://www.w3.org/1999/xlink", "href", i.getAttributeNS("http://www.w3.org/1999/xlink", "href")))
                  }
                }.bind(this))
              }.bind(this))
            } else r.refToView().each(function(e) {
              if ("" !== e) {
                var t = this.id + e;
                if (r.type() !== ORYX.CONFIG.TYPE_KISBPM_MULTIINSTANCE) {
                  if ("cancelactivity" === r.type()) {
                    var i = this.node.ownerDocument.getElementById(this.id + "frame"),
                      o = this.node.ownerDocument.getElementById(this.id + "frame2");
                    "true" === n ? (i.setAttributeNS(null, "display", "inherit"), o.setAttributeNS(null, "display", "inherit")) : (i.setAttributeNS(null, "display", "none"), o.setAttributeNS(null, "display", "none"))
                  }
                  var s = this.node.ownerDocument.getElementById(t);
                  if (!s || !s.ownerSVGElement) {
                    if (r.type() !== ORYX.CONFIG.TYPE_URL && r.type() !== ORYX.CONFIG.TYPE_DIAGRAM_LINK) return;
                    var a = this.node.ownerDocument.getElementsByTagNameNS("http://www.w3.org/2000/svg", "a");
                    if (s = $A(a).find(function(e) {
                      return e.getAttributeNS(null, "id") === t
                    }), !s) return
                  }
                  if (r.complexAttributeToView()) {
                    var l = this._labels[t];
                    if (l) try {
                      propJson = n.evalJSON();
                      var d = propJson[r.complexAttributeToView()];
                      l.text(d ? d : n)
                    } catch (c) {
                      l.text(n)
                    }
                  } else switch (r.type()) {
                    case ORYX.CONFIG.TYPE_BOOLEAN:
                      "string" == typeof n && (n = "true" === n), s.setAttributeNS(null, "display", n !== r.inverseBoolean() ? "inherit" : "none");
                      break;
                    case ORYX.CONFIG.TYPE_COLOR:
                      r.fill() && ("stop" === s.tagName.toLowerCase() ? (n && (r.lightness() && 1 !== r.lightness() && (n = ORYX.Utils.adjustLightness(n, r.lightness())), s.setAttributeNS(null, "stop-color", n), "radialgradient" === s.parentNode.tagName.toLowerCase() && ORYX.Utils.adjustGradient(s.parentNode, s)), "radialgradient" === s.parentNode.tagName.toLowerCase() && $A(s.parentNode.getElementsByTagName("stop")).each(function(e) {
                        e.setAttributeNS(null, "stop-opacity", n ? e.getAttributeNS(ORYX.CONFIG.NAMESPACE_ORYX, "default-stop-opacity") || 1 : 0)
                      }.bind(this))) : s.setAttributeNS(null, "fill", n)), r.stroke() && s.setAttributeNS(null, "stroke", n);
                      break;
                    case ORYX.CONFIG.TYPE_STRING:
                      var l = this._labels[t];
                      l && l.text(n);
                      break;
                    case ORYX.CONFIG.TYPE_EXPRESSION:
                      var l = this._labels[t];
                      l && l.text(n);
                      break;
                    case ORYX.CONFIG.TYPE_DATASOURCE:
                      var l = this._labels[t];
                      l && l.text(n);
                      break;
                    case ORYX.CONFIG.TYPE_INTEGER:
                      var l = this._labels[t];
                      l && l.text(n);
                      break;
                    case ORYX.CONFIG.TYPE_FLOAT:
                      if (r.fillOpacity() && s.setAttributeNS(null, "fill-opacity", n), r.strokeOpacity() && s.setAttributeNS(null, "stroke-opacity", n), !r.fillOpacity() && !r.strokeOpacity()) {
                        var l = this._labels[t];
                        l && l.text(n)
                      }
                      break;
                    case ORYX.CONFIG.TYPE_SUB_PROCESS_LINK:
                      if ("subprocesslink" == e) {
                        var p = s.getAttributeNodeNS("", "onclick"),
                          u = s.getAttributeNodeNS("", "style");
                        p && (n && n.id ? (u && (u.textContent = "cursor:pointer;"), p.textContent = "KISBPM.TOOLBAR.ACTIONS.navigateToProcess(" + n.id + ");return false;") : (u && (u.textContent = "cursor:default;"), p.textContent = "return false;"))
                      }
                      break;
                    case ORYX.CONFIG.TYPE_URL:
                  }
                } else if ("multiinstance" === e) {
                  var h = this.node.ownerDocument.getElementById(this.id + "parallel");
                  h && ("Parallel" === n ? h.setAttributeNS(null, "display", "inherit") : h.setAttributeNS(null, "display", "none"));
                  var m = this.node.ownerDocument.getElementById(this.id + "sequential");
                  m && ("Sequential" === n ? m.setAttributeNS(null, "display", "inherit") : m.setAttributeNS(null, "display", "none"))
                }
              }
            }.bind(this))
        }
    }.bind(this)), this._labels.values().each(function(e) {
      e.update()
    }))
  },
  layout: function() {
    var e = this.getStencil().layout();
    e && e.each(function(e) {
      e.shape = this, e.forceExecution = !0, this._delegateEvent(e)
    }.bind(this))
  },
  getLabels: function() {
    return this._labels.values()
  },
  getLabel: function(e) {
    return e ? (this._labels.find(function(t) {
      return t.key.endsWith(e)
    }) || {}).value || null : null
  },
  hideLabels: function() {
    this.getLabels().invoke("hide")
  },
  showLabels: function() {
    var e = this.getLabels();
    e.invoke("show"), e.each(function(e) {
      e.update()
    })
  },
  setOpacity: function(e) {
    e = Math.max(Math.min("number" == typeof e ? e : 1, 1), 0), 1 !== e ? (e += "", this.node.setAttributeNS(null, "fill-opacity", e), this.node.setAttributeNS(null, "stroke-opacity", e)) : (this.node.removeAttributeNS(null, "fill-opacity"), this.node.removeAttributeNS(null, "stroke-opacity"))
  },
  getDockers: function() {
    return this.dockers
  },
  getMagnets: function() {
    return this.magnets
  },
  getDefaultMagnet: function() {
    return this._defaultMagnet ? this._defaultMagnet : this.magnets.length > 0 ? this.magnets[0] : void 0
  },
  getParentShape: function() {
    return this.parent
  },
  getIncomingShapes: function(e) {
    return e && this.incoming.each(e), this.incoming
  },
  getIncomingNodes: function(e) {
    return this.incoming.select(function(t) {
      var i = t instanceof ORYX.Core.Node;
      return i && e && e(t), i
    })
  },
  getOutgoingShapes: function(e) {
    return e && this.outgoing.each(e), this.outgoing
  },
  getOutgoingNodes: function(e) {
    return this.outgoing.select(function(t) {
      var i = t instanceof ORYX.Core.Node;
      return i && e && e(t), i
    })
  },
  getAllDockedShapes: function(e) {
    var t = this.incoming.concat(this.outgoing);
    return e && t.each(e), t
  },
  getCanvas: function() {
    return this.parent instanceof ORYX.Core.Canvas ? this.parent : this.parent instanceof ORYX.Core.Shape ? this.parent.getCanvas() : void 0
  },
  getChildNodes: function(e, t) {
    if (e || t) {
      var i = [];
      return this.nodes.each(function(o) {
        o.isVisible && (t && t(o), i.push(o), e && o instanceof ORYX.Core.Shape && (i = i.concat(o.getChildNodes(e, t))))
      }), i
    }
    return this.nodes.clone()
  },
  add: function(e, t, i) {
    if (e instanceof ORYX.Core.UIObject && !(e instanceof ORYX.Core.Edge))
      if (this.children.member(e)) ORYX.Log.warn("add: ORYX.Core.UIObject is already a child of this object.");
      else {
        e.parent && e.parent.remove(e, !0), void 0 != t ? this.children.splice(t, 0, e) : this.children.push(e), e.parent = this;
        var o;
        if (e instanceof ORYX.Core.Node) o = this.node.childNodes[0].childNodes[1], this.nodes.push(e);
        else if (e instanceof ORYX.Core.Controls.Control) {
          var n = this.node.childNodes[1];
          e instanceof ORYX.Core.Controls.Docker ? (o = n.childNodes[0], this.dockers.length >= 2 ? this.dockers.splice(void 0 !== t ? Math.min(t, this.dockers.length - 1) : this.dockers.length - 1, 0, e) : this.dockers.push(e)) : e instanceof ORYX.Core.Controls.Magnet ? (o = n.childNodes[1], this.magnets.push(e)) : o = n
        } else o = this.node;
        e.node = void 0 != t && o.childNodes.length > t ? o.insertBefore(e.node, o.childNodes[t]) : o.appendChild(e.node), this._changed(), this.eventHandlerCallback && i !== !0 && this.eventHandlerCallback({
          type: ORYX.CONFIG.EVENT_SHAPEADDED,
          shape: e
        })
      } else ORYX.Log.warn("add: Parameter is not of type ORYX.Core.UIObject.")
  },
  remove: function(e, t) {
    if (this.children.member(e)) {
      var i = e.parent;
      this.children = this.children.without(e), e.parent = void 0, e instanceof ORYX.Core.Shape ? e instanceof ORYX.Core.Edge ? (e.removeMarkers(), e.node = this.node.childNodes[0].childNodes[2].removeChild(e.node)) : (e.node = this.node.childNodes[0].childNodes[1].removeChild(e.node), this.nodes = this.nodes.without(e)) : e instanceof ORYX.Core.Controls.Control && (e instanceof ORYX.Core.Controls.Docker ? (e.node = this.node.childNodes[1].childNodes[0].removeChild(e.node), this.dockers = this.dockers.without(e)) : e instanceof ORYX.Core.Controls.Magnet ? (e.node = this.node.childNodes[1].childNodes[1].removeChild(e.node), this.magnets = this.magnets.without(e)) : e.node = this.node.childNodes[1].removeChild(e.node)), this.eventHandlerCallback && t !== !0 && this.eventHandlerCallback({
        type: ORYX.CONFIG.EVENT_SHAPEREMOVED,
        shape: e,
        parent: i
      }), this._changed()
    } else ORYX.Log.warn("remove: ORYX.Core.UIObject is not a child of this object.")
  },
  getIntersectionPoint: function() {
    var e, t, i, o;
    switch (arguments.length) {
      case 2:
        e = arguments[0].x, t = arguments[0].y, i = arguments[1].x, o = arguments[1].y;
        break;
      case 4:
        e = arguments[0], t = arguments[1], i = arguments[2], o = arguments[3];
        break;
      default:
        throw "getIntersectionPoints needs two or four arguments"
    }
    var n, r, s, a, l = this.absoluteBounds();
    if (this.isPointIncluded(e, t, l) ? (n = e, r = t) : (s = e, a = t), this.isPointIncluded(i, o, l) ? (n = i, r = o) : (s = i, a = o), !(n && r && s && a)) return void 0;
    for (var d, c, p = 0, u = 0;;) {
      var p = Math.min(n, s) + (Math.max(n, s) - Math.min(n, s)) / 2,
        u = Math.min(r, a) + (Math.max(r, a) - Math.min(r, a)) / 2;
      this.isPointIncluded(p, u, l) ? (n = p, r = u) : (s = p, a = u);
      var h = Math.sqrt(Math.pow(n - s, 2) + Math.pow(r - a, 2));
      if (d = n + (s - n) / h, c = r + (a - r) / h, !this.isPointIncluded(d, c, l)) break
    }
    return {
      x: d,
      y: c
    }
  },
  isPointIncluded: function() {
    return !1
  },
  containsNode: function(e) {
    for (var t = this.node.firstChild.firstChild; e;) {
      if (e == t) return !0;
      e = e.parentNode
    }
    return !1
  },
  isPointOverOffset: function() {
    return this.isPointIncluded.apply(this, arguments)
  },
  _dockerChanged: function() {},
  createDocker: function(e, t) {
    var i = new ORYX.Core.Controls.Docker({
      eventHandlerCallback: this.eventHandlerCallback
    });
    return i.bounds.registerCallback(this._dockerChangedCallback), t && i.bounds.centerMoveTo(t), this.add(i, e), i
  },
  serialize: function() {
    var e = arguments.callee.$.serialize.apply(this);
    return e.push({
      name: "bounds",
      prefix: "oryx",
      value: this.bounds.serializeForERDF(),
      type: "literal"
    }), this.getOutgoingShapes().each(function(t) {
      e.push({
        name: "outgoing",
        prefix: "raziel",
        value: "#" + ERDF.__stripHashes(t.resourceId),
        type: "resource"
      })
    }.bind(this)), e.push({
      name: "parent",
      prefix: "raziel",
      value: "#" + ERDF.__stripHashes(this.parent.resourceId),
      type: "resource"
    }), e
  },
  deserialize: function(e, t) {
    arguments.callee.$.deserialize.apply(this, arguments);
    var i = e.find(function(e) {
      return "oryx-bounds" == e.prefix + "-" + e.name
    });
    if (i) {
      var o = i.value.replace(/,/g, " ").split(" ").without("");
      this instanceof ORYX.Core.Edge ? (this.dockers.first().isChanged || this.dockers.first().bounds.centerMoveTo(parseFloat(o[0]), parseFloat(o[1])), this.dockers.last().isChanged || this.dockers.last().bounds.centerMoveTo(parseFloat(o[2]), parseFloat(o[3]))) : this.bounds.set(parseFloat(o[0]), parseFloat(o[1]), parseFloat(o[2]), parseFloat(o[3]))
    }
    t && t.labels instanceof Array && t.labels.each(function(e) {
      var t = this.getLabel(e.ref);
      t && t.deserialize(e, this)
    }.bind(this))
  },
  toJSON: function() {
    var e = arguments.callee.$.toJSON.apply(this, arguments),
      t = [],
      i = this.id;
    return this._labels.each(function(e) {
      var o = e.value.serialize();
      o && (o.ref = e.key.replace(i, ""), t.push(o))
    }), t.length > 0 && (e.labels = t), e
  },
  _init: function(e) {
    this._adjustIds(e, 0)
  },
  _adjustIds: function(e, t) {
    if (e instanceof Element) {
      var i = e.getAttributeNS(null, "id");
      i && "" !== i ? e.setAttributeNS(null, "id", this.id + i) : (e.setAttributeNS(null, "id", this.id + "_" + this.id + "_" + t), t++);
      var o = e.getAttributeNS(null, "fill");
      if (o && o.include("url(#") && (o = o.replace(/url\(#/g, "url(#" + this.id), e.setAttributeNS(null, "fill", o)), e.hasChildNodes())
        for (var n = 0; e.childNodes.length > n; n++) t = this._adjustIds(e.childNodes[n], t)
    }
    return t
  },
  toString: function() {
    return "ORYX.Core.Shape " + this.getId()
  }
}, ORYX.Core.Shape = ORYX.Core.AbstractShape.extend(ORYX.Core.Shape), !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.Controls || (ORYX.Core.Controls = {}), ORYX.Core.Controls.Control = ORYX.Core.UIObject.extend({
  toString: function() {
    return "Control " + this.id
  }
}), !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.Controls || (ORYX.Core.Controls = {}), ORYX.Core.Controls.Docker = ORYX.Core.Controls.Control.extend({
  construct: function() {
    arguments.callee.$.construct.apply(this, arguments), this.isMovable = !0, this.bounds.set(0, 0, 16, 16), this.referencePoint = void 0, this._dockedShapeBounds = void 0, this._dockedShape = void 0, this._oldRefPoint1 = void 0, this._oldRefPoint2 = void 0, this.anchorLeft, this.anchorRight, this.anchorTop, this.anchorBottom, this.node = ORYX.Editor.graft("http://www.w3.org/2000/svg", null, ["g"]), this._dockerNode = ORYX.Editor.graft("http://www.w3.org/2000/svg", this.node, ["g", {
      "pointer-events": "all"
    },
      ["circle", {
        cx: "8",
        cy: "8",
        r: "8",
        stroke: "none",
        fill: "none"
      }],
      ["circle", {
        cx: "8",
        cy: "8",
        r: "3",
        stroke: "black",
        fill: "red",
        "stroke-width": "1"
      }]
    ]), this._referencePointNode = ORYX.Editor.graft("http://www.w3.org/2000/svg", this.node, ["g", {
      "pointer-events": "none"
    },
      ["circle", {
        cx: this.bounds.upperLeft().x,
        cy: this.bounds.upperLeft().y,
        r: 3,
        fill: "red",
        "fill-opacity": .4
      }]
    ]), this.hide(), this.addEventHandlers(this._dockerNode), this._updateCallback = this._changed.bind(this)
  },
  update: function() {
    if (this._dockedShape) {
      if (this._dockedShapeBounds && this._dockedShape instanceof ORYX.Core.Node) {
        var e = this._dockedShapeBounds.width(),
          t = this._dockedShapeBounds.height();
        e || (e = 1), t || (t = 1);
        var i = this._dockedShape.bounds.width() / e,
          o = this._dockedShape.bounds.height() / t;
        (1 !== i || 1 !== o) && (this.referencePoint.x *= i, this.referencePoint.y *= o), this._dockedShapeBounds = this._dockedShape.bounds.clone()
      }
      var n = this.parent.dockers.indexOf(this),
        r = this,
        s = this.parent.dockers.length > 1 ? 0 === n ? this.parent.dockers[n + 1] : this.parent.dockers[n - 1] : void 0,
        a = r.getDockedShape() ? r.getAbsoluteReferencePoint() : r.bounds.center(),
        l = s && s.getDockedShape() ? s.getAbsoluteReferencePoint() : s ? s.bounds.center() : void 0;
      if (!l) {
        var d = this._dockedShape.absoluteCenterXY(),
          c = this._dockedShape.bounds.width() * this._dockedShape.bounds.height();
        l = {
          x: a.x + (d.x - a.x) * -c,
          y: a.y + (d.y - a.y) * -c
        }
      }
      var p = void 0;
      if (p = this._dockedShape.getIntersectionPoint(a, l), p || (p = this.getAbsoluteReferencePoint()), this.parent && this.parent.parent) {
        var u = this.parent.parent.absoluteXY();
        p.x -= u.x, p.y -= u.y
      }
      this.bounds.centerMoveTo(p), this._oldRefPoint1 = a, this._oldRefPoint2 = l
    }
    arguments.callee.$.update.apply(this, arguments)
  },
  refresh: function() {
    arguments.callee.$.refresh.apply(this, arguments);
    var e = this.bounds.upperLeft();
    if (this._dockerNode.setAttributeNS(null, "transform", "translate(" + e.x + ", " + e.y + ")"), e = Object.clone(this.referencePoint), e && this._dockedShape) {
      var t;
      t = this.parent instanceof ORYX.Core.Edge ? this._dockedShape.absoluteXY() : this._dockedShape.bounds.upperLeft(), e.x += t.x, e.y += t.y
    } else e = this.bounds.center();
    this._referencePointNode.setAttributeNS(null, "transform", "translate(" + e.x + ", " + e.y + ")")
  },
  setReferencePoint: function(e) {
    this.referencePoint === e || this.referencePoint && e && this.referencePoint.x === e.x && this.referencePoint.y === e.y || (this.referencePoint = e, this._changed())
  },
  getAbsoluteReferencePoint: function() {
    if (this.referencePoint && this._dockedShape) {
      var e = this._dockedShape.absoluteXY();
      return {
        x: this.referencePoint.x + e.x,
        y: this.referencePoint.y + e.y
      }
    }
    return void 0
  },
  setDockedShape: function(e) {
    this._dockedShape && (this._dockedShape.bounds.unregisterCallback(this._updateCallback), this === this.parent.dockers.first() ? (this.parent.incoming = this.parent.incoming.without(this._dockedShape), this._dockedShape.outgoing = this._dockedShape.outgoing.without(this.parent)) : this === this.parent.dockers.last() && (this.parent.outgoing = this.parent.outgoing.without(this._dockedShape), this._dockedShape.incoming = this._dockedShape.incoming.without(this.parent))), this._dockedShape = e, this._dockedShapeBounds = void 0;
    var t = void 0;
    if (this._dockedShape) {
      this === this.parent.dockers.first() ? (this.parent.incoming.push(e), e.outgoing.push(this.parent)) : this === this.parent.dockers.last() && (this.parent.outgoing.push(e), e.incoming.push(this.parent));
      var i = this.bounds,
        o = e.absoluteXY();
      t = {
        x: i.center().x - o.x,
        y: i.center().y - o.y
      }, this._dockedShapeBounds = this._dockedShape.bounds.clone(), this._dockedShape.bounds.registerCallback(this._updateCallback), this.setDockerColor(ORYX.CONFIG.DOCKER_DOCKED_COLOR)
    } else this.setDockerColor(ORYX.CONFIG.DOCKER_UNDOCKED_COLOR);
    this.setReferencePoint(t), this._changed()
  },
  getDockedShape: function() {
    return this._dockedShape
  },
  isDocked: function() {
    return !!this._dockedShape
  },
  setDockerColor: function(e) {
    this._dockerNode.lastChild.setAttributeNS(null, "fill", e)
  },
  preventHiding: function(e) {
    this._preventHiding = Math.max(0, (this._preventHiding || 0) + (e ? 1 : -1))
  },
  hide: function() {
    return this._preventHiding ? !1 : (this.node.setAttributeNS(null, "visibility", "hidden"), this._referencePointNode.setAttributeNS(null, "visibility", "hidden"), this.children.each(function(e) {
      e.hide()
    }), void 0)
  },
  show: function() {
    this.node.setAttributeNS(null, "visibility", "visible"), this.getDockedShape() instanceof ORYX.Core.Edge ? this._referencePointNode.setAttributeNS(null, "visibility", "hidden") : this._referencePointNode.setAttributeNS(null, "visibility", "visible"), this.children.each(function(e) {
      e.show()
    })
  },
  toString: function() {
    return "Docker " + this.id
  }
}), !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.Controls || (ORYX.Core.Controls = {}), ORYX.Core.Controls.Magnet = ORYX.Core.Controls.Control.extend({
  construct: function() {
    arguments.callee.$.construct.apply(this, arguments), this.anchorLeft, this.anchorRight, this.anchorTop, this.anchorBottom, this.bounds.set(0, 0, 16, 16), this.node = ORYX.Editor.graft("http://www.w3.org/2000/svg", null, ["g", {
      "pointer-events": "all"
    },
      ["circle", {
        cx: "8",
        cy: "8",
        r: "4",
        stroke: "none",
        fill: "red",
        "fill-opacity": "0.3"
      }]
    ]), this.hide()
  },
  update: function() {
    arguments.callee.$.update.apply(this, arguments)
  },
  _update: function() {
    arguments.callee.$.update.apply(this, arguments)
  },
  refresh: function() {
    arguments.callee.$.refresh.apply(this, arguments);
    var e = this.bounds.upperLeft();
    this.node.setAttributeNS(null, "transform", "translate(" + e.x + ", " + e.y + ")")
  },
  show: function() {
    arguments.callee.$.show.apply(this, arguments)
  },
  toString: function() {
    return "Magnet " + this.id
  }
}), !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.Node = {
  construct: function(e, t, i) {
    arguments.callee.$.construct.apply(this, arguments), this.isSelectable = !0, this.isMovable = !0, this._dockerUpdated = !1, this.facade = i, this._oldBounds = new ORYX.Core.Bounds, this._svgShapes = [], this.minimumSize = void 0, this.maximumSize = void 0, this.isHorizontallyResizable = !1, this.isVerticallyResizable = !1, this.dataId = void 0, this._init(this._stencil.view()), this.forcedHeight = -1
  },
  _update: function() {
    if (this.dockers.invoke("update"), this.isChanged) {
      var e = this.bounds,
        t = this._oldBounds;
      if (this.isResized) {
        var i = e.width() / t.width(),
          o = e.height() / t.height();
        this._svgShapes.each(function(n) {
          n.isHorizontallyResizable && (n.width = n.oldWidth * i), n.isVerticallyResizable && (n.height = n.oldHeight * o);
          var r, s = n.anchorLeft,
            a = n.anchorRight;
          a ? (r = t.width() - (n.oldX + n.oldWidth), s ? n.width = e.width() - n.x - r : n.x = e.width() - (r + n.width)) : s || (n.x = i * n.oldX, n.isHorizontallyResizable || (n.x = n.x + n.width * i / 2 - n.width / 2));
          var l = n.anchorTop,
            d = n.anchorBottom;
          d ? (r = t.height() - (n.oldY + n.oldHeight), l ? n.height = e.height() - n.y - r : n._isYLocked || (n.y = e.height() - (r + n.height))) : l || (n.y = o * n.oldY, n.isVerticallyResizable || (n.y = n.y + n.height * o / 2 - n.height / 2))
        });
        var n = {
          x: 0,
          y: 0
        };
        this.isHorizontallyResizable || e.width() === t.width() || (n.x = t.width() - e.width()), this.isVerticallyResizable || e.height() === t.height() || (n.y = t.height() - e.height()), (0 !== n.x || 0 !== n.y) && e.extend(n), n = {
          x: 0,
          y: 0
        };
        var r, s;
        this.minimumSize && (ORYX.Log.debug("Shape (%0)'s min size: (%1x%2)", this, this.minimumSize.width, this.minimumSize.height), r = this.minimumSize.width - e.width(), r > 0 && (n.x += r), s = this.minimumSize.height - e.height(), s > 0 && (n.y += s)), this.maximumSize && (ORYX.Log.debug("Shape (%0)'s max size: (%1x%2)", this, this.maximumSize.width, this.maximumSize.height), r = e.width() - this.maximumSize.width, r > 0 && (n.x -= r), s = e.height() - this.maximumSize.height, s > 0 && (n.y -= s)), (0 !== n.x || 0 !== n.y) && e.extend(n);
        var a, l, d, c, p, u, h, i = e.width() / t.width(),
          o = e.height() / t.height();
        this.magnets.each(function(n) {
          a = n.anchorLeft, l = n.anchorRight, d = n.anchorTop, c = n.anchorBottom, p = n.bounds.center(), u = a ? p.x : l ? e.width() - (t.width() - p.x) : p.x * i, h = d ? p.y : c ? e.height() - (t.height() - p.y) : p.y * o, (p.x !== u || p.y !== h) && n.bounds.centerMoveTo(u, h)
        }), this.getLabels().each(function(n) {
          n.isAnchorLeft() || (n.isAnchorRight() ? n.setX(e.width() - (t.width() - n.oldX)) : n.setX((n.position ? n.position.x : n.x) * i)), n.isAnchorTop() || (n.isAnchorBottom() ? n.setY(e.height() - (t.height() - n.oldY)) : n.setY((n.position ? n.position.y : n.y) * o)), n.position && (n.isOriginAnchorLeft() || (n.isOriginAnchorRight() ? n.setOriginX(e.width() - (t.width() - n.oldX)) : n.setOriginX(n.x * i)), n.isOriginAnchorTop() || (n.isOriginAnchorBottom() ? n.setOriginY(e.height() - (t.height() - n.oldY)) : n.setOriginY(n.y * o)))
        });
        var m = this.dockers[0];
        m && (m.bounds.unregisterCallback(this._dockerChangedCallback), this._dockerUpdated || (m.bounds.centerMoveTo(this.bounds.center()), this._dockerUpdated = !1), m.update(), m.bounds.registerCallback(this._dockerChangedCallback)), this.isResized = !1
      }
      this.refresh(), this.isChanged = !1, this._oldBounds = this.bounds.clone()
    }
    this.children.each(function(e) {
      e instanceof ORYX.Core.Controls.Docker || e._update()
    }), this.dockers.length > 0 && !this.dockers.first().getDockedShape() && this.dockers.each(function(e) {
      e.bounds.centerMoveTo(this.bounds.center())
    }.bind(this))
  },
  refresh: function() {
    arguments.callee.$.refresh.apply(this, arguments);
    var e = this.bounds.upperLeft().x,
      t = this.bounds.upperLeft().y;
    this.node.firstChild.setAttributeNS(null, "transform", "translate(" + e + ", " + t + ")"), this.node.childNodes[1].childNodes[1].setAttributeNS(null, "transform", "translate(" + e + ", " + t + ")"), this._svgShapes.each(function(e) {
      e.update()
    })
  },
  _dockerChanged: function() {
    var e = this.dockers[0];
    this.bounds.centerMoveTo(e.bounds.center()), this._dockerUpdated = !0
  },
  _initSVGShapes: function(e) {
    var t = [];
    try {
      var i = new ORYX.Core.SVG.SVGShape(e);
      t.push(i)
    } catch (o) {}
    if (e.hasChildNodes())
      for (var n = 0; e.childNodes.length > n; n++) t = t.concat(this._initSVGShapes(e.childNodes[n]));
    return t
  },
  isPointIncluded: function(e, t, i) {
    var o = i && i instanceof ORYX.Core.Bounds ? i : this.absoluteBounds();
    if (!o.isIncluded(e, t)) return !1;
    var n = o.upperLeft(),
      r = e - n.x,
      s = t - n.y,
      a = 0;
    do var l = this._svgShapes[a++].isPointIncluded(r, s); while (!l && this._svgShapes.length > a);
    return l
  },
  isPointOverOffset: function(e, t) {
    var i = arguments.callee.$.isPointOverOffset.apply(this, arguments);
    if (i) {
      var o = this.absoluteBounds();
      if (o.widen(-ORYX.CONFIG.BORDER_OFFSET), !o.isIncluded(e, t)) return !0
    }
    return !1
  },
  serialize: function() {
    var e = arguments.callee.$.serialize.apply(this);
    this.dockers.each(function(t) {
      if (t.getDockedShape()) {
        var i = t.referencePoint;
        i = i ? i : t.bounds.center(), e.push({
          name: "docker",
          prefix: "oryx",
          value: $H(i).values().join(","),
          type: "literal"
        })
      }
    }.bind(this));
    try {
      var t = this.getStencil().serialize();
      t.type && (t.shape = this, t.data = e, t.result = void 0, t.forceExecution = !0, this._delegateEvent(t), t.result && (e = t.result))
    } catch (i) {}
    return e
  },
  deserialize: function(e) {
    arguments.callee.$.deserialize.apply(this, arguments);
    try {
      var t = this.getStencil().deserialize();
      t.type && (t.shape = this, t.data = e, t.result = void 0, t.forceExecution = !0, this._delegateEvent(t), t.result && (e = t.result))
    } catch (i) {}
    var o = e.findAll(function(e) {
      return "raziel-outgoing" == e.prefix + "-" + e.name
    });
    if (o.each(function(e) {
      if (this.parent) {
        var t = this.getCanvas().getChildShapeByResourceId(e.value);
        t && (t instanceof ORYX.Core.Edge ? (t.dockers.first().setDockedShape(this), t.dockers.first().setReferencePoint(t.dockers.first().bounds.center())) : t.dockers.length > 0 && t.dockers.first().setDockedShape(this))
      }
    }.bind(this)), 1 === this.dockers.length) {
      var n;
      if (n = e.find(function(e) {
        return "oryx-dockers" == e.prefix + "-" + e.name
      })) {
        var r = n.value.replace(/,/g, " ").split(" ").without("").without("#");
        2 === r.length && this.dockers[0].getDockedShape() ? this.dockers[0].setReferencePoint({
          x: parseFloat(r[0]),
          y: parseFloat(r[1])
        }) : this.dockers[0].bounds.centerMoveTo(parseFloat(r[0]), parseFloat(r[1]))
      }
    }
  },
  _init: function(e) {
    arguments.callee.$._init.apply(this, arguments);
    var t = e.getElementsByTagName("g")[0],
      i = e.ownerDocument.createAttribute("id");
    i.nodeValue = this.id, t.setAttributeNode(i);
    var o = this.node.childNodes[0].childNodes[0];
    t = o.appendChild(t), this.addEventHandlers(t.parentNode);
    var n = t.getAttributeNS(ORYX.CONFIG.NAMESPACE_ORYX, "minimumSize");
    if (n) {
      n = n.replace("/,/g", " ");
      var r = n.split(" ");
      r = r.without(""), this.minimumSize = r.length > 1 ? {
        width: parseFloat(r[0]),
        height: parseFloat(r[1])
      } : {
        width: 1,
        height: 1
      }
    }
    var s = t.getAttributeNS(ORYX.CONFIG.NAMESPACE_ORYX, "maximumSize");
    if (s) {
      s = s.replace("/,/g", " ");
      var a = s.split(" ");
      a = a.without(""), a.length > 1 && (this.maximumSize = {
        width: parseFloat(a[0]),
        height: parseFloat(a[1])
      })
    }
    if (this.minimumSize && this.maximumSize && (this.minimumSize.width > this.maximumSize.width || this.minimumSize.height > this.maximumSize.height)) throw this + ": Minimum Size must be greater than maxiumSize.";
    this._svgShapes = this._initSVGShapes(t);
    var l = {
        x: void 0,
        y: void 0
      },
      d = {
        x: void 0,
        y: void 0
      },
      c = this;
    this._svgShapes.each(function(e) {
      l.x = void 0 !== l.x ? Math.min(l.x, e.x) : e.x, l.y = void 0 !== l.y ? Math.min(l.y, e.y) : e.y, d.x = void 0 !== d.x ? Math.max(d.x, e.x + e.width) : e.x + e.width, d.y = void 0 !== d.y ? Math.max(d.y, e.y + e.height) : e.y + e.height, e.isHorizontallyResizable && (c.isHorizontallyResizable = !0, c.isResizable = !0), e.isVerticallyResizable && (c.isVerticallyResizable = !0, c.isResizable = !0), e.anchorTop && e.anchorBottom && (c.isVerticallyResizable = !0, c.isResizable = !0), e.anchorLeft && e.anchorRight && (c.isHorizontallyResizable = !0, c.isResizable = !0)
    }), this._svgShapes.each(function(e) {
      e.x -= l.x, e.y -= l.y, e.update()
    });
    var p = l.x,
      u = l.y;
    d.x -= p, d.y -= u, l.x = 0, l.y = 0, 0 === d.x && (d.x = 1), 0 === d.y && (d.y = 1), this._oldBounds.set(l, d), this.bounds.set(l, d);
    var h = e.getElementsByTagNameNS(ORYX.CONFIG.NAMESPACE_ORYX, "magnets");
    if (h && h.length > 0) {
      h = $A(h[0].getElementsByTagNameNS(ORYX.CONFIG.NAMESPACE_ORYX, "magnet"));
      var c = this;
      h.each(function(e) {
        var t = new ORYX.Core.Controls.Magnet({
            eventHandlerCallback: c.eventHandlerCallback
          }),
          i = parseFloat(e.getAttributeNS(ORYX.CONFIG.NAMESPACE_ORYX, "cx")),
          o = parseFloat(e.getAttributeNS(ORYX.CONFIG.NAMESPACE_ORYX, "cy"));
        t.bounds.centerMoveTo({
          x: i - p,
          y: o - u
        });
        var n = e.getAttributeNS(ORYX.CONFIG.NAMESPACE_ORYX, "anchors");
        if (n) {
          n = n.replace("/,/g", " "), n = n.split(" ").without("");
          for (var r = 0; n.length > r; r++) switch (n[r].toLowerCase()) {
            case "left":
              t.anchorLeft = !0;
              break;
            case "right":
              t.anchorRight = !0;
              break;
            case "top":
              t.anchorTop = !0;
              break;
            case "bottom":
              t.anchorBottom = !0
          }
        }
        if (c.add(t), !this._defaultMagnet) {
          var s = e.getAttributeNS(ORYX.CONFIG.NAMESPACE_ORYX, "default");
          s && "yes" === s.toLowerCase() && (c._defaultMagnet = t)
        }
      })
    } else {
      var m = new ORYX.Core.Controls.Magnet;
      m.bounds.centerMoveTo(this.bounds.width() / 2, this.bounds.height() / 2), this.add(m)
    }
    var f = e.getElementsByTagNameNS(ORYX.CONFIG.NAMESPACE_ORYX, "docker");
    if (f && f.length > 0) {
      f = f[0];
      var g = this.createDocker(),
        v = parseFloat(f.getAttributeNS(ORYX.CONFIG.NAMESPACE_ORYX, "cx")),
        I = parseFloat(f.getAttributeNS(ORYX.CONFIG.NAMESPACE_ORYX, "cy"));
      g.bounds.centerMoveTo({
        x: v - p,
        y: I - u
      });
      var S = f.getAttributeNS(ORYX.CONFIG.NAMESPACE_ORYX, "anchors");
      if (S) {
        S = S.replace("/,/g", " "), S = S.split(" ").without("");
        for (var O = 0; S.length > O; O++) switch (S[O].toLowerCase()) {
          case "left":
            g.anchorLeft = !0;
            break;
          case "right":
            g.anchorRight = !0;
            break;
          case "top":
            g.anchorTop = !0;
            break;
          case "bottom":
            g.anchorBottom = !0
        }
      }
    }
    var R = t.getElementsByTagNameNS(ORYX.CONFIG.NAMESPACE_SVG, "text");
    $A(R).each(function(e) {
      var t = new ORYX.Core.SVG.Label({
        textElement: e,
        shapeId: this.id
      });
      t.x -= p, t.y -= u, this._labels[t.id] = t, t.registerOnChange(this.layout.bind(this)), 0 == this._stencil.id().indexOf(ORYX.CONFIG.FORM_ELEMENT_ID_PREFIX) && t.registerOnChange(this.fitToLabels.bind(this))
    }.bind(this))
  },
  fitToLabels: function() {
    var e = 0;
    this.getLabels().each(function(t) {
      var i = t.getY() + t.getHeight();
      i > e && (e = i)
    });
    var t = this.bounds,
      i = !1;
    if (this.minimumSize) {
      var o = this.minimumSize.height;
      o > e && t.height() > o && o > this.forcedHeight ? (t.set(t.upperLeft().x, t.upperLeft().y, t.lowerRight().x, t.upperLeft().y + o), i = !0) : e > o && t.height() != e && e > this.forcedHeight ? (t.set(t.upperLeft().x, t.upperLeft().y, t.lowerRight().x, t.upperLeft().y + e), i = !0) : t.height() > this.forcedHeight && this.forcedHeight > 0 && (t.set(t.upperLeft().x, t.upperLeft().y, t.lowerRight().x, t.upperLeft().y + this.forcedHeight), i = !0)
    }
    if (i && (null != this.facade.getCanvas() && this.facade.getCanvas().update(), this.facade.getSelection().member(this))) {
      var n = this.facade.getSelection();
      this.facade.setSelection([]), this.facade.setSelection(n)
    }
  },
  createDocker: function() {
    var e = new ORYX.Core.Controls.Docker({
      eventHandlerCallback: this.eventHandlerCallback
    });
    return e.bounds.registerCallback(this._dockerChangedCallback), this.dockers.push(e), e.parent = this, e.bounds.registerCallback(this._changedCallback), e
  },
  toString: function() {
    return this._stencil.title() + " " + this.id
  }
}, ORYX.Core.Node = ORYX.Core.Shape.extend(ORYX.Core.Node), NAMESPACE_SVG = "http://www.w3.org/2000/svg", NAMESPACE_ORYX = "http://www.b3mn.org/oryx", !ORYX) var ORYX = {};
if (ORYX.Core || (ORYX.Core = {}), ORYX.Core.Edge = {
  construct: function(e, t) {
    arguments.callee.$.construct.apply(this, arguments), this.isMovable = !0, this.isSelectable = !0, this._dockerUpdated = !1, this._markers = new Hash, this._paths = [], this._interactionPaths = [], this._dockersByPath = new Hash, this._markersByPath = new Hash, this.attachedNodePositionData = new Hash;
    var i = this.node.childNodes[0].childNodes[0];
    i = ORYX.Editor.graft("http://www.w3.org/2000/svg", i, ["g", {
      "pointer-events": "painted"
    }]), this.addEventHandlers(i.parentNode), this._oldBounds = this.bounds.clone(), this._init(this._stencil.view()), t instanceof Array && this.deserialize(t)
  },
  _update: function(e) {
    if (this._dockerUpdated || this.isChanged || e) {
      this.dockers.invoke("update");
      var t = this.bounds.upperLeft(),
        i = this._oldBounds.upperLeft(),
        o = 0 === this._oldBounds.width() ? this.bounds.width() : this._oldBounds.width(),
        n = 0 === this._oldBounds.height() ? this.bounds.height() : this._oldBounds.height(),
        r = t.x - i.x,
        s = t.y - i.y,
        a = this.bounds.width() / o || 1,
        l = this.bounds.height() / n || 1;
      if (this.dockers.each(function(e) {
        if (e.bounds.unregisterCallback(this._dockerChangedCallback), !this._dockerUpdated && (e.bounds.moveBy(r, s), 1 !== a || 1 !== l)) {
          var i = e.bounds.upperLeft().x - t.x,
            o = e.bounds.upperLeft().y - t.y;
          e.bounds.moveTo(t.x + i * a, t.y + o * l)
        }
        e.update(), e.bounds.registerCallback(this._dockerChangedCallback)
      }.bind(this)), this._dockerUpdated) {
        var d = this.dockers.first().bounds.center(),
          c = this.dockers.first().bounds.center();
        this.dockers.each(function(e) {
          var t = e.bounds.center();
          d.x = Math.min(d.x, t.x), d.y = Math.min(d.y, t.y), c.x = Math.max(c.x, t.x), c.y = Math.max(c.y, t.y)
        }.bind(this)), this.bounds.set(Object.clone(d), Object.clone(c))
      }
      t = this.bounds.upperLeft(), i = this._oldBounds.upperLeft(), a = this.bounds.width() / (o || this.bounds.width()), l = this.bounds.height() / (n || this.bounds.height()), r = t.x - i.x, s = t.y - i.y, this.getLabels().each(function(e) {
        if (e.getReferencePoint()) {
          var t = e.getReferencePoint(),
            i = t.segment.from,
            o = t.segment.to;
          if (!(i && i.parent && o && o.parent)) return;
          var n = i.bounds.center(),
            d = o.bounds.center();
          if (n.x === t.segment.fromPosition.x && n.y === t.segment.fromPosition.y && d.x === t.segment.toPosition.x && d.y === t.segment.toPosition.y && !t.dirty) return;
          if (this.parent.initializingShapes) {
            var c = ORYX.Core.Math.getOrthogonalIdentityVector(n, d);
            c.x *= t.distance, c.y *= t.distance, c.x += t.intersection.x, c.y += t.intersection.y, e.setX(c.x), e.setY(c.y), t.segment.fromPosition = n, t.segment.toPosition = d
          } else {
            var p = ORYX.Core.Math.getDistanceBetweenTwoPoints(t.segment.fromPosition, t.segment.toPosition, t.intersection),
              u = ORYX.Core.Math.getPointBetweenTwoPoints(n, d, isNaN(p) ? .5 : p),
              c = ORYX.Core.Math.getOrthogonalIdentityVector(n, d),
              h = 1 === Math.abs(c.y),
              m = 1 === Math.abs(c.x);
            c.x *= t.distance, c.y *= t.distance, c.x += u.x, c.y += u.y;
            var f = h && t.orientation && (t.iorientation || t.orientation).endsWith("r") ? -e.getWidth() : 0,
              g = m && t.orientation && (t.iorientation || t.orientation).startsWith("l") ? -e.getHeight() + 2 : 0;
            e.setX(c.x + f), e.setY(c.y + g), this.updateReferencePointOfLabel(e, u, i, o)
          }
        } else {
          if (e.position && !this.parent.initializingShapes) {
            var v = e.position.x + r * (a || 1);
            v > this.bounds.lowerRight().x && (v += this.bounds.width() - this.bounds.width() / (a || 1));
            var I = e.position.y + s * (l || 1);
            return I > this.bounds.lowerRight().y && (I += this.bounds.height() - this.bounds.height() / (l || 1)), e.setX(v), e.setY(I), void 0
          }
          switch (e.getEdgePosition()) {
            case "starttop":
              var S = this._getAngle(this.dockers[0], this.dockers[1]),
                O = this.dockers.first().bounds.center();
              90 >= S || S > 270 ? (e.horizontalAlign("left"), e.verticalAlign("bottom"), e.x = O.x + e.getOffsetTop(), e.y = O.y - e.getOffsetTop(), e.rotate(360 - S, O)) : (e.horizontalAlign("right"), e.verticalAlign("bottom"), e.x = O.x - e.getOffsetTop(), e.y = O.y - e.getOffsetTop(), e.rotate(180 - S, O));
              break;
            case "startmiddle":
              var S = this._getAngle(this.dockers[0], this.dockers[1]),
                O = this.dockers.first().bounds.center();
              90 >= S || S > 270 ? (e.horizontalAlign("left"), e.verticalAlign("bottom"), e.x = O.x + 2, e.y = O.y + 4, e.rotate(360 - S, O)) : (e.horizontalAlign("right"), e.verticalAlign("bottom"), e.x = O.x + 1, e.y = O.y + 4, e.rotate(180 - S, O));
              break;
            case "startbottom":
              var S = this._getAngle(this.dockers[0], this.dockers[1]),
                O = this.dockers.first().bounds.center();
              90 >= S || S > 270 ? (e.horizontalAlign("left"), e.verticalAlign("top"), e.x = O.x + e.getOffsetBottom(), e.y = O.y + e.getOffsetBottom(), e.rotate(360 - S, O)) : (e.horizontalAlign("right"), e.verticalAlign("top"), e.x = O.x - e.getOffsetBottom(), e.y = O.y + e.getOffsetBottom(), e.rotate(180 - S, O));
              break;
            case "midtop":
              var R = this.dockers.length;
              if (0 == R % 2) {
                var S = this._getAngle(this.dockers[R / 2 - 1], this.dockers[R / 2]),
                  E = this.dockers[R / 2 - 1].bounds.center(),
                  y = this.dockers[R / 2].bounds.center(),
                  O = {
                    x: (E.x + y.x) / 2,
                    y: (E.y + y.y) / 2
                  };
                e.horizontalAlign("center"), e.verticalAlign("bottom"), e.x = O.x, e.y = O.y - e.getOffsetTop(), 90 >= S || S > 270 ? e.rotate(360 - S, O) : e.rotate(180 - S, O)
              } else {
                var T = parseInt(R / 2),
                  S = this._getAngle(this.dockers[T], this.dockers[T + 1]),
                  O = this.dockers[T].bounds.center();
                90 >= S || S > 270 ? (e.horizontalAlign("left"), e.verticalAlign("bottom"), e.x = O.x + e.getOffsetTop(), e.y = O.y - e.getOffsetTop(), e.rotate(360 - S, O)) : (e.horizontalAlign("right"), e.verticalAlign("bottom"), e.x = O.x - e.getOffsetTop(), e.y = O.y - e.getOffsetTop(), e.rotate(180 - S, O))
              }
              break;
            case "midbottom":
              var R = this.dockers.length;
              if (0 == R % 2) {
                var S = this._getAngle(this.dockers[R / 2 - 1], this.dockers[R / 2]),
                  E = this.dockers[R / 2 - 1].bounds.center(),
                  y = this.dockers[R / 2].bounds.center(),
                  O = {
                    x: (E.x + y.x) / 2,
                    y: (E.y + y.y) / 2
                  };
                e.horizontalAlign("center"), e.verticalAlign("top"), e.x = O.x, e.y = O.y + e.getOffsetTop(), 90 >= S || S > 270 ? e.rotate(360 - S, O) : e.rotate(180 - S, O)
              } else {
                var T = parseInt(R / 2),
                  S = this._getAngle(this.dockers[T], this.dockers[T + 1]),
                  O = this.dockers[T].bounds.center();
                90 >= S || S > 270 ? (e.horizontalAlign("left"), e.verticalAlign("top"), e.x = O.x + e.getOffsetBottom(), e.y = O.y + e.getOffsetBottom(), e.rotate(360 - S, O)) : (e.horizontalAlign("right"), e.verticalAlign("top"), e.x = O.x - e.getOffsetBottom(), e.y = O.y + e.getOffsetBottom(), e.rotate(180 - S, O))
              }
              break;
            case "endtop":
              var b = this.dockers.length,
                S = this._getAngle(this.dockers[b - 2], this.dockers[b - 1]),
                O = this.dockers.last().bounds.center();
              90 >= S || S > 270 ? (e.horizontalAlign("right"), e.verticalAlign("bottom"), e.x = O.x - e.getOffsetTop(), e.y = O.y - e.getOffsetTop(), e.rotate(360 - S, O)) : (e.horizontalAlign("left"), e.verticalAlign("bottom"), e.x = O.x + e.getOffsetTop(), e.y = O.y - e.getOffsetTop(), e.rotate(180 - S, O));
              break;
            case "endbottom":
              var b = this.dockers.length,
                S = this._getAngle(this.dockers[b - 2], this.dockers[b - 1]),
                O = this.dockers.last().bounds.center();
              90 >= S || S > 270 ? (e.horizontalAlign("right"), e.verticalAlign("top"), e.x = O.x - e.getOffsetBottom(), e.y = O.y + e.getOffsetBottom(), e.rotate(360 - S, O)) : (e.horizontalAlign("left"), e.verticalAlign("top"), e.x = O.x + e.getOffsetBottom(), e.y = O.y + e.getOffsetBottom(), e.rotate(180 - S, O))
          }
        }
      }.bind(this)), this.children.each(function(e) {
        e instanceof ORYX.Core.Node && this.calculatePositionOfAttachedChildNode.call(this, e)
      }.bind(this)), this.refreshAttachedNodes(), this.refresh(), this.isChanged = !1, this._dockerUpdated = !1, this._oldBounds = this.bounds.clone()
    }
    var p = navigator.userAgent;
    (-1 !== navigator.appVersion.indexOf("MSIE 10") || -1 !== p.indexOf("Trident") && -1 !== p.indexOf("rv:11")) && this.node.parentNode.insertBefore(this.node, this.node)
  },
  movePointToUpperLeftOfNode: function(e, t) {
    e.x -= t.width() / 2, e.y -= t.height() / 2
  },
  refreshAttachedNodes: function() {
    this.attachedNodePositionData.values().each(function(e) {
      var t = e.segment.docker1.bounds.center(),
        i = e.segment.docker2.bounds.center();
      this.relativizePoint(t), this.relativizePoint(i);
      var o = {};
      o.x = t.x + e.relativDistanceFromDocker1 * (i.x - t.x), o.y = t.y + e.relativDistanceFromDocker1 * (i.y - t.y), this.movePointToUpperLeftOfNode(o, e.node.bounds), e.node.bounds.moveTo(o), e.node._update()
    }.bind(this))
  },
  calculatePositionOfAttachedChildNode: function(e) {
    var t = {};
    t.x = 0, t.y = 0, this.attachedNodePositionData[e.getId()] ? e.isChanged && this.findEdgeSegmentForNode(e) : (this.attachedNodePositionData[e.getId()] = {}, this.attachedNodePositionData[e.getId()].relativDistanceFromDocker1 = 0, this.attachedNodePositionData[e.getId()].node = e, this.attachedNodePositionData[e.getId()].segment = {}, this.findEdgeSegmentForNode(e))
  },
  findEdgeSegmentForNode: function(e) {
    var t = this.dockers.length,
      o = void 0;
    for (i = 1; t > i; i++) {
      var n = this.dockers[i - 1].bounds.center(),
        r = this.dockers[i].bounds.center();
      this.relativizePoint(n), this.relativizePoint(r);
      var s = e.bounds.center(),
        a = ORYX.Core.Math.distancePointLinie(n, r, s, !0);
      (a || 0 == a) && (!o && 0 != o || o > a) && (o = a, this.attachedNodePositionData[e.getId()].segment.docker1 = this.dockers[i - 1], this.attachedNodePositionData[e.getId()].segment.docker2 = this.dockers[i]), a || o || 0 == o || (this.attachedNodePositionData[e.getId()].relativDistanceFromDocker1 = ORYX.Core.Math.getDistancePointToPoint(s, n) < ORYX.Core.Math.getDistancePointToPoint(s, r) ? 0 : 1, this.attachedNodePositionData[e.getId()].segment.docker1 = this.dockers[i - 1], this.attachedNodePositionData[e.getId()].segment.docker2 = this.dockers[i])
    }(o || 0 == o) && (this.attachedNodePositionData[e.getId()].relativDistanceFromDocker1 = this.getLineParameterForPosition(this.attachedNodePositionData[e.getId()].segment.docker1, this.attachedNodePositionData[e.getId()].segment.docker2, e))
  },
  findSegment: function(e) {
    var t, o = this.dockers.length,
      n = e instanceof ORYX.Core.UIObject ? e.bounds.center() : e;
    for (i = 1; o > i; i++) {
      var r = this.dockers[i - 1].bounds.center(),
        s = this.dockers[i].bounds.center(),
        a = ORYX.Core.Math.distancePointLinie(r, s, n, !0);
      "number" == typeof a && (void 0 === t || t.distance > a) && (t = {
        distance: a,
        fromDocker: this.dockers[i - 1],
        toDocker: this.dockers[i]
      })
    }
    return t
  },
  getLineParameterForPosition: function(e, t, i) {
    var o = e.bounds.center(),
      n = t.bounds.center();
    this.relativizePoint(o), this.relativizePoint(n);
    var r = ORYX.Core.Math.getPointOfIntersectionPointLine(o, n, i.bounds.center(), !0);
    if (!r) return 0;
    var s = ORYX.Core.Math.getDistancePointToPoint(r, o) / ORYX.Core.Math.getDistancePointToPoint(o, n);
    return s
  },
  relativizePoint: function(e) {
    e.x -= this.bounds.upperLeft().x, e.y -= this.bounds.upperLeft().y
  },
  optimizedUpdate: function() {
    var e = function(e) {
      if (e._dockedShape && e._dockedShapeBounds) {
        var t = {
          x: e._dockedShape.bounds.a.x - e._dockedShapeBounds.a.x,
          y: e._dockedShape.bounds.a.y - e._dockedShapeBounds.a.y
        };
        e.bounds.moveBy(t), e._dockedShapeBounds.moveBy(t)
      }
    };
    e(this.dockers.first()), e(this.dockers.last()), this.refresh()
  },
  refresh: function() {
    arguments.callee.$.refresh.apply(this, arguments);
    var e;
    if (this._paths.each(function(t, i) {
      var o = this._dockersByPath[t.id],
        n = void 0,
        r = void 0;
      e ? r = "M" + e.x + " " + e.y : (n = o[0].bounds.center(), e = n, r = "M" + n.x + " " + n.y);
      for (var s = 1; o.length > s; s++) n = o[s].bounds.center(), r = r + "L" + n.x + " " + n.y + " ", e = n;
      t.setAttributeNS(null, "d", r), this._interactionPaths[i].setAttributeNS(null, "d", r)
    }.bind(this)), this.getChildNodes().length > 0) {
      var t = this.bounds.upperLeft().x,
        i = this.bounds.upperLeft().y;
      this.node.firstChild.childNodes[1].setAttributeNS(null, "transform", "translate(" + t + ", " + i + ")")
    }
  },
  getIntersectionPoint: function() {
    var e = Math.floor(this.dockers.length / 2);
    return ORYX.Core.Math.midPoint(this.dockers[e - 1].bounds.center(), this.dockers[e].bounds.center())
  },
  isBoundsIncluded: function(e) {
    var t = this.dockers,
      i = t.length;
    return t.any(function(o, n) {
      if (n == i - 1) return !1;
      var r = o.bounds.center(),
        s = t[n + 1].bounds.center();
      return ORYX.Core.Math.isRectOverLine(r.x, r.y, s.x, s.y, e.a.x, e.a.y, e.b.x, e.b.y)
    })
  },
  isPointIncluded: function(e, t) {
    var i = this.absoluteBounds().isIncluded(e, t, ORYX.CONFIG.OFFSET_EDGE_BOUNDS),
      o = void 0;
    if (i && this.dockers.length > 0) {
      var n, r, s = 0;
      do n = this.dockers[s].bounds.center(), r = this.dockers[++s].bounds.center(), o = ORYX.Core.Math.isPointInLine(e, t, n.x, n.y, r.x, r.y, ORYX.CONFIG.OFFSET_EDGE_BOUNDS); while (!o && this.dockers.length - 1 > s)
    }
    return o
  },
  isPointOverOffset: function() {
    return !1
  },
  containsNode: function(e) {
    return this._paths.include(e) || this._interactionPaths.include(e) ? !0 : !1
  },
  _getAngle: function(e, t) {
    var i = e instanceof ORYX.Core.Controls.Docker ? e.absoluteCenterXY() : e,
      o = t instanceof ORYX.Core.Controls.Docker ? t.absoluteCenterXY() : t;
    return ORYX.Core.Math.getAngle(i, o)
  },
  alignDockers: function() {
    this._update(!0);
    var e = this.dockers.first().bounds.center(),
      t = this.dockers.last().bounds.center(),
      i = t.x - e.x,
      o = t.y - e.y,
      n = this.dockers.length - 1;
    this.dockers.each(function(t, r) {
      var s = r / n;
      t.bounds.unregisterCallback(this._dockerChangedCallback), t.bounds.moveTo(e.x + s * i, e.y + s * o), t.bounds.registerCallback(this._dockerChangedCallback)
    }.bind(this)), this._dockerChanged()
  },
  add: function(e) {
    if (arguments.callee.$.add.apply(this, arguments), e instanceof ORYX.Core.Controls.Docker && this.dockers.include(e)) {
      var t = this._dockersByPath.values()[0];
      t && t.splice(this.dockers.indexOf(e), 0, e), this.handleChildShapesAfterAddDocker(e)
    }
  },
  handleChildShapesAfterAddDocker: function(e) {
    if (!e instanceof ORYX.Core.Controls.Docker) return void 0;
    var t = this.dockers.indexOf(e);
    if (!(t > 0 && this.dockers.length - 1 > t)) return void 0;
    var i = this.dockers[t - 1],
      o = this.dockers[t + 1],
      n = this.getAttachedNodePositionDataForSegment(i, o),
      r = ORYX.Core.Math.getDistancePointToPoint(i.bounds.center(), e.bounds.center()),
      s = ORYX.Core.Math.getDistancePointToPoint(o.bounds.center(), e.bounds.center());
    if (r + s) {
      var a = r / (r + s);
      n.each(function(t) {
        if (a > t.value.relativDistanceFromDocker1) t.value.segment.docker2 = e, t.value.relativDistanceFromDocker1 = t.value.relativDistanceFromDocker1 / a;
        else {
          t.value.segment.docker1 = e;
          var i = 1 - a,
            o = t.value.relativDistanceFromDocker1 - a;
          t.value.relativDistanceFromDocker1 = o / i
        }
      }), this.getLabels().each(function(t) {
        var i = t.getReferencePoint();
        if (i) {
          var o = this.dockers.indexOf(e);
          if (o >= i.segment.fromIndex && i.segment.toIndex >= o) {
            var n = this.findSegment(i.intersection);
            n || (n.fromDocker = i.segment.fromIndex >= this.dockers.length / 2 ? this.dockers[0] : this.dockers[this.dockers.length - 2], n.toDocker = this.dockers[this.dockers.indexOf(from) + 1]);
            var r = n.fromDocker.bounds.center(),
              s = n.toDocker.bounds.center(),
              a = ORYX.Core.Math.getPointOfIntersectionPointLine(r, s, i.intersection, !0);
            this.updateReferencePointOfLabel(t, a, n.fromDocker, n.toDocker, !0)
          }
        }
      }.bind(this)), this.refreshAttachedNodes()
    }
  },
  getAttachedNodePositionDataForSegment: function(e, t) {
    if (!(e instanceof ORYX.Core.Controls.Docker && t instanceof ORYX.Core.Controls.Docker)) return [];
    var i = this.attachedNodePositionData.findAll(function(i) {
      return i.value.segment.docker1 === e && i.value.segment.docker2 === t
    });
    return i ? i : []
  },
  remove: function(e) {
    arguments.callee.$.remove.apply(this, arguments), this.attachedNodePositionData[e.getId()] && delete this.attachedNodePositionData[e.getId()], e instanceof ORYX.Core.Controls.Docker && this.handleChildShapesAfterRemoveDocker(e)
  },
  updateReferencePointOfLabel: function(e, t, i, o, n) {
    if (e.getReferencePoint() && e.isVisible) {
      var r = e.getReferencePoint();
      if (r.orientation && "ce" !== r.orientation) {
        var s = this._getAngle(i, o);
        r.distance >= 0 ? 0 == s ? (e.horizontalAlign("left"), e.verticalAlign("bottom")) : s > 0 && 90 > s ? (e.horizontalAlign("right"), e.verticalAlign("bottom")) : 90 == s ? (e.horizontalAlign("right"), e.verticalAlign("top")) : s > 90 && 180 > s ? (e.horizontalAlign("right"), e.verticalAlign("top")) : 180 == s ? (e.horizontalAlign("left"), e.verticalAlign("top")) : s > 180 && 270 > s ? (e.horizontalAlign("left"), e.verticalAlign("top")) : 270 == s ? (e.horizontalAlign("left"), e.verticalAlign("top")) : s > 270 && 360 >= s && (e.horizontalAlign("left"), e.verticalAlign("bottom")) : 0 == s ? (e.horizontalAlign("left"), e.verticalAlign("top")) : s > 0 && 90 > s ? (e.horizontalAlign("left"), e.verticalAlign("top")) : 90 == s ? (e.horizontalAlign("left"), e.verticalAlign("top")) : s > 90 && 180 > s ? (e.horizontalAlign("left"), e.verticalAlign("bottom")) : 180 == s ? (e.horizontalAlign("left"), e.verticalAlign("bottom")) : s > 180 && 270 > s ? (e.horizontalAlign("right"), e.verticalAlign("bottom")) : 270 == s ? (e.horizontalAlign("right"), e.verticalAlign("top")) : s > 270 && 360 >= s && (e.horizontalAlign("right"), e.verticalAlign("top")), r.iorientation = r.iorientation || r.orientation, r.orientation = ("top" == e.verticalAlign() ? "u" : "l") + ("left" == e.horizontalAlign() ? "l" : "r")
      }
      e.setReferencePoint(jQuery.extend({}, {
        intersection: t,
        segment: {
          from: i,
          fromIndex: this.dockers.indexOf(i),
          fromPosition: i.bounds.center(),
          to: o,
          toIndex: this.dockers.indexOf(o),
          toPosition: o.bounds.center()
        },
        dirty: n || !1
      }, r))
    }
  },
  handleChildShapesAfterRemoveDocker: function(e) {
    e instanceof ORYX.Core.Controls.Docker && (this.attachedNodePositionData.each(function(t) {
      if (t.value.segment.docker1 === e) {
        var i = this.dockers.indexOf(t.value.segment.docker2);
        if (-1 == i) return;
        t.value.segment.docker1 = this.dockers[i - 1]
      } else if (t.value.segment.docker2 === e) {
        var i = this.dockers.indexOf(t.value.segment.docker1);
        if (-1 == i) return;
        t.value.segment.docker2 = this.dockers[i + 1]
      }
    }.bind(this)), this.getLabels().each(function(t) {
      var i = t.getReferencePoint();
      if (i) {
        var o = i.segment.from,
          n = i.segment.to;
        if (o === e || n === e) {
          var r = this.findSegment(i.intersection);
          r ? (o = o === e ? this.dockers[this.dockers.indexOf(n) - 1] : o, n = this.dockers[this.dockers.indexOf(o) + 1]) : (o = r.fromDocker, n = r.toDocker);
          var s = ORYX.Core.Math.getPointOfIntersectionPointLine(o.bounds.center(), n.bounds.center(), i.intersection, !0);
          this.updateReferencePointOfLabel(t, s, o, n, !0)
        }
      }
    }.bind(this)), this.refreshAttachedNodes())
  },
  addDocker: function(e, t) {
    var i, o;
    return this._dockersByPath.any(function(n) {
      return n.value.any(function(r) {
        if (i) {
          var s = i.bounds.center(),
            a = r.bounds.center(),
            l = 1;
          if (!isNaN(screen.logicalXDPI) && !isNaN(screen.systemXDPI)) {
            var d = navigator.userAgent;
            if (d.indexOf("MSIE") >= 0) {
              var c = Math.round(100 * (screen.deviceXDPI / screen.logicalXDPI));
              100 !== c && (l = c / 100)
            }
          }
          if (1 !== l && (e.x = e.x / l, e.y = e.y / l), ORYX.Core.Math.isPointInLine(e.x, e.y, s.x, s.y, a.x, a.y, 10)) {
            var p = this._paths.find(function(e) {
              return e.id === n.key
            });
            if (p) {
              var u = p.getAttributeNS(NAMESPACE_ORYX, "allowDockers");
              if (u && "no" === u.toLowerCase()) return !0
            }
            var h = t ? t : this.createDocker(this.dockers.indexOf(i) + 1, e);
            return h.bounds.centerMoveTo(e), t && this.add(h, this.dockers.indexOf(i) + 1), o = h, !0
          }
          return i = r, !1
        }
        return i = r, !1
      }.bind(this))
    }.bind(this)), o
  },
  removeDocker: function(e) {
    this.dockers.length > 2 && this.dockers.first() !== e && this._dockersByPath.any(function(t) {
      return t.value.member(e) ? e === t.value.last() ? !0 : (this.remove(e), this._dockersByPath[t.key] = t.value.without(e), this.isChanged = !0, this._dockerChanged(), !0) : !1
    }.bind(this))
  },
  removeUnusedDockers: function() {
    var e = $H({});
    return this.dockers.each(function(t, i) {
      if (0 != i && i != this.dockers.length - 1) {
        var o = this.dockers[i - 1]; - 1 != e.values().indexOf(o) && this.dockers[i - 2] && (o = this.dockers[i - 2]);
        var n = this.dockers[i + 1],
          r = o.getDockedShape() && o.referencePoint ? o.getAbsoluteReferencePoint() : o.bounds.center(),
          s = n.getDockedShape() && n.referencePoint ? n.getAbsoluteReferencePoint() : n.bounds.center(),
          a = t.bounds.center();
        ORYX.Core.Math.isPointInLine(a.x, a.y, r.x, r.y, s.x, s.y, 1) && (e[i] = t)
      }
    }.bind(this)), e.each(function(e) {
      this.removeDocker(e.value)
    }.bind(this)), e.values().length > 0 && this._update(!0), e
  },
  _init: function(e) {
    arguments.callee.$._init.apply(this, arguments);
    var t, i, o, n, r = e.getElementsByTagNameNS(NAMESPACE_SVG, "defs");
    if (r.length > 0) {
      r = r[0];
      var s, a = $A(r.getElementsByTagNameNS(NAMESPACE_SVG, "marker")),
        l = this;
      a.each(function(e) {
        try {
          s = new ORYX.Core.SVG.SVGMarker(e.cloneNode(!0)), l._markers[s.id] = s;
          var t, i = $A(s.element.getElementsByTagNameNS(NAMESPACE_SVG, "text"));
          i.each(function(e) {
            t = new ORYX.Core.SVG.Label({
              textElement: e,
              shapeId: this.id
            }), l._labels[t.id] = t
          })
        } catch (o) {}
      })
    }
    var d = e.getElementsByTagNameNS(NAMESPACE_SVG, "g");
    if (0 >= d.length) throw "Edge: No g element found.";
    var c = d[0];
    c.setAttributeNS(null, "id", null);
    var p = !0;
    $A(c.childNodes).each(function(e, r) {
      if (ORYX.Editor.checkClassType(e, SVGPathElement)) {
        e = e.cloneNode(!1);
        var s = this.id + "_" + r;
        e.setAttributeNS(null, "id", s), this._paths.push(e);
        var a = [],
          l = e.getAttributeNS(null, "marker-start");
        if (l && "" !== l) {
          l = l.strip(), l = l.replace(/^url\(#/, "");
          var d = this.getValidMarkerId(l);
          e.setAttributeNS(null, "marker-start", "url(#" + d + ")"), a.push(this._markers[d])
        }
        if (l = e.getAttributeNS(null, "marker-mid"), l && "" !== l) {
          l = l.strip(), l = l.replace(/^url\(#/, "");
          var c = this.getValidMarkerId(l);
          e.setAttributeNS(null, "marker-mid", "url(#" + c + ")"), a.push(this._markers[c])
        }
        if (l = e.getAttributeNS(null, "marker-end"), l && "" !== l) {
          l = l.strip();
          var u = this.getValidMarkerId(l);
          e.setAttributeNS(null, "marker-end", "url(#" + u + ")"), a.push(this._markers[u])
        }
        this._markersByPath[s] = a;
        var h = new PathParser,
          m = new ORYX.Core.SVG.PointsPathHandler;
        if (h.setHandler(m), h.parsePath(e), 4 > m.points.length) throw "Edge: Path has to have two or more points specified.";
        this._dockersByPath[s] = [];
        for (var f = 0; m.points.length > f; f += 2) {
          var g = m.points[f],
            v = m.points[f + 1];
          if (p || f > 0) {
            var I = new ORYX.Core.Controls.Docker({
              eventHandlerCallback: this.eventHandlerCallback
            });
            I.bounds.centerMoveTo(g, v), I.bounds.registerCallback(this._dockerChangedCallback), this.add(I, this.dockers.length), t ? (t = Math.min(g, t), i = Math.min(v, i)) : (t = g, i = v), o ? (o = Math.max(g, o), n = Math.max(v, n)) : (o = g, n = v)
          }
        }
        p = !1
      }
    }.bind(this)), this.bounds.set(t, i, o, n);
    this._oldBounds = this.bounds.clone(), this._paths.reverse();
    var u = [];
    this._paths.each(function(e) {
      u.push(this.node.childNodes[0].childNodes[0].childNodes[0].appendChild(e))
    }.bind(this)), this._paths = u, this._paths.each(function(e) {
      var t = e.cloneNode(!1);
      t.setAttributeNS(null, "id", void 0), t.setAttributeNS(null, "stroke-width", 10), t.setAttributeNS(null, "visibility", "hidden"), t.setAttributeNS(null, "stroke-dasharray", null), t.setAttributeNS(null, "stroke", "black"), t.setAttributeNS(null, "fill", "none"), this._interactionPaths.push(this.node.childNodes[0].childNodes[0].childNodes[0].appendChild(t))
    }.bind(this)), this._paths.reverse(), this._interactionPaths.reverse();
    var h = e.getElementsByTagNameNS(ORYX.CONFIG.NAMESPACE_SVG, "text");
    $A(h).each(function(e) {
      var t = new ORYX.Core.SVG.Label({
        textElement: e,
        shapeId: this.id
      });
      this.node.childNodes[0].childNodes[0].appendChild(t.node), this._labels[t.id] = t, t.registerOnChange(this.layout.bind(this))
    }.bind(this)), this.propertiesChanged.each(function(e) {
      e.value = !0
    })
  },
  getValidMarkerId: function(e) {
    if (e.indexOf('url("#') >= 0) {
      var t = e.replace(/^url\(\"#/, "").replace(/\"\)$/, "");
      return this.id + t
    }
    return e = e.replace(/^url\(#/, ""), this.id.concat(e.replace(/\)$/, ""))
  },
  addMarkers: function(e) {
    this._markers.each(function(t) {
      e.ownerDocument.getElementById(t.value.id) || (t.value.element = e.appendChild(t.value.element))
    })
  },
  removeMarkers: function() {
    var e = this.node.ownerSVGElement;
    if (e) {
      var t = e.getElementsByTagNameNS(NAMESPACE_SVG, "defs");
      t.length > 0 && (t = t[0], this._markers.each(function(e) {
        var i = t.ownerDocument.getElementById(e.value.id);
        i && (e.value.element = t.removeChild(e.value.element))
      }))
    }
  },
  _dockerChanged: function() {
    this._dockerUpdated = !0
  },
  serialize: function() {
    var e = arguments.callee.$.serialize.apply(this),
      t = "";
    this._dockersByPath.each(function(e) {
      e.value.each(function(e) {
        var i = e.getDockedShape() && e.referencePoint ? e.referencePoint : e.bounds.center();
        t = t.concat(i.x + " " + i.y + " ")
      }), t += " # "
    }.bind(this)), e.push({
      name: "dockers",
      prefix: "oryx",
      value: t,
      type: "literal"
    });
    var i = this.dockers.last(),
      o = i.getDockedShape();
    o && e.push({
      name: "target",
      prefix: "raziel",
      value: "#" + ERDF.__stripHashes(o.resourceId),
      type: "resource"
    });
    try {
      var n = this.getStencil().serialize();
      n.type && (n.shape = this, n.data = e, n.result = void 0, n.forceExecution = !0, this._delegateEvent(n), n.result && (e = n.result))
    } catch (r) {}
    return e
  },
  deserialize: function(e) {
    try {
      var t = this.getStencil().deserialize();
      t.type && (t.shape = this, t.data = e, t.result = void 0, t.forceExecution = !0, this._delegateEvent(t), t.result && (e = t.result))
    } catch (i) {}
    var o, n = e.find(function(e) {
      return "raziel-target" == e.prefix + "-" + e.name
    });
    n && (o = this.getCanvas().getChildShapeByResourceId(n.value));
    var r = e.findAll(function(e) {
      return "raziel-outgoing" == e.prefix + "-" + e.name
    });
    r.each(function(e) {
      if (this.parent) {
        var t = this.getCanvas().getChildShapeByResourceId(e.value);
        t && (t == o ? (this.dockers.last().setDockedShape(t), this.dockers.last().setReferencePoint({
          x: t.bounds.width() / 2,
          y: t.bounds.height() / 2
        })) : t instanceof ORYX.Core.Edge && t.dockers.first().setDockedShape(this))
      }
    }.bind(this));
    var s = e.find(function(e) {
      return "oryx" === e.prefix && "dockers" === e.name
    });
    if (s) {
      var a = s.value.split("#").without("").without(" ");
      a.each(function(e, t) {
        var i = e.replace(/,/g, " ").split(" ").without("");
        if (0 === i.length % 2) {
          var o = this._paths[t];
          if (o) {
            if (0 === t)
              for (; this._dockersByPath[o.id].length > 2;) this.removeDocker(this._dockersByPath[o.id][1]);
            else
              for (; this._dockersByPath[o.id].length > 1;) this.removeDocker(this._dockersByPath[o.id][0]);
            var n = this._dockersByPath[o.id];
            if (0 === t) {
              var r = parseFloat(i.shift()),
                s = parseFloat(i.shift());
              n.first().getDockedShape() ? n.first().setReferencePoint({
                x: r,
                y: s
              }) : n.first().bounds.centerMoveTo(r, s)
            }
            s = parseFloat(i.pop()), r = parseFloat(i.pop()), n.last().getDockedShape() ? n.last().setReferencePoint({
              x: r,
              y: s
            }) : n.last().bounds.centerMoveTo(r, s);
            for (var a = 0; i.length > a; a++) {
              r = parseFloat(i[a]), s = parseFloat(i[++a]);
              var l = this.createDocker();
              l.bounds.centerMoveTo(r, s)
            }
          }
        }
      }.bind(this))
    } else this.alignDockers();
    arguments.callee.$.deserialize.apply(this, arguments), this._changed()
  },
  toString: function() {
    return this.getStencil().title() + " " + this.id
  },
  getTarget: function() {
    return this.dockers.last() ? this.dockers.last().getDockedShape() : null
  },
  getSource: function() {
    return this.dockers.first() ? this.dockers.first().getDockedShape() : null
  },
  isDocked: function() {
    var e = !1;
    return this.dockers.each(function(t) {
      if (t.isDocked()) throw e = !0, $break
    }), e
  },
  toJSON: function() {
    var e = arguments.callee.$.toJSON.apply(this, arguments);
    return this.getTarget() && (e.target = {
      resourceId: this.getTarget().resourceId
    }), e
  }
}, ORYX.Core.Edge = ORYX.Core.Shape.extend(ORYX.Core.Edge), !ORYX) var ORYX = {};
if (ORYX.Plugins || (ORYX.Plugins = {}), ORYX.Plugins.AbstractPlugin = Clazz.extend({
  facade: null,
  construct: function(e) {
    this.facade = e, this.facade.registerOnEvent(ORYX.CONFIG.EVENT_LOADED, this.onLoaded.bind(this))
  },
  onLoaded: function() {},
  onSelectionChanged: function() {},
  showOverlay: function(e, t, i, o) {
    e instanceof Array || (e = [e]), e = e.map(function(e) {
      var t = e;
      return "string" == typeof e && (t = this.facade.getCanvas().getChildShapeByResourceId(e), t = t || this.facade.getCanvas().getChildById(e, !0)), t
    }.bind(this)).compact(), this.overlayID || (this.overlayID = this.type + ORYX.Editor.provideId()), this.facade.raiseEvent({
      type: ORYX.CONFIG.EVENT_OVERLAY_SHOW,
      id: this.overlayID,
      shapes: e,
      attributes: t,
      node: i,
      nodePosition: o || "NW"
    })
  },
  hideOverlay: function() {
    this.facade.raiseEvent({
      type: ORYX.CONFIG.EVENT_OVERLAY_HIDE,
      id: this.overlayID
    })
  },
  doTransform: function(e, t) {
    if (!t || !e) return "";
    var i = new DOMParser,
      o = i.parseFromString(e, "text/xml");
    source = t, new Ajax.Request(source, {
      asynchronous: !1,
      method: "get",
      onSuccess: function(e) {
        xsl = e.responseText
      }.bind(this),
      onFailure: function(e) {
        ORYX.Log.error("XSL load failed" + e)
      }.bind(this)
    });
    var n = new XSLTProcessor,
      r = new DOMParser,
      s = r.parseFromString(xsl, "text/xml");
    n.importStylesheet(s);
    try {
      var a = n.transformToFragment(o, document),
        l = (new XMLSerializer).serializeToString(a);
      return l = l.startsWith("<?xml") ? l : '<?xml version="1.0" encoding="UTF-8"?>' + l
    } catch (d) {
      return -1
    }
  },
  openXMLWindow: function(e) {
    window.open("data:application/xml," + encodeURIComponent(e), "_blank", "resizable=yes,width=600,height=600,toolbar=0,scrollbars=yes")
  },
  openDownloadWindow: function(e, t) {
    var i = window.open("");
    if (null != i) {
      i.document.open(), i.document.write("<html><body>");
      var o = i.document.createElement("form");
      i.document.body.appendChild(o);
      var n = function(e, t) {
        var i = document.createElement("input");
        return i.name = e, i.type = "hidden", i.value = t, i
      };
      o.appendChild(n("download", t)), o.appendChild(n("file", e)), o.method = "POST", i.document.write("</body></html>"), i.document.close(), o.action = ORYX.PATH + "/download", o.submit()
    }
  },
  getSerializedDOM: function() {
    var e = DataManager.serializeDOM(this.facade);
    return e = '<?xml version="1.0" encoding="utf-8"?><html xmlns="http://www.w3.org/1999/xhtml" xmlns:b3mn="http://b3mn.org/2007/b3mn" xmlns:ext="http://b3mn.org/2007/ext" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:atom="http://b3mn.org/2007/atom+xhtml"><head profile="http://purl.org/NET/erdf/profile"><link rel="schema.dc" href="http://purl.org/dc/elements/1.1/" /><link rel="schema.dcTerms" href="http://purl.org/dc/terms/ " /><link rel="schema.b3mn" href="http://b3mn.org" /><link rel="schema.oryx" href="http://oryx-editor.org/" /><link rel="schema.raziel" href="http://raziel.org/" /><base href="' + location.href.split("?")[0] + '" /></head><body>' + e + "</body></html>"
  },
  enableReadOnlyMode: function() {
    this.facade.disableEvent(ORYX.CONFIG.EVENT_MOUSEDOWN), this._stopSelectionChange = function() {
      this.facade.getSelection().length > 0 && this.facade.setSelection([])
    }, this.facade.registerOnEvent(ORYX.CONFIG.EVENT_SELECTION_CHANGED, this._stopSelectionChange.bind(this))
  },
  disableReadOnlyMode: function() {
    this.facade.enableEvent(ORYX.CONFIG.EVENT_MOUSEDOWN), this._stopSelectionChange && (this.facade.unregisterOnEvent(ORYX.CONFIG.EVENT_SELECTION_CHANGED, this._stopSelectionChange.bind(this)), this._stopSelectionChange = void 0)
  },
  getRDFFromDOM: function() {
    try {
      var e = "";
      source = ORYX.PATH + "lib/extract-rdf.xsl", new Ajax.Request(source, {
        asynchronous: !1,
        method: "get",
        onSuccess: function(t) {
          e = t.responseText
        }.bind(this),
        onFailure: function(e) {
          ORYX.Log.error("XSL load failed" + e)
        }.bind(this)
      });
      var t = new DOMParser,
        i = t.parseFromString(this.getSerializedDOM(), "text/xml"),
        o = t.parseFromString(e, "text/xml"),
        n = new XSLTProcessor;
      n.importStylesheet(o);
      var r = n.transformToFragment(i, document),
        s = new XMLSerializer;
      return s.serializeToString(r)
    } catch (a) {
      return console.log("error serializing " + a), ""
    }
  },
  isStencilSetExtensionLoaded: function(e) {
    return this.facade.getStencilSets().values().any(function(t) {
      return t.extensions().keys().any(function(t) {
        return t == e
      }.bind(this))
    }.bind(this))
  },
  doLayout: function(e) {
    this.facade.raiseEvent ? this.facade.raiseEvent({
      type: ORYX.CONFIG.EVENT_LAYOUT,
      shapes: e
    }) : this.facade.handleEvents({
      type: ORYX.CONFIG.EVENT_LAYOUT,
      shapes: e
    })
  },
  layoutEdges: function(e, t, i) {
    if (this.facade.isExecutingCommands()) {
      var o = ORYX.Core.Command.extend({
        construct: function(e, t, i, o) {
          this.edges = e, this.node = t, this.plugin = o, this.offset = i;
          var n = t.absoluteXY();
          this.ulo = {
            x: n.x - i.x,
            y: n.y - i.y
          }
        },
        execute: function() {
          return this.changes ? (this.executeAgain(), void 0) : (this.changes = [], this.edges.each(function(e) {
            this.changes.push({
              edge: e,
              oldDockerPositions: e.dockers.map(function(e) {
                return e.bounds.center()
              })
            })
          }.bind(this)), this.edges.findAll(function(e) {
              return e.dockers.length > 2
            }.bind(this)).each(function(e) {
              if (e.dockers.first().getDockedShape() === this.node) {
                var t = e.dockers[1];
                this.align(t.bounds, e.dockers.first()) && t.update()
              } else if (e.dockers.last().getDockedShape() === this.node) {
                var i = e.dockers[e.dockers.length - 2];
                this.align(i.bounds, e.dockers.last()) && i.update()
              }
              return e._update(!0), e.removeUnusedDockers(), this.isBendPointIncluded(e) ? (this.plugin.doLayout(e), void 0) : void 0
            }.bind(this)), this.edges.each(function(e) {
            if (2 == e.dockers.length) {
              var t = e.dockers.first().getAbsoluteReferencePoint() || e.dockers.first().bounds.center(),
                i = e.dockers.last().getAbsoluteReferencePoint() || e.dockers.first().bounds.center();
              (2 > Math.abs(-Math.abs(t.x - i.x) + Math.abs(this.offset.x)) || 2 > Math.abs(-Math.abs(t.y - i.y) + Math.abs(this.offset.y))) && this.plugin.doLayout(e)
            }
          }.bind(this)), this.edges.each(function(e, t) {
            this.changes[t].dockerPositions = e.dockers.map(function(e) {
              return e.bounds.center()
            })
          }.bind(this)), void 0)
        },
        align: function(e, t) {
          var i = t.getAbsoluteReferencePoint() || t.bounds.center(),
            o = e.center().x - i.x,
            n = e.center().y - i.y;
          if (3 > Math.abs(-Math.abs(o) + Math.abs(this.offset.x)) && void 0 === this.offset.xs && e.moveBy({
            x: -o,
            y: 0
          }), 3 > Math.abs(-Math.abs(n) + Math.abs(this.offset.y)) && void 0 === this.offset.ys && e.moveBy({
            y: -n,
            x: 0
          }), void 0 !== this.offset.xs || void 0 !== this.offset.ys) {
            var r = t.getDockedShape().absoluteXY();
            o = e.center().x - (r.x + (i.x - r.x) / this.offset.xs), n = e.center().y - (r.y + (i.y - r.y) / this.offset.ys), 3 > Math.abs(-Math.abs(o) + Math.abs(this.offset.x)) && e.moveBy({
              x: -(e.center().x - i.x),
              y: 0
            }), 3 > Math.abs(-Math.abs(n) + Math.abs(this.offset.y)) && e.moveBy({
              y: -(e.center().y - i.y),
              x: 0
            })
          }
        },
        isBendPointIncluded: function(e) {
          var t = e.dockers.first().getDockedShape(),
            i = e.dockers.last().getDockedShape();
          return t && (t = t.absoluteBounds(), t.widen(5)), i && (i = i.absoluteBounds(), i.widen(20)), e.dockers.any(function(o, n) {
            var r = o.bounds.center();
            return 0 != n && n != e.dockers.length - 1 && (t && t.isIncluded(r) || i && i.isIncluded(r))
          })
        },
        removeAllDocker: function(e) {
          e.dockers.slice(1, e.dockers.length - 1).each(function(t) {
            e.removeDocker(t)
          })
        },
        executeAgain: function() {
          this.changes.each(function(e) {
            this.removeAllDocker(e.edge), e.dockerPositions.each(function(t, i) {
              if (0 != i && i != e.dockerPositions.length - 1) {
                var o = e.edge.createDocker(void 0, t);
                o.bounds.centerMoveTo(t), o.update()
              }
            }.bind(this)), e.edge._update(!0)
          }.bind(this))
        },
        rollback: function() {
          this.changes.each(function(e) {
            this.removeAllDocker(e.edge), e.oldDockerPositions.each(function(t, i) {
              if (0 != i && i != e.oldDockerPositions.length - 1) {
                var o = e.edge.createDocker(void 0, t);
                o.bounds.centerMoveTo(t), o.update()
              }
            }.bind(this)), e.edge._update(!0)
          }.bind(this))
        }
      });
      this.facade.executeCommands([new o(t, e, i, this)])
    }
  }
}), !ORYX) var ORYX = {};
if (ORYX.Plugins || (ORYX.Plugins = {}), ORYX.Plugins.AbstractLayouter = ORYX.Plugins.AbstractPlugin.extend({
  layouted: [],
  construct: function() {
    arguments.callee.$.construct.apply(this, arguments), this.facade.registerOnEvent(ORYX.CONFIG.EVENT_LAYOUT, this._initLayout.bind(this))
  },
  isIncludedInLayout: function(e) {
    return this.layouted instanceof Array || (this.layouted = [this.layouted].compact()), 0 >= this.layouted.length ? !0 : this.layouted.any(function(t) {
      return "string" == typeof t ? e.getStencil().id().include(t) : e instanceof t
    })
  },
  _initLayout: function(e) {
    var t = [e.shapes].flatten().compact(),
      i = t.findAll(function(e) {
        return this.isIncludedInLayout(e)
      }.bind(this));
    i.length > 0 && this.layout(i)
  },
  layout: function() {
    throw Error("Layouter has to implement the layout function.")
  }
}), ORYX.Plugins || (ORYX.Plugins = {}), ORYX.Plugins.Edit = Clazz.extend({
  construct: function(e) {
    this.facade = e, this.clipboard = new ORYX.Plugins.Edit.ClipBoard, this.facade.offer({
      name: ORYX.I18N.Edit.cut,
      description: ORYX.I18N.Edit.cutDesc,
      icon: ORYX.PATH + "images/cut.png",
      keyCodes: [{
        metaKeys: [ORYX.CONFIG.META_KEY_META_CTRL],
        keyCode: 88,
        keyAction: ORYX.CONFIG.KEY_ACTION_DOWN
      }],
      functionality: this.callEdit.bind(this, this.editCut),
      group: ORYX.I18N.Edit.group,
      index: 1,
      minShape: 1
    }), this.facade.offer({
      name: ORYX.I18N.Edit.copy,
      description: ORYX.I18N.Edit.copyDesc,
      icon: ORYX.PATH + "images/page_copy.png",
      keyCodes: [{
        metaKeys: [ORYX.CONFIG.META_KEY_META_CTRL],
        keyCode: 67,
        keyAction: ORYX.CONFIG.KEY_ACTION_DOWN
      }],
      functionality: this.callEdit.bind(this, this.editCopy, [!0, !1]),
      group: ORYX.I18N.Edit.group,
      index: 2,
      minShape: 1
    }), this.facade.offer({
      name: ORYX.I18N.Edit.paste,
      description: ORYX.I18N.Edit.pasteDesc,
      icon: ORYX.PATH + "images/page_paste.png",
      keyCodes: [{
        metaKeys: [ORYX.CONFIG.META_KEY_META_CTRL],
        keyCode: 86,
        keyAction: ORYX.CONFIG.KEY_ACTION_DOWN
      }],
      functionality: this.callEdit.bind(this, this.editPaste),
      isEnabled: this.clipboard.isOccupied.bind(this.clipboard),
      group: ORYX.I18N.Edit.group,
      index: 3,
      minShape: 0,
      maxShape: 0
    }), this.facade.offer({
      name: ORYX.I18N.Edit.del,
      description: ORYX.I18N.Edit.delDesc,
      icon: ORYX.PATH + "images/cross.png",
      keyCodes: [{
        metaKeys: [ORYX.CONFIG.META_KEY_META_CTRL],
        keyCode: 8,
        keyAction: ORYX.CONFIG.KEY_ACTION_DOWN
      }, {
        keyCode: 46,
        keyAction: ORYX.CONFIG.KEY_ACTION_DOWN
      }],
      functionality: this.callEdit.bind(this, this.editDelete),
      group: ORYX.I18N.Edit.group,
      index: 4,
      minShape: 1
    })
  },
  callEdit: function(e, t) {
    window.setTimeout(function() {
      e.apply(this, t instanceof Array ? t : [])
    }.bind(this), 1)
  },
  handleMouseDown: function(e) {
    this._controlPressed && (this._controlPressed = !1, this.editCopy(), this.editPaste(), e.forceExecution = !0, this.facade.raiseEvent(e, this.clipboard.shapesAsJson))
  },
  getAllShapesToConsider: function(e) {
    var t = [],
      i = [];
    e.each(function(o) {
      if (isChildShapeOfAnother = e.any(function(e) {
        return e.hasChildShape(o)
      }), !isChildShapeOfAnother) {
        if (t.push(o), o instanceof ORYX.Core.Node) {
          var n = o.getOutgoingNodes();
          n = n.findAll(function(t) {
            return !e.include(t)
          }), t = t.concat(n)
        }
        i = i.concat(o.getChildShapes(!0))
      }
    }.bind(this));
    var o = this.facade.getCanvas().getChildEdges().select(function(e) {
      return t.include(e) ? !1 : 0 === e.getAllDockedShapes().size() ? !1 : e.getAllDockedShapes().all(function(e) {
        return e instanceof ORYX.Core.Edge || i.include(e)
      })
    });
    return t = t.concat(o)
  },
  editCut: function() {
    return this.editCopy(!1, !0), this.editDelete(!0), !1
  },
  editCopy: function(e, t) {
    var i = this.facade.getSelection();
    0 != i.length && (this.clipboard.refresh(i, this.getAllShapesToConsider(i), this.facade.getCanvas().getStencil().stencilSet().namespace(), t), e && this.facade.updateSelection())
  },
  editPaste: function() {
    var e = {
      childShapes: this.clipboard.shapesAsJson,
      stencilset: {
        namespace: this.clipboard.SSnamespace
      }
    };
    jQuery.extend(e, ORYX.Core.AbstractShape.JSONHelper);
    var t = e.getChildShapes(!0).pluck("resourceId"),
      i = {};
    e.eachChild(function(e) {
      return e.outgoing = e.outgoing.select(function(e) {
        return t.include(e.resourceId)
      }), e.outgoing.each(function(t) {
        i[t.resourceId] || (i[t.resourceId] = []), i[t.resourceId].push(e)
      }), e
    }.bind(this), !0, !0), e.eachChild(function(e) {
      return e.target && !t.include(e.target.resourceId) && (e.target = void 0, e.targetRemoved = !0), e.dockers && e.dockers.length >= 1 && e.dockers[0].getDocker && (e.dockers[0].getDocker().getDockedShape() && !t.include(e.dockers[0].getDocker().getDockedShape().resourceId) || !e.getShape().dockers[0].getDockedShape() && !i[e.resourceId]) && (e.sourceRemoved = !0), e
    }.bind(this), !0, !0), e.eachChild(function(e) {
      return this.clipboard.useOffset && (e.bounds = {
        lowerRight: {
          x: e.bounds.lowerRight.x + ORYX.CONFIG.COPY_MOVE_OFFSET,
          y: e.bounds.lowerRight.y + ORYX.CONFIG.COPY_MOVE_OFFSET
        },
        upperLeft: {
          x: e.bounds.upperLeft.x + ORYX.CONFIG.COPY_MOVE_OFFSET,
          y: e.bounds.upperLeft.y + ORYX.CONFIG.COPY_MOVE_OFFSET
        }
      }), e.dockers ? e.dockers = e.dockers.map(function(t, o) {
        return (e.targetRemoved === !0 && o == e.dockers.length - 1 && t.getDocker || e.sourceRemoved === !0 && 0 == o && t.getDocker) && (t = t.getDocker().bounds.center()), 0 == o && t.getDocker instanceof Function && e.sourceRemoved !== !0 && (t.getDocker().getDockedShape() || (i[e.resourceId] || []).length > 0 && (!(e.getShape() instanceof ORYX.Core.Node) || i[e.resourceId][0].getShape() instanceof ORYX.Core.Node)) || o == e.dockers.length - 1 && t.getDocker instanceof Function && e.targetRemoved !== !0 && (t.getDocker().getDockedShape() || e.target) ? {
          x: t.x,
          y: t.y,
          getDocker: t.getDocker
        } : this.clipboard.useOffset ? {
          x: t.x + ORYX.CONFIG.COPY_MOVE_OFFSET,
          y: t.y + ORYX.CONFIG.COPY_MOVE_OFFSET,
          getDocker: t.getDocker
        } : {
          x: t.x,
          y: t.y,
          getDocker: t.getDocker
        }
      }.bind(this)) : e.getShape() instanceof ORYX.Core.Node && e.dockers && e.dockers.length > 0 && (!e.dockers.first().getDocker || e.sourceRemoved === !0 || !e.dockers.first().getDocker().getDockedShape() && !i[e.resourceId]) && (e.dockers = e.dockers.map(function(t, i) {
        return e.sourceRemoved === !0 && 0 == i && t.getDocker && (t = t.getDocker().bounds.center()), this.clipboard.useOffset ? {
          x: t.x + ORYX.CONFIG.COPY_MOVE_OFFSET,
          y: t.y + ORYX.CONFIG.COPY_MOVE_OFFSET,
          getDocker: t.getDocker
        } : {
          x: t.x,
          y: t.y,
          getDocker: t.getDocker
        }
      }.bind(this))), e
    }.bind(this), !1, !0), this.clipboard.useOffset = !0, this.facade.importJSON(e)
  },
  editDelete: function() {
    var e = this.facade.getSelection(),
      t = new ORYX.Plugins.Edit.ClipBoard;
    t.refresh(e, this.getAllShapesToConsider(e));
    var i = new ORYX.Plugins.Edit.DeleteCommand(t, this.facade);
    this.facade.executeCommands([i])
  }
}), ORYX.Plugins.Edit.ClipBoard = Clazz.extend({
  construct: function() {
    this.shapesAsJson = [], this.selection = [], this.SSnamespace = "", this.useOffset = !0
  },
  isOccupied: function() {
    return this.shapesAsJson.length > 0
  },
  refresh: function(e, t, i, o) {
    this.selection = e, this.SSnamespace = i, this.outgoings = {}, this.parents = {}, this.targets = {}, this.useOffset = o !== !0, this.shapesAsJson = t.map(function(e) {
      var t = e.toJSON();
      return t.parent = {
        resourceId: e.getParentShape().resourceId
      }, t.parentIndex = e.getParentShape().getChildShapes().indexOf(e), t
    })
  }
}), ORYX.Plugins.Edit.DeleteCommand = ORYX.Core.Command.extend({
  construct: function(e, t) {
    this.clipboard = e, this.shapesAsJson = e.shapesAsJson, this.facade = t, this.dockers = this.shapesAsJson.map(function(e) {
      var t = e.getShape(),
        i = t.getIncomingShapes().map(function(e) {
          return e.getDockers().last()
        }),
        o = t.getOutgoingShapes().map(function(e) {
          return e.getDockers().first()
        }),
        n = t.getDockers().concat(i, o).compact().map(function(e) {
          return {
            object: e,
            referencePoint: e.referencePoint,
            dockedShape: e.getDockedShape()
          }
        });
      return n
    }).flatten()
  },
  execute: function() {
    this.shapesAsJson.each(function(e) {
      this.facade.deleteShape(e.getShape())
    }.bind(this)), this.facade.setSelection([]), this.facade.getCanvas().update(), this.facade.updateSelection()
  },
  rollback: function() {
    this.shapesAsJson.each(function(e) {
      var t = e.getShape(),
        i = this.facade.getCanvas().getChildShapeByResourceId(e.parent.resourceId) || this.facade.getCanvas();
      i.add(t, t.parentIndex)
    }.bind(this)), this.dockers.each(function(e) {
      e.object.setDockedShape(e.dockedShape), e.object.setReferencePoint(e.referencePoint)
    }.bind(this)), this.facade.setSelection(this.selectedShapes), this.facade.getCanvas().update(), this.facade.updateSelection()
  }
}), ORYX.Plugins || (ORYX.Plugins = {}), ORYX.Plugins.View = {
  facade: void 0,
  construct: function(e, t) {
    this.facade = e, this.zoomLevel = 1, this.maxFitToScreenLevel = 1.5, this.minZoomLevel = .1, this.maxZoomLevel = 2.5, this.diff = 5, void 0 !== t && null !== t && t.properties.each(function(e) {
      e.zoomLevel && (this.zoomLevel = Number(1)), e.maxFitToScreenLevel && (this.maxFitToScreenLevel = Number(e.maxFitToScreenLevel)), e.minZoomLevel && (this.minZoomLevel = Number(e.minZoomLevel)), e.maxZoomLevel && (this.maxZoomLevel = Number(e.maxZoomLevel))
    }.bind(this)), this.facade.offer({
      name: ORYX.I18N.View.zoomIn,
      functionality: this.zoom.bind(this, [1 + ORYX.CONFIG.ZOOM_OFFSET]),
      group: ORYX.I18N.View.group,
      icon: ORYX.PATH + "images/magnifier_zoom_in.png",
      description: ORYX.I18N.View.zoomInDesc,
      index: 1,
      minShape: 0,
      maxShape: 0,
      isEnabled: function() {
        return this.zoomLevel < this.maxZoomLevel
      }.bind(this)
    }), this.facade.offer({
      name: ORYX.I18N.View.zoomOut,
      functionality: this.zoom.bind(this, [1 - ORYX.CONFIG.ZOOM_OFFSET]),
      group: ORYX.I18N.View.group,
      icon: ORYX.PATH + "images/magnifier_zoom_out.png",
      description: ORYX.I18N.View.zoomOutDesc,
      index: 2,
      minShape: 0,
      maxShape: 0,
      isEnabled: function() {
        return this._checkSize()
      }.bind(this)
    }), this.facade.offer({
      name: ORYX.I18N.View.zoomStandard,
      functionality: this.setAFixZoomLevel.bind(this, 1),
      group: ORYX.I18N.View.group,
      icon: ORYX.PATH + "images/zoom_standard.png",
      cls: "icon-large",
      description: ORYX.I18N.View.zoomStandardDesc,
      index: 3,
      minShape: 0,
      maxShape: 0,
      isEnabled: function() {
        return 1 != this.zoomLevel
      }.bind(this)
    }), this.facade.offer({
      name: ORYX.I18N.View.zoomFitToModel,
      functionality: this.zoomFitToModel.bind(this),
      group: ORYX.I18N.View.group,
      icon: ORYX.PATH + "images/image.png",
      description: ORYX.I18N.View.zoomFitToModelDesc,
      index: 4,
      minShape: 0,
      maxShape: 0
    })
  },
  setAFixZoomLevel: function(e) {
    this.zoomLevel = e, this._checkZoomLevelRange(), this.zoom(1)
  },
  zoom: function(e) {
    this.zoomLevel *= e;
    var t = this.facade.getCanvas().getHTMLContainer().parentNode.parentNode,
      i = this.facade.getCanvas(),
      o = i.bounds.width() * this.zoomLevel,
      n = i.bounds.height() * this.zoomLevel,
      r = (i.node.parentNode.parentNode.parentNode.offsetHeight - n) / 2;
    r = r > 20 ? r - 20 : 0, i.node.parentNode.parentNode.style.marginTop = r + "px", r += 5, i.getHTMLContainer().style.top = r + "px";
    var s = t.scrollTop - Math.round((i.getHTMLContainer().parentNode.getHeight() - n) / 2) + this.diff,
      a = t.scrollLeft - Math.round((i.getHTMLContainer().parentNode.getWidth() - o) / 2) + this.diff;
    i.setSize({
      width: o,
      height: n
    }, !0), i.node.setAttributeNS(null, "transform", "scale(" + this.zoomLevel + ")"), this.facade.updateSelection(), t.scrollTop = s, t.scrollLeft = a, i.zoomLevel = this.zoomLevel
  },
  zoomFitToModel: function() {
    var e = this.facade.getCanvas().getHTMLContainer().parentNode.parentNode,
      t = e.getHeight() - 30,
      i = e.getWidth() - 30,
      o = this.facade.getCanvas().getChildShapes();
    if (!o || 1 > o.length) return !1;
    var n = o[0].absoluteBounds().clone();
    o.each(function(e) {
      n.include(e.absoluteBounds().clone())
    });
    var r = i / n.width(),
      s = t / n.height(),
      a = r > s ? s : r;
    a > this.maxFitToScreenLevel && (a = this.maxFitToScreenLevel), this.setAFixZoomLevel(a), e.scrollTop = Math.round(n.upperLeft().y * this.zoomLevel) - 5, e.scrollLeft = Math.round(n.upperLeft().x * this.zoomLevel) - 5
  },
  _checkSize: function() {
    var e = this.facade.getCanvas().getHTMLContainer().parentNode,
      t = Math.min(e.parentNode.getWidth() / e.getWidth(), e.parentNode.getHeight() / e.getHeight());
    return 1.05 > t
  },
  _checkZoomLevelRange: function() {
    this.zoomLevel < this.minZoomLevel && (this.zoomLevel = this.minZoomLevel), this.zoomLevel > this.maxZoomLevel && (this.zoomLevel = this.maxZoomLevel)
  }
}, ORYX.Plugins.View = Clazz.extend(ORYX.Plugins.View), !Signavio) var Signavio = {};
if (Signavio.Core || (Signavio.Core = {}), Signavio.Core.Version = "1.0", !Signavio) var Signavio = {};
Signavio.Plugins || (Signavio.Plugins = {}), Signavio.Plugins.Utils || (Signavio.Plugins.Utils = {}), Signavio.Helper || (Signavio.Helper = {}), new function() {
  ORYX.Editor.provideId = function() {
    for (var e = [], t = "0123456789ABCDEF", i = 0; 36 > i; i++) e[i] = Math.floor(16 * Math.random());
    e[14] = 4, e[19] = 8 | 3 & e[19];
    for (var i = 0; 36 > i; i++) e[i] = t[e[i]];
    return e[8] = e[13] = e[18] = e[23] = "-", "sid-" + e.join("")
  }
}, ORYX.Plugins || (ORYX.Plugins = {}), ORYX.Plugins.Loading = {
  construct: function(e) {
    this.facade = e, this.node = ORYX.Editor.graft("http://www.w3.org/1999/xhtml", this.facade.getCanvas().getHTMLContainer().parentNode, ["div", {
      "class": "LoadingIndicator"
    }, ""]), this.facade.registerOnEvent(ORYX.CONFIG.EVENT_LOADING_ENABLE, this.enableLoading.bind(this)), this.facade.registerOnEvent(ORYX.CONFIG.EVENT_LOADING_DISABLE, this.disableLoading.bind(this)), this.facade.registerOnEvent(ORYX.CONFIG.EVENT_LOADING_STATUS, this.showStatus.bind(this)), this.disableLoading()
  },
  enableLoading: function(e) {
    this.node.innerHTML = e.text ? e.text + "..." : ORYX.I18N.Loading.waiting, this.node.removeClassName("StatusIndicator"), this.node.addClassName("LoadingIndicator"), this.node.style.display = "block";
    var t = this.facade.getCanvas().rootNode.parentNode.parentNode.parentNode.parentNode;
    this.node.style.top = t.offsetTop + "px", this.node.style.left = t.offsetLeft + "px"
  },
  disableLoading: function() {
    this.node.style.display = "none"
  },
  showStatus: function(e) {
    if (e.text) {
      this.node.innerHTML = e.text, this.node.addClassName("StatusIndicator"), this.node.removeClassName("LoadingIndicator"), this.node.style.display = "block";
      var t = this.facade.getCanvas().rootNode.parentNode.parentNode.parentNode.parentNode;
      this.node.style.top = t.offsetTop + "px", this.node.style.left = t.offsetLeft + "px";
      var i = e.timeout ? e.timeout : 2e3;
      window.setTimeout(function() {
        this.disableLoading()
      }.bind(this), i)
    }
  }
}, ORYX.Plugins.Loading = Clazz.extend(ORYX.Plugins.Loading), ORYX.Plugins || (ORYX.Plugins = {}), ORYX.Plugins.CanvasResize = Clazz.extend({
  construct: function(e) {
    this.facade = e, new ORYX.Plugins.CanvasResizeButton(this.facade.getCanvas(), "N", this.resize.bind(this)), new ORYX.Plugins.CanvasResizeButton(this.facade.getCanvas(), "W", this.resize.bind(this)), new ORYX.Plugins.CanvasResizeButton(this.facade.getCanvas(), "E", this.resize.bind(this)), new ORYX.Plugins.CanvasResizeButton(this.facade.getCanvas(), "S", this.resize.bind(this)), window.setTimeout(function() {
      jQuery(window).trigger("resize")
    })
  },
  resize: function(e, t) {
    resizeCanvas = function(e, t, i) {
      var o = i.getCanvas(),
        n = o.bounds,
        r = i.getCanvas().getHTMLContainer().parentNode.parentNode;
      if ("E" == e || "W" == e ? o.setSize({
        width: (n.width() + t) * o.zoomLevel,
        height: n.height() * o.zoomLevel
      }) : ("S" == e || "N" == e) && o.setSize({
        width: n.width() * o.zoomLevel,
        height: (n.height() + t) * o.zoomLevel
      }), "N" == e || "W" == e) {
        var s = "N" == e ? {
          x: 0,
          y: t
        } : {
          x: t,
          y: 0
        };
        o.getChildNodes(!1, function(e) {
          e.bounds.moveBy(s)
        });
        var a = o.getChildEdges().findAll(function(e) {
            return e.getAllDockedShapes().length > 0
          }),
          l = a.collect(function(e) {
            return e.dockers.findAll(function(e) {
              return !e.getDockedShape()
            })
          }).flatten();
        l.each(function(e) {
          e.bounds.moveBy(s)
        })
      } else "S" == e ? r.scrollTop += t : "E" == e && (r.scrollLeft += t);
      jQuery(window).trigger("resize"), o.update(), i.updateSelection()
    };
    var i = ORYX.Core.Command.extend({
        construct: function(e, t, i) {
          this.position = e, this.extentionSize = t, this.facade = i
        },
        execute: function() {
          resizeCanvas(this.position, this.extentionSize, this.facade)
        },
        rollback: function() {
          resizeCanvas(this.position, -this.extentionSize, this.facade)
        },
        update: function() {}
      }),
      o = ORYX.CONFIG.CANVAS_RESIZE_INTERVAL;
    t && (o = -o);
    var n = new i(e, o, this.facade);
    this.facade.executeCommands([n])
  }
}), ORYX.Plugins.CanvasResizeButton = Clazz.extend({
  construct: function(e, t, i) {
    this.canvas = e;
    var o = e.getHTMLContainer().parentNode;
    window.myParent = o;
    var n = jQuery("#canvasSection")[0],
      r = n,
      s = jQuery("#canvasSection").find(".ORYX_Editor")[0],
      a = s.children[0],
      l = "glyphicon glyphicon-chevron-",
      d = "glyphicon glyphicon-chevron-";
    "N" == t ? (l += "up", d += "down") : "S" == t ? (l += "down", d += "up") : "E" == t ? (l += "right", d += "left") : "W" == t && (l += "left", d += "right");
    var c = "canvas-shrink-" + t,
      p = "canvas-grow-" + t,
      u = ORYX.Editor.graft("http://www.w3.org/1999/xhtml", o, ["div", {
        "class": "canvas_resize_indicator canvas_resize_indicator_grow " + t,
        id: c,
        title: ORYX.I18N.RESIZE.tipGrow + ORYX.I18N.RESIZE[t]
      },
        ["i", {
          "class": l
        }]
      ]),
      h = ORYX.Editor.graft("http://www.w3.org/1999/xhtml", o, ["div", {
        "class": "canvas_resize_indicator canvas_resize_indicator_shrink " + t,
        id: p,
        title: ORYX.I18N.RESIZE.tipGrow + ORYX.I18N.RESIZE[t]
      },
        ["i", {
          "class": d
        }]
      ]),
      m = 60,
      f = function(e) {
        var i = -1 != e.target.id.indexOf("canvas-shrink") || -1 != e.target.id.indexOf("canvas-grow") || -1 != e.target.parentNode.id.indexOf("canvas-shrink") || -1 != e.target.parentNode.id.indexOf("canvas-grow");
        if (i) return e.target.id == c || e.target.id == p || e.target.parentNode.id == c || e.target.parentNode.id == p ? !0 : !1;
        if (e.target != o && e.target != r && e.target != r.firstChild && e.target != a && e.target != r) return !1;
        var l = void 0 !== e.offsetX ? e.offsetX : e.layerX,
          d = void 0 !== e.offsetY ? e.offsetY : e.layerY,
          u = 0;
        if (s.clientWidth < n.clientWidth) {
          var h = n.clientWidth - s.clientWidth;
          u = h / 2
        }
        return d -= n.scrollTop, l -= n.scrollLeft, "N" == t ? m > d : "W" == t ? m + u > l : "E" == t ? m + u > n.clientWidth - l : "S" == t ? m > n.clientHeight - d : !1
      },
      g = function() {
        u.show();
        var i = e.bounds.width(),
          o = e.bounds.height();
        "N" == t && o - ORYX.CONFIG.CANVAS_RESIZE_INTERVAL > ORYX.CONFIG.CANVAS_MIN_HEIGHT ? h.show() : "E" == t && i - ORYX.CONFIG.CANVAS_RESIZE_INTERVAL > ORYX.CONFIG.CANVAS_MIN_WIDTH ? h.show() : "S" == t && o - ORYX.CONFIG.CANVAS_RESIZE_INTERVAL > ORYX.CONFIG.CANVAS_MIN_HEIGHT ? h.show() : "W" == t && i - ORYX.CONFIG.CANVAS_RESIZE_INTERVAL > ORYX.CONFIG.CANVAS_MIN_WIDTH ? h.show() : h.hide()
      }.bind(this),
      v = function() {
        u.hide(), h.hide()
      };
    o.parentNode.addEventListener(ORYX.CONFIG.EVENT_MOUSEMOVE, function(e) {
      f(e) ? g() : v()
    }, !1), u.addEventListener(ORYX.CONFIG.EVENT_MOUSEOVER, function() {
      g()
    }, !0), h.addEventListener(ORYX.CONFIG.EVENT_MOUSEOVER, function() {
      g()
    }, !0), o.parentNode.addEventListener(ORYX.CONFIG.EVENT_MOUSEOUT, function() {
      v()
    }, !0), v(), u.addEventListener("click", function() {
      i(t), g()
    }, !0), h.addEventListener("click", function() {
      i(t, !0), g()
    }, !0)
  }
}), ORYX.Plugins || (ORYX.Plugins = {}), ORYX.Plugins.RenameShapes = Clazz.extend({
  facade: void 0,
  construct: function(e) {
    this.facade = e, this.facade.registerOnEvent(ORYX.CONFIG.EVENT_CANVAS_SCROLL, this.hideField.bind(this)), this.facade.registerOnEvent(ORYX.CONFIG.EVENT_DBLCLICK, this.actOnDBLClick.bind(this)), this.facade.offer({
      keyCodes: [{
        keyCode: 113,
        keyAction: ORYX.CONFIG.KEY_ACTION_DOWN
      }],
      functionality: this.renamePerF2.bind(this)
    }), document.documentElement.addEventListener(ORYX.CONFIG.EVENT_MOUSEDOWN, this.hide.bind(this), !0)
  },
  renamePerF2: function() {
    var e = this.facade.getSelection();
    this.actOnDBLClick(void 0, e.first())
  },
  actOnDBLClick: function(e, t) {
    if (t instanceof ORYX.Core.Shape) {
      this.destroy();
      var i = t.getStencil().properties().findAll(function(e) {
        return e.refToView() && e.refToView().length > 0 && e.directlyEditable()
      });
      i = i.findAll(function(e) {
        return !e.readonly() && (e.type() == ORYX.CONFIG.TYPE_STRING || e.type() == ORYX.CONFIG.TYPE_EXPRESSION || e.type() == ORYX.CONFIG.TYPE_DATASOURCE)
      });
      var o = i.collect(function(e) {
          return e.refToView()
        }).flatten().compact(),
        n = t.getLabels().findAll(function(e) {
          return o.any(function(t) {
            return e.id.endsWith(t)
          })
        });
      if (0 != n.length) {
        var r = 1 >= n.length ? n[0] : null;
        if (!r && (r = n.find(function(t) {
          return t.node == e.target || t.node == e.target.parentNode
        }), !r)) {
          var s = this.facade.eventCoordinates(e),
            a = 1;
          if (!isNaN(screen.logicalXDPI) && !isNaN(screen.systemXDPI)) {
            var l = navigator.userAgent;
            if (l.indexOf("MSIE") >= 0) {
              var d = Math.round(100 * (screen.deviceXDPI / screen.logicalXDPI));
              100 !== d && (a = d / 100)
            }
          }
          1 !== a && (s.x = s.x / a, s.y = s.y / a), s.y += $("editor-header").clientHeight - $("canvasSection").scrollTop - 5, 0 == KISBPM.HEADER_CONFIG.showAppTitle && (s.y += 61), s.x -= $("canvasSection").scrollLeft;
          var c = this.facade.getCanvas().rootNode.lastChild.getScreenCTM();
          s.x *= c.a, s.y *= c.d;
          var p = n.collect(function(e) {
            var t = this.getCenterPosition(e.node),
              i = Math.sqrt(Math.pow(t.x - s.x, 2) + Math.pow(t.y - s.y, 2));
            return {
              diff: i,
              label: e
            }
          }.bind(this));
          p.sort(function(e, t) {
            return e.diff > t.diff
          }), r = p[0].label
        }
        var u = i.find(function(e) {
            return e.refToView().any(function(e) {
              return r.id == t.id + e
            })
          }),
          h = Math.min(Math.max(100, t.bounds.width()), 200),
          m = this.getCenterPosition(r.node, t);
        m.x -= h / 2;
        var f = u.prefix() + "-" + u.id(),
          g = document.createElement("textarea");
        g.id = "shapeTextInput", g.style.position = "absolute", g.style.width = h + "px", g.style.left = 10 > m.x ? 10 : m.x + "px", g.style.top = m.y - 15 + "px", g.className = "x-form-textarea x-form-field x_form_text_set_absolute", g.value = t.properties[f], this.oldValueText = t.properties[f], document.getElementById("canvasSection").appendChild(g), this.shownTextField = g, this.updateValueFunction = function(e, i) {
          var o = t,
            n = this.facade;
          if (i != e) {
            var r = ORYX.Core.Command.extend({
                construct: function() {
                  this.el = o, this.propId = f, this.oldValue = i, this.newValue = e, this.facade = n
                },
                execute: function() {
                  this.el.setProperty(this.propId, this.newValue), this.facade.setSelection([this.el]), this.facade.getCanvas().update(), this.facade.updateSelection()
                },
                rollback: function() {
                  this.el.setProperty(this.propId, this.oldValue), this.facade.setSelection([this.el]), this.facade.getCanvas().update(), this.facade.updateSelection()
                }
              }),
              s = new r;
            this.facade.executeCommands([s])
          }
        }.bind(this), jQuery("#shapeTextInput").focus(), jQuery("#shapeTextInput").autogrow(), this.facade.disableEvent(ORYX.CONFIG.EVENT_KEYDOWN)
      }
    }
  },
  getCenterPosition: function(e, t) {
    if (!e) return {
      x: 0,
      y: 0
    };
    for (var i = this.facade.getCanvas().node.getScreenCTM(), o = t.bounds.upperLeft(), n = !0, r = t; n;)
      if ("BPMNDiagram" === r.getParentShape().getStencil().idWithoutNs()) n = !1;
      else {
        var s = r.getParentShape().bounds.upperLeft();
        o.x += s.x, o.y += s.y, r = r.getParentShape()
      }
    var a = t.bounds.midPoint();
    a.x += o.x + i.e, a.y += o.y + i.f, a.x *= i.a, a.y *= i.d;
    var l = 1;
    if (!isNaN(screen.logicalXDPI) && !isNaN(screen.systemXDPI)) {
      var d = navigator.userAgent;
      if (d.indexOf("MSIE") >= 0) {
        var c = Math.round(100 * (screen.deviceXDPI / screen.logicalXDPI));
        100 !== c && (l = c / 100)
      }
    }
    if (1 === l) a.y = a.y - jQuery("#canvasSection").offset().top + 5, a.x -= jQuery("#canvasSection").offset().left;
    else {
      var p = jQuery("#canvasSection").offset().left,
        u = jQuery("#canvasSection").scrollLeft(),
        h = jQuery("#canvasSection").scrollTop(),
        m = i.e - p * l,
        f = 0;
      m > 10 && (f = m / l - m), a.y = a.y - jQuery("#canvasSection").offset().top * l + 5 + (h * l - h), a.x = a.x - p * l + f + (u * l - u)
    }
    return a
  },
  hide: function(e) {
    if (this.shownTextField && (!e || e.target !== this.shownTextField)) {
      var t = this.shownTextField.value;
      t !== this.oldValueText && this.updateValueFunction(t, this.oldValueText), this.destroy()
    }
  },
  hideField: function() {
    this.shownTextField && this.destroy()
  },
  destroy: function() {
    var e = jQuery("#shapeTextInput");
    e && (e.remove(), delete this.shownTextField, this.facade.enableEvent(ORYX.CONFIG.EVENT_KEYDOWN))
  }
}), ORYX.Plugins || (ORYX.Plugins = {}), ORYX.Plugins.ProcessLink = Clazz.extend({
  facade: void 0,
  construct: function(e) {
    this.facade = e, this.facade.registerOnEvent(ORYX.CONFIG.EVENT_PROPERTY_CHANGED, this.propertyChanged.bind(this))
  },
  propertyChanged: function(e, t) {
    "oryx-refuri" !== e.name || !t instanceof ORYX.Core.Node || (e.value && e.value.length > 0 && "undefined" != e.value ? this.show(t, e.value) : this.hide(t))
  },
  show: function(e, t) {
    var i = ORYX.Editor.graft("http://www.w3.org/2000/svg", null, ["a", {
        target: "_blank"
      },
        ["path", {
          "stroke-width": 1,
          stroke: "#00DD00",
          fill: "#00AA00",
          d: "M3,3 l0,-2.5 l7.5,0 l0,-2.5 l7.5,4.5 l-7.5,3.5 l0,-2.5 l-8,0",
          "line-captions": "round"
        }]
      ]),
      i = ORYX.Editor.graft("http://www.w3.org/2000/svg", null, ["a", {
        target: "_blank"
      },
        ["path", {
          style: "fill:#92BFFC;stroke:#000000;stroke-linecap:round;stroke-linejoin:round;stroke-width:0.72",
          d: "M0 1.44 L0 15.05 L11.91 15.05 L11.91 5.98 L7.37 1.44 L0 1.44 Z"
        }],
        ["path", {
          style: "stroke:#000000;stroke-linecap:round;stroke-linejoin:round;stroke-width:0.72;fill:none;",
          transform: "translate(7.5, -8.5)",
          d: "M0 10.51 L0 15.05 L4.54 15.05"
        }],
        ["path", {
          style: "fill:#f28226;stroke:#000000;stroke-linecap:round;stroke-linejoin:round;stroke-width:0.72",
          transform: "translate(-3, -1)",
          d: "M0 8.81 L0 13.06 L5.95 13.06 L5.95 15.05 A50.2313 50.2313 -175.57 0 0 10.77 11.08 A49.9128 49.9128 -1.28 0 0 5.95 6.54 L5.95 8.81 L0 8.81 Z"
        }]
      ]);
    i.setAttributeNS("http://www.w3.org/1999/xlink", "xlink:href", t), this.facade.raiseEvent({
      type: ORYX.CONFIG.EVENT_OVERLAY_SHOW,
      id: "arissupport.urlref_" + e.id,
      shapes: [e],
      node: i,
      nodePosition: "SE"
    })
  },
  hide: function(e) {
    this.facade.raiseEvent({
      type: ORYX.CONFIG.EVENT_OVERLAY_HIDE,
      id: "arissupport.urlref_" + e.id
    })
  }
}), Array.prototype.insertFrom = function(e, t) {
  t = Math.max(0, t), e = Math.min(Math.max(0, e), this.length - 1);
  var i = this[e],
    o = this.without(i),
    n = o.slice(0, t);
  return n.push(i), o.length > t && (n = n.concat(o.slice(t))), n
}, ORYX.Plugins || (ORYX.Plugins = {}), ORYX.Plugins.Arrangement = ORYX.Plugins.AbstractPlugin.extend({
  facade: void 0,
  construct: function(e) {
    this.facade = e, this.facade.offer({
      name: ORYX.I18N.Arrangement.am,
      functionality: this.alignShapes.bind(this, [ORYX.CONFIG.EDITOR_ALIGN_MIDDLE]),
      group: ORYX.I18N.Arrangement.groupA,
      icon: ORYX.PATH + "images/shape_align_middle.png",
      description: ORYX.I18N.Arrangement.amDesc,
      index: 1,
      minShape: 2
    }), this.facade.offer({
      name: ORYX.I18N.Arrangement.ac,
      functionality: this.alignShapes.bind(this, [ORYX.CONFIG.EDITOR_ALIGN_CENTER]),
      group: ORYX.I18N.Arrangement.groupA,
      icon: ORYX.PATH + "images/shape_align_center.png",
      description: ORYX.I18N.Arrangement.acDesc,
      index: 2,
      minShape: 2
    }), this.facade.offer({
      name: ORYX.I18N.Arrangement.as,
      functionality: this.alignShapes.bind(this, [ORYX.CONFIG.EDITOR_ALIGN_SIZE]),
      group: ORYX.I18N.Arrangement.groupA,
      icon: ORYX.PATH + "images/shape_align_size.png",
      description: ORYX.I18N.Arrangement.asDesc,
      index: 3,
      minShape: 2
    }), this.facade.registerOnEvent(ORYX.CONFIG.EVENT_ARRANGEMENT_TOP, this.setZLevel.bind(this, this.setToTop)), this.facade.registerOnEvent(ORYX.CONFIG.EVENT_ARRANGEMENT_BACK, this.setZLevel.bind(this, this.setToBack)), this.facade.registerOnEvent(ORYX.CONFIG.EVENT_ARRANGEMENT_FORWARD, this.setZLevel.bind(this, this.setForward)), this.facade.registerOnEvent(ORYX.CONFIG.EVENT_ARRANGEMENT_BACKWARD, this.setZLevel.bind(this, this.setBackward))
  },
  onSelectionChanged: function() {
    var e = this.facade.getSelection();
    1 === e.length && e[0] instanceof ORYX.Core.Edge && this.setToTop(e)
  },
  setZLevel: function(e, t) {
    var i = ORYX.Core.Command.extend({
        construct: function(e, t, i) {
          this.callback = e, this.elements = t, this.elAndIndex = t.map(function(e) {
            return {
              el: e,
              previous: e.parent.children[e.parent.children.indexOf(e) - 1]
            }
          }), this.facade = i
        },
        execute: function() {
          this.callback(this.elements), this.facade.setSelection(this.elements)
        },
        rollback: function() {
          for (var e = this.elAndIndex.sortBy(function(e) {
            var t = e.el,
              i = $A(t.node.parentNode.childNodes);
            return i.indexOf(t.node)
          }), t = 0; e.length > t; t++) {
            var i = e[t].el,
              o = i.parent,
              n = o.children.indexOf(i),
              r = o.children.indexOf(e[t].previous);
            r = r || 0, o.children = o.children.insertFrom(n, r), i.node.parentNode.insertBefore(i.node, i.node.parentNode.childNodes[r + 1])
          }
          this.facade.setSelection(this.elements)
        }
      }),
      o = new i(e, this.facade.getSelection(), this.facade);
    t.excludeCommand ? o.execute() : this.facade.executeCommands([o])
  },
  setToTop: function(e) {
    var t = e.sortBy(function(e) {
      var t = $A(e.node.parentNode.childNodes);
      return t.indexOf(e.node)
    });
    t.each(function(e) {
      var t = e.parent;
      t.children.last() !== e && (t.children = t.children.without(e), t.children.push(e), e.node.parentNode.appendChild(e.node))
    })
  },
  setToBack: function(e) {
    var t = e.sortBy(function(e) {
      var t = $A(e.node.parentNode.childNodes);
      return t.indexOf(e.node)
    });
    t = t.reverse(), t.each(function(e) {
      var t = e.parent;
      t.children = t.children.without(e), t.children.unshift(e), e.node.parentNode.insertBefore(e.node, e.node.parentNode.firstChild)
    })
  },
  setBackward: function(e) {
    var t = e.sortBy(function(e) {
      var t = $A(e.node.parentNode.childNodes);
      return t.indexOf(e.node)
    });
    t = t.reverse();
    var i = t.findAll(function(e) {
      return !t.some(function(t) {
        return t.node == e.node.previousSibling
      })
    });
    i.each(function(e) {
      if (null !== e.node.previousSibling) {
        var t = e.parent,
          i = t.children.indexOf(e);
        t.children = t.children.insertFrom(i, i - 1), e.node.parentNode.insertBefore(e.node, e.node.previousSibling)
      }
    })
  },
  setForward: function(e) {
    var t = e.sortBy(function(e) {
        var t = $A(e.node.parentNode.childNodes);
        return t.indexOf(e.node)
      }),
      i = t.findAll(function(e) {
        return !t.some(function(t) {
          return t.node == e.node.nextSibling
        })
      });
    i.each(function(e) {
      var t = e.node.nextSibling;
      if (null !== t) {
        var i = e.parent.children.indexOf(e),
          o = e.parent;
        o.children = o.children.insertFrom(i, i + 1), e.node.parentNode.insertBefore(t, e.node)
      }
    })
  },
  alignShapes: function(e) {
    var t = this.facade.getSelection();
    if (t = this.facade.getCanvas().getShapesWithSharedParent(t), t = t.findAll(function(e) {
      return e instanceof ORYX.Core.Node
    }), t = t.findAll(function(e) {
      var i = e.getIncomingShapes();
      return 0 == i.length || !t.include(i[0])
    }), !(2 > t.length)) {
      var i = t[0].absoluteBounds().clone();
      t.each(function(e) {
        i.include(e.absoluteBounds().clone())
      });
      var o = 0,
        n = 0;
      t.each(function(e) {
        o = Math.max(e.bounds.width(), o), n = Math.max(e.bounds.height(), n)
      });
      var r = ORYX.Core.Command.extend({
          construct: function(e, t, i, o, n, r) {
            this.elements = e, this.bounds = t, this.maxHeight = i, this.maxWidth = o, this.way = n, this.facade = r.facade, this.plugin = r, this.orgPos = []
          },
          setBounds: function(e, t) {
            if (t || (t = {
              width: ORYX.CONFIG.MAXIMUM_SIZE,
              height: ORYX.CONFIG.MAXIMUM_SIZE
            }), !e.bounds) throw "Bounds not definined.";
            var i = {
              a: {
                x: e.bounds.upperLeft().x - (this.maxWidth - e.bounds.width()) / 2,
                y: e.bounds.upperLeft().y - (this.maxHeight - e.bounds.height()) / 2
              },
              b: {
                x: e.bounds.lowerRight().x + (this.maxWidth - e.bounds.width()) / 2,
                y: e.bounds.lowerRight().y + (this.maxHeight - e.bounds.height()) / 2
              }
            };
            this.maxWidth > t.width && (i.a.x = e.bounds.upperLeft().x - (t.width - e.bounds.width()) / 2, i.b.x = e.bounds.lowerRight().x + (t.width - e.bounds.width()) / 2), this.maxHeight > t.height && (i.a.y = e.bounds.upperLeft().y - (t.height - e.bounds.height()) / 2, i.b.y = e.bounds.lowerRight().y + (t.height - e.bounds.height()) / 2), e.bounds.set(i)
          },
          execute: function() {
            this.elements.each(function(e, t) {
              this.orgPos[t] = e.bounds.upperLeft();
              var i, o = this.bounds.clone();
              if (e.parent && !(e.parent instanceof ORYX.Core.Canvas)) {
                var n = e.parent.absoluteBounds().upperLeft();
                o.moveBy(-n.x, -n.y)
              }
              switch (this.way) {
                case ORYX.CONFIG.EDITOR_ALIGN_BOTTOM:
                  i = {
                    x: e.bounds.upperLeft().x,
                    y: o.b.y - e.bounds.height()
                  };
                  break;
                case ORYX.CONFIG.EDITOR_ALIGN_MIDDLE:
                  i = {
                    x: e.bounds.upperLeft().x,
                    y: (o.a.y + o.b.y - e.bounds.height()) / 2
                  };
                  break;
                case ORYX.CONFIG.EDITOR_ALIGN_TOP:
                  i = {
                    x: e.bounds.upperLeft().x,
                    y: o.a.y
                  };
                  break;
                case ORYX.CONFIG.EDITOR_ALIGN_LEFT:
                  i = {
                    x: o.a.x,
                    y: e.bounds.upperLeft().y
                  };
                  break;
                case ORYX.CONFIG.EDITOR_ALIGN_CENTER:
                  i = {
                    x: (o.a.x + o.b.x - e.bounds.width()) / 2,
                    y: e.bounds.upperLeft().y
                  };
                  break;
                case ORYX.CONFIG.EDITOR_ALIGN_RIGHT:
                  i = {
                    x: o.b.x - e.bounds.width(),
                    y: e.bounds.upperLeft().y
                  };
                  break;
                case ORYX.CONFIG.EDITOR_ALIGN_SIZE:
                  e.isResizable && (this.orgPos[t] = {
                    a: e.bounds.upperLeft(),
                    b: e.bounds.lowerRight()
                  }, this.setBounds(e, e.maximumSize))
              }
              if (i) {
                var r = {
                  x: e.bounds.upperLeft().x - i.x,
                  y: e.bounds.upperLeft().y - i.y
                };
                e.bounds.moveTo(i), this.plugin.layoutEdges(e, e.getAllDockedShapes(), r)
              }
            }.bind(this))
          },
          rollback: function() {
            this.elements.each(function(e, t) {
              this.way == ORYX.CONFIG.EDITOR_ALIGN_SIZE ? e.isResizable && e.bounds.set(this.orgPos[t]) : e.bounds.moveTo(this.orgPos[t])
            }.bind(this))
          }
        }),
        s = new r(t, i, n, o, parseInt(e), this);
      this.facade.executeCommands([s])
    }
  }
}), ORYX.Plugins || (ORYX.Plugins = {}), ORYX.Plugins.Save = Clazz.extend({
  facade: void 0,
  processURI: void 0,
  changeSymbol: "*",
  construct: function(e) {
    this.facade = e, document.addEventListener("keydown", function(e) {
      e.ctrlKey && 83 === e.keyCode && Event.stop(e)
    }, !1), window.onbeforeunload = this.onUnLoad.bind(this), this.changeDifference = 0, this.facade.registerOnEvent(ORYX.CONFIG.EVENT_UNDO_EXECUTE, function() {
      this.changeDifference++, this.updateTitle()
    }.bind(this)), this.facade.registerOnEvent(ORYX.CONFIG.EVENT_EXECUTE_COMMANDS, function() {
      this.changeDifference++, this.updateTitle()
    }.bind(this)), this.facade.registerOnEvent(ORYX.CONFIG.EVENT_SAVED, function() {
      this.changeDifference = 0, this.updateTitle()
    }.bind(this)), this.facade.registerOnEvent(ORYX.CONFIG.EVENT_UNDO_ROLLBACK, function() {
      this.changeDifference--, this.updateTitle()
    }.bind(this)), this.hasChanges = this._hasChanges.bind(this)
  },
  updateTitle: function() {
    var e = window.document.title || document.getElementsByTagName("title")[0].childNodes[0].nodeValue;
    0 === this.changeDifference && e.startsWith(this.changeSymbol) ? window.document.title = e.slice(1) : 0 === this.changeDifference || e.startsWith(this.changeSymbol) || (window.document.title = this.changeSymbol + "" + e)
  },
  _hasChanges: function() {
    return 0 !== this.changeDifference || this.facade.getModelMetaData()["new"] && this.facade.getCanvas().getChildShapes().size() > 0
  },
  onUnLoad: function() {
    return this._hasChanges() ? ORYX.I18N.Save.unsavedData : void 0
  }
}), ORYX.Plugins || (ORYX.Plugins = {}), ORYX.Plugins.DragDropResize = ORYX.Plugins.AbstractPlugin.extend({
  construct: function(e) {
    this.facade = e, this.currentShapes = [], this.toMoveShapes = [], this.distPoints = [], this.isResizing = !1, this.dragEnable = !1, this.dragIntialized = !1, this.edgesMovable = !0, this.offSetPosition = {
      x: 0,
      y: 0
    }, this.faktorXY = {
      x: 1,
      y: 1
    }, this.containmentParentNode, this.isAddingAllowed = !1, this.isAttachingAllowed = !1, this.callbackMouseMove = this.handleMouseMove.bind(this), this.callbackMouseUp = this.handleMouseUp.bind(this);
    var t = this.facade.getCanvas().getSvgContainer();
    this.selectedRect = new ORYX.Plugins.SelectedRect(t), ORYX.CONFIG.SHOW_GRIDLINE && (this.vLine = new ORYX.Plugins.GridLine(t, ORYX.Plugins.GridLine.DIR_VERTICAL), this.hLine = new ORYX.Plugins.GridLine(t, ORYX.Plugins.GridLine.DIR_HORIZONTAL)), t = this.facade.getCanvas().getHTMLContainer(), this.scrollNode = this.facade.getCanvas().rootNode.parentNode.parentNode, this.resizerSE = new ORYX.Plugins.Resizer(t, "southeast", this.facade), this.resizerSE.registerOnResize(this.onResize.bind(this)), this.resizerSE.registerOnResizeEnd(this.onResizeEnd.bind(this)), this.resizerSE.registerOnResizeStart(this.onResizeStart.bind(this)), this.resizerNW = new ORYX.Plugins.Resizer(t, "northwest", this.facade), this.resizerNW.registerOnResize(this.onResize.bind(this)), this.resizerNW.registerOnResizeEnd(this.onResizeEnd.bind(this)), this.resizerNW.registerOnResizeStart(this.onResizeStart.bind(this)), this.facade.registerOnEvent(ORYX.CONFIG.EVENT_MOUSEDOWN, this.handleMouseDown.bind(this))
  },
  handleMouseDown: function(e, t) {
    if (this.dragBounds && this.currentShapes.member(t) && this.toMoveShapes.length) {
      this.dragEnable = !0, this.dragIntialized = !0, this.edgesMovable = !0;
      var i = this.facade.getCanvas().node.getScreenCTM();
      this.faktorXY.x = i.a, this.faktorXY.y = i.d;
      var o = Event.pointerX(e),
        n = Event.pointerY(e),
        r = this.dragBounds.upperLeft();
      this.offSetPosition = {
        x: o - r.x * this.faktorXY.x,
        y: n - r.y * this.faktorXY.y
      }, this.offsetScroll = {
        x: this.scrollNode.scrollLeft,
        y: this.scrollNode.scrollTop
      }, document.documentElement.addEventListener(ORYX.CONFIG.EVENT_MOUSEMOVE, this.callbackMouseMove, !1), document.documentElement.addEventListener(ORYX.CONFIG.EVENT_MOUSEUP, this.callbackMouseUp, !0)
    }
  },
  handleMouseUp: function(e) {
    if (this.facade.raiseEvent({
      type: ORYX.CONFIG.EVENT_HIGHLIGHT_HIDE,
      highlightId: "dragdropresize.contain"
    }), this.facade.raiseEvent({
      type: ORYX.CONFIG.EVENT_HIGHLIGHT_HIDE,
      highlightId: "dragdropresize.attached"
    }), this.dragEnable) {
      if (!this.dragIntialized) {
        if (this.afterDrag(), this.isAttachingAllowed && 1 == this.toMoveShapes.length && this.toMoveShapes[0] instanceof ORYX.Core.Node && this.toMoveShapes[0].dockers.length > 0) {
          var t = this.facade.eventCoordinates(e),
            i = this.toMoveShapes[0].dockers[0],
            o = ORYX.Core.Command.extend({
              construct: function(e, t, i, o) {
                this.docker = e, this.newPosition = t, this.newDockedShape = i, this.newParent = i.parent || o.getCanvas(), this.oldPosition = e.parent.bounds.center(), this.oldDockedShape = e.getDockedShape(), this.oldParent = e.parent.parent || o.getCanvas(), this.facade = o, this.oldDockedShape && (this.oldPosition = e.parent.absoluteBounds().center())
              },
              execute: function() {
                this.dock(this.newDockedShape, this.newParent, this.newPosition), this.facade.raiseEvent({
                  type: ORYX.CONFIG.EVENT_ARRANGEMENT_TOP,
                  excludeCommand: !0
                })
              },
              rollback: function() {
                this.dock(this.oldDockedShape, this.oldParent, this.oldPosition)
              },
              dock: function(e, t, i) {
                t.add(this.docker.parent), this.docker.setDockedShape(void 0), this.docker.bounds.centerMoveTo(i), this.docker.setDockedShape(e), this.facade.setSelection([this.docker.parent]), this.facade.getCanvas().update(), this.facade.updateSelection()
              }
            }),
            n = [new o(i, t, this.containmentParentNode, this.facade)];
          this.facade.executeCommands(n)
        } else this.isAddingAllowed && this.refreshSelectedShapes();
        this.facade.updateSelection(), this.facade.raiseEvent({
          type: ORYX.CONFIG.EVENT_DRAGDROP_END
        })
      }
      this.vLine && this.vLine.hide(), this.hLine && this.hLine.hide()
    }
    this.dragEnable = !1, document.documentElement.removeEventListener(ORYX.CONFIG.EVENT_MOUSEUP, this.callbackMouseUp, !0), document.documentElement.removeEventListener(ORYX.CONFIG.EVENT_MOUSEMOVE, this.callbackMouseMove, !1)
  },
  handleMouseMove: function(e) {
    if (this.dragEnable) {
      this.dragIntialized && (this.facade.raiseEvent({
        type: ORYX.CONFIG.EVENT_DRAGDROP_START
      }), this.dragIntialized = !1, this.resizerSE.hide(), this.resizerNW.hide(), this._onlyEdges = this.currentShapes.all(function(e) {
        return e instanceof ORYX.Core.Edge
      }), this.beforeDrag(), this._currentUnderlyingNodes = []);
      var t = {
        x: Event.pointerX(e) - this.offSetPosition.x,
        y: Event.pointerY(e) - this.offSetPosition.y
      };
      t.x -= this.offsetScroll.x - this.scrollNode.scrollLeft, t.y -= this.offsetScroll.y - this.scrollNode.scrollTop;
      var i = e.shiftKey || e.ctrlKey;
      ORYX.CONFIG.GRID_ENABLED && !i ? t = this.snapToGrid(t) : (this.vLine && this.vLine.hide(), this.hLine && this.hLine.hide()), t.x /= this.faktorXY.x, t.y /= this.faktorXY.y, t.x = Math.max(0, t.x), t.y = Math.max(0, t.y);
      var o = this.facade.getCanvas();
      t.x = Math.min(o.bounds.width() - this.dragBounds.width(), t.x), t.y = Math.min(o.bounds.height() - this.dragBounds.height(), t.y), this.dragBounds.moveTo(t), this.resizeRectangle(this.dragBounds), this.isAttachingAllowed = !1;
      var n = this.facade.eventCoordinates(e),
        r = 1;
      if (!isNaN(screen.logicalXDPI) && !isNaN(screen.systemXDPI)) {
        var s = navigator.userAgent;
        if (s.indexOf("MSIE") >= 0) {
          var a = Math.round(100 * (screen.deviceXDPI / screen.logicalXDPI));
          100 !== a && (r = a / 100)
        }
      }
      1 !== r && (n.x = n.x / r, n.y = n.y / r);
      var l = $A(this.facade.getCanvas().getAbstractShapesAtPosition(n)),
        d = 1 == this.toMoveShapes.length && this.toMoveShapes[0] instanceof ORYX.Core.Node && this.toMoveShapes[0].dockers.length > 0;
      if (d = d && 1 != l.length, d || l.length !== this._currentUnderlyingNodes.length || !l.all(function(e, t) {
        return this._currentUnderlyingNodes[t] === e
      }.bind(this))) {
        if (this._onlyEdges) this.isAddingAllowed = !0, this.containmentParentNode = this.facade.getCanvas();
        else {
          var c = {
            event: e,
            underlyingNodes: l,
            checkIfAttachable: d
          };
          this.checkRules(c)
        }
        this._currentUnderlyingNodes = l.reverse(), this.isAttachingAllowed ? this.facade.raiseEvent({
          type: ORYX.CONFIG.EVENT_HIGHLIGHT_SHOW,
          highlightId: "dragdropresize.attached",
          elements: [this.containmentParentNode],
          style: ORYX.CONFIG.SELECTION_HIGHLIGHT_STYLE_RECTANGLE,
          color: ORYX.CONFIG.SELECTION_VALID_COLOR
        }) : this.facade.raiseEvent({
          type: ORYX.CONFIG.EVENT_HIGHLIGHT_HIDE,
          highlightId: "dragdropresize.attached"
        }), this.isAttachingAllowed ? this.facade.raiseEvent({
          type: ORYX.CONFIG.EVENT_HIGHLIGHT_HIDE,
          highlightId: "dragdropresize.contain"
        }) : this.isAddingAllowed ? this.facade.raiseEvent({
          type: ORYX.CONFIG.EVENT_HIGHLIGHT_SHOW,
          highlightId: "dragdropresize.contain",
          elements: [this.containmentParentNode],
          color: ORYX.CONFIG.SELECTION_VALID_COLOR
        }) : this.facade.raiseEvent({
          type: ORYX.CONFIG.EVENT_HIGHLIGHT_SHOW,
          highlightId: "dragdropresize.contain",
          elements: [this.containmentParentNode],
          color: ORYX.CONFIG.SELECTION_INVALID_COLOR
        })
      }
    }
  },
  checkRules: function(e) {
    var t = e.event,
      i = e.underlyingNodes,
      o = e.checkIfAttachable,
      n = e.noEdges;
    if (this.containmentParentNode = i.reverse().find(function(e) {
      return e instanceof ORYX.Core.Canvas || (e instanceof ORYX.Core.Node || e instanceof ORYX.Core.Edge && !n) && !(this.currentShapes.member(e) || this.currentShapes.any(function(t) {
        return t.children.length > 0 && t.getChildNodes(!0).member(e)
      }))
    }.bind(this)), o && (this.isAttachingAllowed = this.facade.getRules().canConnect({
      sourceShape: this.containmentParentNode,
      edgeShape: this.toMoveShapes[0],
      targetShape: this.toMoveShapes[0]
    }), this.isAttachingAllowed)) {
      var r = this.facade.eventCoordinates(t);
      this.isAttachingAllowed = this.containmentParentNode.isPointOverOffset(r.x, r.y)
    }
    this.isAttachingAllowed || (this.isAddingAllowed = this.toMoveShapes.all(function(e) {
      return e instanceof ORYX.Core.Edge || e instanceof ORYX.Core.Controls.Docker || this.containmentParentNode === e.parent ? !0 : this.containmentParentNode === e || this.containmentParentNode instanceof ORYX.Core.Edge && n || !this.facade.getRules().canContain({
        containingShape: this.containmentParentNode,
        containedShape: e
      }) ? !1 : !0
    }.bind(this))), !this.isAttachingAllowed && !this.isAddingAllowed && this.containmentParentNode instanceof ORYX.Core.Edge && (e.noEdges = !0, e.underlyingNodes.reverse(), this.checkRules(e))
  },
  refreshSelectedShapes: function() {
    if (this.dragBounds) {
      var e = this.dragBounds.upperLeft(),
        t = this.oldDragBounds.upperLeft(),
        i = {
          x: e.x - t.x,
          y: e.y - t.y
        },
        o = [new ORYX.Core.Command.Move(this.toMoveShapes, i, this.containmentParentNode, this.currentShapes, this)];
      this._undockedEdgesCommand instanceof ORYX.Core.Command && o.unshift(this._undockedEdgesCommand), this.facade.executeCommands(o), this.dragBounds && (this.oldDragBounds = this.dragBounds.clone())
    }
  },
  onResize: function(e) {
    this.dragBounds && (this.dragBounds = e, this.isResizing = !0, this.resizeRectangle(this.dragBounds))
  },
  onResizeStart: function() {
    this.facade.raiseEvent({
      type: ORYX.CONFIG.EVENT_RESIZE_START
    })
  },
  onResizeEnd: function() {
    if (this.currentShapes instanceof Array && !(0 >= this.currentShapes.length) && this.isResizing) {
      var e = ORYX.Core.Command.extend({
          construct: function(e, t, i) {
            this.shape = e, this.oldBounds = e.bounds.clone(), this.newBounds = t, this.plugin = i
          },
          execute: function() {
            this.shape.bounds.set(this.newBounds.a, this.newBounds.b), this.update(this.getOffset(this.oldBounds, this.newBounds))
          },
          rollback: function() {
            this.shape.bounds.set(this.oldBounds.a, this.oldBounds.b), this.update(this.getOffset(this.newBounds, this.oldBounds))
          },
          getOffset: function(e, t) {
            return {
              x: t.a.x - e.a.x,
              y: t.a.y - e.a.y,
              xs: t.width() / e.width(),
              ys: t.height() / e.height()
            }
          },
          update: function(e) {
            this.shape.getLabels().each(function(e) {
              e.changed()
            });
            var t = [].concat(this.shape.getIncomingShapes()).concat(this.shape.getOutgoingShapes()).findAll(function(e) {
              return e instanceof ORYX.Core.Edge
            }.bind(this));
            this.plugin.layoutEdges(this.shape, t, e), this.plugin.facade.setSelection([this.shape]), this.plugin.facade.getCanvas().update(), this.plugin.facade.updateSelection()
          }
        }),
        t = this.dragBounds.clone(),
        i = this.currentShapes[0];
      if (i.parent) {
        var o = i.parent.absoluteXY();
        t.moveBy(-o.x, -o.y)
      }
      var n = new e(i, t, this);
      this.facade.executeCommands([n]), this.isResizing = !1, this.facade.raiseEvent({
        type: ORYX.CONFIG.EVENT_RESIZE_END
      })
    }
  },
  beforeDrag: function() {
    var e = ORYX.Core.Command.extend({
      construct: function(e) {
        this.dockers = e.collect(function(e) {
          return e instanceof ORYX.Core.Controls.Docker ? {
            docker: e,
            dockedShape: e.getDockedShape(),
            refPoint: e.referencePoint
          } : void 0
        }).compact()
      },
      execute: function() {
        this.dockers.each(function(e) {
          e.docker.setDockedShape(void 0)
        })
      },
      rollback: function() {
        this.dockers.each(function(e) {
          e.docker.setDockedShape(e.dockedShape), e.docker.setReferencePoint(e.refPoint)
        })
      }
    });
    this._undockedEdgesCommand = new e(this.toMoveShapes), this._undockedEdgesCommand.execute()
  },
  hideAllLabels: function(e) {
    e.getLabels().each(function(e) {
      e.hide()
    }), e.getAllDockedShapes().each(function(e) {
      var t = e.getLabels();
      t.length > 0 && t.each(function(e) {
        e.hide()
      })
    }), e.getChildren().each(function(e) {
      e instanceof ORYX.Core.Shape && this.hideAllLabels(e)
    }.bind(this))
  },
  afterDrag: function() {},
  showAllLabels: function(e) {
    for (var t = 0; e.length > t; t++) {
      var i = e[t];
      i.show()
    }
    for (var o = e.getAllDockedShapes(), t = 0; o.length > t; t++) {
      var n = o[t],
        r = n.getLabels();
      r.length > 0 && r.each(function(e) {
        e.show()
      })
    }
    for (var t = 0; e.children.length > t; t++) {
      var s = e.children[t];
      s instanceof ORYX.Core.Shape && this.showAllLabels(s)
    }
  },
  onSelectionChanged: function(e) {
    var t = e.elements;
    if (this.dragEnable = !1, this.dragIntialized = !1, this.resizerSE.hide(), this.resizerNW.hide(), t && 0 != t.length) {
      this.currentShapes = t;
      var i = this.facade.getCanvas().getShapesWithSharedParent(t);
      this.toMoveShapes = i, this.toMoveShapes = this.toMoveShapes.findAll(function(e) {
        return e instanceof ORYX.Core.Node && (0 === e.dockers.length || !t.member(e.dockers.first().getDockedShape()))
      }), t.each(function(e) {
        if (e instanceof ORYX.Core.Edge) {
          var i = e.getDockers(),
            o = t.member(i.first().getDockedShape()),
            n = t.member(i.last().getDockedShape());
          if (!o && !n) {
            var r = !i.first().getDockedShape() && !i.last().getDockedShape();
            r && (this.toMoveShapes = this.toMoveShapes.concat(i))
          }
          e.dockers.length > 2 && o && n && (this.toMoveShapes = this.toMoveShapes.concat(i.findAll(function(e, t) {
            return t > 0 && i.length - 1 > t
          })))
        }
      }.bind(this));
      var o = void 0;
      if (this.toMoveShapes.each(function(e) {
        var t = e;
        e instanceof ORYX.Core.Controls.Docker && (t = e.parent), o ? o.include(t.absoluteBounds()) : o = t.absoluteBounds()
      }.bind(this)), o || t.each(function(e) {
        o ? o.include(e.absoluteBounds()) : o = e.absoluteBounds()
      }), this.dragBounds = o, this.oldDragBounds = o.clone(), this.resizeRectangle(o), this.selectedRect.show(), 1 == t.length && t[0].isResizable) {
        var n = t[0].getStencil().fixedAspectRatio() ? t[0].bounds.width() / t[0].bounds.height() : void 0;
        this.resizerSE.setBounds(this.dragBounds, t[0].minimumSize, t[0].maximumSize, n), this.resizerSE.show(), this.resizerNW.setBounds(this.dragBounds, t[0].minimumSize, t[0].maximumSize, n), this.resizerNW.show()
      } else this.resizerSE.setBounds(void 0), this.resizerNW.setBounds(void 0);
      ORYX.CONFIG.GRID_ENABLED && (this.distPoints = [], this.distPointTimeout && window.clearTimeout(this.distPointTimeout), this.distPointTimeout = window.setTimeout(function() {
        var e = this.facade.getCanvas().getChildShapes(!0).findAll(function(e) {
          for (var i = e.parent; i;) {
            if (t.member(i)) return !1;
            i = i.parent
          }
          return !0
        });
        e.each(function(e) {
          if (!(e instanceof ORYX.Core.Edge)) {
            var t = e.absoluteXY(),
              i = e.bounds.width(),
              o = e.bounds.height();
            this.distPoints.push({
              ul: {
                x: t.x,
                y: t.y
              },
              c: {
                x: t.x + i / 2,
                y: t.y + o / 2
              },
              lr: {
                x: t.x + i,
                y: t.y + o
              }
            })
          }
        }.bind(this))
      }.bind(this), 10))
    } else this.selectedRect.hide(), this.currentShapes = [], this.toMoveShapes = [], this.dragBounds = void 0, this.oldDragBounds = void 0
  },
  snapToGrid: function(e) {
    var t = this.dragBounds,
      i = 10,
      o = this.vLine ? this.vLine.getScale() : 1,
      n = {
        x: e.x / o,
        y: e.y / o
      },
      r = {
        x: e.x / o + t.width() / 2,
        y: e.y / o + t.height() / 2
      };
    ({
      x: e.x / o + t.width(),
      y: e.y / o + t.height()
    });
    var s, a, l, d;
    return this.distPoints.each(function(e) {
      var t, o, n, c;
      i > Math.abs(e.c.x - r.x) && (t = e.c.x - r.x, n = e.c.x), i > Math.abs(e.c.y - r.y) && (o = e.c.y - r.y, c = e.c.y), void 0 !== t && (s = void 0 === s ? t : Math.abs(t) < Math.abs(s) ? t : s, s === t && (l = n)), void 0 !== o && (a = void 0 === a ? o : Math.abs(o) < Math.abs(a) ? o : a, a === o && (d = c))
    }), void 0 !== s ? (n.x += s, n.x *= o, this.vLine && l && this.vLine.update(l)) : (n.x = e.x - e.x % (ORYX.CONFIG.GRID_DISTANCE / 2), this.vLine && this.vLine.hide()), void 0 !== a ? (n.y += a, n.y *= o, this.hLine && d && this.hLine.update(d)) : (n.y = e.y - e.y % (ORYX.CONFIG.GRID_DISTANCE / 2), this.hLine && this.hLine.hide()), n
  },
  showGridLine: function() {},
  resizeRectangle: function(e) {
    this.selectedRect.resize(e)
  }
}), ORYX.Plugins.SelectedRect = Clazz.extend({
  construct: function(e) {
    this.parentId = e, this.node = ORYX.Editor.graft("http://www.w3.org/2000/svg", $(e), ["g"]), this.dashedArea = ORYX.Editor.graft("http://www.w3.org/2000/svg", this.node, ["rect", {
      x: 0,
      y: 0,
      "stroke-width": 1,
      stroke: "#777777",
      fill: "none",
      "stroke-dasharray": "2,2",
      "pointer-events": "none"
    }]), this.hide()
  },
  hide: function() {
    this.node.setAttributeNS(null, "display", "none")
  },
  show: function() {
    this.node.setAttributeNS(null, "display", "")
  },
  resize: function(e) {
    var t = e.upperLeft(),
      i = ORYX.CONFIG.SELECTED_AREA_PADDING;
    this.dashedArea.setAttributeNS(null, "width", e.width() + 2 * i), this.dashedArea.setAttributeNS(null, "height", e.height() + 2 * i), this.node.setAttributeNS(null, "transform", "translate(" + (t.x - i) + ", " + (t.y - i) + ")")
  }
}), ORYX.Plugins.GridLine = Clazz.extend({
  construct: function(e, t) {
    ORYX.Plugins.GridLine.DIR_HORIZONTAL !== t && ORYX.Plugins.GridLine.DIR_VERTICAL !== t && (t = ORYX.Plugins.GridLine.DIR_HORIZONTAL), this.parent = $(e), this.direction = t, this.node = ORYX.Editor.graft("http://www.w3.org/2000/svg", this.parent, ["g"]), this.line = ORYX.Editor.graft("http://www.w3.org/2000/svg", this.node, ["path", {
      "stroke-width": 1,
      stroke: "silver",
      fill: "none",
      "stroke-dasharray": "5,5",
      "pointer-events": "none"
    }]), this.hide()
  },
  hide: function() {
    this.node.setAttributeNS(null, "display", "none")
  },
  show: function() {
    this.node.setAttributeNS(null, "display", "")
  },
  getScale: function() {
    try {
      return this.parent.parentNode.transform.baseVal.getItem(0).matrix.a
    } catch (e) {
      return 1
    }
  },
  update: function(e) {
    if (this.direction === ORYX.Plugins.GridLine.DIR_HORIZONTAL) {
      var t = e instanceof Object ? e.y : e,
        i = this.parent.parentNode.parentNode.width.baseVal.value / this.getScale();
      this.line.setAttributeNS(null, "d", "M 0 " + t + " L " + i + " " + t)
    } else {
      var o = e instanceof Object ? e.x : e,
        n = this.parent.parentNode.parentNode.height.baseVal.value / this.getScale();
      this.line.setAttributeNS(null, "d", "M" + o + " 0 L " + o + " " + n)
    }
    this.show()
  }
}), ORYX.Plugins.GridLine.DIR_HORIZONTAL = "hor", ORYX.Plugins.GridLine.DIR_VERTICAL = "ver", ORYX.Plugins.Resizer = Clazz.extend({
  construct: function(e, t, i) {
    this.parentId = e, this.orientation = t, this.facade = i, this.node = ORYX.Editor.graft("http://www.w3.org/1999/xhtml", $("canvasSection"), ["div", {
      "class": "resizer_" + this.orientation,
      style: "left:0px; top:0px;position:absolute;"
    }]), this.node.addEventListener(ORYX.CONFIG.EVENT_MOUSEDOWN, this.handleMouseDown.bind(this), !0), document.documentElement.addEventListener(ORYX.CONFIG.EVENT_MOUSEUP, this.handleMouseUp.bind(this), !0), document.documentElement.addEventListener(ORYX.CONFIG.EVENT_MOUSEMOVE, this.handleMouseMove.bind(this), !1), this.dragEnable = !1, this.offSetPosition = {
      x: 0,
      y: 0
    }, this.bounds = void 0, this.canvasNode = this.facade.getCanvas().node, this.minSize = void 0, this.maxSize = void 0, this.aspectRatio = void 0, this.resizeCallbacks = [], this.resizeStartCallbacks = [], this.resizeEndCallbacks = [], this.hide(), this.scrollNode = this.node.parentNode.parentNode.parentNode
  },
  handleMouseDown: function(e) {
    this.dragEnable = !0, this.offsetScroll = {
      x: this.scrollNode.scrollLeft,
      y: this.scrollNode.scrollTop
    }, this.offSetPosition = {
      x: Event.pointerX(e) - this.position.x,
      y: Event.pointerY(e) - this.position.y
    }, this.resizeStartCallbacks.each(function(e) {
      e(this.bounds)
    }.bind(this))
  },
  handleMouseUp: function() {
    this.dragEnable = !1, this.containmentParentNode = null, this.resizeEndCallbacks.each(function(e) {
      e(this.bounds)
    }.bind(this))
  },
  handleMouseMove: function(e) {
    if (this.dragEnable) {
      this.aspectRatio = e.shiftKey || e.ctrlKey ? this.bounds.width() / this.bounds.height() : void 0;
      var t = {
        x: Event.pointerX(e) - this.offSetPosition.x,
        y: Event.pointerY(e) - this.offSetPosition.y
      };
      t.x -= this.offsetScroll.x - this.scrollNode.scrollLeft, t.y -= this.offsetScroll.y - this.scrollNode.scrollTop, t.x = Math.min(t.x, this.facade.getCanvas().bounds.width()), t.y = Math.min(t.y, this.facade.getCanvas().bounds.height());
      var i = {
        x: t.x - this.position.x,
        y: t.y - this.position.y
      };
      this.aspectRatio && (newAspectRatio = (this.bounds.width() + i.x) / (this.bounds.height() + i.y), newAspectRatio > this.aspectRatio ? i.x = this.aspectRatio * (this.bounds.height() + i.y) - this.bounds.width() : this.aspectRatio > newAspectRatio && (i.y = (this.bounds.width() + i.x) / this.aspectRatio - this.bounds.height())), "northwest" === this.orientation ? (this.bounds.width() - i.x > this.maxSize.width && (i.x = -(this.maxSize.width - this.bounds.width()), this.aspectRatio && (i.y = this.aspectRatio * i.x)), this.bounds.width() - i.x < this.minSize.width && (i.x = -(this.minSize.width - this.bounds.width()), this.aspectRatio && (i.y = this.aspectRatio * i.x)), this.bounds.height() - i.y > this.maxSize.height && (i.y = -(this.maxSize.height - this.bounds.height()), this.aspectRatio && (i.x = i.y / this.aspectRatio)), this.bounds.height() - i.y < this.minSize.height && (i.y = -(this.minSize.height - this.bounds.height()), this.aspectRatio && (i.x = i.y / this.aspectRatio))) : (this.bounds.width() + i.x > this.maxSize.width && (i.x = this.maxSize.width - this.bounds.width(), this.aspectRatio && (i.y = this.aspectRatio * i.x)), this.bounds.width() + i.x < this.minSize.width && (i.x = this.minSize.width - this.bounds.width(), this.aspectRatio && (i.y = this.aspectRatio * i.x)), this.bounds.height() + i.y > this.maxSize.height && (i.y = this.maxSize.height - this.bounds.height(), this.aspectRatio && (i.x = i.y / this.aspectRatio)), this.bounds.height() + i.y < this.minSize.height && (i.y = this.minSize.height - this.bounds.height(), this.aspectRatio && (i.x = i.y / this.aspectRatio))), "northwest" === this.orientation ? (this.bounds.extend({
        x: -i.x,
        y: -i.y
      }), this.bounds.moveBy(i)) : this.bounds.extend(i), this.update(), this.resizeCallbacks.each(function(e) {
        e(this.bounds)
      }.bind(this)), Event.stop(e)
    }
  },
  registerOnResizeStart: function(e) {
    this.resizeStartCallbacks.member(e) || this.resizeStartCallbacks.push(e)
  },
  unregisterOnResizeStart: function(e) {
    this.resizeStartCallbacks.member(e) && (this.resizeStartCallbacks = this.resizeStartCallbacks.without(e))
  },
  registerOnResizeEnd: function(e) {
    this.resizeEndCallbacks.member(e) || this.resizeEndCallbacks.push(e)
  },
  unregisterOnResizeEnd: function(e) {
    this.resizeEndCallbacks.member(e) && (this.resizeEndCallbacks = this.resizeEndCallbacks.without(e))
  },
  registerOnResize: function(e) {
    this.resizeCallbacks.member(e) || this.resizeCallbacks.push(e)
  },
  unregisterOnResize: function(e) {
    this.resizeCallbacks.member(e) && (this.resizeCallbacks = this.resizeCallbacks.without(e))
  },
  hide: function() {
    this.node.style.display = "none"
  },
  show: function() {
    this.bounds && (this.node.style.display = "")
  },
  setBounds: function(e, t, i, o) {
    this.bounds = e, t || (t = {
      width: ORYX.CONFIG.MINIMUM_SIZE,
      height: ORYX.CONFIG.MINIMUM_SIZE
    }), i || (i = {
      width: ORYX.CONFIG.MAXIMUM_SIZE,
      height: ORYX.CONFIG.MAXIMUM_SIZE
    }), this.minSize = t, this.maxSize = i, this.aspectRatio = o, this.update()
  },
  update: function() {
    if (this.bounds) {
      var e = this.bounds.upperLeft();
      this.bounds.width() < this.minSize.width && this.bounds.set(e.x, e.y, e.x + this.minSize.width, e.y + this.bounds.height()), this.bounds.height() < this.minSize.height && this.bounds.set(e.x, e.y, e.x + this.bounds.width(), e.y + this.minSize.height), this.bounds.width() > this.maxSize.width && this.bounds.set(e.x, e.y, e.x + this.maxSize.width, e.y + this.bounds.height()), this.bounds.height() > this.maxSize.height && this.bounds.set(e.x, e.y, e.x + this.bounds.width(), e.y + this.maxSize.height);
      var t = this.canvasNode.getScreenCTM();
      e.x *= t.a, e.y *= t.d;
      var i = 1;
      if (!isNaN(screen.logicalXDPI) && !isNaN(screen.systemXDPI)) {
        var o = navigator.userAgent;
        if (o.indexOf("MSIE") >= 0) {
          var n = Math.round(100 * (screen.deviceXDPI / screen.logicalXDPI));
          100 !== n && (i = n / 100)
        }
      }
      if (1 === i) e.y = e.y - jQuery("#canvasSection").offset().top + t.f, e.x = e.x - jQuery("#canvasSection").offset().left + t.e;
      else {
        var r = jQuery("#canvasSection").offset().left,
          s = jQuery("#canvasSection").scrollLeft(),
          a = jQuery("#canvasSection").scrollTop(),
          l = t.e - r * i,
          d = 0;
        l > 10 && (d = l / i - l), e.y = e.y - jQuery("#canvasSection").offset().top * i + (a * i - a) + t.f, e.x = e.x - r * i + d + (s * i - s) + t.e
      }
      "northwest" === this.orientation ? (e.x -= 13, e.y -= 13) : (e.x += t.a * this.bounds.width() + 3, e.y += t.d * this.bounds.height() + 3), this.position = e, this.node.style.left = this.position.x + "px", this.node.style.top = this.position.y + "px"
    }
  }
}), ORYX.Core.Command.Move = ORYX.Core.Command.extend({
  construct: function(e, t, i, o, n) {
    this.moveShapes = e, this.selectedShapes = o, this.offset = t, this.plugin = n, this.newParents = e.collect(function(e) {
      return i || e.parent
    }), this.oldParents = e.collect(function(e) {
      return e.parent
    }), this.dockedNodes = e.findAll(function(e) {
      return e instanceof ORYX.Core.Node && 1 == e.dockers.length
    }).collect(function(e) {
      return {
        docker: e.dockers[0],
        dockedShape: e.dockers[0].getDockedShape(),
        refPoint: e.dockers[0].referencePoint
      }
    })
  },
  execute: function() {
    this.dockAllShapes(), this.move(this.offset), this.addShapeToParent(this.newParents), this.selectCurrentShapes(), this.plugin.facade.getCanvas().update(), this.plugin.facade.updateSelection()
  },
  rollback: function() {
    var e = {
      x: -this.offset.x,
      y: -this.offset.y
    };
    this.move(e), this.addShapeToParent(this.oldParents), this.dockAllShapes(!0), this.selectCurrentShapes(), this.plugin.facade.getCanvas().update(), this.plugin.facade.updateSelection()
  },
  move: function(e) {
    for (var t = 0; this.moveShapes.length > t; t++) {
      var i = this.moveShapes[t];
      if (i.bounds.moveBy(e), i instanceof ORYX.Core.Node) {
        (i.dockers || []).each(function(t) {
          t.bounds.moveBy(e)
        });
        var o = [].concat(i.getIncomingShapes()).concat(i.getOutgoingShapes()).findAll(function(e) {
            return e instanceof ORYX.Core.Edge && !this.moveShapes.any(function(t) {
              return t == e || t instanceof ORYX.Core.Controls.Docker && t.parent == e
            })
          }.bind(this)).findAll(function(e) {
            return !(e.dockers.first().getDockedShape() != i && this.moveShapes.include(e.dockers.first().getDockedShape()) || e.dockers.last().getDockedShape() != i && this.moveShapes.include(e.dockers.last().getDockedShape()))
          }.bind(this));
        this.plugin.layoutEdges(i, o, e);
        for (var n = [].concat(i.getIncomingShapes()).concat(i.getOutgoingShapes()).findAll(function(e) {
            return e instanceof ORYX.Core.Edge && e.dockers.first().isDocked() && e.dockers.last().isDocked() && !this.moveShapes.include(e) && !this.moveShapes.any(function(t) {
              return t == e || t instanceof ORYX.Core.Controls.Docker && t.parent == e
            })
          }.bind(this)).findAll(function(e) {
            return this.moveShapes.indexOf(e.dockers.first().getDockedShape()) > t || this.moveShapes.indexOf(e.dockers.last().getDockedShape()) > t
          }.bind(this)), r = 0; n.length > r; r++)
          for (var s = 1; n[r].dockers.length - 1 > s; s++) {
            var a = n[r].dockers[s];
            a.getDockedShape() || this.moveShapes.include(a) || a.bounds.moveBy(e)
          }
      }
    }
  },
  dockAllShapes: function(e) {
    for (var t = 0; this.dockedNodes.length > t; t++) {
      var i = this.dockedNodes[t].docker;
      i.setDockedShape(e ? this.dockedNodes[t].dockedShape : void 0), i.getDockedShape() && i.setReferencePoint(this.dockedNodes[t].refPoint)
    }
  },
  addShapeToParent: function(e) {
    for (var t = 0; this.moveShapes.length > t; t++) {
      var i = this.moveShapes[t];
      if (i instanceof ORYX.Core.Node && i.parent !== e[t]) {
        var o = e[t].absoluteXY(),
          n = i.absoluteXY(),
          r = n.x - o.x,
          s = n.y - o.y;
        if (e[t].add(i), i.getOutgoingShapes(function(i) {
          i instanceof ORYX.Core.Node && !this.moveShapes.member(i) && e[t].add(i)
        }.bind(this)), i instanceof ORYX.Core.Node && 1 == i.dockers.length) {
          var a = i.bounds;
          r += a.width() / 2, s += a.height() / 2, i.dockers.first().bounds.centerMoveTo(r, s)
        } else i.bounds.moveTo(r, s)
      }
    }
  },
  selectCurrentShapes: function() {
    this.plugin.facade.setSelection(this.selectedShapes)
  }
}), ORYX.Plugins || (ORYX.Plugins = {}), ORYX.Plugins.DragDocker = Clazz.extend({
  construct: function(e) {
    this.facade = e, this.VALIDCOLOR = ORYX.CONFIG.SELECTION_VALID_COLOR, this.INVALIDCOLOR = ORYX.CONFIG.SELECTION_INVALID_COLOR, this.shapeSelection = void 0, this.docker = void 0, this.dockerParent = void 0, this.dockerSource = void 0, this.dockerTarget = void 0, this.lastUIObj = void 0, this.isStartDocker = void 0, this.isEndDocker = void 0, this.undockTreshold = 10, this.initialDockerPosition = void 0, this.outerDockerNotMoved = void 0, this.isValid = !1, this.facade.registerOnEvent(ORYX.CONFIG.EVENT_MOUSEDOWN, this.handleMouseDown.bind(this)), this.facade.registerOnEvent(ORYX.CONFIG.EVENT_DOCKERDRAG, this.handleDockerDrag.bind(this)), this.facade.registerOnEvent(ORYX.CONFIG.EVENT_MOUSEOVER, this.handleMouseOver.bind(this)), this.facade.registerOnEvent(ORYX.CONFIG.EVENT_MOUSEOUT, this.handleMouseOut.bind(this))
  },
  handleMouseOut: function(e, t) {
    !this.docker && t instanceof ORYX.Core.Controls.Docker ? t.hide() : !this.docker && t instanceof ORYX.Core.Edge && t.dockers.each(function(e) {
      e.hide()
    })
  },
  handleMouseOver: function(e, t) {
    !this.docker && t instanceof ORYX.Core.Controls.Docker ? t.show() : !this.docker && t instanceof ORYX.Core.Edge && t.dockers.each(function(e) {
      e.show()
    })
  },
  handleDockerDrag: function(e, t) {
    this.handleMouseDown(e.uiEvent, t)
  },
  handleMouseDown: function(e, t) {
    if (t instanceof ORYX.Core.Controls.Docker && t.isMovable) {
      this.shapeSelection = this.facade.getSelection(), this.facade.setSelection(), this.docker = t, this.initialDockerPosition = this.docker.bounds.center(), this.outerDockerNotMoved = !1, this.dockerParent = t.parent, this._commandArg = {
        docker: t,
        dockedShape: t.getDockedShape(),
        refPoint: t.referencePoint || t.bounds.center()
      }, this.docker.show(), t.parent instanceof ORYX.Core.Edge && (t.parent.dockers.first() == t || t.parent.dockers.last() == t) ? t.parent.dockers.first() == t && t.parent.dockers.last().getDockedShape() ? this.dockerTarget = t.parent.dockers.last().getDockedShape() : t.parent.dockers.last() == t && t.parent.dockers.first().getDockedShape() && (this.dockerSource = t.parent.dockers.first().getDockedShape()) : (this.dockerSource = void 0, this.dockerTarget = void 0), this.isStartDocker = this.docker.parent.dockers.first() === this.docker, this.isEndDocker = this.docker.parent.dockers.last() === this.docker, this.facade.getCanvas().add(this.docker.parent), this.docker.parent.getLabels().each(function(e) {
        e.hide()
      });
      var i = this.facade.eventCoordinates(e),
        o = 1;
      if (!isNaN(screen.logicalXDPI) && !isNaN(screen.systemXDPI)) {
        var n = navigator.userAgent;
        if (n.indexOf("MSIE") >= 0) {
          var r = Math.round(100 * (screen.deviceXDPI / screen.logicalXDPI));
          100 !== r && (o = r / 100)
        }
      }
      1 !== o && (i.x = i.x / o, i.y = i.y / o), (this.isStartDocker || this.isEndDocker) && this.docker.isDocked() ? this.outerDockerNotMoved = !0 : (this.docker.setDockedShape(void 0), this.docker.bounds.centerMoveTo(i), this.dockerParent._update());
      var s = {
        movedCallback: this.dockerMoved.bind(this),
        upCallback: this.dockerMovedFinished.bind(this)
      };
      this.startEventPos = i, ORYX.Core.UIEnableDrag(e, t, s)
    }
  },
  dockerMoved: function(e) {
    this.outerDockerNotMoved = !1;
    var t = void 0;
    if (this.docker.parent && (this.isStartDocker || this.isEndDocker)) {
      var i = this.facade.eventCoordinates(e),
        o = 1;
      if (!isNaN(screen.logicalXDPI) && !isNaN(screen.systemXDPI)) {
        var n = navigator.userAgent;
        if (n.indexOf("MSIE") >= 0) {
          var r = Math.round(100 * (screen.deviceXDPI / screen.logicalXDPI));
          100 !== r && (o = r / 100)
        }
      }
      if (1 !== o && (i.x = i.x / o, i.y = i.y / o), this.docker.isDocked()) {
        var s = ORYX.Core.Math.getDistancePointToPoint(i, this.initialDockerPosition);
        if (this.undockTreshold > s) return this.outerDockerNotMoved = !0, void 0;
        this.docker.setDockedShape(void 0), this.dockerParent._update()
      }
      var a = this.facade.getCanvas().getAbstractShapesAtPosition(i),
        l = a.pop();
      if (this.docker.parent === l && (l = a.pop()), this.lastUIObj == l);
      else if (l instanceof ORYX.Core.Shape) {
        if (this.docker.parent instanceof ORYX.Core.Edge) {
          var d = this.getHighestParentBeforeCanvas(l);
          if (d instanceof ORYX.Core.Edge && this.docker.parent === d) return this.isValid = !1, this.dockerParent._update(), void 0;
          this.isValid = !1;
          for (var c = l, p = l; !this.isValid && c && !(c instanceof ORYX.Core.Canvas);) l = c, this.isValid = this.facade.getRules().canConnect({
            sourceShape: this.dockerSource ? this.dockerSource : this.isStartDocker ? l : void 0,
            edgeShape: this.docker.parent,
            targetShape: this.dockerTarget ? this.dockerTarget : this.isEndDocker ? l : void 0
          }), c = c.parent;
          this.isValid || (l = p)
        } else this.isValid = this.facade.getRules().canConnect({
          sourceShape: l,
          edgeShape: this.docker.parent,
          targetShape: this.docker.parent
        });
        this.lastUIObj && this.hideMagnets(this.lastUIObj), this.isValid && this.showMagnets(l), this.showHighlight(l, this.isValid ? this.VALIDCOLOR : this.INVALIDCOLOR), this.lastUIObj = l
      } else this.hideHighlight(), this.lastUIObj ? this.hideMagnets(this.lastUIObj) : null, this.lastUIObj = void 0, this.isValid = !1;
      this.lastUIObj && this.isValid && !e.shiftKey && !e.ctrlKey && (t = this.lastUIObj.magnets.find(function(e) {
        return e.absoluteBounds().isIncluded(i)
      }), t && this.docker.bounds.centerMoveTo(t.absoluteCenterXY()))
    }
    if (!e.shiftKey && !e.ctrlKey && !t) {
      var u = ORYX.CONFIG.DOCKER_SNAP_OFFSET,
        h = u + 1,
        m = u + 1,
        f = this.docker.bounds.center();
      if (this.docker.parent)
        if (this.docker.parent.dockers.each(function(e) {
          if (this.docker != e) {
            var t = e.referencePoint ? e.getAbsoluteReferencePoint() : e.bounds.center();
            h = Math.abs(h) > Math.abs(t.x - f.x) ? t.x - f.x : h, m = Math.abs(m) > Math.abs(t.y - f.y) ? t.y - f.y : m
          }
        }.bind(this)), u > Math.abs(h) || u > Math.abs(m)) h = u > Math.abs(h) ? h : 0, m = u > Math.abs(m) ? m : 0, this.docker.bounds.centerMoveTo(f.x + h, f.y + m);
        else {
          var g = this.docker.parent.dockers[Math.max(this.docker.parent.dockers.indexOf(this.docker) - 1, 0)],
            v = this.docker.parent.dockers[Math.min(this.docker.parent.dockers.indexOf(this.docker) + 1, this.docker.parent.dockers.length - 1)];
          if (g && v && g !== this.docker && v !== this.docker) {
            var I = g.bounds.center(),
              S = v.bounds.center(),
              O = this.docker.bounds.center();
            if (ORYX.Core.Math.isPointInLine(O.x, O.y, I.x, I.y, S.x, S.y, 10)) {
              var R = (Number(S.y) - Number(I.y)) / (Number(S.x) - Number(I.x)),
                E = (I.y - I.x * R - (O.y - O.x * -Math.pow(R, -1))) / (-Math.pow(R, -1) - R),
                y = I.y - I.x * R + R * E;
              if (isNaN(E) || isNaN(y)) return;
              this.docker.bounds.centerMoveTo(E, y)
            }
          }
        }
    }
    this.dockerParent._update()
  },
  dockerMovedFinished: function(e) {
    if (this.facade.setSelection(this.shapeSelection), this.hideHighlight(), this.dockerParent.getLabels().each(function(e) {
      e.show()
    }), this.lastUIObj && (this.isStartDocker || this.isEndDocker) && (this.isValid && (this.docker.setDockedShape(this.lastUIObj), this.facade.raiseEvent({
      type: ORYX.CONFIG.EVENT_DRAGDOCKER_DOCKED,
      docker: this.docker,
      parent: this.docker.parent,
      target: this.lastUIObj
    })), this.hideMagnets(this.lastUIObj)), this.docker.hide(), this.outerDockerNotMoved) {
      var t = this.facade.eventCoordinates(e),
        i = this.facade.getCanvas().getAbstractShapesAtPosition(t),
        o = i.findAll(function(e) {
          return e instanceof ORYX.Core.Node
        });
      i = o.length ? o : i, this.facade.setSelection(i)
    } else {
      var n = ORYX.Core.Command.extend({
        construct: function(e, t, i, o, n, r) {
          this.docker = e, this.index = e.parent.dockers.indexOf(e), this.newPosition = t, this.newDockedShape = o, this.oldPosition = i, this.oldDockedShape = n, this.facade = r, this.index = e.parent.dockers.indexOf(e), this.shape = e.parent
        },
        execute: function() {
          this.docker.parent || (this.docker = this.shape.dockers[this.index]), this.dock(this.newDockedShape, this.newPosition), this.removedDockers = this.shape.removeUnusedDockers(), this.facade.updateSelection()
        },
        rollback: function() {
          this.dock(this.oldDockedShape, this.oldPosition), (this.removedDockers || $H({})).each(function(e) {
            this.shape.add(e.value, Number(e.key)), this.shape._update(!0)
          }.bind(this)), this.facade.updateSelection()
        },
        dock: function(e, t) {
          this.docker.setDockedShape(void 0), e ? (this.docker.setDockedShape(e), this.docker.setReferencePoint(t)) : this.docker.bounds.centerMoveTo(t), this.facade.getCanvas().update()
        }
      });
      if (this.docker.parent) {
        var r = new n(this.docker, this.docker.getDockedShape() ? this.docker.referencePoint : this.docker.bounds.center(), this._commandArg.refPoint, this.docker.getDockedShape(), this._commandArg.dockedShape, this.facade);
        this.facade.executeCommands([r])
      }
    }
    this.docker = void 0, this.dockerParent = void 0, this.dockerSource = void 0, this.dockerTarget = void 0, this.lastUIObj = void 0
  },
  hideHighlight: function() {
    this.facade.raiseEvent({
      type: ORYX.CONFIG.EVENT_HIGHLIGHT_HIDE,
      highlightId: "validDockedShape"
    })
  },
  showHighlight: function(e, t) {
    this.facade.raiseEvent({
      type: ORYX.CONFIG.EVENT_HIGHLIGHT_SHOW,
      highlightId: "validDockedShape",
      elements: [e],
      color: t
    })
  },
  showMagnets: function(e) {
    e.magnets.each(function(e) {
      e.show()
    })
  },
  hideMagnets: function(e) {
    e.magnets.each(function(e) {
      e.hide()
    })
  },
  getHighestParentBeforeCanvas: function(e) {
    if (!(e instanceof ORYX.Core.Shape)) return void 0;
    for (var t = e.parent; t && !(t.parent instanceof ORYX.Core.Canvas);) t = t.parent;
    return t
  }
}), ORYX.Plugins || (ORYX.Plugins = {}), ORYX.Plugins.AddDocker = Clazz.extend({
  construct: function(e) {
    this.facade = e, this.enableAdd = !1, this.enableRemove = !1, this.facade.registerOnEvent(ORYX.CONFIG.EVENT_MOUSEDOWN, this.handleMouseDown.bind(this))
  },
  setEnableAdd: function(e) {
    this.enableAdd = e, this.enableAdd ? jQuery("#add-bendpoint-button").addClass("pressed") : (jQuery("#add-bendpoint-button").removeClass("pressed"), jQuery("#add-bendpoint-button").blur())
  },
  setEnableRemove: function(e) {
    this.enableRemove = e, this.enableRemove ? jQuery("#remove-bendpoint-button").addClass("pressed") : (jQuery("#remove-bendpoint-button").removeClass("pressed"), jQuery("#remove-bendpoint-button").blur())
  },
  enabledAdd: function() {
    return this.enableAdd
  },
  enabledRemove: function() {
    return this.enableRemove
  },
  handleMouseDown: function(e, t) {
    this.enabledAdd() && t instanceof ORYX.Core.Edge ? (this.newDockerCommand({
      edge: t,
      position: this.facade.eventCoordinates(e)
    }), this.setEnableAdd(!1)) : this.enabledRemove() && t instanceof ORYX.Core.Controls.Docker && t.parent instanceof ORYX.Core.Edge && (this.newDockerCommand({
      edge: t.parent,
      docker: t
    }), this.setEnableRemove(!1)), document.body.style.cursor = "default"
  },
  newDockerCommand: function(e) {
    if (e.edge) {
      var t = ORYX.Core.Command.extend({
          construct: function(e, t, i, o, n, r) {
            this.addEnabled = e, this.deleteEnabled = t, this.edge = i, this.docker = o, this.pos = n, this.facade = r
          },
          execute: function() {
            this.addEnabled ? this.docker ? this.edge.add(this.docker, this.index) : (this.docker = this.edge.addDocker(this.pos), this.index = this.edge.dockers.indexOf(this.docker)) : this.deleteEnabled && (this.index = this.edge.dockers.indexOf(this.docker), this.pos = this.docker.bounds.center(), this.edge.removeDocker(this.docker)), this.edge.getLabels().invoke("show"), this.facade.getCanvas().update(), this.facade.updateSelection()
          },
          rollback: function() {
            this.addEnabled ? this.docker instanceof ORYX.Core.Controls.Docker && this.edge.removeDocker(this.docker) : this.deleteEnabled && this.edge.add(this.docker, this.index), this.edge.getLabels().invoke("show"), this.facade.getCanvas().update(), this.facade.updateSelection()
          }
        }),
        i = new t(this.enabledAdd(), this.enabledRemove(), e.edge, e.docker, e.position, this.facade);
      this.facade.executeCommands([i])
    }
  }
}), ORYX.Plugins || (ORYX.Plugins = {}), ORYX.Plugins.SelectionFrame = Clazz.extend({
  construct: function(e) {
    this.facade = e, this.facade.registerOnEvent(ORYX.CONFIG.EVENT_MOUSEDOWN, this.handleMouseDown.bind(this)), document.documentElement.addEventListener(ORYX.CONFIG.EVENT_MOUSEUP, this.handleMouseUp.bind(this), !0), this.position = {
      x: 0,
      y: 0
    }, this.size = {
      width: 0,
      height: 0
    }, this.offsetPosition = {
      x: 0,
      y: 0
    }, this.moveCallback = void 0, this.offsetScroll = {
      x: 0,
      y: 0
    }, this.node = ORYX.Editor.graft("http://www.w3.org/1999/xhtml", $("canvasSection"), ["div", {
      "class": "Oryx_SelectionFrame"
    }]), this.hide()
  },
  handleMouseDown: function(e, t) {
    if (t instanceof ORYX.Core.Canvas) {
      var i = t.rootNode.parentNode.parentNode,
        o = this.facade.getCanvas().node.getScreenCTM();
      this.offsetPosition = {
        x: o.e,
        y: o.f
      }, this.setPos({
        x: Event.pointerX(e) - jQuery("#canvasSection").offset().left,
        y: Event.pointerY(e) - jQuery("#canvasSection").offset().top + 5
      }), this.resize({
        width: 0,
        height: 0
      }), this.moveCallback = this.handleMouseMove.bind(this), document.documentElement.addEventListener(ORYX.CONFIG.EVENT_MOUSEMOVE, this.moveCallback, !1), this.offsetScroll = {
        x: i.scrollLeft,
        y: i.scrollTop
      }, this.show()
    }
    Event.stop(e)
  },
  handleMouseUp: function() {
    if (this.moveCallback) {
      this.hide(), document.documentElement.removeEventListener(ORYX.CONFIG.EVENT_MOUSEMOVE, this.moveCallback, !1), this.moveCallback = void 0;
      var e = this.facade.getCanvas().node.getScreenCTM(),
        t = {
          x: this.size.width > 0 ? this.position.x : this.position.x + this.size.width,
          y: this.size.height > 0 ? this.position.y : this.position.y + this.size.height
        },
        i = {
          x: t.x + Math.abs(this.size.width),
          y: t.y + Math.abs(this.size.height)
        },
        o = 1;
      if (!isNaN(screen.logicalXDPI) && !isNaN(screen.systemXDPI)) {
        var n = navigator.userAgent;
        if (n.indexOf("MSIE") >= 0) {
          var r = Math.round(100 * (screen.deviceXDPI / screen.logicalXDPI));
          100 !== r && (o = r / 100)
        }
      }
      if (1 === o) t.x = t.x - (e.e - jQuery("#canvasSection").offset().left), t.y = t.y - (e.f - jQuery("#canvasSection").offset().top), i.x = i.x - (e.e - jQuery("#canvasSection").offset().left), i.y = i.y - (e.f - jQuery("#canvasSection").offset().top);
      else {
        var s = jQuery("#canvasSection").offset().left,
          a = jQuery("#canvasSection").scrollLeft(),
          l = jQuery("#canvasSection").scrollTop(),
          d = t.e - s * o,
          c = 0;
        d > 10 && (c = d / o - d), t.x = t.x - (e.e - s * o + c + (a * o - a)), t.y = t.y - (e.f - jQuery("#canvasSection").offset().top * o + (l * o - l)), i.x = i.x - (e.e - s * o + c + (a * o - a)), i.y = i.y - (e.f - jQuery("#canvasSection").offset().top * o + (l * o - l))
      }
      t.x /= e.a, t.y /= e.d, i.x /= e.a, i.y /= e.d;
      var p = this.facade.getCanvas().getChildShapes(!0).findAll(function(e) {
        var o = e.absoluteBounds(),
          n = o.upperLeft(),
          r = o.lowerRight();
        return n.x > t.x && n.y > t.y && r.x < i.x && r.y < i.y ? !0 : !1
      });
      this.facade.setSelection(p)
    }
  },
  handleMouseMove: function(e) {
    var t = {
        width: Event.pointerX(e) - this.position.x - jQuery("#canvasSection").offset().left,
        height: Event.pointerY(e) - this.position.y - jQuery("#canvasSection").offset().top + 5
      },
      i = this.facade.getCanvas().rootNode.parentNode.parentNode;
    t.width -= this.offsetScroll.x - i.scrollLeft, t.height -= this.offsetScroll.y - i.scrollTop, this.resize(t), Event.stop(e)
  },
  hide: function() {
    this.node.style.display = "none"
  },
  show: function() {
    this.node.style.display = ""
  },
  setPos: function(e) {
    this.node.style.top = e.y + "px", this.node.style.left = e.x + "px", this.position = e
  },
  resize: function(e) {
    this.setPos(this.position), this.size = Object.clone(e), 0 > e.width && (this.node.style.left = this.position.x + e.width + "px", e.width = -e.width), 0 > e.height && (this.node.style.top = this.position.y + e.height + "px", e.height = -e.height), this.node.style.width = e.width + "px", this.node.style.height = e.height + "px"
  }
}), ORYX.Plugins || (ORYX.Plugins = {}), ORYX.Plugins.ShapeHighlighting = Clazz.extend({
  construct: function(e) {
    this.parentNode = e.getCanvas().getSvgContainer(), this.node = ORYX.Editor.graft("http://www.w3.org/2000/svg", this.parentNode, ["g"]), this.highlightNodes = {}, e.registerOnEvent(ORYX.CONFIG.EVENT_HIGHLIGHT_SHOW, this.setHighlight.bind(this)), e.registerOnEvent(ORYX.CONFIG.EVENT_HIGHLIGHT_HIDE, this.hideHighlight.bind(this))
  },
  setHighlight: function(e) {
    if (e && e.highlightId) {
      var t = this.highlightNodes[e.highlightId];
      t || (t = ORYX.Editor.graft("http://www.w3.org/2000/svg", this.node, ["path", {
        "stroke-width": 2,
        fill: "none"
      }]), this.highlightNodes[e.highlightId] = t), e.elements && e.elements.length > 0 ? (this.setAttributesByStyle(t, e), this.show(t)) : this.hide(t)
    }
  },
  hideHighlight: function(e) {
    e && e.highlightId && this.highlightNodes[e.highlightId] && this.hide(this.highlightNodes[e.highlightId])
  },
  hide: function(e) {
    e.setAttributeNS(null, "display", "none")
  },
  show: function(e) {
    e.setAttributeNS(null, "display", "")
  },
  setAttributesByStyle: function(e, t) {
    if (t.style && t.style == ORYX.CONFIG.SELECTION_HIGHLIGHT_STYLE_RECTANGLE) {
      var i = t.elements[0].absoluteBounds(),
        o = t.strokewidth ? t.strokewidth : ORYX.CONFIG.BORDER_OFFSET;
      e.setAttributeNS(null, "d", this.getPathRectangle(i.a, i.b, o)), e.setAttributeNS(null, "stroke", t.color ? t.color : ORYX.CONFIG.SELECTION_HIGHLIGHT_COLOR), e.setAttributeNS(null, "stroke-opacity", t.opacity ? t.opacity : .2), e.setAttributeNS(null, "stroke-width", o)
    } else if (1 == t.elements.length && t.elements[0] instanceof ORYX.Core.Edge && "selection" != t.highlightId) {
      var n = this.getPathEdge(t.elements[0].dockers);
      n && n.length > 0 && e.setAttributeNS(null, "d", n), e.setAttributeNS(null, "stroke", t.color ? t.color : ORYX.CONFIG.SELECTION_HIGHLIGHT_COLOR), e.setAttributeNS(null, "stroke-opacity", t.opacity ? t.opacity : .2), e.setAttributeNS(null, "stroke-width", ORYX.CONFIG.OFFSET_EDGE_BOUNDS)
    } else {
      var n = this.getPathByElements(t.elements);
      n && n.length > 0 && e.setAttributeNS(null, "d", n), e.setAttributeNS(null, "stroke", t.color ? t.color : ORYX.CONFIG.SELECTION_HIGHLIGHT_COLOR), e.setAttributeNS(null, "stroke-opacity", t.opacity ? t.opacity : 1), e.setAttributeNS(null, "stroke-width", t.strokewidth ? t.strokewidth : 2)
    }
  },
  getPathByElements: function(e) {
    if (!e || 0 >= e.length) return void 0;
    var t = ORYX.CONFIG.SELECTED_AREA_PADDING,
      i = "";
    return e.each(function(e) {
      if (e) {
        var o = e.absoluteBounds();
        o.widen(t);
        var n = o.upperLeft(),
          r = o.lowerRight();
        i += this.getPath(n, r)
      }
    }.bind(this)), i
  },
  getPath: function(e, t) {
    return this.getPathCorners(e, t)
  },
  getPathCorners: function(e, t) {
    var i = ORYX.CONFIG.SELECTION_HIGHLIGHT_SIZE,
      o = "";
    return o = o + "M" + e.x + " " + (e.y + i) + " l0 -" + i + " l" + i + " 0 ", o = o + "M" + e.x + " " + (t.y - i) + " l0 " + i + " l" + i + " 0 ", o = o + "M" + t.x + " " + (t.y - i) + " l0 " + i + " l-" + i + " 0 ", o = o + "M" + t.x + " " + (e.y + i) + " l0 -" + i + " l-" + i + " 0 "
  },
  getPathRectangle: function(e, t, i) {
    ORYX.CONFIG.SELECTION_HIGHLIGHT_SIZE;
    var o = "",
      n = i / 2;
    return o = o + "M" + (e.x + n) + " " + e.y, o = o + " L" + (e.x + n) + " " + (t.y - n), o = o + " L" + (t.x - n) + " " + (t.y - n), o = o + " L" + (t.x - n) + " " + (e.y + n), o = o + " L" + (e.x + n) + " " + (e.y + n)
  },
  getPathEdge: function(e) {
    var t = e.length,
      o = "M" + e[0].bounds.center().x + " " + e[0].bounds.center().y;
    for (i = 1; t > i; i++) {
      var n = e[i].bounds.center();
      o = o + " L" + n.x + " " + n.y
    }
    return o
  }
}), ORYX.Plugins.HighlightingSelectedShapes = Clazz.extend({
  construct: function(e) {
    this.facade = e, this.opacityFull = .9, this.opacityLow = .4
  },
  onSelectionChanged: function(e) {
    e.elements && e.elements.length > 1 ? (this.facade.raiseEvent({
      type: ORYX.CONFIG.EVENT_HIGHLIGHT_SHOW,
      highlightId: "selection",
      elements: e.elements.without(e.subSelection),
      color: ORYX.CONFIG.SELECTION_HIGHLIGHT_COLOR,
      opacity: e.subSelection ? this.opacityLow : this.opacityFull
    }), e.subSelection ? this.facade.raiseEvent({
      type: ORYX.CONFIG.EVENT_HIGHLIGHT_SHOW,
      highlightId: "subselection",
      elements: [e.subSelection],
      color: ORYX.CONFIG.SELECTION_HIGHLIGHT_COLOR,
      opacity: this.opacityFull
    }) : this.facade.raiseEvent({
      type: ORYX.CONFIG.EVENT_HIGHLIGHT_HIDE,
      highlightId: "subselection"
    })) : (this.facade.raiseEvent({
      type: ORYX.CONFIG.EVENT_HIGHLIGHT_HIDE,
      highlightId: "selection"
    }), this.facade.raiseEvent({
      type: ORYX.CONFIG.EVENT_HIGHLIGHT_HIDE,
      highlightId: "subselection"
    }))
  }
}), ORYX.Plugins || (ORYX.Plugins = {}), ORYX.Plugins.Overlay = Clazz.extend({
  facade: void 0,
  styleNode: void 0,
  construct: function(e) {
    this.facade = e, this.changes = [], this.facade.registerOnEvent(ORYX.CONFIG.EVENT_OVERLAY_SHOW, this.show.bind(this)), this.facade.registerOnEvent(ORYX.CONFIG.EVENT_OVERLAY_HIDE, this.hide.bind(this)), this.styleNode = document.createElement("style"), this.styleNode.setAttributeNS(null, "type", "text/css"), document.getElementsByTagName("head")[0].appendChild(this.styleNode)
  },
  show: function(e) {
    if (!(!e || !e.shapes || !e.shapes instanceof Array || !e.id || !e.id instanceof String || 0 == e.id.length)) {
      e.attributes && e.shapes.each(function(t) {
        !t instanceof ORYX.Core.Shape || this.setAttributes(t.node, e.attributes)
      }.bind(this));
      var t = !0;
      try {
        t = e.node && e.node instanceof SVGElement
      } catch (i) {}
      e.node && t && (e._temps = [], e.shapes.each(function(t) {
        if (!(!t instanceof ORYX.Core.Shape)) {
          var i = {};
          if (i.svg = e.dontCloneNode ? e.node : e.node.cloneNode(!0), t.node.firstChild.appendChild(i.svg), t instanceof ORYX.Core.Edge && !e.nodePosition && (e.nodePosition = "START"), e.nodePosition) {
            var o = t.bounds,
              n = e.nodePosition.toUpperCase();
            t instanceof ORYX.Core.Node && "START" == n ? n = "NW" : t instanceof ORYX.Core.Node && "END" == n ? n = "SE" : t instanceof ORYX.Core.Edge && "START" == n ? o = t.getDockers().first().bounds : t instanceof ORYX.Core.Edge && "END" == n && (o = t.getDockers().last().bounds), i.callback = function() {
              var e = 0,
                r = 0;
              if ("NW" == n);
              else if ("N" == n) e = o.width() / 2;
              else if ("NE" == n) e = o.width();
              else if ("E" == n) e = o.width(), r = o.height() / 2;
              else if ("SE" == n) e = o.width(), r = o.height();
              else if ("S" == n) e = o.width() / 2, r = o.height();
              else if ("SW" == n) r = o.height();
              else if ("W" == n) r = o.height() / 2;
              else {
                if ("START" != n && "END" != n) return;
                e = o.width() / 2, r = o.height() / 2
              }
              t instanceof ORYX.Core.Edge && (e += o.upperLeft().x, r += o.upperLeft().y), i.svg.setAttributeNS(null, "transform", "translate(" + e + ", " + r + ")")
            }.bind(this), i.element = t, i.callback(), o.registerCallback(i.callback)
          }
          e._temps.push(i)
        }
      }.bind(this))), this.changes[e.id] || (this.changes[e.id] = []), this.changes[e.id].push(e)
    }
  },
  hide: function(e) {
    e && e.id && !(!e.id instanceof String) && 0 != e.id.length && this.changes[e.id] && (this.changes[e.id].each(function(e) {
      e.shapes.each(function(e) {
        !e instanceof ORYX.Core.Shape || this.deleteAttributes(e.node)
      }.bind(this)), e._temps && e._temps.each(function(e) {
        e.svg && e.svg.parentNode && e.svg.parentNode.removeChild(e.svg), e.callback && e.element && e.element.bounds.unregisterCallback(e.callback)
      }.bind(this))
    }.bind(this)), this.changes[e.id] = null)
  },
  setAttributes: function(e, t) {
    var i = this.getAllChilds(e.firstChild.firstChild),
      o = [];
    i.each(function(e) {
      o.push($A(e.attributes).findAll(function(e) {
        return e.nodeValue.startsWith("url(#")
      }))
    }), o = o.flatten().compact(), o = o.collect(function(e) {
      return e.nodeValue
    }).uniq(), o = o.collect(function(e) {
      return e.slice(5, e.length - 1)
    }), o.unshift(e.id + " .me");
    var n, r = $H(t),
      s = r.toJSON().gsub(",", ";").gsub('"', ""),
      a = t.stroke ? s.slice(0, s.length - 1) + "; fill:" + t.stroke + ";}" : s;
    if (t.fill) {
      var l = Object.clone(t);
      l.fill = "black", n = $H(l).toJSON().gsub(",", ";").gsub('"', "")
    }
    csstags = o.collect(function(e, t) {
      return "#" + e + " * " + (t ? a : s) + (n ? " #" + e + " text * " + n : "")
    });
    var d = csstags.join(" ") + "\n";
    this.styleNode.appendChild(document.createTextNode(d))
  },
  deleteAttributes: function(e) {
    var t = $A(this.styleNode.childNodes).findAll(function(t) {
      return t.textContent.include("#" + e.id)
    });
    t.each(function(e) {
      e.parentNode.removeChild(e)
    })
  },
  getAllChilds: function(e) {
    var t = $A(e.childNodes);
    return $A(e.childNodes).each(function(e) {
      t.push(this.getAllChilds(e))
    }.bind(this)), t.flatten()
  }
}), ORYX.Plugins || (ORYX.Plugins = {}), ORYX.Plugins.KeysMove = ORYX.Plugins.AbstractPlugin.extend({
  facade: void 0,
  construct: function(e) {
    this.facade = e, this.copyElements = [], this.facade.offer({
      keyCodes: [{
        metaKeys: [ORYX.CONFIG.META_KEY_META_CTRL],
        keyCode: 65,
        keyAction: ORYX.CONFIG.KEY_ACTION_DOWN
      }],
      functionality: this.selectAll.bind(this)
    }), this.facade.offer({
      keyCodes: [{
        metaKeys: [ORYX.CONFIG.META_KEY_META_CTRL],
        keyCode: ORYX.CONFIG.KEY_CODE_LEFT,
        keyAction: ORYX.CONFIG.KEY_ACTION_DOWN
      }],
      functionality: this.move.bind(this, ORYX.CONFIG.KEY_CODE_LEFT, !1)
    }), this.facade.offer({
      keyCodes: [{
        keyCode: ORYX.CONFIG.KEY_CODE_LEFT,
        keyAction: ORYX.CONFIG.KEY_ACTION_DOWN
      }],
      functionality: this.move.bind(this, ORYX.CONFIG.KEY_CODE_LEFT, !0)
    }), this.facade.offer({
      keyCodes: [{
        metaKeys: [ORYX.CONFIG.META_KEY_META_CTRL],
        keyCode: ORYX.CONFIG.KEY_CODE_RIGHT,
        keyAction: ORYX.CONFIG.KEY_ACTION_DOWN
      }],
      functionality: this.move.bind(this, ORYX.CONFIG.KEY_CODE_RIGHT, !1)
    }), this.facade.offer({
      keyCodes: [{
        keyCode: ORYX.CONFIG.KEY_CODE_RIGHT,
        keyAction: ORYX.CONFIG.KEY_ACTION_DOWN
      }],
      functionality: this.move.bind(this, ORYX.CONFIG.KEY_CODE_RIGHT, !0)
    }), this.facade.offer({
      keyCodes: [{
        metaKeys: [ORYX.CONFIG.META_KEY_META_CTRL],
        keyCode: ORYX.CONFIG.KEY_CODE_UP,
        keyAction: ORYX.CONFIG.KEY_ACTION_DOWN
      }],
      functionality: this.move.bind(this, ORYX.CONFIG.KEY_CODE_UP, !1)
    }), this.facade.offer({
      keyCodes: [{
        keyCode: ORYX.CONFIG.KEY_CODE_UP,
        keyAction: ORYX.CONFIG.KEY_ACTION_DOWN
      }],
      functionality: this.move.bind(this, ORYX.CONFIG.KEY_CODE_UP, !0)
    }), this.facade.offer({
      keyCodes: [{
        metaKeys: [ORYX.CONFIG.META_KEY_META_CTRL],
        keyCode: ORYX.CONFIG.KEY_CODE_DOWN,
        keyAction: ORYX.CONFIG.KEY_ACTION_DOWN
      }],
      functionality: this.move.bind(this, ORYX.CONFIG.KEY_CODE_DOWN, !1)
    }), this.facade.offer({
      keyCodes: [{
        keyCode: ORYX.CONFIG.KEY_CODE_DOWN,
        keyAction: ORYX.CONFIG.KEY_ACTION_DOWN
      }],
      functionality: this.move.bind(this, ORYX.CONFIG.KEY_CODE_DOWN, !0)
    })
  },
  selectAll: function(e) {
    Event.stop(e.event), this.facade.setSelection(this.facade.getCanvas().getChildShapes(!0))
  },
  move: function(e, t, i) {
    Event.stop(i.event);
    var o = t ? 20 : 5,
      n = this.facade.getSelection(),
      r = this.facade.getSelection(),
      s = {
        x: 0,
        y: 0
      };
    switch (e) {
      case ORYX.CONFIG.KEY_CODE_LEFT:
        s.x = -1 * o;
        break;
      case ORYX.CONFIG.KEY_CODE_RIGHT:
        s.x = o;
        break;
      case ORYX.CONFIG.KEY_CODE_UP:
        s.y = -1 * o;
        break;
      case ORYX.CONFIG.KEY_CODE_DOWN:
        s.y = o
    }
    n = n.findAll(function(e) {
      if (e instanceof ORYX.Core.Node && 1 == e.dockers.length && n.include(e.dockers.first().getDockedShape())) return !1;
      var t = e.parent;
      do
        if (n.include(t)) return !1;
      while (t = t.parent);
      return !0
    });
    var a = !0,
      l = n.all(function(e) {
        return e instanceof ORYX.Core.Edge ? (e.isDocked() && (a = !1), !0) : !1
      });
    if ((!l || a) && (n = n.map(function(e) {
      if (e instanceof ORYX.Core.Node) return e;
      if (e instanceof ORYX.Core.Edge) {
        var t = e.dockers;
        return n.include(e.dockers.first().getDockedShape()) && (t = t.without(e.dockers.first())), n.include(e.dockers.last().getDockedShape()) && (t = t.without(e.dockers.last())), t
      }
      return null
    }).flatten().compact(), n.size() > 0)) {
      var d = [this.facade.getCanvas().bounds.lowerRight().x, this.facade.getCanvas().bounds.lowerRight().y, 0, 0];
      if (n.each(function(e) {
        d[0] = Math.min(d[0], e.bounds.upperLeft().x), d[1] = Math.min(d[1], e.bounds.upperLeft().y), d[2] = Math.max(d[2], e.bounds.lowerRight().x), d[3] = Math.max(d[3], e.bounds.lowerRight().y)
      }), 0 > d[0] + s.x && (s.x = -d[0]), 0 > d[1] + s.y && (s.y = -d[1]), d[2] + s.x > this.facade.getCanvas().bounds.lowerRight().x && (s.x = this.facade.getCanvas().bounds.lowerRight().x - d[2]), d[3] + s.y > this.facade.getCanvas().bounds.lowerRight().y && (s.y = this.facade.getCanvas().bounds.lowerRight().y - d[3]), 0 != s.x || 0 != s.y) {
        var c = [new ORYX.Core.Command.Move(n, s, null, r, this)];
        this.facade.executeCommands(c)
      }
    }
  },
  getUndockedCommant: function(e) {
    var t = ORYX.Core.Command.extend({
      construct: function(e) {
        this.dockers = e.collect(function(e) {
          return e instanceof ORYX.Core.Controls.Docker ? {
            docker: e,
            dockedShape: e.getDockedShape(),
            refPoint: e.referencePoint
          } : void 0
        }).compact()
      },
      execute: function() {
        this.dockers.each(function(e) {
          e.docker.setDockedShape(void 0)
        })
      },
      rollback: function() {
        this.dockers.each(function(e) {
          e.docker.setDockedShape(e.dockedShape), e.docker.setReferencePoint(e.refPoint)
        })
      }
    });
    return command = new t(e), command.execute(), command
  }
}), ORYX.Plugins || (ORYX.Plugins = {}), ORYX.Plugins.Layouter || (ORYX.Plugins.Layouter = {}), new function() {
  ORYX.Plugins.Layouter.EdgeLayouter = ORYX.Plugins.AbstractLayouter.extend({
    layouted: ["http://b3mn.org/stencilset/bpmn1.1#SequenceFlow", "http://b3mn.org/stencilset/bpmn1.1#MessageFlow", "http://b3mn.org/stencilset/timjpdl3#SequenceFlow", "http://b3mn.org/stencilset/jbpm4#SequenceFlow", "http://b3mn.org/stencilset/bpmn2.0#MessageFlow", "http://b3mn.org/stencilset/bpmn2.0#SequenceFlow", "http://b3mn.org/stencilset/bpmn2.0choreography#MessageFlow", "http://b3mn.org/stencilset/bpmn2.0choreography#SequenceFlow", "http://b3mn.org/stencilset/bpmn2.0conversation#ConversationLink", "http://b3mn.org/stencilset/epc#ControlFlow", "http://www.signavio.com/stencilsets/processmap#ProcessLink", "http://www.signavio.com/stencilsets/organigram#connection"],
    layout: function(e) {
      e.each(function(e) {
        this.doLayout(e)
      }.bind(this))
    },
    doLayout: function(e) {
      var t = e.getIncomingNodes()[0],
        i = e.getOutgoingNodes()[0];
      if (t && i) {
        var o = this.getPositions(t, i, e);
        o.length > 0 && this.setDockers(e, o[0].a, o[0].b)
      }
    },
    getPositions: function(e, t, i) {
      var o = e.absoluteBounds(),
        n = t.absoluteBounds(),
        r = o.center(),
        s = n.center(),
        a = o.midPoint(),
        l = n.midPoint(),
        d = Object.clone(i.dockers.first().referencePoint),
        c = Object.clone(i.dockers.last().referencePoint),
        p = i.dockers.first().getAbsoluteReferencePoint(),
        u = i.dockers.last().getAbsoluteReferencePoint();
      if (1 > Math.abs(p.x - u.x) || 1 > Math.abs(p.y - u.y)) return [];
      var h = {};
      h.x = r.x < s.x ? (s.x - n.width() / 2 - (r.x + o.width() / 2)) / 2 + (r.x + o.width() / 2) : (r.x - o.width() / 2 - (s.x + n.width() / 2)) / 2 + (s.x + n.width() / 2), h.y = r.y < s.y ? (s.y - n.height() / 2 - (r.y + o.height() / 2)) / 2 + (r.y + o.height() / 2) : (r.y - o.height() / 2 - (s.y + n.height() / 2)) / 2 + (s.y + n.height() / 2), o.widen(5), n.widen(20);
      var m = [],
        f = this.getOffset.bind(this);
      return o.isIncluded(s.x, r.y) || n.isIncluded(s.x, r.y) || m.push({
        a: {
          x: s.x + f(c, l, "x"),
          y: r.y + f(d, a, "y")
        },
        z: this.getWeight(e, r.x < s.x ? "r" : "l", t, r.y < s.y ? "t" : "b", i)
      }), o.isIncluded(r.x, s.y) || n.isIncluded(r.x, s.y) || m.push({
        a: {
          x: r.x + f(d, a, "x"),
          y: s.y + f(c, l, "y")
        },
        z: this.getWeight(e, r.y < s.y ? "b" : "t", t, r.x < s.x ? "l" : "r", i)
      }), o.isIncluded(h.x, r.y) || n.isIncluded(h.x, s.y) || m.push({
        a: {
          x: h.x,
          y: r.y + f(d, a, "y")
        },
        b: {
          x: h.x,
          y: s.y + f(c, l, "y")
        },
        z: this.getWeight(e, "r", t, "l", i, r.x > s.x)
      }), o.isIncluded(r.x, h.y) || n.isIncluded(s.x, h.y) || m.push({
        a: {
          x: r.x + f(d, a, "x"),
          y: h.y
        },
        b: {
          x: s.x + f(c, l, "x"),
          y: h.y
        },
        z: this.getWeight(e, "b", t, "t", i, r.y > s.y)
      }), m.sort(function(e, t) {
        return e.z < t.z ? 1 : e.z == t.z ? -1 : -1
      })
    },
    getOffset: function(e, t, i) {
      return e[i] - t[i]
    },
    getWeight: function(e, t, i, o, n, r) {
      t = (t || "").toLowerCase(), o = (o || "").toLowerCase(), ["t", "r", "b", "l"].include(t) || (t = "r"), ["t", "r", "b", "l"].include(o) || (t = "l"), r && (t = "t" == t ? "b" : "r" == t ? "l" : "b" == t ? "t" : "l" == t ? "r" : "r", o = "t" == o ? "b" : "r" == o ? "l" : "b" == o ? "t" : "l" == o ? "r" : "r");
      var s = this.facade.getRules().getLayoutingRules(e, n).out,
        a = this.facade.getRules().getLayoutingRules(i, n)["in"],
        l = s[t],
        d = a[o],
        c = function(e, t, i) {
          switch (e) {
            case "t":
              return 2 > Math.abs(t.x - i.x) && t.y < i.y;
            case "r":
              return t.x > i.x && 2 > Math.abs(t.y - i.y);
            case "b":
              return 2 > Math.abs(t.x - i.x) && t.y > i.y;
            case "l":
              return t.x < i.x && 2 > Math.abs(t.y - i.y);
            default:
              return !1
          }
        },
        p = e.getIncomingShapes().findAll(function(e) {
          return e instanceof ORYX.Core.Edge
        }).any(function(e) {
          return c(t, e.dockers[e.dockers.length - 2].bounds.center(), e.dockers.last().bounds.center())
        }),
        u = i.getOutgoingShapes().findAll(function(e) {
          return e instanceof ORYX.Core.Edge
        }).any(function(e) {
          return c(o, e.dockers[1].bounds.center(), e.dockers.first().bounds.center())
        });
      return p || u ? 0 : l + d
    },
    setDockers: function(e, t, i) {
      e && (e.dockers.each(function(t) {
        e.removeDocker(t)
      }), [t, i].compact().each(function(t) {
        var i = e.createDocker(void 0, t);
        i.bounds.centerMoveTo(t)
      }), e.dockers.each(function(e) {
        e.update()
      }), e._update(!0))
    }
  })
}, ORYX.Plugins || (ORYX.Plugins = {}), new function() {
  ORYX.Plugins.BPMN2_0 = {
    construct: function(e) {
      this.facade = e, this.facade.registerOnEvent(ORYX.CONFIG.EVENT_DRAGDOCKER_DOCKED, this.handleDockerDocked.bind(this)), this.facade.registerOnEvent(ORYX.CONFIG.EVENT_PROPWINDOW_PROP_CHANGED, this.handlePropertyChanged.bind(this)), this.facade.registerOnEvent("layout.bpmn2_0.pool", this.handleLayoutPool.bind(this)), this.facade.registerOnEvent("layout.bpmn2_0.subprocess", this.handleSubProcess.bind(this)), this.facade.registerOnEvent(ORYX.CONFIG.EVENT_SHAPEREMOVED, this.handleShapeRemove.bind(this)), this.facade.registerOnEvent(ORYX.CONFIG.EVENT_LOADED, this.afterLoad.bind(this)), this.namespace = void 0
    },
    afterLoad: function() {
      this.facade.getCanvas().getChildNodes().each(function(e) {
        e.getStencil().id().endsWith("Pool") && this.handleLayoutPool({
          shape: e
        })
      }.bind(this))
    },
    onSelectionChanged: function(e) {
      var t = e.elements;
      if (t && 1 === t.length) {
        var i = this.getNamespace(),
          o = t[0];
        if ("Pool" === o.getStencil().idWithoutNs() && 0 === o.getChildNodes().length) {
          var n = {
            type: i + "Lane",
            position: {
              x: 0,
              y: 0
            },
            namespace: o.getStencil().namespace(),
            parent: o
          };
          this.facade.createShape(n), this.facade.getCanvas().update(), this.facade.setSelection([o])
        }
      }
      if (t.any(function(e) {
        return e instanceof ORYX.Core.Node && e.getStencil().id().endsWith("Lane")
      })) {
        var r = t.findAll(function(e) {
            return e instanceof ORYX.Core.Node && e.getStencil().id().endsWith("Lane")
          }),
          s = [],
          a = [];
        r.each(function(e) {
          var t = this.getParentPool(e);
          t && s.push(t)
        }.bind(this)), s = s.uniq().findAll(function(e) {
          var i = this.getLanes(e, !0);
          return i.all(function(e) {
            return r.include(e)
          }) ? (a = a.concat(i), !0) : t.include(e) && i.any(function(e) {
            return r.include(e)
          }) ? (a = a.concat(i), !0) : !1
        }.bind(this)), a.length > 0 && s.length > 0 && (t = t.without.apply(t, a), t = t.concat(s), this.facade.setSelection(t.uniq()))
      }
    },
    handleShapeRemove: function(t) {
      var i = t.shape,
        o = t.parent;
      if (i instanceof ORYX.Core.Node && "Lane" === i.getStencil().idWithoutNs() && this.facade.isExecutingCommands()) {
        var n = this.getParentPool(o);
        if (n && n.parent) {
          var r = function(e) {
              return !e.getChildNodes().any(function(e) {
                return "Lane" === e.getStencil().idWithoutNs()
              })
            },
            s = r(i),
            a = o.getChildNodes().any(function(e) {
              return "Lane" === e.getStencil().idWithoutNs()
            });
          if (s && a) {
            var l = new e(i, o, n, this);
            this.facade.executeCommands([l])
          } else if (s || this.facade.getSelection().any(function(e) {
            return e instanceof ORYX.Core.Node && "Lane" === e.getStencil().idWithoutNs() && e.isParent(i) && r(e)
          })) s && !a && o == n && o.add(i);
          else {
            var d = ORYX.Core.Command.extend({
              construct: function(e, t) {
                this.children = e.getChildNodes(!0), this.facade = t
              },
              execute: function() {
                this.children.each(function(e) {
                  e.bounds.moveBy(30, 0)
                })
              },
              rollback: function() {
                this.children.each(function(e) {
                  e.bounds.moveBy(-30, 0)
                })
              }
            });
            this.facade.executeCommands([new d(i, this.facade)])
          }
        }
      }
    },
    hashedSubProcesses: {},
    hashChildShapes: function(e) {
      var t = e.getChildNodes();
      t.each(function(e) {
        this.hashedSubProcesses[e.id] && (this.hashedSubProcesses[e.id] = e.absoluteXY(), this.hashedSubProcesses[e.id].width = e.bounds.width(), this.hashedSubProcesses[e.id].height = e.bounds.height(), this.hashChildShapes(e))
      }.bind(this))
    },
    handleSubProcess: function(e) {
      var t = e.shape;
      if (!this.hashedSubProcesses[t.id]) return this.hashedSubProcesses[t.id] = t.absoluteXY(), this.hashedSubProcesses[t.id].width = t.bounds.width(), this.hashedSubProcesses[t.id].height = t.bounds.height(), void 0;
      var i = t.absoluteXY();
      i.x -= this.hashedSubProcesses[t.id].x, i.y -= this.hashedSubProcesses[t.id].y;
      var o = this.hashedSubProcesses[t.id].width !== t.bounds.width() || this.hashedSubProcesses[t.id].height !== t.bounds.height();
      this.hashedSubProcesses[t.id] = t.absoluteXY(), this.hashedSubProcesses[t.id].width = t.bounds.width(), this.hashedSubProcesses[t.id].height = t.bounds.height(), this.hashChildShapes(t), this.facade.isExecutingCommands() && !o && this.moveChildDockers(t, i)
    },
    moveChildDockers: function(e, t) {
      if (t.x || t.y) {
        var i = e.getChildNodes(!0),
          o = i.map(function(e) {
            return [].concat(e.getIncomingShapes()).concat(e.getOutgoingShapes())
          }).flatten().uniq().map(function(e) {
            return e.dockers.length > 2 ? e.dockers.slice(1, e.dockers.length - 1) : []
          }).flatten(),
          n = e.absoluteBounds();
        n.moveBy(-t.x, -t.y);
        var r = {};
        o.each(function(e) {
          if (!e.isChanged) {
            var o = Object.clone(t);
            if (!n.isIncluded(e.bounds.center())) {
              var s = e.parent.dockers.indexOf(e),
                a = e.parent.dockers.length,
                l = e.parent.getSource(),
                d = e.parent.getTarget(),
                c = i.include(l) && i.include(d);
              if (!c) {
                var p = 0 !== s ? n.isIncluded(e.parent.dockers[s - 1].bounds.center()) : !1,
                  u = s !== a - 1 ? n.isIncluded(e.parent.dockers[s + 1].bounds.center()) : !1;
                if (!p && !u) return;
                var h = e.parent.dockers[p ? s - 1 : s + 1];
                if (2 > Math.abs(-Math.abs(h.bounds.center().x - e.bounds.center().x))) o.y = 0;
                else {
                  if (!(2 > Math.abs(-Math.abs(h.bounds.center().y - e.bounds.center().y)))) return;
                  o.x = 0
                }
              }
            }
            r[e.getId()] = {
              docker: e,
              offset: o
            }
          }
        }), this.facade.executeCommands([new ORYX.Core.MoveDockersCommand(r)])
      }
    },
    handleDockerDocked: function(e) {
      var t = this.getNamespace(),
        i = e.parent,
        o = e.target;
      if (i.getStencil().id() === t + "SequenceFlow") {
        var n = o.getStencil().groups().find(function(e) {
          return "Gateways" == e ? e : void 0
        });
        n || "Expression" != i.properties["oryx-conditiontype"] ? i.setProperty("oryx-showdiamondmarker", !1) : i.setProperty("oryx-showdiamondmarker", !0), this.facade.getCanvas().update()
      }
    },
    handlePropertyChanged: function(e) {
      var t = this.getNamespace(),
        i = e.elements,
        o = e.key,
        n = e.value,
        r = !1;
      i.each(function(e) {
        if (e.getStencil().id() === t + "SequenceFlow" && "oryx-conditiontype" === o) {
          if ("Expression" != n) e.setProperty("oryx-showdiamondmarker", !1);
          else {
            var i = e.getIncomingShapes();
            i || e.setProperty("oryx-showdiamondmarker", !0);
            var s = i.find(function(e) {
              var t = e.getStencil().groups().find(function(e) {
                return "Gateways" == e ? e : void 0
              });
              return t ? t : void 0
            });
            s ? e.setProperty("oryx-showdiamondmarker", !1) : e.setProperty("oryx-showdiamondmarker", !0)
          }
          r = !0
        }
      }.bind(this)), r && this.facade.getCanvas().update()
    },
    hashedPoolPositions: {},
    hashedLaneDepth: {},
    hashedBounds: {},
    hashedPositions: {},
    handleLayoutPool: function(e) {
      var t = e.shape,
        i = this.facade.getSelection(),
        o = i.include(t) ? t : i.first();
      if (o = o || t, this.currentPool = t, (o.getStencil().id().endsWith("Pool") || o.getStencil().id().endsWith("Lane")) && (o === t || o.isParent(t) || this.hashedBounds[t.id][o.id])) {
        this.hashedBounds[t.id] || (this.hashedBounds[t.id] = {});
        var n = this.getLanes(t);
        if (!(0 >= n.length)) {
          var r = this.getLanes(t, !0),
            s = r.clone(),
            a = $H({});
          if (r.each(function(e) {
            a[e.id] = e.bounds.upperLeft()
          }), 1 === n.length && 0 >= this.getLanes(n.first()).length) {
            n.first().setProperty("oryx-showcaption", n.first().properties["oryx-name"].trim().length > 0);
            var l = n.first().node.getElementsByTagName("rect");
            l[0].setAttributeNS(null, "display", "none")
          } else r.invoke("setProperty", "oryx-showcaption", !0), r.each(function(e) {
            var t = e.node.getElementsByTagName("rect");
            t[0].removeAttributeNS(null, "display")
          });
          for (var d = [], c = [], p = -1; ++p < r.length;) this.hashedBounds[t.id][r[p].id] || c.push(r[p]);
          c.length > 0 && (o = c.first());
          for (var u = $H(this.hashedBounds[t.id]).keys(), p = -1; ++p < u.length;) r.any(function(e) {
            return e.id == u[p]
          }) || (d.push(this.hashedBounds[t.id][u[p]]), i = i.without(function(e) {
            return e.id == u[p]
          }));
          var h, m, f, g;
          if (d.length > 0 || c.length > 0) h = 1 === c.length && 1 === this.getLanes(c[0].parent).length ? this.adjustHeight(n, c[0].parent) : this.updateHeight(t), m = this.adjustWidth(n, t.bounds.width()), t.update();
          else if (t == o) {
            if (1 === i.length && this.isResized(t, this.hashedPoolPositions[t.id])) {
              var v = this.hashedPoolPositions[t.id].upperLeft(),
                I = t.bounds.upperLeft(),
                S = 0;
              if (this.shouldScale(t)) {
                var O = this.hashedPoolPositions[t.id];
                S = O.height() / t.bounds.height()
              }
              this.adjustLanes(t, r, v.x - I.x, v.y - I.y, S)
            }
            h = this.adjustHeight(n, void 0, t.bounds.height()), m = this.adjustWidth(n, t.bounds.width())
          } else {
            if (1 === i.length && this.isResized(o, this.hashedBounds[t.id][o.id])) {
              var v = this.hashedBounds[t.id][o.id].upperLeft(),
                I = o.absoluteXY();
              f = v.x - I.x, g = v.y - I.y, (f || g) && (s = s.without(o), this.adjustLanes(t, this.getAllExcludedLanes(t, o), f, 0));
              var R = this.getLanes(o, !0);
              if (R.length > 0)
                if (this.shouldScale(o)) {
                  var O = this.hashedBounds[t.id][o.id],
                    S = O.height() / o.bounds.height();
                  this.adjustLanes(t, R, f, g, S)
                } else this.adjustLanes(t, R, f, g, 0)
            }
            var E = r.map(function(e) {
              return {
                shape: e,
                bounds: e.bounds.clone()
              }
            });
            h = this.adjustHeight(n, o), this.checkForChanges(r, E), m = this.adjustWidth(n, o.bounds.width() + 30 * this.getDepth(o, t))
          }
          if (this.setDimensions(t, m, h, f, g), this.facade.isExecutingCommands() && (0 === d.length || 0 !== c.length) && (this.updateDockers(s, t), this.hashedPositions[t.id] && this.hashedPositions[t.id].keys().any(function(e, t) {
            return (r[t] || {}).id !== e
          }))) {
            var y = ORYX.Core.Command.extend({
                construct: function(e, t, i, o, n) {
                  this.originPosition = Object.clone(e), this.newPosition = Object.clone(t), this.lanes = i, this.plugin = o, this.pool = n
                },
                execute: function() {
                  this.executed || (this.executed = !0, this.lanes.each(function(e) {
                    this.newPosition[e.id] && e.bounds.moveTo(this.newPosition[e.id])
                  }.bind(this)), this.plugin.hashedPositions[this.pool] = Object.clone(this.newPosition))
                },
                rollback: function() {
                  this.lanes.each(function(e) {
                    this.originPosition[e.id] && e.bounds.moveTo(this.originPosition[e.id])
                  }.bind(this)), this.plugin.hashedPositions[this.pool] = Object.clone(this.originPosition)
                }
              }),
              T = $H({});
            r.each(function(e) {
              T[e.id] = e.bounds.upperLeft()
            });
            var b = new y(a, T, r, this, t.id);
            this.facade.executeCommands([b])
          }
          this.hashedBounds[t.id] = {}, this.hashedPositions[t.id] = a;
          for (var p = -1; ++p < r.length;) this.hashedBounds[t.id][r[p].id] = r[p].absoluteBounds(), this.hashChildShapes(r[p]), this.hashedLaneDepth[r[p].id] = this.getDepth(r[p], t), this.forceToUpdateLane(r[p]);
          this.hashedPoolPositions[t.id] = t.bounds.clone()
        }
      }
    },
    shouldScale: function(e) {
      var t = e.getChildNodes().findAll(function(e) {
        return e.getStencil().id().endsWith("Lane")
      });
      return t.length > 1 || t.any(function(e) {
        return this.shouldScale(e)
      }.bind(this))
    },
    checkForChanges: function(e, t) {
      if (this.facade.isExecutingCommands() && t.any(function(e) {
        return "" + e.shape.bounds != "" + e.bounds
      })) {
        var i = ORYX.Core.Command.extend({
          construct: function(e) {
            this.oldState = e, this.newState = e.map(function(e) {
              return {
                shape: e.shape,
                bounds: e.bounds.clone()
              }
            })
          },
          execute: function() {
            this.executed && this.applyState(this.newState), this.executed = !0
          },
          rollback: function() {
            this.applyState(this.oldState)
          },
          applyState: function(e) {
            e.each(function(e) {
              e.shape.bounds.set(e.bounds.upperLeft(), e.bounds.lowerRight())
            })
          }
        });
        this.facade.executeCommands([new i(t)])
      }
    },
    isResized: function(e, t) {
      if (!t || !e) return !1;
      var i = t;
      return 0 !== Math.round(i.width() - e.bounds.width()) || 0 !== Math.round(i.height() - e.bounds.height())
    },
    adjustLanes: function(e, t, i, o, n) {
      n = n || 0, t.each(function(t) {
        t.getChildNodes().each(function(e) {
          if (!e.getStencil().id().endsWith("Lane")) {
            var t = n ? e.bounds.center().y - e.bounds.center().y / n : -o;
            e.bounds.moveBy(i || 0, -t), n && e.getStencil().id().endsWith("Subprocess") && this.moveChildDockers(e, {
              x: 0,
              y: -t
            })
          }
        }.bind(this)), this.hashedBounds[e.id][t.id].moveBy(-(i || 0), n ? 0 : -o), n && (t.isScaled = !0)
      }.bind(this))
    },
    getAllExcludedLanes: function(e, t) {
      var i = [];
      return e.getChildNodes().each(function(e) {
        t && e === t || !e.getStencil().id().endsWith("Lane") || (i.push(e), i = i.concat(this.getAllExcludedLanes(e, t)))
      }.bind(this)), i
    },
    forceToUpdateLane: function(e) {
      e.bounds.height() !== e._svgShapes[0].height && (e.isChanged = !0, e.isResized = !0, e._update())
    },
    getDepth: function(e, t) {
      for (var i = 0; e && e.parent && e !== t;) e = e.parent, ++i;
      return i
    },
    updateDepth: function(e, t, i) {
      var o = 30 * (t - i);
      e.getChildNodes().each(function(e) {
        e.bounds.moveBy(o, 0), [].concat(children[j].getIncomingShapes()).concat(children[j].getOutgoingShapes())
      })
    },
    setDimensions: function(e, t, i, o, n) {
      var r = e.getStencil().id().endsWith("Lane");
      e.bounds.set(r ? 30 : e.bounds.a.x - (o || 0), r ? e.bounds.a.y : e.bounds.a.y - (n || 0), t ? e.bounds.a.x + t - (r ? 30 : o || 0) : e.bounds.b.x, i ? e.bounds.a.y + i - (r ? 0 : n || 0) : e.bounds.b.y)
    },
    setLanePosition: function(e, t) {
      e.bounds.moveTo(30, t)
    },
    adjustWidth: function(e, t) {
      return (e || []).each(function(e) {
        this.setDimensions(e, t), this.adjustWidth(this.getLanes(e), t - 30)
      }.bind(this)), t
    },
    adjustHeight: function(e, t, i) {
      var o = 0;
      if (!t && i)
        for (var n = -1; ++n < e.length;) o += e[n].bounds.height();
      for (var n = -1, r = 0; ++n < e.length;) {
        if (e[n] === t) this.adjustHeight(this.getLanes(e[n]), void 0, e[n].bounds.height()), e[n].bounds.set({
          x: 30,
          y: r
        }, {
          x: e[n].bounds.width() + 30,
          y: e[n].bounds.height() + r
        });
        else if (!t && i) {
          var s = e[n].bounds.height() * i / o;
          this.adjustHeight(this.getLanes(e[n]), void 0, s), this.setDimensions(e[n], null, s), this.setLanePosition(e[n], r)
        } else {
          var s = this.adjustHeight(this.getLanes(e[n]), t, i);
          s || (s = e[n].bounds.height()), this.setDimensions(e[n], null, s), this.setLanePosition(e[n], r)
        }
        r += e[n].bounds.height()
      }
      return r
    },
    updateHeight: function(e) {
      var t = this.getLanes(e);
      if (0 == t.length) return e.bounds.height();
      for (var i = 0, o = -1; ++o < t.length;) this.setLanePosition(t[o], i), i += this.updateHeight(t[o]);
      return this.setDimensions(e, null, i), i
    },
    getOffset: function(e, t, i) {
      var o = {
          x: 0,
          y: 0
        },
        o = e.absoluteXY(),
        n = this.hashedBounds[i.id][e.id] || (t === !0 ? this.hashedPoolPositions[e.id] : void 0);
      return n ? (o.x -= n.upperLeft().x, o.y -= n.upperLeft().y, o) : {
        x: 0,
        y: 0
      }
    },
    getNextLane: function(e) {
      for (; e && !e.getStencil().id().endsWith("Lane");) {
        if (e instanceof ORYX.Core.Canvas) return null;
        e = e.parent
      }
      return e
    },
    getParentPool: function(e) {
      for (; e && !e.getStencil().id().endsWith("Pool");) {
        if (e instanceof ORYX.Core.Canvas) return null;
        e = e.parent
      }
      return e
    },
    updateDockers: function(e, t) {
      for (var i, o = t.absoluteBounds(), n = [], r = (this.hashedPoolPositions[t.id] || o).clone(), s = -1, a = -1, l = -1, d = -1, c = {}; ++s < e.length;)
        if (this.hashedBounds[t.id][e[s].id]) {
          var p = e[s].isScaled;
          delete e[s].isScaled;
          var u = e[s].getChildNodes(),
            h = e[s].absoluteBounds(),
            m = this.hashedBounds[t.id][e[s].id] || h,
            f = this.getOffset(e[s], !0, t),
            g = 0,
            v = this.getDepth(e[s], t);
          for (void 0 !== this.hashedLaneDepth[e[s].id] && this.hashedLaneDepth[e[s].id] !== v && (g = 30 * (this.hashedLaneDepth[e[s].id] - v), f.x += g), a = -1; ++a < u.length;) {
            g && !u[a].getStencil().id().endsWith("Lane") && (n.push({
              xOffset: g,
              shape: u[a]
            }), u[a].bounds.moveBy(g, 0)), u[a].getStencil().id().endsWith("Subprocess") && this.moveChildDockers(u[a], f);
            var I = [].concat(u[a].getIncomingShapes()).concat(u[a].getOutgoingShapes()).findAll(function(e) {
              return e instanceof ORYX.Core.Edge
            });
            for (l = -1; ++l < I.length;)
              if (I[l].getStencil().id().endsWith("MessageFlow")) this.layoutEdges(u[a], [I[l]], f);
              else
                for (d = -1; ++d < I[l].dockers.length;)
                  if (i = I[l].dockers[d], !i.getDockedShape() && !i.isChanged) {
                    pos = i.bounds.center();
                    var S = m.isIncluded(pos);
                    !r.isIncluded(pos), 0 == d ? S : m.isIncluded(I[l].dockers[d - 1].bounds.center()), d == I[l].dockers.length - 1 ? S : m.isIncluded(I[l].dockers[d + 1].bounds.center());
                    var O = Object.clone(f);
                    if (p && S && this.isResized(e[s], this.hashedBounds[t.id][e[s].id])) {
                      var R = pos.y - h.upperLeft().y + O.y;
                      O.y -= R - R * (h.height() / m.height())
                    }
                    S && (c[i.id] = {
                      docker: i,
                      offset: O
                    })
                  }
          }
        }
      var E = ORYX.Core.Command.extend({
        construct: function(e) {
          this.state = e
        },
        execute: function() {
          this.executed && this.state.each(function(e) {
            e.shape.bounds.moveBy(e.xOffset, 0)
          }), this.executed = !0
        },
        rollback: function() {
          this.state.each(function(e) {
            e.shape.bounds.moveBy(-e.xOffset, 0)
          })
        }
      });
      this.facade.executeCommands([new ORYX.Core.MoveDockersCommand(c), new E(n)])
    },
    moveBy: function(e, t) {
      return e.x += t.x, e.y += t.y, e
    },
    getHashedBounds: function(e) {
      return this.currentPool && this.hashedBounds[this.currentPool.id][e.id] ? this.hashedBounds[this.currentPool.id][e.id] : e.absoluteBounds()
    },
    getLanes: function(e, t) {
      var i = this.getNamespace(),
        o = e.getChildNodes(t || !1).findAll(function(e) {
          return e.getStencil().id() === i + "Lane"
        });
      return o = o.sort(function(e, t) {
        var i = Math.round(e.bounds.upperLeft().y),
          o = Math.round(t.bounds.upperLeft().y),
          n = Math.round(e.bounds.lowerRight().y),
          r = Math.round(t.bounds.lowerRight().y),
          s = this.getHashedBounds(e),
          a = this.getHashedBounds(t),
          l = Math.round(s.upperLeft().y),
          d = Math.round(a.upperLeft().y),
          c = Math.round(s.lowerRight().y),
          p = Math.round(a.lowerRight().y);
        if (i == o && n == r && (i = l, o = d, n = c, r = p), 0 === Math.round(e.bounds.height() - s.height()) && 0 === Math.round(t.bounds.height() - a.height())) return o > i ? -1 : i > o ? 1 : 0;
        var u = o > i && r > n,
          h = i > o && n > r,
          m = o > i && n >= r && p > c,
          f = i >= o && r > n && d > l,
          g = i > o && r >= n && c > p,
          v = o >= i && n > r && l > d;
        return u || m || f ? -1 : h || g || v ? 1 : 0
      }.bind(this))
    },
    getNamespace: function() {
      if (!this.namespace) {
        var e = this.facade.getStencilSets();
        if (!e.keys()) return void 0;
        this.namespace = e.keys()[0]
      }
      return this.namespace
    }
  };
  var e = ORYX.Core.Command.extend({
    construct: function(e, t, i, o) {
      this.facade = o.facade, this.plugin = o, this.shape = e, this.changes, this.pool = i, this.parent = t, this.shapeChildren = [], this.shape.getChildShapes().each(function(e) {
        this.shapeChildren.push({
          shape: e,
          bounds: {
            a: {
              x: e.bounds.a.x,
              y: e.bounds.a.y
            },
            b: {
              x: e.bounds.b.x,
              y: e.bounds.b.y
            }
          }
        })
      }.bind(this)), this.shapeUpperLeft = this.shape.bounds.upperLeft(), this.parentHeight = this.parent.bounds.height()
    },
    getLeafLanes: function(e) {
      var t = this.plugin.getLanes(e).map(function(e) {
        return this.getLeafLanes(e)
      }.bind(this)).flatten();
      return t.length > 0 ? t : [e]
    },
    findNewLane: function() {
      this.plugin.getLanes(this.parent);
      var e = this.getLeafLanes(this.parent);
      this.lane = e.find(function(e) {
        return e.bounds.upperLeft().y >= this.shapeUpperLeft.y
      }.bind(this)) || e.last(), this.laneUpperLeft = this.lane.bounds.upperLeft()
    },
    execute: function() {
      if (this.changes) return this.executeAgain(), void 0;
      if (this.lane || this.findNewLane(), this.lane) {
        var e = this.laneUpperLeft,
          t = this.shapeUpperLeft,
          i = this.plugin.getDepth(this.lane, this.parent) - 1;
        this.changes = $H({}), e.y >= t.y ? (this.lane.getChildShapes().each(function(e) {
          this.changes[e.getId()] || (this.changes[e.getId()] = this.computeChanges(e, this.lane, this.lane, this.shape.bounds.height())), e.bounds.moveBy(0, this.shape.bounds.height())
        }.bind(this)), this.plugin.hashChildShapes(this.lane), this.shapeChildren.each(function(e) {
          e.shape.bounds.set(e.bounds), e.shape.bounds.moveBy(t.x - 30 - 30 * i, 0), this.changes[e.shape.getId()] || (this.changes[e.shape.getId()] = this.computeChanges(e.shape, this.shape, this.lane, 0)), this.lane.add(e.shape)
        }.bind(this)), this.lane.bounds.moveBy(0, t.y - e.y)) : t.y > e.y && this.shapeChildren.each(function(e) {
          e.shape.bounds.set(e.bounds), e.shape.bounds.moveBy(t.x - 30 - 30 * i, this.lane.bounds.height()), this.changes[e.shape.getId()] || (this.changes[e.shape.getId()] = this.computeChanges(e.shape, this.shape, this.lane, 0)), this.lane.add(e.shape)
        }.bind(this))
      }
      var o = this.lane.bounds.height(),
        n = 1 === this.lane.length ? this.parentHeight : this.lane.bounds.height() + this.shape.bounds.height();
      this.setHeight(n, o, this.parent, this.parentHeight, !0), this.plugin.getLanes(this.parent).each(function(e) {
        this.changes[e.getId()] || e === this.lane || e === this.shape || (this.changes[e.getId()] = this.computeChanges(e, this.parent, this.parent, 0))
      }.bind(this)), this.update()
    },
    setHeight: function(e, t, i, o, n) {
      this.plugin.setDimensions(this.lane, this.lane.bounds.width(), e), this.plugin.hashedBounds[this.pool.id][this.lane.id] = this.lane.absoluteBounds(), this.plugin.adjustHeight(this.plugin.getLanes(i), this.lane), n === !0 && (this.changes[this.shape.getId()] = this.computeChanges(this.shape, i, i, 0, t, e)), this.plugin.setDimensions(i, i.bounds.width(), o), i !== this.pool && this.plugin.setDimensions(this.pool, this.pool.bounds.width(), this.pool.bounds.height() + (e - t))
    },
    update: function() {
      this.plugin.hashedBounds[this.pool.id].REMOVED = !0
    },
    rollback: function() {
      var e = this.laneUpperLeft,
        t = this.shapeUpperLeft;
      this.changes.each(function(i) {
        var o = i.value.oldParent,
          n = i.value.shape;
        i.value.parentHeight;
        var r = i.value.oldHeight,
          s = i.value.newHeight;
        n.getStencil().id().endsWith("Lane") && n.bounds.moveTo(i.value.oldPosition), r ? (this.setHeight(r, s, o, o.bounds.height() + (r - s)), e.y >= t.y && this.lane.bounds.moveBy(0, this.shape.bounds.height() - 1)) : (o.add(n), n.bounds.moveTo(i.value.oldPosition))
      }.bind(this))
    },
    executeAgain: function() {
      this.changes.each(function(e) {
        var t = e.value.newParent,
          i = e.value.shape,
          o = e.value.newHeight,
          n = e.value.oldHeight;
        if (o) {
          var r = this.laneUpperLeft.y,
            s = this.shapeUpperLeft.y;
          r >= s && this.lane.bounds.moveBy(0, s - r), this.setHeight(o, n, t, t.bounds.height() + (o - n))
        } else t.add(i), i.bounds.moveTo(e.value.newPosition)
      }.bind(this)), this.update()
    },
    computeChanges: function(e, t, i, o, n, r) {
      t = this.changes[e.getId()] ? this.changes[e.getId()].oldParent : t;
      var s = this.changes[e.getId()] ? this.changes[e.getId()].oldPosition : e.bounds.upperLeft(),
        a = e.bounds.upperLeft(),
        l = {
          x: a.x,
          y: a.y + o
        },
        d = {
          shape: e,
          parentHeight: t.bounds.height(),
          oldParent: t,
          oldPosition: s,
          oldHeight: n,
          newParent: i,
          newPosition: l,
          newHeight: r
        };
      return d
    }
  });
  ORYX.Plugins.BPMN2_0 = ORYX.Plugins.AbstractPlugin.extend(ORYX.Plugins.BPMN2_0)
},
  function() {
    "use strict";
    angular.module("http-auth-interceptor", ["http-auth-interceptor-buffer"]).factory("authService", ["$rootScope", "httpBuffer", function(e, t) {
        return {
          loginConfirmed: function(i, o) {
            var n = o || function(e) {
              return e
            };
            e.$broadcast("event:auth-loginConfirmed", i), t.retryAll(n)
          },
          loginCancelled: function(i, o) {
            t.rejectAll(o), e.$broadcast("event:auth-loginCancelled", i)
          }
        }
      }]).config(["$httpProvider", function(e) {
        var t = ["$rootScope", "$q", "httpBuffer", "$translate", function(e, t, i, o) {
          function n(e) {
            return e
          }

          function r(n) {
            if (401 === n.status && !n.config.ignoreAuthModule) {
              var r = t.defer();
              return i.append(n.config, r), e.$broadcast("event:auth-loginRequired", n), r.promise
            }
            return n.status >= 500 && 599 >= n.status && n.config && !n.config.ignoreErrors && (n.data && n.data.messageKey ? e.addAlertPromise(o(n.data.messageKey), "error") : n.data && n.data.message ? e.addAlert(n.data.message, "error") : e.addAlertPromise(o("GENERAL.ERROR.GENERIC"), "error")), t.reject(n)
          }
          return function(e) {
            return e.then(n, r)
          }
        }];
        e.interceptors.push(t)
      }]), angular.module("http-auth-interceptor-buffer", []).factory("httpBuffer", ["$injector", function(e) {
      function t(t, o) {
        function n(e) {
          o.resolve(e)
        }

        function r(e) {
          o.reject(e)
        }
        i = i || e.get("$http"), i(t).then(n, r)
      }
      var i, o = [];
      return {
        append: function(e, t) {
          o.push({
            config: e,
            deferred: t
          })
        },
        rejectAll: function(e) {
          if (e)
            for (var t = 0; o.length > t; ++t) o[t].deferred.reject(e);
          o = []
        },
        retryAll: function(e) {
          for (var i = 0; o.length > i; ++i) t(e(o[i].config), o[i].deferred);
          o = []
        }
      }
    }])
  }();
var activitiModeler = angular.module("activitiModeler", ["http-auth-interceptor", "ngCookies", "ngResource", "ngSanitize", "ngRoute", "ngDragDrop", "mgcrea.ngStrap", "mgcrea.ngStrap.helpers.dimensions", "ui.grid", "ui.grid.edit", "ui.grid.selection", "ui.grid.autoResize", "ui.grid.moveColumns", "ui.grid.cellNav", "ngAnimate", "pascalprecht.translate", "ngFileUpload", "angularSpectrumColorpicker", "duScroll", "dndLists", "ui.ace", "ui.select"]),
  activitiModule = activitiModeler,
  activitiApp = activitiModeler;
wireServices(activitiModeler), activitiModeler.config(["$provide", "$routeProvider", "$selectProvider", "$translateProvider", function(e, t, i, o) {
    var n = "editor";
    e.value("appName", n);
    var r = ACTIVITI.CONFIG.webContextRoot + (ACTIVITI.CONFIG.webContextRoot ? "/" + n + "/" : "");
    e.value("appResourceRoot", r), angular.extend(i.defaults, {
      caretHtml: '&nbsp;<i class="icon icon-caret-down"></i>'
    });
    var s = ["$rootScope", "AuthenticationSharedService", function(e, t) {
      return e.authenticated ? (e.authenticated = !0, !0) : t.authenticate()
    }];
    t.when("/login", {
      templateUrl: r + "views/login.html",
      controller: "LoginController"
    }).when("/processes", {
      templateUrl: r + "views/processes.html",
      controller: "ProcessesCtrl",
      resolve: {
        verify: s
      }
    }).when("/processes/:modelId", {
      templateUrl: r + "views/process.html",
      controller: "ProcessCtrl",
      resolve: {
        verify: s
      }
    }).when("/processes/:modelId/history/:modelHistoryId", {
      templateUrl: r + "views/process.html",
      controller: "ProcessCtrl",
      resolve: {
        verify: s
      }
    }).when("/forms", {
      templateUrl: r + "views/forms.html",
      controller: "FormsCtrl",
      resolve: {
        verify: s
      }
    }).when("/forms/:modelId", {
      templateUrl: r + "views/form.html",
      controller: "FormCtrl",
      resolve: {
        verify: s
      }
    }).when("/forms/:modelId/history/:modelHistoryId", {
      templateUrl: r + "views/form.html",
      controller: "FormCtrl",
      resolve: {
        verify: s
      }
    }).when("/apps", {
      templateUrl: r + "views/app-definitions.html",
      controller: "AppDefinitionsCtrl",
      resolve: {
        verify: s
      }
    }).when("/apps/:modelId", {
      templateUrl: r + "views/app-definition.html",
      controller: "AppDefinitionCtrl",
      resolve: {
        verify: s
      }
    }).when("/apps/:modelId/history/:modelHistoryId", {
      templateUrl: "views/app-definition.html",
      controller: "AppDefinitionCtrl",
      resolve: {
        verify: s
      }
    }).when("/stencils", {
      templateUrl: r + "views/stencils.html",
      controller: "StencilsController",
      resolve: {
        verify: s
      }
    }).when("/stencils/:stencilId", {
      templateUrl: r + "views/stencil.html",
      controller: "StencilDetailsCtrl",
      resolve: {
        verify: s
      }
    }).when("/stencils/:stencilId/history/:stencilHistoryId", {
      templateUrl: r + "views/stencil.html",
      controller: "StencilDetailsCtrl",
      resolve: {
        verify: s
      }
    }).when("/decision-tables", {
      templateUrl: r + "views/decision-tables.html",
      controller: "DecisionTablesController",
      resolve: {
        verify: s
      }
    }).when("/decision-tables/:modelId", {
      templateUrl: r + "views/decision-table.html",
      controller: "DecisionTableDetailsCtrl",
      resolve: {
        verify: s
      }
    }).when("/decision-tables/:modelId/history/:modelHistoryId", {
      templateUrl: r + "views/decision-table.html",
      controller: "DecisionTableDetailsCtrl",
      resolve: {
        verify: s
      }
    }).when("/editor/:modelId", {
      templateUrl: r + "editor-app/editor.html",
      controller: "EditorController",
      resolve: {
        verify: s
      }
    }).when("/kickstart-editor/:modelId", {
      templateUrl: r + "views/kickstart-model.html",
      controller: "KickstartModelController",
      resolve: {
        verify: s
      }
    }).when("/form-editor/:modelId", {
      templateUrl: r + "views/form-builder.html",
      controller: "FormBuilderController",
      resolve: {
        verify: s
      }
    }).when("/app-editor/:modelId", {
      templateUrl: r + "views/app-definition-builder.html",
      controller: "AppDefinitionBuilderController",
      resolve: {
        verify: s
      }
    }).when("/stencil-editor/:stencilId", {
      templateUrl: r + "views/stencil-editor.html",
      controller: "StencilEditorController",
      resolve: {
        verify: s
      }
    }).when("/decision-table-editor/:modelId", {
      templateUrl: r + "views/decision-table-editor.html",
      controller: "DecisionTableEditorController",
      resolve: {
        verify: s
      }
    }), ACTIVITI.CONFIG.appDefaultRoute ? t.when("/", {
      redirectTo: ACTIVITI.CONFIG.appDefaultRoute
    }) : t.when("/", {
      redirectTo: "/processes",
      resolve: {
        verify: s
      }
    }), t.otherwise({
      templateUrl: r + "views/login.html",
      controller: "LoginController"
    }), o.useSanitizeValueStrategy("sanitizeParameters"), o.useStaticFilesLoader({
      prefix: r + "i18n/",
      suffix: ".json"
    }), o.preferredLanguage(window.ACTIVITI_PREFERRED_LOCALE)
  }]).run(["$rootScope", "$timeout", "$modal", "$translate", "$location", "$window", "appResourceRoot", function(e, t, i, o, n, r, s) {
    e.restRootUrl = function() {
      return ACTIVITI.CONFIG.contextRoot
    }, e.appResourceRoot = s, e.window = {};
    var a = function() {
      e.window.width = r.innerWidth, e.window.height = r.innerHeight
    };
    angular.element(r).bind("resize", function() {
      e.safeApply(a())
    }), e.$watch("window.forceRefresh", function(i) {
      i && t(function() {
        a(), e.window.forceRefresh = !1
      })
    }), a(), e.mainNavigation = [{
      id: "processes",
      title: "GENERAL.NAVIGATION.PROCESSES",
      path: "/processes",
      enterprise: !1
    }, {
      id: "forms",
      title: "GENERAL.NAVIGATION.FORMS",
      path: "/forms",
      enterprise: !1
    }, {
      id: "decision-tables",
      title: "GENERAL.NAVIGATION.DECISION-TABLES",
      path: "/decision-tables",
      enterprise: !1
    }, {
      id: "apps",
      title: "GENERAL.NAVIGATION.APPS",
      path: "/apps",
      enterprise: !1
    }, {
      id: "stencils",
      title: "GENERAL.NAVIGATION.STENCILS",
      path: "/stencils",
      enterprise: !1
    }], e.config = ACTIVITI.CONFIG, e.mainPage = e.mainNavigation[0], e.setMainPage = function(t) {
      e.mainPage = t, n.url(e.mainPage.path)
    }, e.setMainPageById = function(t) {
      for (var i = 0; e.mainNavigation.length > i; i++)
        if (t == e.mainNavigation[i].id) {
          e.mainPage = e.mainNavigation[i];
          break
        }
    }, e.safeApply = function(e) {
      var t = this.$root.$$phase;
      "$apply" == t || "$digest" == t ? e && "function" == typeof e && e() : this.$apply(e)
    }, e.alerts = {
      queue: []
    }, e.showAlert = function(i) {
      i.queue.length > 0 ? (i.current = i.queue.shift(), i.timeout = t(function() {
        0 == i.queue.length ? (i.current = void 0, i.timeout = void 0) : e.showAlert(i)
      }, "error" == i.current.type ? 5e3 : 1e3)) : e.alerts.current = void 0
    }, e.addAlert = function(t, i) {
      var o = {
        message: t,
        type: i
      };
      e.alerts.timeout ? e.alerts.queue.push(o) : (e.alerts.queue.push(o), e.showAlert(e.alerts))
    }, e.dismissAlert = function() {
      e.alerts.timeout ? (t.cancel(e.alerts.timeout), e.alerts.timeout = void 0, e.showAlert(e.alerts)) : e.alerts.current = void 0
    }, e.addAlertPromise = function(t, i) {
      t && t.then(function(t) {
        e.addAlert(t, i)
      })
    }, e.editProfile = function() {
      _internalCreateModal({
        template: "views/popup/account-edit.html"
      }, i, e)
    }, e.changePassword = function() {
      _internalCreateModal({
        template: "views/popup/account-change-password.html"
      }, i, e)
    }
  }]).run(["$rootScope", "$location", "AuthenticationSharedService", "Account", "$translate", "$window", "$modal", function(e, t, i, o, n, r, s) {
    var a = n.proposedLanguage();
    "de" !== a && "en" !== a && "es" !== a && "fr" !== a && "it" !== a && n.use("en");
    var l = "/editor/";
    e.logout = function() {
      i.logout()
    }, e.showAboutActiviti = function() {
      _internalCreateModal({
        template: "../views/modal/about-activiti.html?" + (new Date).getTime(),
        show: !0
      }, s, e)
    };
    var d = function(e) {
      var i, o = t.absUrl(),
        n = o.indexOf(l);
      i = null !== e && void 0 !== e && void 0 !== e.isFromLogout && e.isFromLogout === !0 ? o.substring(0, n) + "/#login" : o.substring(0, n) + "/#login?redirectUrl=" + encodeURIComponent(r.location.pathname + r.location.hash), r.location.href == i ? window.location.reload() : r.location.href = i
    };
    e.$on("event:auth-loginRequired", function() {
      e.authenticated = !1, e.authenticationChecked = !0, d()
    }), e.$on("event:auth-authConfirmed", function() {
      e.authenticated = !0, o.get().then(function() {
        e.account && e.account.type && "enterprise" != e.account.type && ("/stencils" == t.path() || t.path().indexOf("/stencils/") >= 0) ? t.path("/processes") : ("" == t.path() || "#" == t.path()) && t.path("/processes")
      })
    }), e.$on("event:auth-loginConfirmed", function() {
      e.authenticated = !0, e.account = o.get(), t.path("/processes")
    }), e.$on("event:auth-loginCancelled", function(t, i) {
      e.authenticated = !1, d(i)
    }), e.$on("event:auth-loginFailed", function() {
      e.addAlertPromise(n("LOGIN.MESSAGES.ERROR.AUTHENTICATION"), "error")
    }), e.backToLanding = function() {
      var e = t.absUrl(),
        i = e.indexOf(l);
      i >= 0 && (e = e.substring(0, i), e += "/"), r.location.href = e
    };
    var c = function(t) {
      return e.account && e.account.capabilities ? e.account.capabilities.indexOf(t) > -1 : !1
    };
    e.hasAccessPublishCapability = function() {
      return c("publish-app")
    }, e.hasAccessDesignProcessCapability = function() {
      return c("design-process")
    }, e.hasAccessKickstartCapability = function() {
      return c("access-editor")
    }, e.hasPublishAppCapability = function() {
      return c("publish-app-to-dashboard")
    }
  }]).filter("dateformat", function() {
  return function(e, t) {
    return e ? t ? moment(e).format(t) : moment(e).calendar() : ""
  }
}).filter("propsFilter", function() {
  return function(e, t) {
    var i = [];
    return angular.isArray(e) ? e.forEach(function(e) {
      for (var o = !1, n = Object.keys(t), r = 0; n.length > r; r++) {
        var s = n[r],
          a = t[s].toLowerCase();
        if (-1 !== ("" + e[s]).toLowerCase().indexOf(a)) {
          o = !0;
          break
        }
      }
      o && i.push(e)
    }) : i = e, i
  }
}).filter("notInArray", ["$filter", function(e) {
    return function(t, i, o) {
      return i ? e("filter")(t, function(e) {
        return -1 == i.indexOf(e[o])
      }) : void 0
    }
  }]).factory("editorCache", ["$cacheFactory", function(e) {
    return e()
  }]);
var EDITOR_CACHE = {
  REST_RESULT_VARIABLES_KEY: "restResponseVariables",
  FORM_FIELDS_KEY: "formFields",
  FORM_FIELD_VARIABLES_KEY: "formFieldVariables",
  EXECUTION_VARIABLES_KEY: "executionVariables",
  METADATA_VARIABLES_KEY: "metadataVariables",
  CUSTOM_STENCIL_VARIABLES_KEY: "customStencilVariables"
};
angular.module("activitiModeler").directive("loading", ["$translate", function() {
  return {
    restrict: "E",
    template: "<div class='loading pull-right' ng-show='status.loading'><div class='l1'></div><div class='l2'></div><div class='l2'></div></div>"
  }
}]), angular.module("activitiModeler").directive("loadingLeftPull", ["$translate", function() {
  return {
    restrict: "E",
    template: "<div class='loading pull-left' ng-show='status.loading'><div class='l1'></div><div class='l2'></div><div class='l2'></div></div>"
  }
}]), angular.module("activitiModeler").directive("stencilItemIcon", [function() {
  return {
    scope: {
      item: "=stencilItem"
    },
    restrict: "E",
    template: '<img class="stencil-item-list-icon" ng-if="item.customIconId != null && item.customIconId != undefined" ng-src="' + ACTIVITI.CONFIG.contextRoot + '/app/rest/image/{{item.customIconId}}" width="16px" height="16px"/>' + '<img class="stencil-item-list-icon" ng-if="(item.customIconId == null || item.customIconId == undefined) && item.icon != null && item.icon != undefined" ng-src="editor-app/stencilsets/bpmn2.0/icons/{{item.icon}}" width="16px" height="16px"/>'
  }
}]), angular.module("activitiModeler").directive("stencilStepItemIcon", [function() {
  return {
    scope: {
      item: "=stencilItem"
    },
    restrict: "E",
    template: '<img class="stencil-item-list-icon" ng-if="item.customIconId != null && item.customIconId != undefined" ng-src="' + ACTIVITI.CONFIG.contextRoot + '/app/rest/image/{{item.customIconId}}" width="18px" height="18px"/>' + '<li ng-if="(item.customIconId == null || item.customIconId == undefined) && item.icon != null && item.icon != undefined" class="{{item.icon}}" width="18px" height="18px" />'
  }
}]), angular.module("activitiModeler").directive("stencilFormFieldIcon", [function() {
  return {
    scope: {
      item: "=stencilItem"
    },
    restrict: "E",
    template: '<img class="stencil-item-list-icon" ng-if="item.customIconId != null && item.customIconId != undefined" ng-src="' + ACTIVITI.CONFIG.contextRoot + '/app/rest/image/{{item.customIconId}}" width="24px" height="24px"/>' + '<img class="stencil-item-list-icon" ng-if="(item.customIconId == null || item.customIconId == undefined) && item.icon != null && item.icon != undefined" ng-src="{{item.icon}}" width="24px" height="24px"/>'
  }
}]), angular.module("activitiModeler").directive("activitiFixDropdownBug", function() {
  return {
    restrict: "AEC",
    link: function(e, t) {
      t.hasClass("btn-group") || (t = t.parent()), t.on("hidden.bs.dropdown	", function() {
        t.show()
      })
    }
  }
}), angular.module("activitiModeler").directive("formBuilderElement", ["$rootScope", "$timeout", "$modal", "$http", "$sce", "$templateCache", "$translate", "RecursionHelper", "FormBuilderService", "FormUtilService", "ContentAccountService", function(e, t, i, o, n, r, s, a, l, d, c) {
  return {
    restrict: "AE",
    templateUrl: "views/templates/form-builder-element-template.html",
    transclude: !1,
    scope: {
      formElement: "=formElement",
      stencilSet: "=stencilSet",
      editState: "=editState",
      formMode: "=formMode",
      drop: "&",
      moved: "&"
    },
    compile: function(e) {
      return a.compile(e, this.link)
    },
    link: function(o) {
      function r(e, t) {
        var i;
        e.forEach(function(e, o) {
          if ("container" == e.type && e.fields) {
            var n = !1,
              r = !0;
            for (var s in e.fields) e.fields[s] === t && (n = !0), e.fields[s] && e.fields[s].length > 0 && (r = !1);
            n && r && (i = o)
          }
        }), i > -1 && e.splice(i, 1)
      }
      for (var a, p = 0; o.stencilSet.fieldTypes.length > p; p++)
        if (o.stencilSet.fieldTypes[p].type === o.formElement.type || "custom" === o.stencilSet.fieldTypes[p].type && o.stencilSet.fieldTypes[p].customType === o.formElement.type) {
          a = o.stencilSet.fieldTypes[p];
          break
        }
      if (o.currentStencilItem = a, o.currentStencilItem && (o.formTabs = o.currentStencilItem.tabs), "dynamic-table" === o.formElement.type) {
        if (o.visibleColumns || (o.visibleColumns = []), o.formElement.columnDefinitions && o.formElement.columnDefinitions.length > 0) {
          o.visibleColumns.length = 0;
          for (var p = 0; o.formElement.columnDefinitions.length > p; p++) {
            var u = o.formElement.columnDefinitions[p];
            u.visible && o.visibleColumns.push({
              field: o.formElement.columnDefinitions[p].name,
              displayName: o.formElement.columnDefinitions[p].name,
              sortable: o.formElement.columnDefinitions[p].sortable
            })
          }
        }
        o.gridOptions = {
          columnDefs: o.visibleColumns,
          enableRowSelection: !1,
          enableRowHeaderSelection: !1,
          multiSelect: !1,
          enableHorizontalScrollbar: 0,
          modifierKeysToMultiSelect: !1,
          enableColumnMenus: !1,
          enableSorting: !1
        }
      }
      if ("readonly" === o.formElement.type) {
        if (o.visibleReadOnlyColumns || (o.visibleReadOnlyColumns = []), o.formElement.params && o.formElement.params.field.columnDefinitions && o.formElement.params.field.columnDefinitions.length > 0) {
          o.visibleReadOnlyColumns.length = 0;
          for (var p = 0; o.formElement.params.field.columnDefinitions.length > p; p++) {
            var u = o.formElement.params.field.columnDefinitions[p];
            u.visible && (o.visibleReadOnlyColumns[p] = {
              field: o.formElement.params.field.columnDefinitions[p].name,
              displayName: o.formElement.params.field.columnDefinitions[p].name,
              sortable: o.formElement.params.field.columnDefinitions[p].sortable
            })
          }
        }
        o.gridOptionsReadOnly = {
          columnDefs: o.visibleReadOnlyColumns,
          enableRowSelection: !1,
          enableRowHeaderSelection: !1,
          multiSelect: !1,
          modifierKeysToMultiSelect: !1,
          enableColumnMenus: !1,
          enableSorting: !1
        }
      }
      if (("radio-buttons" === o.formElement.type || "dropdown" === o.formElement.type) && "rest" !== o.formElement.optionType && o.formElement.options && o.formElement.options.length > 0)
        for (var h = o.formElement.options, p = 0; h.length > p; p++) "dropdown" === o.formElement.type && 0 == p && (h[p].id && void 0 !== h[p].id && "" !== h[p].id || (h[p].id = "empty")), h[p].id && void 0 !== h[p].id && "" !== h[p].id || ("radio-buttons" === o.formElement.type ? h[p].id = "option_" + (p + 1) : "dropdown" === o.formElement.type && (h[p].id = "option_" + p));
      if ("upload" === o.formElement.type && (o.loadContentAccounts = function() {
        o.contentAccounts = {
          loading: !0,
          onPrem: !1
        };
        var e = [];
        e.push({
          serviceId: "local-file",
          name: s.instant("FORM-BUILDER.COMPONENT.ATTACH-FILE.LOCAL-FILE")
        });
        var t = !1;
        c.getAccounts().then(function(i) {
          if (i && i.data)
            for (var n = 0; i.data.length > n; n++) i.data[n] = {
              serviceId: i.data[n].serviceId,
              name: i.data[n].name,
              metaDataAllowed: i.data[n].metaDataAllowed
            }, "alfresco-" === i.data[n].serviceId.substring(0, 9) ? (e.push(i.data[n]), "alfresco-cloud" != i.data[n].serviceId && 0 == t ? t = !0 : "alfresco-cloud" === i.data[n].serviceId && (i.data[n].name = "Alfresco Cloud")) : "google-" === i.data[n].serviceId.substring(0, 7) ? (e.push(i.data[n]), i.data[n].name = "Google Drive") : (e.push(i.data[n]), i.data[n].name = "Box");
          if (e.length > 0) {
            e.splice(0, 0, {
              serviceId: "all-file-sources",
              name: s.instant("FORM-BUILDER.COMPONENT.ATTACH-FILE.ALL-FILE-SOURCES")
            });
            var r, a = !1;
            if (o.formElement.params) {
              if (o.formElement.params.fileSource && (r = o.formElement.params.fileSource), o.formElement.params.fileSource)
                for (var n = 0; e.length > n; n++)
                  if (o.formElement.params.fileSource && e[n].serviceId === o.formElement.params.fileSource.serviceId) {
                    o.formElement.params.fileSource = e[n], a = !0;
                    break
                  }
            } else o.formElement.params = {};
            a || (o.formElement.params.fileSource = e[0]), r && (o.formElement.params.fileSource.selectedFolder = r.selectedFolder, o.formElement.params.fileSource.notAllowNavigateFolders = r.notAllowNavigateFolders)
          } else o.formElement.params && (o.formElement.params = {}, o.formElement.params.fileSource = void 0);
          o.contentAccounts.onPrem = t, o.contentAccounts.rawList = e, o.contentAccounts.loading = !1
        })
      }, o.loadContentAccounts()), "container" !== o.formElement.type && "group" !== o.formElement.type) {
        var m = 1;
        o.formElement.colspan && (m = o.formElement.colspan), o.formElement.params || (o.formElement.params = {}), o.formElement.params.existingColspan = m;
        for (var f = 1, p = 0; e.currentFormItems.length > p; p++) {
          var g = e.currentFormItems[p];
          if (("container" === g.type || "group" === g.type) && g.fields)
            for (var v in g.fields)
              if (g.fields[v] && g.fields[v].indexOf(o.formElement) >= 0) {
                var I = g.numberOfColumns;
                f = I;
                for (var S in g.fields) {
                  var O = g.fields[S];
                  if (O.indexOf(o.formElement) >= 0) break;
                  if (O)
                    if (O.length > 0) {
                      var R = O[0].colspan;
                      R ? f -= R : f--
                    } else f--
                }
                break
              }
        }
        o.formElement.params.maxColspan = f
      }
      o.formTabs && o.formTabs.length > 0 && (o.activeTab = o.formTabs[0]), o.tabClicked = function(e) {
        o.activeTab = e
      }, o.removeFormElement = function(t) {
        if (t.colspan && t.colspan > 1)
          for (var i = 0; e.currentFormItems.length > i; i++) {
            var o = e.currentFormItems[i];
            if (("container" === o.type || "group" === o.type) && o.fields)
              for (var n in o.fields) {
                var s = o.fields[n];
                if (s && s.indexOf(t) >= 0) {
                  d.removeFormElement(e.currentFormItems, t), e.currentFormItems.indexOf(t) >= 0 && e.currentFormItems.splice(e.currentFormItems.indexOf(t), 1), d.removeFormElement(e.formItems, t), e.formItems.indexOf(t) >= 0 && e.formItems.splice(e.formItems.indexOf(t), 1);
                  var a = 0;
                  for (var l in o.fields)
                    if (o.fields[l].length > 0) {
                      var c = parseInt(o.fields[l][0].colspan);
                      c ? a += c : a++
                    } else a++;
                  if (o.numberOfColumns > a)
                    for (var p = a + 1; o.numberOfColumns >= p; p++) o.fields["" + (Object.keys(o.fields).length + 1)] = [];
                  var u = o.numberOfColumns;
                  for (var h in o.fields) {
                    var m = o.fields[h];
                    if (m)
                      if (m.length > 0) {
                        for (var g = m[0].colspan, p = 0; m.length > p; p++) m[p].params.maxColspan = f;
                        g ? u -= g : u--
                      } else u--
                  }
                  break
                }
              }
          } else d.removeFormElement(e.currentFormItems, t), e.currentFormItems.indexOf(t) >= 0 && e.currentFormItems.splice(e.currentFormItems.indexOf(t), 1), d.removeFormElement(e.formItems, t), e.formItems.indexOf(t) >= 0 && e.formItems.splice(e.formItems.indexOf(t), 1);
        for (var i = 0; e.currentFormItems.length > i; i++) {
          var o = e.currentFormItems[i];
          if (("container" === o.type || "group" === o.type) && o.fields)
            for (var n in o.fields) {
              var s = o.fields[n];
              s && s.indexOf(t) >= 0 && (s.splice(s.indexOf(t), 1), r(e.currentFormItems, s), r(e.formItems, s))
            }
        }
        e.checkGroupsInSource(e.currentFormItems), e.checkGroupsInSource(e.formItems)
      }, o.pristine = !0, o.newOption = {
        name: ""
      }, o.insertFormField = {
        position: 0
      }, o.openFieldPopover = function() {
        var e = o.formElement.type,
          t = void 0;
        "readonly" === e && o.formElement.params && o.formElement.params.field && o.formElement.params.field.type && (t = o.formElement.params.field.type), void 0 === o.formElement.id && o.formElementNameChanged(o.formElement), o.fieldEditPopup = _internalCreateModal({
          template: "views/popover/formfield-edit-popover.html?version=" + Date.now(),
          scope: o,
          backdrop: "static",
          keyboard: !1
        }, i, o);
        var n = o.$on("modal.hide", function() {
          "readonly" === o.formElement.type && o.formElement.params && o.formElement.params.field && o.formElement.params.field.type && o.formElement.params.field.type !== e && o.$emit("readonly-field-referenced-field-changed", {
            formElement: o.formElement,
            originalDisplayFieldType: t
          }), o.formElement.params ? 1 != o.formElement.params.multiple && o.formElement.params.fileSource && o.isGetMetaDataAllowed(o.formElement.params.fileSource.serviceId) || (o.formElement.metaDataColumnDefinitions = void 0) : o.formElement.metaDataColumnDefinitions = void 0, n()
        })
      }, o.isGetMetaDataAllowed = function(e) {
        return e && e.length > 0 && (e.toLowerCase().startsWith("alfresco") || e.toLowerCase().startsWith("box") || e.toLowerCase().startsWith("google-drive")) && o.formElement.params.fileSource && o.formElement.params.fileSource.metaDataAllowed ? !0 : !1
      }, o.normalizeByRegExp = function(e, t) {
        var i = "",
          o = 0;
        for (o = 0; e.length > o; o++) t.test(i + e[o]) && (i += e[o]);
        return i
      }, o.formElementNameChanged = function(e) {
        if (!e.overrideId) {
          o.identifierRegExp = /^[a-zA-Z][_a-zA-Z0-9]*$/;
          var t;
          if (e.name && e.name.length > 0) {
            var i = o.normalizeByRegExp(e.name, o.identifierRegExp);
            t = i.toLowerCase()
          }
          if (!t || 0 == t.length) {
            var n = 1;
            e.layout && (n = 1 + 2 * e.layout.row + e.layout.column), t = "field" + n
          }
          e.id = t
        }
      }, o.toFormFieldColumnArray = function(e) {
        var t = [],
          i = [];
        for (S in e) e[S] && i.push(parseInt(S));
        i.sort(function(e, t) {
          return e - t
        });
        for (var o = 0; i.length > o; o++) t.push(e["" + i[o]]);
        return t
      }, o.changeNumberOfColumns = function(e) {
        if (e.numberOfColumns) {
          var t = 0;
          for (var i in e.fields) {
            var o = e.fields[i];
            if (o)
              if (o.length > 0) {
                var n = o[0].colspan;
                n ? t += n : t++
              } else t++
          }
          var r = parseInt(e.numberOfColumns);
          if (r > 0 && 13 > r) {
            if (t > r) {
              for (var i in e.fields) {
                var o = e.fields[i];
                if (o && o.length > 0)
                  for (var s = 0; o.length > s; s++) o[s].colspan = 1
              }
              for (var a = Object.keys(e.fields).length, s = a; s > r; s--) {
                for (var l = e.fields["" + s], d = 0; l.length > d; d++) {
                  var c = l[d];
                  e.fields["1"].push(c)
                }
                delete e.fields["" + s]
              }
            } else if (r > t)
              for (var s = t + 1; r >= s; s++) e.fields["" + (Object.keys(e.fields).length + 1)] = [];
            var p = r;
            for (var i in e.fields) {
              var o = e.fields[i];
              if (o)
                if (o.length > 0) {
                  for (var n = o[0].colspan, s = 0; o.length > s; s++) o[s].params.maxColspan = p;
                  n ? p -= n : p--
                } else p--
            }
          } else e.numberOfColumns = t
        }
      }, o.changeColspan = function(t) {
        if (t.colspan)
          for (var i = 0; e.currentFormItems.length > i; i++) {
            var o = e.currentFormItems[i];
            if (("container" === o.type || "group" === o.type) && o.fields) {
              var n = 2;
              o.numberOfColumns && (n = o.numberOfColumns);
              var r, s, a, l = 1;
              for (var d in o.fields) {
                var c = o.fields[d];
                if (!r && c && c.indexOf(t) >= 0) {
                  var p = c.indexOf(t);
                  r = parseInt(d), c[0].params && c[0].params.existingColspan && (l = c[0].params.existingColspan), s = l > t.colspan || n - r + 1 >= t.colspan ? t.colspan : n - p;
                  for (var u = 0; c.length > u; u++) c[u].params || (c[u].params = {}), c[u].params.existingColspan = s, c[u].colspan = s
                }
                a = parseInt(d)
              }
              if (r && s) {
                var h = 1,
                  m = s - l,
                  f = {};
                if (0 > m) {
                  for (var u = 1; Object.keys(o.fields).length >= u; u++)
                    if (f["" + h] = o.fields["" + u], h++, u == r)
                      for (var g = 1; Math.abs(m) >= g; g++) f["" + h] = [], h++
                } else if (m > 0) {
                  for (var v = [], u = 1; Object.keys(o.fields).length >= u; u++) {
                    if (f["" + h] = o.fields["" + u], v && v.length > 0) {
                      var I, S = f["" + h];
                      if (S && S.length > 0 && (I = S[0].colspan ? S[0].colspan : 1), I)
                        for (var g = 0; v.length > g; g++) v[g].params || (v[g].params = {}), v[g].params.existingColspan = I, v[g].colspan = I;
                      Array.prototype.push.apply(f["" + h], v), v = void 0
                    }
                    if (h++, u == r) {
                      for (var g = 1; m >= g; g++) {
                        var O = o.fields["" + (u + g)];
                        O && Array.prototype.push.apply(v, O)
                      }
                      u += m
                    }
                  }
                  if (v && v.length > 0) {
                    var I;
                    if (f["1"] && f["1"].length > 0 && (I = f["1"][0].colspan ? f["1"][0].colspan : 1), I)
                      for (var g = 0; v.length > g; g++) v[g].params || (v[g].params = {}), v[g].params.existingColspan = I, v[g].colspan = I;
                    Array.prototype.push.apply(f["1"], v)
                  }
                  var R = 0;
                  for (var d in f)
                    if (f[d])
                      if (f[d].length > 0) {
                        var E = parseInt(f[d][0].colspan);
                        E ? R += E : R++
                      } else R++;
                  if (n > R)
                    for (var u = R + 1; n >= u; u++) f["" + (Object.keys(f).length + 1)] = []
                }
                o.fields = f;
                var y = o.numberOfColumns;
                for (var d in o.fields) {
                  var T = o.fields[d];
                  if (T)
                    if (T.length > 0) {
                      for (var E = T[0].colspan, u = 0; T.length > u; u++) T[u].params.maxColspan = y;
                      E ? y -= E : y--
                    } else y--
                }
                break
              }
            }
          }
      }, o.setManualOptions = function() {
        o.formElement.optionType = "manual"
      }, o.setRestOptions = function() {
        o.formElement.optionType = "rest"
      }, o.setCustomVariableType = function(e, t) {
        o.formElement.params.customProperties || (o.formElement.params.customProperties = {}), o.formElement.params.customProperties["" + e] || (o.formElement.params.customProperties["" + e] = {}), o.formElement.params.customProperties["" + e].fieldType = t
      }, o.confirmNewOption = function(e) {
        if (o.newOption.name) {
          var t = o.formElement.options;
          "radio-buttons" === o.formElement.type ? o.newOption.id = "option_" + (t.length + 1) : "dropdown" === o.formElement.type && (o.newOption.id = "option_" + t.length), t.push(o.newOption), o.newOption = {
            name: ""
          }, o.formElement.sizeY = "radio-buttons" === o.formElement.type && t.length > 4 ? 3 : "radio-buttons" === o.formElement.type && t.length > 1 ? 2 : 1, 2 == t.length && (o.formElement.value = o.formElement.options[0].name), e && $(e.target).focus()
        }
      }, o.optionKeyDown = function(e) {
        13 == e.keyCode && o.confirmNewOption(e)
      }, o.removeOption = function(e) {
        if (o.formElement.options.splice(e, 1), 1 == o.formElement.options) o.formElement.value = "";
        else {
          for (var t = !1, i = 0; o.formElement.options.length > i; i++) o.formElement.options[i].name == o.formElement.value && (t = !0);
          t || (o.formElement.value = o.formElement.options[0].name)
        }
      }, o.currentStencilItem && o.currentStencilItem.formBuilderTemplate && o.currentStencilItem.formBuilderTemplate.length > 0 && (o.formBuilderTemplateNgBindHtml = n.trustAsHtml(o.currentStencilItem.formBuilderTemplate)), o.endpointChanged = function() {
        o.$broadcast("endpoint-selection-changed", o.formElement.endpoint)
      }, o.doneEditing = function() {
        if (o.$broadcast("done-editing-field", o.formElement), o.formElement.endpoint && o.formElement.endpoint.requestHeaders && 0 !== o.formElement.endpoint.requestHeaders.length || delete o.formElement.requestHeaders, "dynamic-table" === o.formElement.type && o.formElement.columnDefinitions && o.formElement.columnDefinitions.length > 0) {
          o.visibleColumns.length = 0;
          for (var e = 0; o.formElement.columnDefinitions.length > e; e++) {
            var t = o.formElement.columnDefinitions[e];
            t.visible && "" != t.name && "" != t.id && o.visibleColumns.push({
              field: o.formElement.columnDefinitions[e].name,
              displayName: o.formElement.columnDefinitions[e].name,
              sortable: o.formElement.columnDefinitions[e].sortable
            })
          }
        }
        if (o.formElement.visibilityConditions) {
          var i = o.formElement.visibilityConditions.shift();
          E(i, o.formElement.visibilityConditions), o.formElement.visibilityCondition = i, delete o.formElement.visibilityConditions
        }
        o.fieldEditPopup && o.fieldEditPopup.$scope.$hide(), o.formElement.hasValidationError && l.validateForm()
      };
      var E = function(e, t) {
        e && (e.nextCondition = void 0);
        var i = {};
        return t.length > 0 ? (i = t.shift(), e.nextCondition = i, E(e.nextCondition, t), void 0) : i
      };
      o.$watch("formElement.params.field", function(e, t) {
        if (!o.pristine || void 0 !== t && t.id != e.id)
          if (e && e.name && (o.formElement.name = e.name), e && "dynamic-table" === e.type) {
            if (o.formElement.sizeX = 2, o.formElement.sizeY = 2, o.visibleReadOnlyColumns) {
              o.visibleReadOnlyColumns.length = 0;
              for (var i = 0; e.columnDefinitions.length > i; i++) {
                var n = e.columnDefinitions[i];
                n.visible && (o.visibleReadOnlyColumns[i] = {
                  field: e.columnDefinitions[i].name,
                  displayName: e.columnDefinitions[i].name,
                  sortable: e.columnDefinitions[i].sortable
                })
              }
            }
          } else o.formElement.sizeX = 1, o.formElement.sizeY = 1;
        else o.pristine = !1
      }), o.$watch("insertFormField.field", function(e) {
        if (e) {
          var i;
          "readonly-text" == o.formElement.type ? i = o.formElement.value : "typeahead" == o.formElement.type || "radio-buttons" == o.formElement.type || "dropdown" == o.formElement.type ? i = o.formElement.restUrl : "hyperlink" == o.formElement.type && (i = o.formElement.hyperlinkUrl);
          var n = "${" + e.id + "}";
          i = i ? i.substring(0, o.insertFormField.position) + n + i.substring(o.insertFormField.position) : n, o.insertFormField.field = void 0, t(function() {
            var e;
            "readonly-text" == o.formElement.type ? e = angular.element("#readonly-text-value") : "typeahead" == o.formElement.type || "radio-buttons" == o.formElement.type || "dropdown" == o.formElement.type ? e = angular.element("#rest-url-value") : "hyperlink" == o.formElement.type && (e = angular.element("#hyperlink-url-value")), e.focus(), e.val(i), "readonly-text" == o.formElement.type ? o.formElement.value = i : "typeahead" == o.formElement.type || "radio-buttons" == o.formElement.type || "dropdown" == o.formElement.type ? o.formElement.restUrl = i : "hyperlink" == o.formElement.type && (o.formElement.hyperlinkUrl = i)
          }, 200)
        }
      }), o.noOfVisibleColumns = function(e) {
        var t = o.getVisibleColumnDefinitions(e);
        return t ? t.length : 0
      }, o.getVisibleColumnDefinitions = function(e) {
        var t = [];
        if (!e || !e.columnDefinitions || 1 > e.columnDefinitions.length) return t;
        for (var i = 0; e.columnDefinitions.length > i; i++) {
          var o = e.columnDefinitions[i];
          o.visible && t.push(o)
        }
        return t
      }, o.showValidationErrors = function(e) {
        o.currentFormField = e, _internalCreateModal({
          backdrop: !0,
          keyboard: !0,
          template: "views/popup/form-builder-validation-errors.html?version=" + Date.now(),
          scope: o
        }, i, o)
      }, o.endpointLabel = function(e, t, i, o, n) {
        var r = " (" + y(t, i, o, n) + ")";
        return r = r.toLowerCase(), e + r
      }, o.model = o.formElement.params && o.formElement.params.field ? o.formElement.params.field.responseVariable ? {
        urlFieldType: "restResponse"
      } : {
        urlFieldType: "formField"
      } : {
        urlFieldType: "formField"
      }, o.setUrlFieldType = function(e) {
        "restResponse" === e ? (o.model = {
          urlFieldType: "restResponse"
        }, o.formElement.params && (o.formElement.params.field = {})) : "formField" === e && (o.model = {
          urlFieldType: "formField"
        }, o.formElement.params && (o.formElement.params.field = {}))
      }, o.getFullEndpointURL = function() {
        var e = "";
        return o.formElement.endpoint && (e = y(o.formElement.endpoint.protocol, o.formElement.endpoint.host, o.formElement.endpoint.port, o.formElement.endpoint.path)), o.formElement.restUrl && (e = "/" === e.charAt(e.length - 1) && "/" === o.formElement.restUrl.charAt(0) ? e.concat(o.formElement.restUrl.substr(1)) : "" != e && "/" !== e.charAt(e.length - 1) && "/" !== o.formElement.restUrl.charAt(0) ? e.concat("/" + o.formElement.restUrl) : e.concat(o.formElement.restUrl)), e
      };
      var y = function(e, t, i, o) {
        var n = e.toLowerCase() + "://" + t;
        return n = i && 80 != i && 443 != i ? n.concat(":" + i) : n, n = o ? n.concat(o) : n
      };
      o.executeEndpointTest = function(e) {
        o.selectedColumnDef = e, o.endpointTestVisible = {
          visible: !0
        }
      };
      var T = function() {
        if (o.formElement.endpoint && e.endpointConfigurations) {
          for (var t = !0, i = 0; e.endpointConfigurations.length > i; i++)
            if (o.formElement.endpoint.id === e.endpointConfigurations[i].id) {
              t = !1, o.formElement.endpoint = angular.copy(e.endpointConfigurations[i]);
              break
            }
          t && (o.formElement.endpoint = void 0)
        }
      };
      o.$watch("endpointConfigurations", function(e, t) {
        void 0 !== e && e !== t && T()
      }, !0), o.getEndpoints = function() {
        return e.endpointConfigurations
      }, T(), o.allowedTypes = ["text", "integer", "date", "boolean", "dropdown", "radio-buttons", "typeahead", "amount"], o.model ? o.model.variableType || (o.model.variableType = "formField") : o.model = {
        variableType: "formField"
      }
    }
  }
}]), angular.module("activitiModeler").directive("storeCursorPosition", ["$rootScope", "$timeout", "$popover", "$http", "$templateCache", function() {
  return {
    restrict: "A",
    scope: {
      storeCursorPosition: "=storeCursorPosition"
    },
    link: function(e, t) {
      t.on("click change keypress", function() {
        void 0 !== e.storeCursorPosition && (e.storeCursorPosition = t[0].selectionStart)
      })
    }
  }
}]), angular.module("activitiModeler").directive("selectGroupPopover", ["$http", "$popover", "$parse", "GroupService", function(e, t, i, o) {
  var n = {};
  return n.restrict = "A", n.scope = {
    excludeGroupIds: "=excludeGroupIds",
    selectGroupFormFields: "=selectGroupFormFields"
  }, n.link = function(e, n, r) {
    var s = "bottom";
    n.addClass("group-selection"), r.placement && (s = r.placement), e.popover = t(n, {
      template: "views/popover/select-group-popover.html",
      placement: s
    });
    var a, l;
    r.onGroupSelected && (a = i(r.onGroupSelected)), r.onCancel && (l = i(r.onCancel));
    var d = e.popover.$scope;
    d.title = r.popoverTitle, d.popupModel = {
      groupField: {},
      groupFieldFilter: ["functional-group"]
    }, e.selectGroupFormFields && (d.popupModel.formFields = e.selectGroupFormFields), d.setSearchType = function() {
      d.popupModel.groupSourceType = "search"
    }, d.setFormFieldType = function() {
      d.popupModel.groupSourceType = "field"
    }, d.$watch("popupModel.groupField", function() {
      if (d.popupModel.groupField && d.popupModel.groupField.id) {
        if (a) {
          var t = {
            id: d.popupModel.groupField.id,
            name: d.popupModel.groupField.name,
            type: d.popupModel.groupField.type
          };
          a(e.$parent, {
            groupField: t
          }), d.popupModel.groupField = {}
        }
        d.$hide()
      }
    }), d.$watch("popupModel.filter", function() {
      e.updateFilter()
    }), d.resetSelection = function() {
      d.popupModel.groupResults && d.popupModel.groupResults.length > 0 ? (d.popupModel.selectedGroup = d.popupModel.groupResults[0], d.popupModel.selectedIndex = 0) : (d.popupModel.selectedGroup = void 0, d.popupModel.selectedIndex = -1)
    }, d.nextGroup = function() {
      var e = d.popupModel.groupResults;
      e && e.length > 0 && d.popupModel.selectedIndex < e.length - 1 && (d.popupModel.selectedIndex += 1, d.popupModel.selectedGroup = e[d.popupModel.selectedIndex])
    }, d.previousGroup = function() {
      var e = d.popupModel.groupResults;
      e && e.length > 0 && d.popupModel.selectedIndex > 0 && (d.popupModel.selectedIndex -= 1, d.popupModel.selectedGroup = e[d.popupModel.selectedIndex])
    }, d.confirmGroup = function(t) {
      if (!t) {
        var i = d.popupModel.groupResults;
        d.popupModel.selectedIndex >= 0 && d.popupModel.selectedIndex < i.length && (t = i[d.popupModel.selectedIndex])
      }
      t && (a && a(e.$parent, {
        group: t
      }), d.$hide())
    }, e.updateFilter = function() {
      o.getFilteredGroups(d.popupModel.filter).then(function(t) {
        if (null !== e.excludeGroupIds && void 0 !== e.excludeGroupIds) {
          d.popupModel.groupResults = [];
          for (var i = 0; t.data.length > i; i++) t.data[i].id && -1 === e.excludeGroupIds.indexOf(t.data[i].id) && d.popupModel.groupResults.push(t.data[i])
        } else d.popupModel.groupResults = t.data;
        d.resetSelection()
      })
    }, d.$on("tooltip.show", function() {
      e.updateFilter()
    }), d.$on("tooltip.hide", function() {
      d.popupModel.groupResults = [], d.popupModel.filter = "", d.popupModel.added ? d.popupModel.added = !1 : l && l(e.$parent)
    })
  }, n
}]), angular.module("activitiModeler").directive("selectFormPopover", ["$rootScope", "$http", "$popover", "ProcessBuilderService", "$parse", function(e, t, i, o, n) {
  var r = {};
  return r.restrict = "A", r.scope = {}, r.link = function(t, r, s) {
    var a = "bottom-left";
    r.addClass("form-selection"), s.placement && (a = s.placement), t.popover = i(r, {
      template: "views/popover/select-form-popover.html",
      placement: a
    });
    var l, d, c, p;
    s.onFormSelected && (l = n(s.onFormSelected)), s.onFormCreate && (c = n(s.onFormCreate)), s.onCancel && (d = n(s.onCancel)), s.onClear && (p = n(s.onClear));
    var u = t.popover.$scope;
    u.title = s.popoverTitle, u.popupModel = {}, u.$watch("popupModel.filter", function() {
      e.currentKickstartModel.definition && e.currentKickstartModel.definition.id && o.filterKickstartForms(u.popupModel.filter).then(function(e) {
        u.popupModel.formResults = e.data, u.resetSelection()
      })
    }), u.resetSelection = function() {
      u.popupModel.formResults && u.popupModel.formResults.length > 0 ? (u.popupModel.selectedForm = u.popupModel.formResults[0], u.popupModel.selectedIndex = 0) : (u.popupModel.selectedForm = void 0, u.popupModel.selectedIndex = -1)
    }, u.nextForm = function() {
      var e = u.popupModel.formResults;
      e && e.length > 0 && u.popupModel.selectedIndex < e.length - 1 && (u.popupModel.selectedIndex += 1, u.popupModel.selectedForm = e[u.popupModel.selectedIndex])
    }, u.previousForm = function() {
      var e = u.popupModel.formResults;
      e && e.length > 0 && u.popupModel.selectedIndex > 0 && (u.popupModel.selectedIndex -= 1, u.popupModel.selectedForm = e[u.popupModel.selectedIndex])
    }, u.createForm = function() {
      c && c(t.$parent), u.$hide()
    }, u.clearForm = function() {
      p && p(t.$parent), u.$hide()
    }, u.confirmForm = function(e) {
      if (!e) {
        var i = u.popupModel.formResults;
        u.popupModel.selectedIndex >= 0 && u.popupModel.selectedIndex < i.length && (e = i[u.popupModel.selectedIndex])
      }
      e && (l && l(t.$parent, {
        form: e
      }), u.$hide())
    }, u.$on("tooltip.show", function() {
      e.currentKickstartModel.definition && e.currentKickstartModel.definition.id && o.filterKickstartForms(u.popupModel.filter).then(function(e) {
        u.popupModel.formResults = e.data, u.resetSelection()
      })
    }), u.$on("tooltip.hide", function() {
      u.popupModel.formResults = [], u.popupModel.filter = "", u.popupModel.added ? u.popupModel.added = !1 : d && d(t.$parent)
    })
  }, r
}]), angular.module("activitiModeler").directive("selectSubprocessPopover", ["$http", "$popover", "ProcessBuilderService", "$parse", function(e, t, i, o) {
  var n = {};
  return n.restrict = "A", n.scope = {}, n.link = function(e, n, r) {
    var s = "bottom-left";
    n.addClass("selection"), r.placement && (s = r.placement), e.popover = t(n, {
      template: "views/popover/select-subprocess-popover.html",
      placement: s
    });
    var a, l, d, c;
    r.onSubprocessSelected && (a = o(r.onSubprocessSelected)), r.onSubprocessCreate && (d = o(r.onSubprocessCreate)), r.onCancel && (l = o(r.onCancel)), r.onClear && (c = o(r.onClear));
    var p = e.popover.$scope;
    p.title = r.popoverTitle, p.popupModel = {}, p.$watch("popupModel.filter", function() {
      i.filterKickstartSubProcesses(p.popupModel.filter).then(function(e) {
        p.popupModel.subProcessResults = e.data, p.resetSelection()
      })
    }), p.resetSelection = function() {
      p.popupModel.subProcessResults && p.popupModel.subProcessResults.length > 0 ? (p.popupModel.selectedSubProcess = p.popupModel.subProcessResults[0], p.popupModel.selectedIndex = 0) : (p.popupModel.selectedSubProcess = void 0, p.popupModel.selectedIndex = -1)
    }, p.nextSubProcess = function() {
      var e = p.popupModel.subProcessResults;
      e && e.length > 0 && p.popupModel.selectedIndex < e.length - 1 && (p.popupModel.selectedIndex += 1, p.popupModel.selectedSubProcess = e[p.popupModel.selectedIndex])
    }, p.previousForm = function() {
      var e = p.popupModel.subProcessResults;
      e && e.length > 0 && p.popupModel.selectedIndex > 0 && (p.popupModel.selectedIndex -= 1, p.popupModel.selectedSubProcess = e[p.popupModel.selectedIndex])
    }, p.createSubProcess = function() {
      d && d(e.$parent), p.$hide()
    }, p.clearSubProcess = function() {
      c && c(e.$parent), p.$hide()
    }, p.confirmSubProcess = function(t) {
      if (!t) {
        var i = p.popupModel.subProcessResults;
        p.popupModel.selectedIndex >= 0 && p.popupModel.selectedIndex < i.length && (t = forms[p.popupModel.selectedIndex])
      }
      t && (a && a(e.$parent, {
        subProcess: t
      }), p.$hide())
    }, p.$on("tooltip.show", function() {
      i.filterKickstartSubProcesses(p.popupModel.filter).then(function(e) {
        p.popupModel.subProcessResults = e.data, p.resetSelection()
      })
    }), p.$on("tooltip.hide", function() {
      p.popupModel.subProcessResults = [], p.popupModel.filter = "", p.popupModel.added ? p.popupModel.added = !1 : l && l(e.$parent)
    })
  }, n
}]), angular.module("activitiModeler").directive("assignmentSelect", ["$http", "$templateCache", "ProcessBuilderService", "FormBuilderService", "ProcessScopeService", function(e, t, i, o, n) {
  var r = {};
  return r.restrict = "A", r.templateUrl = "views/includes/select-assignment.html", r.replace = !0, r.scope = {
    assignmentObject: "=assignmentSelect",
    allSteps: "=allSteps",
    stepId: "=stepId",
    title: "=title"
  }, r.controller = ["$rootScope", "$scope", "$translate", "$element", function(e, t, i) {
    t.assignmentOptions = [{
      id: "initiator",
      title: i.instant("PROCESS-BUILDER.FIELD.ASSIGNMENT-SELECT.ASSIGNED-TO-INITIATOR")
    }, {
      id: "user",
      title: i.instant("PROCESS-BUILDER.FIELD.ASSIGNMENT-SELECT.ASSIGNED-TO-SINGLE-USER")
    }, {
      id: "users",
      title: i.instant("PROCESS-BUILDER.FIELD.ASSIGNMENT-SELECT.ASSIGNED-TO-CANDIDATE-USERS")
    }, {
      id: "groups",
      title: i.instant("PROCESS-BUILDER.FIELD.ASSIGNMENT-SELECT.ASSIGNED-TO-CANDIDATE-GROUPS")
    }], t.assignmentOption = t.assignmentOptions[0];
    var o = n.getFormFieldsForStep(t.allSteps, t.stepId, ["people", "functional-group"]);
    t.assignmentFormFields = o, t.$watch("assignmentOption", function(e) {
      e ? (t.assignmentObject.type = e.id, "initiator" == e.id ? (t.assignmentObject.assignee = {}, t.assignmentObject.candidateUsers = [], t.assignmentObject.candidateUserFields = [], t.assignmentObject.candidateGroups = [], t.assignmentObject.candidateGroupFields = []) : "user" == e.id ? (t.assignmentObject.candidateUsers = [], t.assignmentObject.candidateUserFields = [], t.assignmentObject.candidateGroups = [], t.assignmentObject.candidateGroupFields = []) : "users" == e.id ? (t.assignmentObject.candidateUsers || (t.assignmentObject.candidateUsers = []), t.assignmentObject.candidateUserFields || (t.assignmentObject.candidateUserFields = [])) : "groups" == e.id && (t.assignmentObject.candidateGroups || (t.assignmentObject.candidateGroups = []), t.assignmentObject.candidateGroupFields || (t.assignmentObject.candidateGroupFields = []))) : t.assignmentObject.type = t.assignmentOptions[0].id
    }), t.setAssignee = function(e, i) {
      e ? (t.assignmentObject.assignee = e, t.assignmentObject.assigneeField = void 0) : i && (t.assignmentObject.assigneeField = i, t.assignmentObject.assignee = void 0)
    }, t.addCandidateUser = function(e, i) {
      var o = !1;
      if (e) {
        for (var n = 0; t.assignmentObject.candidateUsers.length > n; n++)
          if (t.assignmentObject.candidateUsers[n].id === e.id) {
            o = !0;
            break
          }
      } else if (i)
        for (var n = 0; t.assignmentObject.candidateUserFields.length > n; n++)
          if (t.assignmentObject.candidateUserFields[n].id === i.id) {
            o = !0;
            break
          }!o && e ? t.assignmentObject.candidateUsers.push(e) : !o && i && t.assignmentObject.candidateUserFields.push(i)
    }, t.addCandidateUserByEmail = function(e) {
      var i = !1;
      if (t.assignmentObject.candidateUsers)
        for (var o = 0; t.assignmentObject.candidateUsers.length > o; o++)
          if (t.assignmentObject.candidateUsers[o].email === e) {
            i = !0;
            break
          }
      i || t.assignmentObject.candidateUsers.push({
        email: e
      })
    }, t.removeCandidateUser = function(e) {
      for (var i = t.assignmentObject.candidateUsers, o = -1, n = 0; i.length > n; n++)
        if (e.id) {
          if (e.id == i[n].id) {
            o = n;
            break
          }
        } else if (e.email == i[n].email) {
          o = n;
          break
        }
      o >= 0 && i.splice(o, 1)
    }, t.removeCandidateUserField = function(e) {
      for (var i = t.assignmentObject.candidateUserFields, o = -1, n = 0; i.length > n; n++)
        if (e.id && e.id == i[n].id) {
          o = n;
          break
        }
      o >= 0 && i.splice(o, 1)
    }, t.addCandidateGroup = function(e, i) {
      var o = !1;
      if (e && t.assignmentObject.candidateGroups)
        for (var n = 0; t.assignmentObject.candidateGroups.length > n; n++)
          if (t.assignmentObject.candidateGroups[n].id === e.id) {
            o = !0;
            break
          }
      if (i && t.assignmentObject.candidateGroupFields)
        for (var n = 0; t.assignmentObject.candidateGroupFields.length > n; n++)
          if (t.assignmentObject.candidateGroupFields[n].id === i.id) {
            o = !0;
            break
          }
      e && !o ? t.assignmentObject.candidateGroups.push(e) : i && !o && t.assignmentObject.candidateGroupFields.push(i)
    }, t.removeCandidateGroup = function(e) {
      for (var i = t.assignmentObject.candidateGroups, o = -1, n = 0; i.length > n; n++)
        if (e.id == i[n].id) {
          o = n;
          break
        }
      o >= 0 && i.splice(o, 1)
    }, t.removeCandidateGroupField = function(e) {
      for (var i = t.assignmentObject.candidateGroupFields, o = -1, n = 0; i.length > n; n++)
        if (e.id == i[n].id) {
          o = n;
          break
        }
      o >= 0 && i.splice(o, 1)
    }
  }], r.link = function(e) {
    var t;
    if (e.assignmentObject && e.assignmentObject.type)
      for (var i = 0; e.assignmentOptions.length > i; i++)
        if (e.assignmentOptions[i].id == e.assignmentObject.type) {
          t = e.assignmentOptions[i];
          break
        }
    t || (t = e.assignmentOptions[0]), e.assignmentOption = t
  }, r
}]), angular.module("activitiModeler").directive("fieldsSelect", ["$http", "$templateCache", function() {
  var e = {};
  return e.restrict = "A", e.templateUrl = "views/includes/select-fields.html", e.replace = !0, e.scope = {
    propertyObject: "=fieldsSelect",
    stepObject: "=fieldsSelectStep",
    title: "=title"
  }, e.controller = ["$rootScope", "$scope", "$element", function(e, t) {
    t.stepObject[t.propertyObject.id] && t.stepObject[t.propertyObject.id].fields || (t.stepObject[t.propertyObject.id] = {
      fields: []
    }), t.model = {
      selectedField: void 0
    }, t.addField = function() {
      if (t.model.selectedField) {
        var e = !1;
        if (t.stepObject[t.propertyObject.id].fields)
          for (var i = 0; t.stepObject[t.propertyObject.id].fields.length > i; i++)
            if (t.stepObject[t.propertyObject.id].fields[i].id === t.model.selectedField.id) {
              e = !0;
              break
            }
        e || t.stepObject[t.propertyObject.id].fields.push(t.model.selectedField)
      }
    }, t.removeField = function(e) {
      for (var i = t.stepObject[t.propertyObject.id].fields, o = -1, n = 0; i.length > n; n++)
        if (e.id == i[n].id) {
          o = n;
          break
        }
      o >= 0 && i.splice(o, 1)
    }
  }], e.link = function() {}, e
}]), angular.module("activitiModeler").directive("recipientSelect", ["$http", "$translate", "$templateCache", "FormBuilderService", "ProcessScopeService", function(e, t, i, o, n) {
  var r = {};
  return r.restrict = "A", r.templateUrl = "views/includes/select-recipient.html", r.replace = !0, r.scope = {
    recipientObject: "=recipientSelect",
    allSteps: "=allSteps",
    stepId: "=stepId",
    title: "=title"
  }, r.controller = ["$rootScope", "$scope", "$element", function(e, i) {
    i.recipientOptions = [{
      id: "initiator",
      title: t.instant("PROCESS-BUILDER.EMAIL-STEP.RECIPIENT.POPOVER.SELECT-INITIATOR")
    }, {
      id: "user",
      title: t.instant("PROCESS-BUILDER.EMAIL-STEP.RECIPIENT.POPOVER.SELECT-USER")
    }, {
      id: "users",
      title: t.instant("PROCESS-BUILDER.EMAIL-STEP.RECIPIENT.POPOVER.SELECT-USERS")
    }], i.recipientOption = i.recipientOptions[0];
    var o = n.getFormFieldsForStep(i.allSteps, i.stepId, ["people"]);
    i.recipientFormFields = o, i.$watch("recipientOption", function(e) {
      e ? (i.recipientObject.type = e.id, "initiator" == e.id ? (i.recipientObject.user = null, i.recipientObject.users = null, i.recipientObject.userFields = null) : "user" == e.id ? (i.recipientObject.users = null, i.recipientObject.userFields = null) : "users" == e.id && (i.recipientObject.user = null, i.recipientObject.users || (i.recipientObject.users = []), i.recipientObject.userFields || (i.recipientObject.userFields = []))) : i.assignmentObject.type = i.assignmentOptions[0].id
    }), i.setRecipient = function(e, t) {
      e ? (i.recipientObject.user = e, i.recipientObject.userField = void 0, i.recipientObject.userFields = void 0) : t && (i.recipientObject.userField = t, i.recipientObject.user = void 0, i.recipientObject.userFields = void 0)
    }, i.addRecipient = function(e, t) {
      var o = !1;
      if (e) {
        if (i.recipientObject.users)
          for (var n = 0; i.recipientObject.users.length > n; n++)
            if (i.recipientObject.users[n].id === e.id) {
              o = !0;
              break
            }
      } else if (t && i.recipientObject.userFields)
        for (var n = 0; i.recipientObject.userFields.length > n; n++)
          if (i.recipientObject.userFields[n].id === t.id) {
            o = !0;
            break
          }
      o || (e ? i.recipientObject.users.push(e) : t && i.recipientObject.userFields.push(t))
    }, i.addUserByEmail = function(e) {
      var t = !1;
      if (i.recipientObject.users)
        for (var o = 0; i.recipientObject.users.length > o; o++)
          if (i.recipientObject.users[o].email === e) {
            t = !0;
            break
          }
      t || i.recipientObject.users.push({
        email: e
      })
    }, i.removeUser = function(e) {
      for (var t = i.recipientObject.users, o = -1, n = 0; t.length > n; n++)
        if (e.id) {
          if (e.id == t[n].id) {
            o = n;
            break
          }
        } else if (e.email == t[n].email) {
          o = n;
          break
        }
      o >= 0 && t.splice(o, 1)
    }, i.removeUserField = function(e) {
      for (var t = i.recipientObject.userFields, o = -1, n = 0; t.length > n; n++)
        if (e.id && e.id == t[n].id) {
          o = n;
          break
        }
      o >= 0 && t.splice(o, 1)
    }
  }], r.link = function(e) {
    var t;
    if (e.recipientObject && e.recipientObject.type)
      for (var i = 0; e.recipientOptions.length > i; i++)
        if (e.recipientOptions[i].id == e.recipientObject.type) {
          t = e.recipientOptions[i];
          break
        }
    t || (t = e.recipientOptions[0]), e.recipientOption = t
  }, r
}]), angular.module("activitiModeler").directive("fieldSelect", ["$rootScope", "$http", "$templateCache", "$timeout", "ProcessScopeService", function(e, t, i, o, n) {
  var r = {};
  return r.restrict = "A", r.templateUrl = "views/includes/select-field.html", r.replace = !0, r.scope = {
    selectedField: "=fieldSelect",
    availableFormFields: "=fields",
    includeType: "=includeType",
    expandRelative: "=expandRelative",
    selectTitle: "=selectTitle",
    filterDisplayFields: "=filterDisplayFields",
    fieldTypeFilter: "=fieldTypeFilter",
    variablesType: "@variablesType",
    editorType: "@editorType",
    stepId: "=stepId",
    allSteps: "=allSteps",
    processModelId: "=processModelId"
  }, r.controller = ["$scope", "$element", function(e) {
    e.selectField = function(t) {
      e.selectedField = t
    }, e.refreshFields = function() {
      var t = [];
      if (e.variablesType && "rest" == e.variablesType) {
        if (e.variablesType && "rest" === e.variablesType) {
          var i = [],
            o = n.getVariablesForStep(e.allSteps, e.stepId, e.fieldTypeFilter);
          if (o && o.length > 0)
            for (var r = 0; o.length > r; r++) {
              var s = {
                id: o[r].processVariableName,
                name: o[r].processVariableName
              };
              e.includeType && (s.type = o[r].processVariableType), e.editorType && "form" === e.editorType && (s.responseVariable = !0), i.push(s)
            }
          t = i
        }
      } else {
        var a = [];
        if (a = e.availableFormFields ? e.availableFormFields : n.getFormFieldsForStep(e.allSteps, e.stepId, e.fieldTypeFilter), a && a.length > 0)
          for (var r = 0; a.length > r; r++) {
            var l = a[r];
            if (!e.filterDisplayFields || "dynamic-table" !== l.type) {
              var d = {
                id: l.id,
                name: l.name
              };
              e.includeType && (d.type = l.type), "dynamic-table" === l.type ? d.columnDefinitions = l.columnDefinitions : "amount" === l.type ? (d.currency = l.currency || "$", d.enableFractions = l.enableFractions) : "hyperlink" === l.type && (d.hyperlinkUrl = l.hyperlinkUrl, d.displayText = l.displayText), t.push(d)
            }
          }
      }
      t.sort(function(e, t) {
        return e.name.toLowerCase() > t.name.toLowerCase() ? 1 : -1
      }), e.formFields = t
    }, e.fixPosition = function(t) {
      e.expandRelative && o(function() {
        var e = angular.element(t.target);
        e.next().css("position", "relative"), e.parent().on("hide.bs.dropdown", function() {
          e.next().css("position", "absolute"), e.parent().off("hide.bs.dropdown")
        })
      }, 0)
    }, e.refreshFields()
  }], r.link = function(e, t, i) {
    i.filterType && (e.filterType = i.filterType, o(function() {
      e.refreshFields()
    }))
  }, r
}]), angular.module("activitiModeler").directive("variablesSelect", ["$rootScope", "$http", "$templateCache", "$timeout", function() {
  var e = {};
  return e.restrict = "A", e.templateUrl = "views/includes/select-variables.html", e.replace = !0, e.scope = {
    fields: "=fields",
    selectedField: "=selectedField",
    includeType: "=includeType",
    targetModel: "=targetModel",
    fieldTypeFilter: "=fieldTypeFilter",
    ignoreSelection: "=ignoreSelection"
  }, e.controller = ["$scope", "$element", function(e) {
    var t = [];
    if (e.fieldTypeFilter && e.fieldTypeFilter.length > 0) {
      if (e.fields && e.fields.length > 0)
        for (var i = 0; e.fields.length > i; i++) e.fieldTypeFilter.indexOf(e.fields[i].type) >= 0 && t.push(e.fields[i])
    } else t = e.fields;
    e.filteredFields = t, e.selectField = function(t) {
      void 0 !== e.selectedField && (e.selectedField = t), void 0 !== e.targetModel && (e.targetModel = t.id)
    }
  }], e
}]), angular.module("activitiModeler").directive("editorInputCheck", function() {
  return {
    require: "ngModel",
    link: function(e, t, i, o) {
      o.$parsers.push(function(e) {
        var t = e.replace(/[&\/\\#,+~%.'":*?<>{}()$@;]/g, "");
        return t != e && (o.$setViewValue(t), o.$render()), t
      })
    }
  }
}), angular.module("activitiModeler").directive("selectDecisionTablePopover", ["$rootScope", "$http", "$popover", "DecisionTableService", "$parse", function(e, t, i, o, n) {
  var r = {};
  return r.restrict = "A", r.scope = {}, r.link = function(t, r, s) {
    var a = "bottom-left";
    r.addClass("decision-table-selection"), s.placement && (a = s.placement), t.popover = i(r, {
      template: "views/popover/select-decision-table-popover.html",
      placement: a
    });
    var l, d, c, p;
    s.onDecisionTableSelected && (l = n(s.onDecisionTableSelected)), s.onDecisionTableCreate && (c = n(s.onDecisionTableCreate)), s.onCancel && (d = n(s.onCancel)), s.onClear && (p = n(s.onClear));
    var u = t.popover.$scope;
    u.title = s.popoverTitle, u.popupModel = {}, u.$watch("popupModel.filter", function() {
      e.currentKickstartModel.definition && e.currentKickstartModel.definition.id && o.filterDecisionTables(u.popupModel.filter).then(function(e) {
        u.popupModel.decisionTableResults = e.data, u.resetSelection()
      })
    }), u.resetSelection = function() {
      u.popupModel.decisionTableResults && u.popupModel.decisionTableResults.length > 0 ? (u.popupModel.selectedDecisionTable = u.popupModel.decisionTableResults[0], u.popupModel.selectedIndex = 0) : (u.popupModel.selectedDecisionTable = void 0, u.popupModel.selectedIndex = -1)
    }, u.nextDecisionTable = function() {
      var e = u.popupModel.decisionTableResults;
      e && e.length > 0 && u.popupModel.selectedIndex < e.length - 1 && (u.popupModel.selectedIndex += 1, u.popupModel.selectedDecisionTable = e[u.popupModel.selectedIndex])
    }, u.previousDecisionTable = function() {
      var e = u.popupModel.decisionTableResults;
      e && e.length > 0 && u.popupModel.selectedIndex > 0 && (u.popupModel.selectedIndex -= 1, u.popupModel.selecteddecisionTable = e[u.popupModel.selectedIndex])
    }, u.createDecisionTable = function() {
      c && c(t.$parent), u.$hide()
    }, u.clearDecisionTable = function() {
      p && p(t.$parent), u.$hide()
    }, u.confirmDecisionTable = function(e) {
      if (!e) {
        var i = u.popupModel.decisionTableResults;
        u.popupModel.selectedIndex >= 0 && u.popupModel.selectedIndex < i.length && (e = i[u.popupModel.selectedIndex])
      }
      e && (l && l(t.$parent, {
        decisionTable: e
      }), u.$hide())
    }, u.$on("tooltip.show", function() {
      e.currentKickstartModel.definition && e.currentKickstartModel.definition.id && o.filterDecisionTables(u.popupModel.filter).then(function(e) {
        u.popupModel.decisionTableResults = e.data, u.resetSelection()
      })
    }), u.$on("tooltip.hide", function() {
      u.popupModel.decisionTableResults = [], u.popupModel.filter = "", u.popupModel.added ? u.popupModel.added = !1 : d && d(t.$parent)
    })
  }, r
}]), angular.module("activitiModeler").controller("ProcessesCtrl", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", function(e, t, i, o, n, r, s) {
  t.hasAccessKickstartCapability() || t.backToLanding(), e.setMainPageById("processes"), e.formItems = void 0, t.imageVersion = Date.now(), t.model = {
    filters: [{
      id: "myProcesses",
      labelKey: "MY-PROCESSES"
    }, {
      id: "sharedWithMe",
      labelKey: "SHARED-WITH-ME"
    }, {
      id: "sharedWithOthers",
      labelKey: "SHARED-WITH-OTHERS"
    }, {
      id: "favorite",
      labelKey: "FAVORITES"
    }],
    sorts: [{
      id: "modifiedDesc",
      labelKey: "MODIFIED-DESC"
    }, {
      id: "modifiedAsc",
      labelKey: "MODIFIED-ASC"
    }, {
      id: "nameAsc",
      labelKey: "NAME-ASC"
    }, {
      id: "nameDesc",
      labelKey: "NAME-DESC"
    }]
  }, e.modelFilter ? (t.model.activeFilter = e.modelFilter.filter, t.model.activeSort = e.modelFilter.sort, t.model.filterText = e.modelFilter.filterText, t.model.pendingFilterText = t.model.filterText) : (t.model.activeFilter = t.model.filters[0], t.model.activeSort = t.model.sorts[0], e.modelFilter = {
    filter: t.model.activeFilter,
    sort: t.model.activeSort,
    filterText: ""
  }), t.activateFilter = function(i) {
    t.model.activeFilter = i, e.modelFilter.filter = i, t.loadProcesses()
  }, t.activateSort = function(i) {
    t.model.activeSort = i, e.modelFilter.sort = i, t.loadProcesses()
  }, t.loadProcesses = function() {
    t.model.loading = !0;
    var e = {
      filter: t.model.activeFilter.id,
      sort: t.model.activeSort.id
    };
    t.model.filterText && "" != t.model.filterText && (e.filterText = t.model.filterText), o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models",
      params: e
    }).success(function(e) {
      t.model.processes = e, t.model.loading = !1
    }).error(function(e) {
      console.log("Something went wrong: " + e), t.model.loading = !1
    })
  };
  var a = function() {
    t.model.isFilterDelayed = !0, n(function() {
      t.model.isFilterDelayed = !1, t.model.isFilterUpdated ? (t.model.isFilterUpdated = !1, a()) : (t.model.filterText = t.model.pendingFilterText, e.modelFilter.filterText = t.model.filterText, t.loadProcesses())
    }, 500)
  };
  t.filterDelayed = function() {
    t.model.isFilterDelayed ? t.model.isFilterUpdated = !0 : a()
  }, t.createProcess = function(e) {
    var i = _internalCreateModal({
      template: "views/popup/process-create.html?version=" + Date.now()
    }, s, t);
    "step" == e && (i.$scope.initialModelType = 1)
  }, t.importProcess = function() {
    _internalCreateModal({
      template: "views/popup/process-import.html?version=" + Date.now()
    }, s, t)
  }, t.showProcessDetails = function(e) {
    e && r.url("/processes/" + encodeURIComponent(e.id))
  }, t.editProcessDetails = function(e) {
    e && (e.modelType && 1 === e.modelType ? r.url("/kickstart-editor/" + encodeURIComponent(e.id)) : r.url("/editor/" + encodeURIComponent(e.id)))
  }, t.loadProcesses()
}]), angular.module("activitiModeler").controller("CreateNewProcessModelCrtl", ["$rootScope", "$scope", "$modal", "$http", "$location", "EventTrackingService", function(e, t, i, o, n, r) {
  t.model = {
    loading: !1,
    process: {
      name: "",
      description: "",
      modelType: 0,
      stencilSet: 0
    },
    defaultBpmnStencilSet: void 0,
    defaultStepStencilSet: void 0,
    bpmnStencilSets: [],
    stepStencilSets: []
  }, void 0 !== t.initialModelType && (t.model.process.modelType = t.initialModelType), "enterprise" === e.account.type && (t.model.loading = !0, o({
    method: "GET",
    url: ACTIVITI.CONFIG.contextRoot + "/app/rest/available-stencil-sets"
  }).success(function(e) {
    t.model.stencilSets = e.data;
    var i = [],
      o = [];
    if (t.model.stencilSets && t.model.stencilSets.length > 0)
      for (var n = 0; t.model.stencilSets.length > n; n++) 1 == t.model.stencilSets[n].stencilType ? (i.push(t.model.stencilSets[n]), t.model.stencilSets[n].defaultStencilSet && (t.model.defaultBpmnStencilSet = t.model.stencilSets[n], t.model.process.stencilSet = t.model.defaultBpmnStencilSet.id)) : 2 == t.model.stencilSets[n].stencilType && (o.push(t.model.stencilSets[n]), t.model.stencilSets[n].defaultStencilSet && (t.model.defaultStepStencilSet = t.model.stencilSets[n], t.model.process.stencilSet = t.model.defaultStepStencilSet.id));
    t.model.bpmnStencilSets = i, t.model.stepStencilSets = o, t.model.loading = !1
  }).error(function() {
    t.model.loading = !1
  })), t.resetSelectedStencilSet = function() {
    t.model.process.stencilSet = 0 == t.model.process.modelType ? t.model.defaultBpmnStencilSet ? t.defaultBpmnStencilSet.id : 0 : t.model.defaultStepStencilSet ? t.defaultStepStencilSet.id : 0
  }, t.ok = function() {
    t.model.process.name && 0 != t.model.process.name.length && (t.model.loading = !0, o({
      method: "POST",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models",
      data: t.model.process
    }).success(function(e) {
      t.$hide(), 0 == t.model.process.modelType ? void 0 === t.model.process.stencilSet || null === t.model.process.stencilSet || 0 === t.model.process.stencilSet ? r.trackEvent("editor", "process-model-bpmn-created-default-stencil") : r.trackEvent("editor", "process-model-bpmn-created-custom-stencil") : void 0 === t.model.process.stencilSet || null === t.model.process.stencilSet || 0 === t.model.process.stencilSet ? r.trackEvent("editor", "process-model-step-created-default-stencil") : r.trackEvent("editor", "process-model-step-created-custom-stencil"), t.model.loading = !1, e.modelType && 1 === e.modelType ? n.url("/kickstart-editor/" + encodeURIComponent(e.id)) : n.url("/editor/" + encodeURIComponent(e.id))
    }).error(function() {
      t.model.loading = !1, i.$hide()
    }))
  }, t.cancel = function() {
    t.model.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("DuplicateProcessModelCrtl", ["$rootScope", "$scope", "$modal", "$http", "$location", "EventTrackingService", function(e, t, i, o, n, r) {
  t.model = {
    loading: !1,
    process: {
      name: "",
      description: "",
      modelType: 0,
      stencilSet: 0
    },
    defaultBpmnStencilSet: void 0,
    defaultStepStencilSet: void 0,
    bpmnStencilSets: [],
    stepStencilSets: []
  }, t.originalModel && (t.model.bpmnStencilSets = t.originalModel.bpmnStencilSets, t.model.stepStencilSets = t.originalModel.stepStencilSets, t.model.defaultStepStencilSet = t.originalModel.defaultStepStencilSet, t.model.defaultBpmnStencilSet = t.originalModel.defaultBpmnStencilSet, t.model.process.name = t.originalModel.process.name, t.model.process.description = t.originalModel.process.description, t.model.process.modelType = t.originalModel.process.modelType, t.model.process.stencilSet = t.originalModel.process.stencilSet, t.model.process.id = t.originalModel.process.id), t.ok = function() {
    t.model.process.name && 0 != t.model.process.name.length && (t.model.loading = !0, o({
      method: "POST",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.model.process.id + "/clone",
      data: t.model.process
    }).success(function(e) {
      t.$hide(), 0 == t.model.process.modelType ? void 0 === t.model.process.stencilSet || null === t.model.process.stencilSet || 0 === t.model.process.stencilSet ? r.trackEvent("editor", "process-model-bpmn-created-default-stencil") : r.trackEvent("editor", "process-model-bpmn-created-custom-stencil") : void 0 === t.model.process.stencilSet || null === t.model.process.stencilSet || 0 === t.model.process.stencilSet ? r.trackEvent("editor", "process-model-step-created-default-stencil") : r.trackEvent("editor", "process-model-step-created-custom-stencil"), t.model.loading = !1, e.modelType && 1 === e.modelType ? n.url("/kickstart-editor/" + encodeURIComponent(e.id)) : n.url("/editor/" + encodeURIComponent(e.id))
    }).error(function() {
      t.model.loading = !1, i.$hide()
    }))
  }, t.cancel = function() {
    t.model.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("ImportProcessModelCrtl", ["$rootScope", "$scope", "$http", "Upload", "$location", "EventTrackingService", function(e, t, i, o, n, r) {
  t.model = {
    loading: !1
  }, t.onFileSelect = function(e, i) {
    for (var s = 0; e.length > s; s++) {
      var a, l = e[s];
      a = i ? ACTIVITI.CONFIG.contextRoot + "/app/rest/import-process-model/text" : ACTIVITI.CONFIG.contextRoot + "/app/rest/import-process-model", o.upload({
        url: a,
        method: "POST",
        file: l
      }).progress(function(e) {
        t.model.loading = !0, t.model.uploadProgress = parseInt(100 * e.loaded / e.total)
      }).success(function(e) {
        t.model.loading = !1, r.trackEvent("editor", "process-model-bpmn-import"), n.path("/editor/" + e.id), t.$hide()
      }).error(function(e) {
        e && e.message && (t.model.errorMessage = e.message), t.model.error = !0, t.model.loading = !1
      })
    }
  }, t.cancel = function() {
    t.model.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("ProcessCtrl", ["$rootScope", "$scope", "$translate", "$http", "$location", "$routeParams", "$modal", "$popover", "$timeout", "appResourceRoot", "ResourceService", function(e, t, i, o, n, r, s, a, l, d, c) {
  e.setMainPageById("processes"), t.model = {
    latestModelId: r.modelId
  }, t.loadProcess = function() {
    var i;
    i = r.modelHistoryId ? ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + r.modelId + "/history/" + r.modelHistoryId : ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + r.modelId, o({
      method: "GET",
      url: i
    }).success(function(i) {
      t.model.process = i, t.loadComments(), t.loadVersions(), t.loadStencilInfo(), t.model.bpmn20DownloadUrl = ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + r.modelId + (void 0 == r.modelHistoryId ? "" : "/history/" + r.modelHistoryId) + "/bpmn20?version=" + Date.now(), t.model.process.modelType && 0 != t.model.process.modelType ? 1 == t.model.process.modelType && (t.model.kickstartMode = "read") : (e.$on("$routeChangeStart", function() {
        jQuery(".qtip").qtip("destroy", !0)
      }), l(function() {
        jQuery("#bpmnModel").attr("data-model-id", r.modelId), jQuery("#bpmnModel").attr("data-model-type", "design"), t.model.process.latestVersion || jQuery("#bpmnModel").attr("data-history-id", r.modelHistoryId);
        var e = d + "../display/displaymodel.html?version=" + Date.now(),
          i = window.define;
        window.define = void 0, c.loadFromHtml(e, function() {
          window.define = i
        })
      }))
    }).error(function() {
      t.returnToList()
    })
  }, t.useAsNewVersion = function() {
    _internalCreateModal({
      template: "views/popup/model-use-as-new-version.html",
      scope: t
    }, s, t)
  }, t.toggleFavorite = function() {
    t.model.favoritePending = !0;
    var e = {
      favorite: !t.model.process.favorite
    };
    o({
      method: "PUT",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.model.latestModelId,
      data: e
    }).success(function() {
      t.model.favoritePending = !1, t.model.process.favorite ? t.addAlertPromise(i("PROCESS.ALERT.UN-FAVORITE-CONFIRM"), "info") : t.addAlertPromise(i("PROCESS.ALERT.FAVORITE-CONFIRM"), "info"), t.model.process.favorite = !t.model.process.favorite
    }).error(function() {
      t.model.favoritePending = !1
    })
  }, t.loadVersions = function() {
    var e = {
      includeLatestVersion: !t.model.process.latestVersion
    };
    o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.model.latestModelId + "/history",
      params: e
    }).success(function(e) {
      t.model.process.latestVersion && (e.data || (e.data = []), e.data.unshift(t.model.process)), t.model.versions = e
    })
  }, t.showVersion = function(e) {
    e && (e.latestVersion ? n.path("/processes/" + t.model.latestModelId) : n.path("/processes/" + t.model.latestModelId + "/history/" + e.id))
  }, t.loadStencilInfo = function() {
    t.model.process.stencilSet && t.model.process.stencilSet > 0 && o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + t.model.process.stencilSet + "/basic"
    }).success(function(e) {
      t.model.stencil = e
    })
  }, t.goToStencil = function() {
    t.model.stencil && n.path("/stencils/" + t.model.stencil.id)
  }, t.returnToList = function() {
    n.path("/processes/")
  }, t.editProcess = function() {
    _internalCreateModal({
      template: "views/popup/model-edit.html",
      scope: t
    }, s, t)
  }, t.duplicateProcess = function() {
    var e = _internalCreateModal({
      template: "views/popup/process-duplicate.html?version=" + Date.now()
    }, s, t);
    e.$scope.originalModel = t.model
  }, t.deleteProcess = function() {
    _internalCreateModal({
      template: "views/popup/model-delete.html",
      scope: t
    }, s, t)
  }, t.shareProcess = function() {
    _internalCreateModal({
      template: "views/popup/model-share.html",
      scope: t
    }, s, t)
  }, t.openEditor = function() {
    t.model.process && (t.model.process.modelType && 1 === t.model.process.modelType ? n.path("/kickstart-editor/" + t.model.process.id) : n.path("/editor/" + t.model.process.id))
  }, t.loadComments = function() {
    var e = {
      latestFirst: !0
    };
    o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.model.latestModelId + "/comments",
      params: e
    }).success(function(e) {
      t.model.comments = e
    })
  }, t.toggleComments = function(e) {
    if (!t.commentsState) {
      var i = {};
      t.commentsState = i, i.popover = a(angular.element(e.target), {
        template: "views/popover/comments.html",
        placement: "bottom-right",
        show: !0,
        scope: t,
        container: "body"
      });
      var o = function() {
        i.popover.destroy(), delete t.commentsState
      };
      i.popover.$scope.$on("tooltip.hide", o), t.$on("$destroy", o)
    }
  }, t.toggleHistory = function(e) {
    if (!t.historyState) {
      var i = {};
      t.historyState = i, i.popover = a(angular.element(e.target), {
        template: "views/popover/history.html",
        placement: "bottom-right",
        show: !0,
        scope: t,
        container: "body"
      });
      var o = function() {
        i.popover.destroy(), delete t.historyState
      };
      i.popover.$scope.$on("tooltip.hide", o), t.$on("$destroy", o)
    }
  }, t.loadProcess()
}]), angular.module("activitiModeler").controller("FormsCtrl", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", function(e, t, i, o, n, r, s) {
  t.hasAccessKickstartCapability() || t.backToLanding(), e.setMainPageById("forms"), e.formItems = void 0, t.imageVersion = Date.now(), t.model = {
    filters: [{
      id: "myReusableForms",
      labelKey: "MY-REUSABLE-FORMS"
    }, {
      id: "sharedWithMe",
      labelKey: "SHARED-WITH-ME"
    }, {
      id: "sharedWithOthers",
      labelKey: "SHARED-WITH-OTHERS"
    }, {
      id: "favorite",
      labelKey: "FAVORITES"
    }],
    sorts: [{
      id: "modifiedDesc",
      labelKey: "MODIFIED-DESC"
    }, {
      id: "modifiedAsc",
      labelKey: "MODIFIED-ASC"
    }, {
      id: "nameAsc",
      labelKey: "NAME-ASC"
    }, {
      id: "nameDesc",
      labelKey: "NAME-DESC"
    }]
  }, e.formFilter ? (t.model.activeFilter = e.formFilter.filter, t.model.activeSort = e.formFilter.sort, t.model.filterText = e.formFilter.filterText, t.model.pendingFilterText = t.model.filterText) : (t.model.activeFilter = t.model.filters[0], t.model.activeSort = t.model.sorts[0], e.formFilter = {
    filter: t.model.activeFilter,
    sort: t.model.activeSort,
    filterText: ""
  }), t.activateFilter = function(i) {
    t.model.activeFilter = i, e.formFilter.filter = i, t.loadForms()
  }, t.activateSort = function(i) {
    t.model.activeSort = i, e.formFilter.sort = i, t.loadForms()
  }, t.loadForms = function() {
    t.model.loading = !0;
    var e = {
      filter: t.model.activeFilter.id,
      sort: t.model.activeSort.id,
      modelType: 2
    };
    t.model.filterText && "" != t.model.filterText && (e.filterText = t.model.filterText), o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models",
      params: e
    }).success(function(e) {
      t.model.forms = e, t.model.loading = !1
    }).error(function() {
      t.model.loading = !1
    })
  };
  var a = function() {
    t.model.isFilterDelayed = !0, n(function() {
      t.model.isFilterDelayed = !1, t.model.isFilterUpdated ? (t.model.isFilterUpdated = !1, a()) : (t.model.filterText = t.model.pendingFilterText, e.formFilter.filterText = t.model.filterText, t.loadForms())
    }, 500)
  };
  t.filterDelayed = function() {
    t.model.isFilterDelayed ? t.model.isFilterUpdated = !0 : a()
  }, t.createForm = function() {
    e.currentKickstartModel = void 0, t.createFormCallback = function(e) {
      r.url("/form-editor/" + encodeURIComponent(e.id))
    }, _internalCreateModal({
      template: "views/popup/form-create.html?version=" + Date.now(),
      scope: t
    }, s, t)
  }, t.showFormDetails = function(t) {
    t && (e.currentKickstartModel = void 0, r.url("/forms/" + encodeURIComponent(t.id)))
  }, t.editFormDetails = function(e) {
    e && r.url("/form-editor/" + encodeURIComponent(e.id))
  }, t.loadForms()
}]), angular.module("activitiModeler").controller("CreateNewFormCtrl", ["$rootScope", "$scope", "$http", "EventTrackingService", function(e, t, i, o) {
  t.model = {
    loading: !1,
    form: {
      name: "",
      description: "",
      modelType: 2,
      stencilSet: 0
    },
    defaultStencilSet: void 0,
    formStencilSets: []
  }, "enterprise" === e.account.type && (t.model.loading = !0, i({
    method: "GET",
    url: ACTIVITI.CONFIG.contextRoot + "/app/rest/available-form-stencil-sets"
  }).success(function(e) {
    if (t.model.formStencilSets = e.data, t.model.stencilSets && t.model.stencilSets.length > 0)
      for (var i = 0; t.model.stencilSets.length > i; i++)
        if (t.model.stencilSets[i].defaultStencilSet) {
          t.model.defaultStencilSet = t.model.stencilSets[i], t.model.form.stencilSet = t.defaultStencilSet.id;
          break
        }
    t.model.loading = !1
  }).error(function() {
    t.model.loading = !1
  })), e.currentKickstartModel && e.currentKickstartModel.definition && e.currentKickstartModel.definition.id && (t.model.form.referenceId = e.currentKickstartModel.definition.id), t.ok = function() {
    t.model.form.name && 0 != t.model.form.name.length && (t.model.loading = !0, i({
      method: "POST",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models",
      data: t.model.form
    }).success(function(e) {
      t.$hide(), t.model.loading = !1, t.model.form && t.model.form.referenceId ? o.trackEvent("editor", "form-model-create-via-stepeditor") : o.trackEvent("editor", "form-model-create-standalone"), t.createFormCallback && (t.createFormCallback(e), t.createFormCallback = void 0)
    }).error(function() {
      t.model.loading = !1, t.$hide()
    }))
  }, t.cancel = function() {
    t.model.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("DuplicateFormCtrl", ["$rootScope", "$scope", "$http", "EventTrackingService", function(e, t, i, o) {
  t.model = {
    loading: !1,
    form: {
      id: "",
      name: "",
      description: "",
      modelType: 2
    }
  }, t.originalModel && t.originalModel.form && (t.model.form.name = t.originalModel.form.name, t.model.form.description = t.originalModel.form.description, t.model.form.modelType = t.originalModel.form.modelType, t.model.form.stencilSet = t.originalModel.form.stencilSet, t.model.form.id = t.originalModel.form.id), t.ok = function() {
    t.model.form.name && 0 != t.model.form.name.length && (t.model.loading = !0, i({
      method: "POST",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.model.form.id + "/clone",
      data: t.model.form
    }).success(function(e) {
      t.$hide(), t.model.loading = !1, t.model.form && t.model.form.referenceId ? o.trackEvent("editor", "form-model-create-via-stepeditor") : o.trackEvent("editor", "form-model-create-standalone"), t.duplicateFormCallback && (t.duplicateFormCallback(e), t.duplicateFormCallback = void 0)
    }).error(function() {
      t.model.loading = !1, t.$hide()
    }))
  }, t.cancel = function() {
    t.model.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("FormCtrl", ["$rootScope", "$scope", "$translate", "$http", "$location", "$routeParams", "$modal", "$timeout", "$popover", function(e, t, i, o, n, r, s, a, l) {
  e.setMainPageById("forms"), t.formMode = "read", t.model = {
    latestModelId: r.modelId
  }, t.loadForm = function() {
    var e;
    e = r.modelHistoryId ? ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + r.modelId + "/history/" + r.modelHistoryId : ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + r.modelId, o({
      method: "GET",
      url: e
    }).success(function(e) {
      t.model.form = e, t.loadComments(), t.loadVersions()
    }).error(function() {
      t.returnToList()
    })
  }, t.useAsNewVersion = function() {
    _internalCreateModal({
      template: "views/popup/model-use-as-new-version.html",
      scope: t
    }, s, t)
  }, t.toggleFavorite = function() {
    t.model.favoritePending = !0;
    var e = {
      favorite: !t.model.form.favorite
    };
    o({
      method: "PUT",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.model.latestModelId,
      data: e
    }).success(function() {
      t.model.favoritePending = !1, t.model.form.favorite ? t.addAlertPromise(i("PROCESS.ALERT.UN-FAVORITE-CONFIRM"), "info") : t.addAlertPromise(i("PROCESS.ALERT.FAVORITE-CONFIRM"), "info"), t.model.form.favorite = !t.model.form.favorite
    }).error(function() {
      t.model.favoritePending = !1
    })
  }, t.loadVersions = function() {
    var e = {
      includeLatestVersion: !t.model.form.latestVersion
    };
    o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.model.latestModelId + "/history",
      params: e
    }).success(function(e) {
      t.model.form.latestVersion && (e.data || (e.data = []), e.data.unshift(t.model.form)), t.model.versions = e
    })
  }, t.showVersion = function(e) {
    e && (e.latestVersion ? n.path("/forms/" + t.model.latestModelId) : n.path("/forms/" + t.model.latestModelId + "/history/" + e.id))
  }, t.returnToList = function() {
    n.path("/forms/")
  }, t.editForm = function() {
    _internalCreateModal({
      template: "views/popup/model-edit.html",
      scope: t
    }, s, t)
  }, t.duplicateForm = function() {
    var e = _internalCreateModal({
      template: "views/popup/form-duplicate.html?version=" + Date.now()
    }, s, t);
    e.$scope.originalModel = t.model, e.$scope.duplicateFormCallback = function(e) {
      n.url("/form-editor/" + encodeURIComponent(e.id))
    }
  }, t.deleteForm = function() {
    _internalCreateModal({
      template: "views/popup/model-delete.html",
      scope: t
    }, s, t)
  }, t.shareForm = function() {
    _internalCreateModal({
      template: "views/popup/model-share.html",
      scope: t
    }, s, t)
  }, t.openEditor = function() {
    t.model.form && n.path("/form-editor/" + t.model.form.id)
  }, t.loadComments = function() {
    var e = {
      latestFirst: !0
    };
    o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.model.latestModelId + "/comments",
      params: e
    }).success(function(e) {
      t.model.comments = e
    })
  }, t.toggleComments = function(e) {
    if (!t.commentsState) {
      var i = {};
      t.commentsState = i, i.popover = l(angular.element(e.target), {
        template: "views/popover/comments.html",
        placement: "bottom-right",
        show: !0,
        scope: t,
        container: "body"
      });
      var o = function() {
        i.popover.destroy(), delete t.commentsState
      };
      i.popover.$scope.$on("tooltip.hide", o), t.$on("$destroy", o)
    }
  }, t.toggleHistory = function(e) {
    if (!t.historyState) {
      var i = {};
      t.historyState = i, i.popover = l(angular.element(e.target), {
        template: "views/popover/history.html",
        placement: "bottom-right",
        show: !0,
        scope: t,
        container: "body"
      });
      var o = function() {
        i.popover.destroy(), delete t.historyState
      };
      i.popover.$scope.$on("tooltip.hide", o), t.$on("$destroy", o)
    }
  }, t.loadForm()
}]), angular.module("activitiModeler").controller("AppDefinitionsCtrl", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", function(e, t, i, o, n, r, s) {
  t.hasAccessKickstartCapability() || t.backToLanding(), e.setMainPageById("apps"), t.model = {
    filters: [{
      id: "myApps",
      labelKey: "MY-APPS"
    }, {
      id: "sharedWithMe",
      labelKey: "SHARED-WITH-ME"
    }, {
      id: "sharedWithOthers",
      labelKey: "SHARED-WITH-OTHERS"
    }, {
      id: "favorite",
      labelKey: "FAVORITES"
    }],
    sorts: [{
      id: "modifiedDesc",
      labelKey: "MODIFIED-DESC"
    }, {
      id: "modifiedAsc",
      labelKey: "MODIFIED-ASC"
    }, {
      id: "nameAsc",
      labelKey: "NAME-ASC"
    }, {
      id: "nameDesc",
      labelKey: "NAME-DESC"
    }]
  }, e.appFilter ? (t.model.activeFilter = e.appFilter.filter, t.model.activeSort = e.appFilter.sort, t.model.filterText = e.appFilter.filterText, t.model.pendingFilterText = t.model.filterText) : (t.model.activeFilter = t.model.filters[0], t.model.activeSort = t.model.sorts[0], e.appFilter = {
    filter: t.model.activeFilter,
    sort: t.model.activeSort,
    filterText: ""
  }), t.activateFilter = function(i) {
    t.model.activeFilter = i, e.appFilter.filter = i, t.loadApps()
  }, t.activateSort = function(i) {
    t.model.activeSort = i, e.appFilter.sort = i, t.loadApps()
  }, t.loadApps = function() {
    t.model.loading = !0;
    var e = {
      filter: t.model.activeFilter.id,
      sort: t.model.activeSort.id,
      modelType: 3
    };
    t.model.filterText && "" != t.model.filterText && (e.filterText = t.model.filterText), o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models",
      params: e
    }).success(function(e) {
      t.model.apps = e, t.model.loading = !1
    }).error(function() {
      t.model.loading = !1
    })
  };
  var a = function() {
    t.model.isFilterDelayed = !0, n(function() {
      t.model.isFilterDelayed = !1, t.model.isFilterUpdated ? (t.model.isFilterUpdated = !1, a()) : (t.model.filterText = t.model.pendingFilterText, e.appFilter.filterText = t.model.filterText, t.loadApps())
    }, 500)
  };
  t.filterDelayed = function() {
    t.model.isFilterDelayed ? t.model.isFilterUpdated = !0 : a()
  }, t.createApp = function() {
    _internalCreateModal({
      template: "views/popup/app-definition-create.html?version=" + Date.now(),
      scope: t
    }, s, t)
  }, t.showAppDetails = function(e) {
    e && r.path("/apps/" + e.id)
  }, t.editAppDetails = function(e) {
    e && r.path("/app-editor/" + e.id)
  }, t.importAppDefinition = function() {
    _internalCreateModal({
      template: "views/popup/app-definitions-import.html?version=" + Date.now()
    }, s, t)
  }, t.loadApps()
}]), angular.module("activitiModeler").controller("CreateNewAppCrtl", ["$rootScope", "$scope", "$http", "$location", "EventTrackingService", "$translate", function(e, t, i, o, n, r) {
  t.model = {
    loading: !1,
    app: {
      name: "",
      description: "",
      modelType: 3
    }
  }, t.ok = function() {
    t.model.app.name && 0 != t.model.app.name.length && (t.model.loading = !0, i({
      method: "POST",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models",
      data: t.model.app
    }).success(function(e) {
      t.$hide(), n.trackEvent("editor", "app-model-created"), t.model.loading = !1, o.path("/app-editor/" + e.id)
    }).error(function(e) {
      t.model.loading = !1, e && e.messageKey && r(e.messageKey, e.customData).then(function(e) {
        t.errorMessage = e
      })
    }))
  }, t.cancel = function() {
    t.model.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("DuplicateAppCrtl", ["$rootScope", "$scope", "$http", "$location", "EventTrackingService", "$translate", function(e, t, i, o, n, r) {
  t.model = {
    loading: !1,
    app: {
      id: "",
      name: "",
      description: "",
      modelType: 3
    }
  }, t.originalModel && (t.model.app.name = t.originalModel.app.name, t.model.app.description = t.originalModel.app.description, t.model.app.modelType = t.originalModel.app.modelType, t.model.app.id = t.originalModel.app.id), t.ok = function() {
    t.model.app.name && 0 != t.model.app.name.length && (t.model.loading = !0, i({
      method: "POST",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.model.app.id + "/clone",
      data: t.model.app
    }).success(function(e) {
      t.$hide(), n.trackEvent("editor", "app-model-created"), t.model.loading = !1, o.path("/app-editor/" + e.id)
    }).error(function(e) {
      t.model.loading = !1, e && e.messageKey && r(e.messageKey, e.customData).then(function(e) {
        t.errorMessage = e
      })
    }))
  }, t.cancel = function() {
    t.model.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("ImportAppDefinitionCtrl", ["$rootScope", "$scope", "$http", "Upload", "$location", "EventTrackingService", function(e, t, i, o, n, r) {
  t.model = {
    loading: !1,
    renewIdmIds: !1
  }, t.onFileSelect = function(e, i) {
    for (var s = 0; e.length > s; s++) {
      var a, l = e[s];
      a = i ? ACTIVITI.CONFIG.contextRoot + "/app/rest/app-definitions/text/import?renewIdmEntries=" + t.model.renewIdmIds : ACTIVITI.CONFIG.contextRoot + "/app/rest/app-definitions/import?renewIdmEntries=" + t.model.renewIdmIds, o.upload({
        url: a,
        method: "POST",
        file: l
      }).progress(function(e) {
        t.model.loading = !0, t.model.uploadProgress = parseInt(100 * e.loaded / e.total)
      }).success(function(e) {
        t.model.loading = !1, r.trackEvent("editor", "app-definition-import"), n.path("/apps/" + e.id), t.$hide()
      }).error(function(e) {
        e && e.message && (t.model.errorMessage = e.message), t.model.error = !0, t.model.loading = !1
      })
    }
  }, t.cancel = function() {
    t.model.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("AppDefinitionCtrl", ["$rootScope", "$scope", "$translate", "$http", "$location", "$routeParams", "$modal", "$popover", "$timeout", function(e, t, i, o, n, r, s, a) {
  e.setMainPageById("apps"), t.model = {
    latestModelId: r.modelId
  }, t.loadApp = function() {
    var e, i;
    r.modelHistoryId ? (e = ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + r.modelId + "/history/" + r.modelHistoryId, i = ACTIVITI.CONFIG.contextRoot + "/app/rest/app-definitions/" + r.modelId + "/history/" + r.modelHistoryId) : (e = ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + r.modelId, i = ACTIVITI.CONFIG.contextRoot + "/app/rest/app-definitions/" + r.modelId, t.model.appExportUrl = ACTIVITI.CONFIG.contextRoot + "/app/rest/app-definitions/" + r.modelId + "/export?version=" + Date.now()), o({
      method: "GET",
      url: e
    }).success(function(e) {
      t.model.app = e, t.loadComments(), t.loadVersions()
    }).error(function() {
      t.returnToList()
    }), o({
      method: "GET",
      url: i
    }).success(function(e) {
      t.model.appDefinition = e
    })
  }, t.validateAppDefinition = function(e) {
    o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/app-definitions/" + encodeURIComponent(e) + "/validate"
    }).success(function(e) {
      t.appValidationErrors = e;
      for (var i = !1, o = 0; t.appValidationErrors.length > o; o++)
        if ("subprocess-recursion" == t.appValidationErrors[o].problem) {
          i = !0;
          break
        }
      t.appValidationRecursion = i
    })
  }, t.useAsNewVersion = function() {
    _internalCreateModal({
      template: "views/popup/model-use-as-new-version.html",
      scope: t
    }, s, t)
  }, t.toggleFavorite = function() {
    t.model.favoritePending = !0;
    var e = {
      favorite: !t.model.app.favorite
    };
    o({
      method: "PUT",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.model.latestModelId,
      data: e
    }).success(function() {
      t.model.favoritePending = !1, t.model.app.favorite ? t.addAlertPromise(i("APP.ALERT.UN-FAVORITE-CONFIRM"), "info") : t.addAlertPromise(i("APP.ALERT.FAVORITE-CONFIRM"), "info"), t.model.app.favorite = !t.model.app.favorite
    }).error(function() {
      t.model.favoritePending = !1
    })
  }, t.loadVersions = function() {
    var e = {
      includeLatestVersion: !t.model.app.latestVersion
    };
    o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.model.latestModelId + "/history",
      params: e
    }).success(function(e) {
      t.model.app.latestVersion && (e.data || (e.data = []), e.data.unshift(t.model.app)), t.model.versions = e
    })
  }, t.showVersion = function(e) {
    e && (e.latestVersion ? n.path("/apps/" + t.model.latestModelId) : n.path("/apps/" + t.model.latestModelId + "/history/" + e.id))
  }, t.returnToList = function() {
    n.path("/apps/")
  }, t.openEditor = function() {
    n.path("/app-editor/" + t.model.latestModelId)
  }, t.editApp = function() {
    _internalCreateModal({
      template: "views/popup/model-edit.html",
      scope: t
    }, s, t)
  }, t.duplicateApp = function() {
    var e = _internalCreateModal({
      template: "views/popup/app-definition-duplicate.html?version=" + Date.now()
    }, s, t);
    e.$scope.originalModel = t.model
  }, t.deleteApp = function() {
    o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/runtime/app-definitions/model/" + t.model.latestModelId
    }).success(function(e) {
      e && e.id ? _internalCreateModal({
        template: "views/popup/app-definition-delete.html?version=" + Date.now(),
        scope: t
      }, s, t) : _internalCreateModal({
        template: "views/popup/model-delete.html?version=" + Date.now(),
        scope: t
      }, s, t)
    })
  }, t.publish = function() {
    _internalCreateModal({
      template: "views/popup/app-definition-publish.html?version=" + Date.now(),
      scope: t
    }, s, t)
  }, t.shareApp = function() {
    _internalCreateModal({
      template: "views/popup/model-share.html?version=" + Date.now(),
      scope: t
    }, s, t)
  }, t.importAppDefinition = function() {
    _internalCreateModal({
      template: "views/popup/app-definition-import.html?version=" + Date.now(),
      scope: t
    }, s, t)
  }, t.loadComments = function() {
    var e = {
      latestFirst: !0
    };
    o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.model.latestModelId + "/comments",
      params: e
    }).success(function(e) {
      t.model.comments = e
    })
  }, t.toggleComments = function(e) {
    if (!t.commentsState) {
      var i = {};
      t.commentsState = i, i.popover = a(angular.element(e.target), {
        template: "views/popover/comments.html",
        placement: "bottom-right",
        show: !0,
        scope: t,
        container: "body"
      });
      var o = function() {
        i.popover.destroy(), delete t.commentsState
      };
      i.popover.$scope.$on("tooltip.hide", o), t.$on("$destroy", o)
    }
  }, t.toggleHistory = function(e) {
    if (!t.historyState) {
      var i = {};
      t.historyState = i, i.popover = a(angular.element(e.target), {
        template: "views/popover/history.html",
        placement: "bottom-right",
        show: !0,
        scope: t,
        container: "body"
      });
      var o = function() {
        i.popover.destroy(), delete t.historyState
      };
      i.popover.$scope.$on("tooltip.hide", o), t.$on("$destroy", o)
    }
  }, t.loadApp(), t.validateAppDefinition(r.modelId)
}]), angular.module("activitiModeler").controller("PublishAppDefinitionPopupCtrl", ["$rootScope", "$scope", "$http", "$route", "$translate", "EventTrackingService", function(e, t, i, o, n, r) {
  t.popup = {
    loading: !1,
    comment: ""
  }, t.ok = function(e) {
    t.popup.loading = !0;
    var s = {
      comment: t.popup.comment
    };
    void 0 !== e && null !== e && e === !0 && (s.force = !0), delete t.popup.error, i({
      method: "POST",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/app-definitions/" + t.model.app.id + "/publish",
      data: s
    }).success(function(e) {
      if (t.$hide(), 1 == e.errorType) {
        var i = {
          modelName: e.errorDescription
        };
        t.addAlertPromise(n("APP.POPUP.HAS-CUSTOM-STENCILITEM", i), "error")
      } else if (2 == e.errorType) {
        var i = {
          modelName: e.errorDescription
        };
        t.addAlertPromise(n("APP.POPUP.HAS-VALIDATIONERROR", i), "error")
      } else r.trackEvent("editor", "app-model-publish"), t.popup.loading = !1, o.reload(), t.addAlertPromise(n("APP.ALERT.PUBLISH-CONFIRM"), "info")
    }).error(function(e, i) {
      t.popup.loading = !1, 409 === i && e && "app.publish.procdef.key.conflict" === e.messageKey ? t.popup.error = {
        type: "conflictingProcDefKey",
        data: e.customData
      } : 409 === i && e && "app.publish.dectable.key.conflict" === e.messageKey ? t.popup.error = {
        type: "conflictingDecTableKey",
        data: e.customData
      } : 409 === i && e && "app.publish.procdef.duplicate.keys" === e.messageKey ? t.popup.error = {
        type: "duplicateProcDefKeys",
        data: e.customData
      } : 409 === i && e && "app.publish.dectable.duplicate.keys" === e.messageKey ? t.popup.error = {
        type: "duplicateDecTableKeys",
        data: e.customData
      } : 409 === i && e && "app.publish.process.model.already.used" === e.messageKey ? t.popup.error = {
        type: "processModelAlreadyUsed",
        data: e.customData
      } : (t.$hide(), t.addAlertPromise(n("APP.ALERT.PUBLISH-ERROR"), "error"))
    })
  }, t.cancel = function() {
    t.popup.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("DeleteAppDefinitionPopupCrtl", ["$rootScope", "$scope", "$http", "$translate", function(e, t, i, o) {
  t.popup = {
    loading: !1,
    cascade: "false"
  }, t.ok = function() {
    t.popup.loading = !0;
    var e = {
      cascade: "true" === t.popup.cascade,
      deleteRuntimeApp: !0
    };
    i({
      method: "DELETE",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.model.app.id,
      params: e
    }).success(function() {
      t.$hide(), t.popup.loading = !1, t.addAlertPromise(o("APP.ALERT.DELETE-CONFIRM"), "info"), t.returnToList()
    }).error(function() {
      t.$hide(), t.popup.loading = !1
    })
  }, t.cancel = function() {
    t.popup.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("ImportNewVersionAppDefinitionCtrl", ["$rootScope", "$scope", "$http", "Upload", "$route", "EventTrackingService", function(e, t, i, o, n, r) {
  t.popup = {
    loading: !1,
    renewIdmIds: !1
  }, t.onFileSelect = function(e, i) {
    t.popup.loading = !0;
    for (var s = 0; e.length > s; s++) {
      var a, l = e[s];
      a = i ? ACTIVITI.CONFIG.contextRoot + "/app/rest/app-definitions/" + t.model.app.id + "/text/import?renewIdmEntries=" + t.popup.renewIdmIds : ACTIVITI.CONFIG.contextRoot + "/app/rest/app-definitions/" + t.model.app.id + "/import?renewIdmEntries=" + t.popup.renewIdmIds, o.upload({
        url: a,
        method: "POST",
        file: l
      }).progress(function(e) {
        t.popup.uploadProgress = parseInt(100 * e.loaded / e.total)
      }).success(function() {
        t.popup.loading = !1, r.trackEvent("editor", "app-definition-import"), n.reload(), t.$hide()
      }).error(function(e) {
        e && e.message && (t.popup.errorMessage = e.message), t.popup.error = !0, t.popup.loading = !1
      })
    }
  }, t.cancel = function() {
    t.popup.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("ModelAddCommentPopupCrtl", ["$rootScope", "$scope", "$http", "$timeout", "$translate", "EventTrackingService", function(e, t, i, o, n, r) {
  t.popup = {
    loading: !1
  }, t.popup.model = t.model.process ? t.model.process : t.model.form ? t.model.form : t.model.decisionTable ? t.model.decisionTable : t.model.app, t.ok = function() {
    t.popup.loading = !0;
    var e = {
      message: t.popup.message
    };
    i({
      method: "POST",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.popup.model.id + "/comments",
      data: e
    }).success(function() {
      t.addAlertPromise(n("PROCESS.ALERT.COMMENT-ADDED-CONFIRM"), "info"), t.loadComments(), t.model.process ? r.trackEvent("editor", "process-model-add-comment") : t.model.form ? r.trackEvent("editor", "form-model-add-comment") : t.model.decisionTable ? r.trackEvent("editor", "decision-table-model-add-comment") : r.trackEvent("editor", "app-model-add-comment"), t.popup.loading = !1, t.popup.message = void 0
    }).error(function() {
      t.popup.loading = !1
    })
  }
}]), angular.module("activitiModeler").controller("EditModelPopupCrtl", ["$rootScope", "$scope", "$http", "$translate", "$location", function(e, t, i, o, n) {
  var r, s;
  t.model.process ? (r = t.model.process, s = "PROCESS") : t.model.form ? (r = t.model.form, s = "FORM") : t.model.decisionTable ? (r = t.model.decisionTable, s = "DECISION-TABLE") : (r = t.model.app, s = "APP"), t.popup = {
    loading: !1,
    popupType: s,
    modelName: r.name,
    modelDescription: r.description,
    id: r.id
  }, t.ok = function() {
    if (t.popup.modelName && 0 != t.popup.modelName.length) {
      t.model.name = t.popup.modelName, t.model.description = t.popup.modelDescription, t.popup.loading = !0;
      var e = {
        name: t.model.name,
        description: t.model.description
      };
      i({
        method: "PUT",
        url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.popup.id,
        data: e
      }).success(function(e) {
        t.model.process ? t.model.process = e : t.model.decisionTable ? t.model.decisionTable = e : t.model.form ? t.model.form = e : t.model.app = e, t.addAlertPromise(o("PROCESS.ALERT.EDIT-CONFIRM"), "info"), t.$hide(), t.popup.loading = !1, "FORM" === s ? n.path("/forms/" + t.popup.id) : "APP" === s ? n.path("/apps/" + t.popup.id) : "DECISION-TABLE" === s ? n.path("/decision-tables/" + t.popup.id) : n.path("/processes/" + t.popup.id)
      }).error(function() {
        t.$hide(), t.popup.loading = !1
      })
    }
  }, t.cancel = function() {
    t.popup.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("DeleteModelPopupCrtl", ["$rootScope", "$scope", "$http", "$translate", function(e, t, i, o) {
  var n, r;
  t.model.process ? (n = t.model.process, r = "PROCESS") : t.model.form ? (n = t.model.form, r = "FORM") : t.model.decisionTable ? (n = t.model.decisionTable, r = "DECISION-TABLE") : (n = t.model.app, r = "APP"), t.popup = {
    loading: !0,
    loadingRelations: !0,
    cascade: "false",
    popupType: r,
    model: n
  }, i({
    method: "GET",
    url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.popup.model.id + "/parent-relations"
  }).success(function(e) {
    t.popup.loading = !1, t.popup.loadingRelations = !1, t.popup.relations = e
  }).error(function() {
    t.$hide(), t.popup.loading = !1
  }), t.ok = function() {
    t.popup.loading = !0;
    var e = {
      cascade: "true" === t.popup.cascade
    };
    i({
      method: "DELETE",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.popup.model.id,
      params: e
    }).success(function() {
      t.$hide(), t.popup.loading = !1, t.addAlertPromise(o(r + ".ALERT.DELETE-CONFIRM"), "info"), t.returnToList()
    }).error(function() {
      t.$hide(), t.popup.loading = !1
    })
  }, t.cancel = function() {
    t.popup.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("UseAsNewVersionPopupCrtl", ["$rootScope", "$scope", "$http", "$translate", "$location", function(e, t, i, o, n) {
  var r, s;
  t.model.process ? (r = t.model.process, s = "PROCESS") : t.model.form ? (r = t.model.form, s = "FORM") : t.model.decisionTable ? (r = t.model.decisionTable, s = "DECISION-TABLE") : (r = t.model.app, s = "APP"), t.popup = {
    loading: !1,
    model: r,
    popupType: s,
    latestModelId: t.model.latestModelId,
    comment: ""
  }, t.ok = function() {
    t.popup.loading = !0;
    var e = {
      action: "useAsNewVersion",
      comment: t.popup.comment
    };
    i({
      method: "POST",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.popup.latestModelId + "/history/" + t.popup.model.id,
      data: e
    }).success(function(e) {
      var i = function() {
        "FORM" === s ? n.path("/forms/" + t.popup.latestModelId) : "APP" === s ? n.path("/apps/" + t.popup.latestModelId) : "DECISION-TABLE" === s ? n.path("/decision-tables/" + t.popup.latestModelId) : n.path("/processes/" + t.popup.latestModelId)
      };
      e && e.unresolvedModels && e.unresolvedModels.length > 0 ? (t.popup.loading = !1, t.popup.foundUnresolvedModels = !0, t.popup.unresolvedModels = e.unresolvedModels, t.close = function() {
        t.$hide(), i()
      }) : (t.popup.loading = !1, t.$hide(), t.addAlertPromise(o(s + ".ALERT.NEW-VERSION-CONFIRM"), "info"), i())
    }).error(function() {
      t.$hide(), t.popup.loading = !1
    })
  }, t.cancel = function() {
    t.popup.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("ShareModelPopupCrtl", ["$rootScope", "$scope", "$http", "$timeout", "$translate", "UserService", "EventTrackingService", function(e, t, i, o, n, r, s) {
  var a, l;
  t.model.process ? (a = t.model.process, l = "PROCESS") : t.model.form ? (a = t.model.form, l = "FORM") : t.model.decisionTable ? (a = t.model.decisionTable, l = "DECISION-TABLE") : t.model.stencil ? (a = t.model.stencil, l = "STENCIL") : (a = t.model.app, l = "APP"), t.popup = {
    loading: !1,
    popupType: l,
    model: a,
    comment: "",
    updated: {},
    removed: {},
    added: {},
    groupsAdded: {},
    recentUsers: []
  };
  var d;
  d = "STENCIL" === l ? ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + t.popup.model.id + "/share-info" : ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.popup.model.id + "/share-info", i({
    method: "GET",
    url: d
  }).success(function(e) {
    if (t.popup.shareInfo = e, t.currentlySharedUserIds = [], t.currentlySharedGroupIds = [], e && e.data && e.data.length > 0)
      for (var i = 0; e.data.length > i; i++) null !== e.data[i].person && void 0 !== e.data[i].person ? t.currentlySharedUserIds.push(e.data[i].person.id) : null !== e.data[i].group && void 0 !== e.data[i].group && t.currentlySharedGroupIds.push(e.data[i].group.id)
  }).error(function() {
    t.$hide(), t.popup.loading = !1
  }), t.setPermission = function(e, i) {
    if (i) e.permission = i, e.id && (t.popup.updated[e.id] = i);
    else {
      var o = t.popup.shareInfo.data;
      if (e.id ? (t.popup.removed[e.id] = !0, t.popup.updated[e.id] && delete t.popup.updated[e.id]) : e.person && e.person.id ? delete t.popup.added[e.person.id] : e.person.email ? delete t.popup.added[e.person.email] : e.group && e.group.id && delete t.popup.groupsAdded[e.group.id], e.person) {
        var n = t.currentlySharedUserIds.indexOf(e.person.id);
        n >= 0 && t.currentlySharedUserIds.splice(n, 1)
      } else if (e.group) {
        var r = t.currentlySharedGroupIds.indexOf(e.group.id);
        r >= 0 && t.currentlySharedGroupIds.splice(r, 1)
      }
      for (var s = 0; o.length > s; s++)
        if (o[s] == e) {
          o.splice(s, 1);
          break
        }
    }
  }, t.addEmailUser = function(e) {
    var i = {
      person: {
        email: e
      },
      permission: "read"
    };
    if (t.popup.shareInfo.data) {
      for (var o = 0; t.popup.shareInfo.data.length > o; o++)
        if (t.popup.shareInfo.data[o].email == e) return;
      t.popup.shareInfo.data.push(i), t.popup.added[e] = i
    } else t.popup.shareInfo.data = [i], t.popup.added[e] = i;
    t.popup.newPerson = void 0
  }, t.addRealUser = function(e) {
    var i = {
      person: e,
      permission: "read"
    };
    if (t.popup.shareInfo.data) {
      for (var o = 0; t.popup.shareInfo.data.length > o; o++)
        if (t.popup.shareInfo.data[o].person && t.popup.shareInfo.data[o].person.id == e.id) return;
      t.popup.shareInfo.data.splice(0, 0, i), t.popup.added[e.id] = i
    } else t.popup.shareInfo.data = [i], t.popup.added[e.id] = i;
    t.currentlySharedUserIds.push(e.id), t.popup.newPerson = void 0
  }, t.addGroup = function(e) {
    var i = {
      group: e,
      permission: "read"
    };
    if (t.popup.shareInfo.data) {
      for (var o = 0; t.popup.shareInfo.data.length > o; o++)
        if (t.popup.shareInfo.data[o].group && t.popup.shareInfo.data[o].group.id == e.id) return;
      t.popup.shareInfo.data.splice(0, 0, i), t.popup.groupsAdded[e.id] = i
    } else t.popup.shareInfo.data = [i], t.popup.groupsAdded[e.id] = i;
    t.currentlySharedGroupIds.push(e.id)
  }, t.ok = function() {
    t.popup.loading = !0;
    var e = {
      added: [],
      updated: [],
      removed: []
    };
    for (var o in t.popup.added)
      if (t.popup.added[o].person) {
        var r = t.popup.added[o].person;
        e.added.push({
          userId: r.id,
          email: r.email,
          permission: t.popup.added[o].permission
        })
      }
    for (var o in t.popup.groupsAdded)
      if (t.popup.groupsAdded[o].group) {
        var a = t.popup.groupsAdded[o].group;
        e.added.push({
          groupId: a.id,
          permission: t.popup.groupsAdded[o].permission
        })
      }
    for (var o in t.popup.removed) e.removed.push(o);
    for (var o in t.popup.updated) e.updated.push({
      id: o,
      permission: t.popup.updated[o]
    });
    delete Array.prototype.toJSON;
    var d;
    d = "STENCIL" === l ? ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + t.popup.model.id + "/share-info" : ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.popup.model.id + "/share-info", i({
      method: "PUT",
      url: d,
      data: e
    }).success(function() {
      t.$hide(), t.model.process ? s.trackEvent("editor", "process-model-shared") : t.model.form ? s.trackEvent("editor", "form-model-shared") : t.model.decisionTable ? s.trackEvent("editor", "decision-table-model-shared") : t.model.stencil ? s.trackEvent("editor", "stencil-model-shared") : s.trackEvent("editor", "app-model-shared"), t.popup.loading = !1, t.addAlertPromise(n(l + ".ALERT.SHARE-CONFIRM"), "info")
    }).error(function() {
      t.$hide(), t.popup.loading = !1
    })
  }, t.cancel = function() {
    t.popup.loading || t.$hide()
  }
}]), angular.module("activitiModeler").service("UtilityService", ["$window", "$document", "$timeout", function(e, t, i) {
  this.scrollToElement = function(o) {
    i(function() {
      var i = angular.element(document.getElementById(o))[0];
      i && i.getBoundingClientRect().top > e.innerHeight && t.scrollToElement(i, 0, 1e3)
    })
  }
}]), angular.module("activitiModeler").service("UserService", ["$http", "$q", function(e, t) {
  var i = function(i) {
    var o = t.defer();
    return e(i).success(function(e) {
      o.resolve(e)
    }).error(function(e) {
      o.reject(e)
    }), o.promise
  };
  this.getFilteredUsers = function(e, t, o) {
    var n = {
      filter: e
    };
    return t && (n.excludeTaskId = t), o && (n.exclusdeProcessId = o), i({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/workflow-users",
      params: n
    })
  }
}]), angular.module("activitiModeler").service("GroupService", ["$http", "$q", function(e, t) {
  var i = function(i) {
    var o = t.defer();
    return e(i).success(function(e) {
      o.resolve(e)
    }).error(function(e) {
      o.reject(e)
    }), o.promise
  };
  this.getFilteredGroups = function(e) {
    var t;
    return e && (t = {
      filter: e
    }), i({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/workflow-groups",
      params: t
    })
  }
}]), angular.module("activitiModeler").service("StencilService", ["$rootScope", "$http", "$q", function(e, t, i) {
  var o = function(e) {
    var o = i.defer();
    return t(e).success(function(e) {
      o.resolve(e)
    }).error(function(e) {
      console.log("Something went wrong during http call:" + e), o.reject(e)
    }), o.promise
  };
  this.fetchMyStencils = function(e) {
    var t = {
      status: 2,
      editable: !0
    };
    return e && (t.sort = e), o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets",
      params: t
    })
  }, this.fetchAllStencils = function(e) {
    var t = {
      status: 1,
      editable: !0
    };
    return e && (t.sort = e), o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets",
      params: t
    })
  }, this.fetchSharedStencils = function(e) {
    var t = {
      status: 3,
      editable: !0
    };
    return e && (t.sort = e), o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets",
      params: t
    })
  }, this.processStencilItemsFromServer = function(e) {
    if (e.stencilItems && e.stencilItems.length > 0) {
      for (var t = [], i = 0; e.stencilItems.length > i; i++) {
        var o = e.stencilItems[i];
        if (o.originatesFromServer = !0, o.tabs)
          for (var n = 0; o.tabs.length > n; n++) o.tabs[n].originatesFromServer = !0;
        if (void 0 === o.group || null === o.group || 0 === o.group.length) t.push(o);
        else {
          for (var r = void 0, n = 0; t.length > n; n++) {
            var s = t[n];
            if ("group" === s.type && s.name === o.group) {
              r = s;
              break
            }
          }
          r || (r = {
            name: o.group,
            type: "group",
            items: []
          }, t.push(r)), r.items.push(o)
        }
      }
      return t
    }
  }, this.fetchStencilDetails = function(e) {
    return o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + e
    })
  }, this.saveStencil = function(e, t) {
    var i = function(e, t) {
      (null === t || void 0 === t) && (t = []);
      for (var o = 0; e.length > o; o++) {
        var n = e[o];
        if (null !== n.items && void 0 != n.items) i(n.items, t);
        else if (null === n.removed || void 0 === n.removed || n.removed === !1) {
          if (delete n.isNewItem, delete n.originatesFromServer, n.tabs)
            for (var r = 0; n.tabs.length > r; r++) delete n.tabs[r].originatesFromServer;
          t.push(n)
        }
      }
      return t
    };
    if (e.stencilItems = i(t), e.removedStencilItems)
      for (var n = 0; e.removedStencilItems.length > n; n++)
        if (delete e.removedStencilItems[n].isNewItem, delete e.removedStencilItems[n].originatesFromServer, e.removedStencilItems[n].tabs)
          for (var r = 0; e.removedStencilItems[n].tabs.length > r; r++) delete e.removedStencilItems[n].tabs[r].originatesFromServer;
    return delete Array.prototype.toJSON, o({
      method: "PUT",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + e.id + "/editor",
      data: e
    })
  }, this.fetchStencilHistory = function(e) {
    return o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + e + "/history"
    })
  }, this.revertStencilToStencilHistory = function(e, t, i) {
    var n = {
      action: "useAsNewVersion",
      comment: i
    };
    return o({
      method: "POST",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + e + "/history/" + t,
      data: n
    })
  }, this.fetchStencilUsageCount = function(e) {
    return o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/count?stencilSetId=" + e
    })
  }, this.deleteStencil = function(e) {
    return o({
      method: "DELETE",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + e
    })
  }, this.deleteStencilItem = function(e, t, i) {
    e.removed = !0, t.push(e);
    var o, n = this.findGroupOfStencilItem(e, i);
    null !== n && void 0 !== n ? (o = this.findItemIndexInGroup(e, n), n.items.splice(o, 1)) : (o = this.findIndexOfRootStencilItem(e, i), i.splice(o, 1))
  }, this.findItemIndexInGroup = function(e, t) {
    if (t && t.items && t.items.length > 0)
      for (var i = 0; t.items.length > i; i++)
        if (t.items[i].id === e.id) return i;
    return void 0
  }, this.findGroupOfStencilItem = function(e, t) {
    if (t && t.length > 0)
      for (var i = 0; t.length > i; i++) {
        var o = t[i];
        if (o.type && "group" === o.type)
          for (var n = 0; o.items.length > n; n++)
            if (o.items[n].id === e.id) return o
      }
    return void 0
  }, this.findIndexOfGroup = function(e, t) {
    if (t && t.length > 0)
      for (var i = 0; t.length > i; i++) {
        var o = t[i];
        if (o.type && "group" === o.type && o.name === e) return i
      }
    return void 0
  }, this.findIndexOfRootStencilItem = function(e, t) {
    if (t && t.length)
      for (var i = 0; t.length > i; i++)
        if (t[i] === e) return i;
    return void 0
  }, this.findStencilItemWithIdInCollection = function(e, t) {
    var i = function(e) {
      if (!e || 0 == e.length) return void 0;
      for (var o = 0; e.length > o; o++) {
        var n = e[o];
        if (n.type && "group" === n.type) {
          var r = i(n.items);
          if (r) return r
        } else if (n.id === t) return n
      }
    };
    return t ? i(e) : void 0
  }, this.generateUniqueStencilItemId = function(e, t) {
    var i = t.name;
    (null === i || void 0 === i) && (i = ""), i = i.toLowerCase(), i = i.split(" ").join("_");
    for (var o = i, n = 1; void 0 !== this.findStencilItemWithIdInCollection(e, i);) i = o + n++;
    return i
  }
}]), angular.module("activitiModeler").controller("StencilsController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", function(e, t, i, o, n, r, s) {
  t.hasAccessKickstartCapability() || t.backToLanding(), e.setMainPageById("stencils"), t.model = {
    filters: [{
      id: "myStencils",
      labelKey: "MY-STENCILS"
    }, {
      id: "sharedWithMe",
      labelKey: "SHARED-WITH-ME"
    }, {
      id: "sharedWithOthers",
      labelKey: "SHARED-WITH-OTHERS"
    }, {
      id: "favorite",
      labelKey: "FAVORITES"
    }],
    sorts: [{
      id: "modifiedDesc",
      labelKey: "MODIFIED-DESC"
    }, {
      id: "modifiedAsc",
      labelKey: "MODIFIED-ASC"
    }, {
      id: "nameAsc",
      labelKey: "NAME-ASC"
    }, {
      id: "nameDesc",
      labelKey: "NAME-DESC"
    }]
  }, e.stencilFilter ? (t.model.activeFilter = e.stencilFilter.filter, t.model.activeSort = e.stencilFilter.sort, t.model.filterText = e.stencilFilter.filterText, t.model.pendingFilterText = t.model.filterText) : (t.model.activeFilter = t.model.filters[0], t.model.activeSort = t.model.sorts[0], e.stencilFilter = {
    filter: t.model.activeFilter,
    sort: t.model.activeSort,
    filterText: ""
  }), t.activateFilter = function(i) {
    t.model.activeFilter = i, e.stencilFilter.filter = i, t.loadStencils()
  }, t.activateSort = function(i) {
    t.model.activeSort = i, e.stencilFilter.sort = i, t.loadStencils()
  }, t.loadStencils = function() {
    t.model.loading = !0;
    var e = {
      filter: t.model.activeFilter.id,
      sort: t.model.activeSort.id
    };
    t.model.filterText && "" != t.model.filterText && (e.filterText = t.model.filterText), o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets",
      params: e
    }).success(function(e) {
      t.model.stencils = e, t.model.loading = !1
    }).error(function() {
      t.model.loading = !1
    })
  };
  var a = function() {
    t.model.isFilterDelayed = !0, n(function() {
      t.model.isFilterDelayed = !1, t.model.isFilterUpdated ? (t.model.isFilterUpdated = !1, a()) : (t.model.filterText = t.model.pendingFilterText, e.stencilFilter.filterText = t.model.filterText, t.loadStencils())
    }, 500)
  };
  t.filterDelayed = function() {
    t.model.isFilterDelayed ? t.model.isFilterUpdated = !0 : a()
  }, t.createStencil = function() {
    _internalCreateModal({
      template: "views/popup/stencil-create.html?version=" + Date.now()
    }, s, t)
  }, t.importStencil = function() {
    _internalCreateModal({
      template: "views/popup/stencil-import.html?version=" + Date.now()
    }, s, t)
  }, t.showStencilDetails = function(e) {
    e && r.path("/stencils/" + e.id)
  }, t.editStencilDetails = function(e) {
    e && r.path("/stencil-editor/" + e.id)
  }, t.loadStencils()
}]), angular.module("activitiModeler").controller("ImportStencilCtrl", ["$rootScope", "$scope", "$http", "Upload", "$location", "EventTrackingService", function(e, t, i, o, n) {
  t.model = {
    loading: !1
  }, t.onFileSelect = function(e, i) {
    for (var r = 0; e.length > r; r++) {
      var s, a = e[r];
      s = i ? ACTIVITI.CONFIG.contextRoot + "/app/rest/import-stencil/text" : ACTIVITI.CONFIG.contextRoot + "/app/rest/import-stencil", o.upload({
        url: s,
        method: "POST",
        file: a
      }).progress(function(e) {
        t.model.loading = !0, t.model.uploadProgress = parseInt(100 * e.loaded / e.total)
      }).success(function(e) {
        t.model.loading = !1, n.path("/stencils/" + e.id), t.$hide()
      }).error(function(e) {
        e && e.message && (t.model.errorMessage = e.message), t.model.error = !0, t.model.loading = !1
      })
    }
  }, t.cancel = function() {
    t.model.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("StencilDetailsCtrl", ["$rootScope", "$scope", "$translate", "$http", "$location", "$routeParams", "$modal", "$popover", "$timeout", "StencilService", function(e, t, i, o, n, r, s, a, l, d) {
  e.setMainPageById("stencils"), t.model = {
    latestStencilId: r.stencilId,
    expandedGroups: [],
    executionListeners: [],
    variables: [],
    scriptFiles: []
  }, t.loadStencil = function() {
    var e;
    r.stencilHistoryId ? e = ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + r.stencilId + "/history/" + r.stencilHistoryId : (e = ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + r.stencilId, t.model.stencilDownloadUrl = ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + r.stencilId + "/export?version=" + Date.now()), o({
      method: "GET",
      url: e
    }).success(function(e) {
      t.model.stencil = e, t.model.stencilItems = d.processStencilItemsFromServer(e), t.model.removedStencilItems = e.removedStencilItems, t.loadComments(), t.loadVersions()
    }).error(function() {
      t.returnToList()
    })
  }, t.useAsNewVersion = function() {
    _internalCreateModal({
      template: "views/popup/stencil-use-as-new-version.html",
      scope: t
    }, s, t)
  }, t.toggleFavorite = function() {
    t.model.favoritePending = !0;
    var e = {
      id: t.model.stencil.id,
      favorite: !t.model.stencil.favorite
    };
    o({
      method: "PUT",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + t.model.latestStencilId,
      data: e
    }).success(function() {
      t.model.favoritePending = !1, t.model.stencil.favorite ? t.addAlertPromise(i("STENCIL.ALERT.UN-FAVORITE-CONFIRM"), "info") : t.addAlertPromise(i("STENCIL.ALERT.FAVORITE-CONFIRM"), "info"), t.model.stencil.favorite = !t.model.stencil.favorite
    }).error(function() {
      t.model.favoritePending = !1
    })
  }, t.loadVersions = function() {
    var e = {
      includeLatestVersion: !t.model.stencil.latestVersion
    };
    o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + t.model.latestStencilId + "/history",
      params: e
    }).success(function(e) {
      t.model.stencil.latestVersion && (e.data || (e.data = []), e.data.unshift(t.model.stencil)), t.model.versions = e
    })
  }, t.showVersion = function(e) {
    e && (e.latestVersion ? n.path("/stencils/" + t.model.latestStencilId) : n.path("/stencils/" + t.model.latestStencilId + "/history/" + e.id))
  }, t.returnToList = function() {
    n.path("/stencils/")
  }, t.editStencil = function() {
    _internalCreateModal({
      template: "views/popup/stencil-details-edit.html",
      scope: t
    }, s, t)
  }, t.deleteStencil = function() {
    _internalCreateModal({
      template: "views/popup/stencil-delete.html",
      scope: t
    }, s, t)
  }, t.shareStencil = function() {
    _internalCreateModal({
      template: "views/popup/model-share.html",
      scope: t
    }, s, t)
  }, t.openEditor = function() {
    t.model.stencil && n.path("/stencil-editor/" + t.model.stencil.id)
  }, t.loadComments = function() {
    var e = {
      latestFirst: !0
    };
    o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + t.model.latestStencilId + "/comments",
      params: e
    }).success(function(e) {
      t.model.comments = e
    })
  }, t.toggleComments = function(e) {
    if (!t.commentsState) {
      var i = {};
      t.commentsState = i, i.popover = a(angular.element(e.target), {
        template: "views/popover/stencil-comments.html",
        placement: "bottom-right",
        show: !0,
        scope: t,
        container: "body"
      });
      var o = function() {
        i.popover.destroy(), delete t.commentsState
      };
      i.popover.$scope.$on("tooltip.hide", o), t.$on("$destroy", o)
    }
  }, t.toggleHistory = function(e) {
    if (!t.historyState) {
      var i = {};
      t.historyState = i, i.popover = a(angular.element(e.target), {
        template: "views/popover/stencil-history.html",
        placement: "bottom-right",
        show: !0,
        scope: t,
        container: "body"
      });
      var o = function() {
        i.popover.destroy(), delete t.historyState
      };
      i.popover.$scope.$on("tooltip.hide", o), t.$on("$destroy", o)
    }
  }, t.collapseGroup = function(e) {
    var i = t.model.expandedGroups.indexOf(e);
    i >= 0 && t.model.expandedGroups.splice(i, 1)
  }, t.expandGroup = function(e) {
    var i = t.model.expandedGroups.indexOf(e);
    0 > i && t.model.expandedGroups.push(e)
  }, t.isGroupExpanded = function(e) {
    return t.model.expandedGroups.indexOf(e) >= 0
  }, t.toggleGroupCollapseState = function(e) {
    var i = t.model.expandedGroups.indexOf(e);
    i >= 0 ? t.collapseGroup(e) : t.expandGroup(e)
  }, t.clearGroupSelection = function() {
    if (delete t.model.activeGroup, t.model.stencilItems)
      for (var e = 0; t.model.stencilItems.length > e; e++) t.model.stencilItems[e].selected && (t.model.stencilItems[e].selected = !1)
  }, t.clearItemSelection = function() {
    delete t.model.activeStencilItem
  }, t.clearSelection = function() {
    t.clearGroupSelection(), t.clearItemSelection()
  }, t.showGroupDetails = function(e) {
    t.expandGroup(e), t.clearSelection(), t.model.activeGroup = e
  }, t.showItemDetails = function(e) {
    t.clearSelection(), t.model.activeStencilItem = e, !t.model.activeStencilItem.customStencilItem || t.model.activeStencilItem.customStencilItem.customType && 0 != t.model.activeStencilItem.customStencilItem.customType.length || (t.model.activeStencilItem.customStencilItem.customType = "Service task"), t.model.executionListeners.length = 0, t.model.activeStencilItem.customStencilItem && t.model.activeStencilItem.customStencilItem.executionListeners && t.model.activeStencilItem.customStencilItem.executionListeners.length > 0 && Array.prototype.push.apply(t.model.executionListeners, t.model.activeStencilItem.customStencilItem.executionListeners), t.model.variables.length = 0, t.model.activeStencilItem.customStencilItem && t.model.activeStencilItem.customStencilItem.variables && t.model.activeStencilItem.customStencilItem.variables.length > 0 && Array.prototype.push.apply(t.model.variables, t.model.activeStencilItem.customStencilItem.variables), t.model.scriptFiles.length = 0, Array.prototype.push.apply(t.model.scriptFiles, t.model.activeStencilItem.scriptFiles)
  }, t.loadStencil()
}]), angular.module("activitiModeler").controller("StencilSetAddCommentPopupCrtl", ["$rootScope", "$scope", "$http", "$timeout", "$translate", "EventTrackingService", function(e, t, i, o, n, r) {
  t.popup = {
    loading: !1
  }, t.ok = function() {
    t.popup.loading = !0;
    var e = {
      message: t.popup.message
    };
    i({
      method: "POST",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + t.model.stencil.id + "/comments",
      data: e
    }).success(function() {
      t.addAlertPromise(n("STENCIL.ALERT.COMMENT-ADDED-CONFIRM"), "info"), t.loadComments(), r.trackEvent("editor", "stencil-model-add-comment"), t.popup.loading = !1, t.popup.message = void 0
    }).error(function() {
      t.popup.loading = !1
    })
  }
}]), angular.module("activitiModeler").controller("StencilUseAsNewVersionPopupCtrl", ["$rootScope", "$scope", "$http", "$translate", "$location", function(e, t, i, o, n) {
  t.popup = {
    loading: !1,
    comment: ""
  }, t.ok = function() {
    t.popup.loading = !0;
    var e = {
      action: "useAsNewVersion",
      comment: t.popup.comment
    };
    i({
      method: "POST",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + t.model.stencil.stencilSetId + "/history/" + t.model.stencil.id,
      data: e
    }).success(function() {
      t.$hide(), t.popup.loading = !1, t.addAlertPromise(o("STENCIL.ALERT.NEW-VERSION-CONFIRM"), "info"), n.path("/stencils/" + t.model.stencil.stencilSetId)
    }).error(function() {
      t.$hide(), t.popup.loading = !1
    })
  }, t.cancel = function() {
    t.popup.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("StencilItemDetailsCtrl", ["$rootScope", "$scope", "$modal", "$q", "$translate", "StencilService", function(e, t, i, o, n) {
  t.getStencilGroups = function() {
    for (var t = [], i = 0; e.currentStencilItems.length > i; i++) {
      var o = e.currentStencilItems[i];
      o.type && "group" === o.type && t.push(o.name)
    }
    return t
  }, t.showProperties = function() {
    var e;
    e = 2 === t.model.stencil.stencilType ? "views/popup/stencil-step-properties-details.html" : 3 === t.model.stencil.stencilType ? "views/popup/stencil-form-properties-details.html" : "views/popup/stencil-properties-details.html", _internalCreateModal({
      scope: t,
      template: e + "?version=" + Date.now()
    }, i, t)
  }, t.showComponentController = function() {
    _internalCreateModal({
      scope: t,
      template: "views/popup/stencil-component-controller-details.html?version=" + Date.now()
    }, i, t)
  }, t.translationsRetrieved = !1, t.labels = {};
  var r = n("PROPERTY.EXECUTIONLISTENERS.EVENT"),
    s = n("PROPERTY.EXECUTIONLISTENERS.FIELDS.IMPLEMENTATION"),
    a = n("PROPERTY.EXECUTION.VARIABLES.VARIABLENAME.LABEL"),
    l = n("PROPERTY.EXECUTION.VARIABLES.VARIABLETYPE.LABEL"),
    d = n("STENCILS.ITEM.SCRIPT-FILES.NAME"),
    c = n("STENCILS.ITEM.SCRIPT-FILES.FILENAME"),
    p = n("STENCILS.ITEM.SCRIPT-FILES.CREATED-BY"),
    u = n("STENCILS.ITEM.SCRIPT-FILES.CREATED-AT");
  o.all([r, s, a, l, d, c, p, u]).then(function(e) {
    var i = 0;
    t.labels.executionListenerEventLabel = e[i++], t.labels.executionListenerImplementationLabel = e[i++], t.labels.variableNameLabel = e[i++], t.labels.variableTypeLabel = e[i++], t.labels.nameLabel = e[i++], t.labels.filenameLabel = e[i++], t.labels.createdByLabel = e[i++], t.labels.createdAtLabel = e[i++], t.translationsRetrieved = !0, t.executionListenerGridOptions = {
      data: t.model.executionListeners,
      headerRowHeight: 28,
      enableRowSelection: !0,
      enableRowHeaderSelection: !1,
      multiSelect: !1,
      modifierKeysToMultiSelect: !1,
      enableHorizontalScrollbar: 0,
      enableColumnMenus: !1,
      enableSorting: !1,
      columnDefs: [{
        field: "event",
        displayName: t.labels.executionListenerEventLabel
      }, {
        field: "implementation",
        displayName: t.labels.executionListenerImplementationLabel
      }]
    }, t.executionListenerGridOptions.onRegisterApi = function(e) {
      t.executionListenerGridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
        t.selectedExecutionListener = e.isSelected ? e.entity : void 0
      })
    }, t.variableGridOptions = {
      data: t.model.variables,
      headerRowHeight: 28,
      enableRowSelection: !0,
      enableRowHeaderSelection: !1,
      multiSelect: !1,
      modifierKeysToMultiSelect: !1,
      enableHorizontalScrollbar: 0,
      enableColumnMenus: !1,
      enableSorting: !1,
      columnDefs: [{
        field: "name",
        displayName: t.labels.variableNameLabel
      }, {
        field: "type",
        displayName: t.labels.variableTypeLabel
      }]
    }, t.importLibOptions = {
      data: t.model.scriptFiles,
      headerRowHeight: 28,
      enableRowSelection: !1,
      enableRowHeaderSelection: !1,
      multiSelect: !1,
      modifierKeysToMultiSelect: !1,
      enableHorizontalScrollbar: 0,
      enableColumnMenus: !1,
      enableSorting: !1,
      columnDefs: [{
        field: "name",
        displayName: t.labels.nameLabel
      }, {
        field: "filename",
        displayName: t.labels.filenameLabel
      }, {
        field: "createdByFullName",
        displayName: t.labels.createdByLabel
      }, {
        field: "created",
        displayName: t.labels.createdAtLabel,
        cellFilter: "date:'dd-MM-yyyy HH:mm'"
      }]
    }
  })
}]), angular.module("activitiModeler").controller("StencilItemEditCtrl", ["$rootScope", "$scope", "$modal", "$http", "$translate", "$q", "$timeout", "StencilService", function(e, t, i, o, n, r, s, a) {
  t.canMoveItem = function(i) {
    var o = t.model.activeStencilItem;
    if (o) {
      var n, r = a.findGroupOfStencilItem(o, e.currentStencilItems);
      return null !== r && void 0 !== r ? r.items && 0 != r.items.length ? (n = a.findItemIndexInGroup(o, r), "up" === i ? n > 0 : r.items.length - 1 > n) : !1 : (n = a.findIndexOfRootStencilItem(o, e.currentStencilItems), "up" === i ? n > 0 : e.currentStencilItems.length - 1 > n)
    }
    return !1
  }, t.moveItem = function(i) {
    var o = t.model.activeStencilItem;
    if (null !== o && void 0 !== o) {
      var n = a.findGroupOfStencilItem(o, e.currentStencilItems);
      if (n) {
        var r = a.findItemIndexInGroup(o, n);
        if (null !== r && void 0 !== r && r >= 0) {
          var s = n.items[r];
          "up" === i ? (n.items[r] = n.items[r - 1], n.items[r - 1] = s) : (n.items[r] = n.items[r + 1], n.items[r + 1] = s)
        }
      } else {
        r = a.findIndexOfRootStencilItem(o, e.currentStencilItems);
        var s = e.currentStencilItems[r];
        "up" === i ? (e.currentStencilItems[r] = e.currentStencilItems[r - 1], e.currentStencilItems[r - 1] = s) : (e.currentStencilItems[r] = e.currentStencilItems[r + 1], e.currentStencilItems[r + 1] = s)
      }
    }
  }, t.deleteItem = function() {
    a.deleteStencilItem(t.model.activeStencilItem, t.model.removedStencilItems, e.currentStencilItems), t.clearSelection()
  }, t.itemNameChanged = function() {
    (t.model.activeStencilItem.originatesFromServer === !1 || void 0 === t.model.activeStencilItem.originatesFromServer) && (t.model.activeStencilItem.id = a.generateUniqueStencilItemId(e.currentStencilItems, t.model.activeStencilItem))
  }, t.changeItemIcon = function() {
    _internalCreateModal({
      template: "views/popup/stencil-item-icon-upload.html",
      scope: t
    }, i, t)
  }, t.getStencilGroups = function() {
    for (var t = [], i = 0; e.currentStencilItems.length > i; i++) {
      var o = e.currentStencilItems[i];
      o.type && "group" === o.type && t.push(o.name)
    }
    return t
  }, t.stencilItemGroupChanged = function() {
    var i = a.findGroupOfStencilItem(t.model.activeStencilItem, e.currentStencilItems);
    if (null !== i && void 0 !== i) {
      var o = a.findItemIndexInGroup(t.model.activeStencilItem, i);
      i.items.splice(o, 1)
    } else e.currentStencilItems.splice(a.findIndexOfRootStencilItem(t.model.activeStencilItem, e.currentStencilItems), 1);
    var n = e.currentStencilItems[a.findIndexOfGroup(t.model.activeStencilItem.group, e.currentStencilItems)];
    n.items.push(t.model.activeStencilItem), t.expandGroup(n)
  }, t.removeFromGroup = function() {
    var i = a.findGroupOfStencilItem(t.model.activeStencilItem, e.currentStencilItems);
    if (null !== i && void 0 !== i) {
      var o = a.findItemIndexInGroup(t.model.activeStencilItem, i);
      i.items.splice(o, 1)
    }
    delete t.model.activeStencilItem.group, e.currentStencilItems.push(t.model.activeStencilItem)
  }, t.addNewExecutionListener = function() {
    var e = {
      event: "start",
      className: "",
      expression: "",
      delegateExpression: ""
    };
    t.model.executionListeners.push(e), t.model.activeStencilItem.customStencilItem.executionListeners || (t.model.activeStencilItem.customStencilItem.executionListeners = []), t.model.activeStencilItem.customStencilItem.executionListeners.push(e), t.selectedExecutionListener = e, s(function() {
      t.executionListenerGridApi.selection.toggleRowSelection(t.model.executionListeners[t.model.executionListeners.length - 1])
    })
  }, t.removeExecutionListener = function() {
    if (t.selectedExecutionListener) {
      var e = t.model.activeStencilItem.customStencilItem.executionListeners.indexOf(t.selectedExecutionListener);
      t.model.activeStencilItem.customStencilItem.executionListeners.splice(e, 1);
      var e = t.model.executionListeners.indexOf(t.selectedExecutionListener);
      t.model.executionListeners.splice(e, 1), t.selectedExecutionListener = void 0, s(function() {
        t.model.executionListeners.length > 0 && t.executionListenerGridApi.selection.toggleRowSelection(t.model.executionListeners[0])
      })
    }
  }, t.executionListenerDetailsChanged = function() {
    t.selectedExecutionListener.implementation = "" !== t.selectedExecutionListener.className ? t.selectedExecutionListener.className : "" !== t.selectedExecutionListener.expression ? t.selectedExecutionListener.expression : "" !== t.selectedExecutionListener.delegateExpression ? t.selectedExecutionListener.delegateExpression : ""
  }, t.addNewVariable = function() {
    var e = {
      name: "",
      type: "string"
    };
    t.model.variables.push(e), t.model.activeStencilItem.customStencilItem.variables || (t.model.activeStencilItem.customStencilItem.variables = []), t.model.activeStencilItem.customStencilItem.variables.push(e), t.selectedVariable = e, s(function() {
      t.variableGridApi.selection.toggleRowSelection(t.model.variables[t.model.variables.length - 1])
    })
  }, t.removeVariable = function() {
    if (t.selectedVariable) {
      var e = t.model.activeStencilItem.customStencilItem.variables.indexOf(t.selectedVariable);
      t.model.activeStencilItem.customStencilItem.variables.splice(e, 1);
      var e = t.model.variables.indexOf(t.selectedVariable);
      t.model.variables.splice(e, 1), t.selectedVariable = void 0, s(function() {
        t.model.variables.length > 0 && t.variableGridApi.selection.toggleRowSelection(t.model.variables[0])
      })
    }
  }, t.editComponentController = function() {
    _internalCreateModal({
      scope: t,
      template: "views/popup/stencil-component-controller.html?version=" + Date.now()
    }, i, t)
  }, t.addNewScriptFile = function() {
    _internalCreateModal({
      scope: t,
      template: "views/popup/stencil-script-file-upload.html?version=" + Date.now()
    }, i, t)
  }, t.removeScriptFile = function() {
    t.selectedScriptFile && o({
      method: "DELETE",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + e.currentStencil.id + "/script-files/" + t.selectedScriptFile.id
    }).success(function() {
      var e = t.model.activeStencilItem.scriptFiles.indexOf(t.selectedScriptFile);
      t.model.activeStencilItem.scriptFiles.splice(e, 1);
      var e = t.model.scriptFiles.indexOf(t.selectedScriptFile);
      t.model.scriptFiles.splice(e, 1), t.selectedScriptFile = void 0, s(function() {
        t.model.scriptFiles.length > 0 && t.importLibGridApi.selection.toggleRowSelection(t.model.scriptFiles[0])
      })
    }).error(function() {})
  }, t.editProperties = function(e) {
    var o;
    o = 2 === e ? "views/popup/stencil-step-properties-edit.html" : 3 === e ? "views/popup/stencil-form-properties-edit.html" : "views/popup/stencil-properties-edit.html", _internalCreateModal({
      scope: t,
      template: o + "?version=" + Date.now()
    }, i, t)
  }, t.selectedScriptFile = void 0, t.translationsRetrieved = !1, t.labels = {};
  var l = n("PROPERTY.EXECUTIONLISTENERS.EVENT"),
    d = n("PROPERTY.EXECUTIONLISTENERS.FIELDS.IMPLEMENTATION"),
    c = n("PROPERTY.EXECUTION.VARIABLES.VARIABLENAME.LABEL"),
    p = n("PROPERTY.EXECUTION.VARIABLES.VARIABLETYPE.LABEL"),
    u = n("STENCILS.ITEM.SCRIPT-FILES.NAME"),
    h = n("STENCILS.ITEM.SCRIPT-FILES.FILENAME"),
    m = n("STENCILS.ITEM.SCRIPT-FILES.CREATED-BY"),
    f = n("STENCILS.ITEM.SCRIPT-FILES.CREATED-AT");
  r.all([l, d, c, p, u, h, m, f]).then(function(e) {
    var i = 0;
    t.labels.executionListenerEventLabel = e[i++], t.labels.executionListenerImplementationLabel = e[i++], t.labels.variableNameLabel = e[i++], t.labels.variableTypeLabel = e[i++], t.labels.nameLabel = e[i++], t.labels.filenameLabel = e[i++], t.labels.createdByLabel = e[i++], t.labels.createdAtLabel = e[i++], t.translationsRetrieved = !0, t.executionListenerGridOptions = {
      data: t.model.executionListeners,
      headerRowHeight: 28,
      enableRowSelection: !0,
      enableRowHeaderSelection: !1,
      multiSelect: !1,
      modifierKeysToMultiSelect: !1,
      enableHorizontalScrollbar: 0,
      enableColumnMenus: !1,
      enableSorting: !1,
      columnDefs: [{
        field: "event",
        displayName: t.labels.executionListenerEventLabel
      }, {
        field: "implementation",
        displayName: t.labels.executionListenerImplementationLabel
      }]
    }, t.executionListenerGridOptions.onRegisterApi = function(e) {
      t.executionListenerGridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
        e.isSelected ? (t.selectedExecutionListener = e.entity, t.selectedExecutionListener.implementation = "" !== t.selectedExecutionListener.className ? t.selectedExecutionListener.className : "" !== t.selectedExecutionListener.expression ? t.selectedExecutionListener.expression : "" !== t.selectedExecutionListener.delegateExpression ? t.selectedExecutionListener.delegateExpression : "") : t.selectedExecutionListener = void 0
      })
    }, t.variableGridOptions = {
      data: t.model.variables,
      headerRowHeight: 28,
      enableRowSelection: !0,
      enableRowHeaderSelection: !1,
      multiSelect: !1,
      modifierKeysToMultiSelect: !1,
      enableHorizontalScrollbar: 0,
      enableColumnMenus: !1,
      enableSorting: !1,
      columnDefs: [{
        field: "name",
        displayName: t.labels.variableNameLabel
      }, {
        field: "type",
        displayName: t.labels.variableTypeLabel
      }]
    }, t.variableGridOptions.onRegisterApi = function(e) {
      t.variableGridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
        t.selectedVariable = e.isSelected ? e.entity : void 0
      })
    }, t.importLibOptions = {
      data: t.model.scriptFiles,
      headerRowHeight: 28,
      enableRowSelection: !0,
      enableRowHeaderSelection: !1,
      multiSelect: !1,
      modifierKeysToMultiSelect: !1,
      enableHorizontalScrollbar: 0,
      enableColumnMenus: !1,
      enableSorting: !1,
      columnDefs: [{
        field: "name",
        displayName: t.labels.nameLabel
      }, {
        field: "filename",
        displayName: t.labels.filenameLabel
      }, {
        field: "createdByFullName",
        displayName: t.labels.createdByLabel
      }, {
        field: "created",
        displayName: t.labels.createdAtLabel,
        cellFilter: "date:'dd-MM-yyyy HH:mm'"
      }]
    }, t.importLibOptions.onRegisterApi = function(e) {
      t.importLibGridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
        t.selectedScriptFile = e.isSelected ? e.entity : void 0
      })
    }
  })
}]), angular.module("activitiModeler").controller("StencilComponentControllerCtrl", ["$rootScope", "$scope", "$http", function(e, t) {
  t.close = function() {
    t.$hide()
  }
}]), angular.module("activitiModeler").controller("UploadScriptFileCtrl", ["$rootScope", "$scope", "Upload", function(e, t, i) {
  t.popup = {
    scriptFile: {
      name: ""
    },
    loading: !1
  }, t.onFileSelect = function(o) {
    for (var n = 0; o.length > n; n++) {
      var r = o[n],
        s = ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + e.currentStencil.id + "/script-files?name=" + t.popup.scriptFile.name;
      i.upload({
        url: s,
        method: "POST",
        file: r
      }).progress(function(e) {
        t.popup.loading = !0, t.popup.uploadProgress = parseInt(100 * e.loaded / e.total)
      }).success(function(e) {
        t.popup.loading = !1, t.model.activeStencilItem.scriptFiles || (t.model.activeStencilItem.scriptFiles = []), t.model.activeStencilItem.scriptFiles.push(e), t.model.scriptFiles.push(e), t.$hide()
      }).error(function(e) {
        e && e.message && (t.popup.errorMessage = e.message), t.popup.error = !0, t.popup.loading = !1
      })
    }
  }, t.cancel = function() {
    t.popup.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("StencilGroupEditCtrl", ["$rootScope", "$scope", "$modal", "StencilService", function(e, t, i, o) {
  t.canMoveGroup = function(i) {
    if (null !== t.model.activeGroup && void 0 !== t.model.activeGroup) {
      var n = o.findIndexOfGroup(t.model.activeGroup.name, e.currentStencilItems);
      return "up" === i ? n > 0 : e.currentStencilItems.length - 1 > n
    }
    return !1
  }, t.moveGroup = function(i) {
    if (null !== t.model.activeGroup && void 0 !== t.model.activeGroup) {
      var n = o.findIndexOfGroup(t.model.activeGroup.name, e.currentStencilItems);
      if (null !== n && void 0 !== n && n >= 0) {
        var r = e.currentStencilItems[n];
        "up" === i ? (e.currentStencilItems[n] = e.currentStencilItems[n - 1], e.currentStencilItems[n - 1] = r) : (e.currentStencilItems[n] = e.currentStencilItems[n + 1], e.currentStencilItems[n + 1] = r)
      }
    }
  }, t.groupNameChanged = function() {
    if (t.model.activeGroup.items && t.model.activeGroup.items.length > 0)
      for (var e = 0; t.model.activeGroup.items.length > e; e++) t.model.activeGroup.items[e].group = t.model.activeGroup.name
  }, t.deleteGroup = function() {
    if (t.model.activeGroup.items && t.model.activeGroup.items.length > 0)
      for (; t.model.activeGroup.items.length > 0;) o.deleteStencilItem(t.model.activeGroup.items[0], t.model.removedStencilItems, e.currentStencilItems);
    var i = o.findIndexOfGroup(t.model.activeGroup.name, e.currentStencilItems);
    e.currentStencilItems.splice(i, 1), t.clearSelection()
  }
}]), angular.module("activitiModeler").controller("StencilPropertiesCtrl", ["$scope", function(e) {
  e.findRestoreProperties = function() {
    var t = [];
    if (e.model.activeStencilItem.stencilProperties)
      for (var i = 0; e.model.activeStencilItem.stencilProperties.length > i; i++) e.model.activeStencilItem.stencilProperties[i].removed && t.push(e.model.activeStencilItem.stencilProperties[i]);
    e.model.candidateRestoreProperties = t
  }, e.showPropertyDetails = function(t) {
    e.clearPropertyValues(), e.model.activeStencilProperty = t
  }, e.addNewProperty = function() {
    e.clearPropertyValues(), e.model.newStencilProperty = {
      name: "",
      description: "",
      type: "String",
      customStencilProperty: {
        customProperty: !0
      }
    }
  }, e.restoreProperty = function() {
    e.clearPropertyValues(), e.model.restoreProperties = e.model.candidateRestoreProperties
  }, e.saveNewProperty = function() {
    if (0 != e.model.newStencilProperty.name.length) {
      if (delete e.model.propertyIdNotUniqueError, t(e.model.newStencilProperty.id)) return e.model.propertyIdNotUniqueError = !0, void 0;
      e.model.activeStencilItem.stencilProperties.push(e.model.newStencilProperty), e.clearPropertyValues()
    }
  }, e.addExistingProperty = function() {
    e.clearPropertyValues();
    var t = [];
    if (e.model.activeStencilItem.stencilProperties)
      for (var o = 0; e.model.activeStencilItem.stencilProperties.length > o; o++) t.push(e.model.activeStencilItem.stencilProperties[o].id);
    e.model.existingProperties = i(t)
  }, e.cancelPropertyEdit = function() {
    e.clearPropertyValues()
  }, e.saveAddExistingProperty = function() {
    e.model.existingStencilProperty && e.model.existingStencilProperty.id && (e.model.activeStencilItem.stencilProperties || (e.model.activeStencilItem.stencilProperties = []), e.model.activeStencilItem.stencilProperties.push(e.model.existingStencilProperty), e.clearPropertyValues())
  }, e.saveRestoreProperty = function() {
    0 != e.model.restoreStencilProperty.name.length && (e.model.restoreStencilProperty.removed = !1, e.findRestoreProperties(), e.clearPropertyValues())
  }, e.selectCandidateProperty = function(t) {
    e.model.existingStencilProperty = t
  }, e.selectRestoreProperty = function(t) {
    e.model.restoreStencilProperty = t
  }, e.clearPropertyValues = function() {
    e.model.newStencilProperty = void 0, e.model.existingProperties = void 0, e.model.existingStencilProperty = void 0, e.model.restoreProperties = void 0, e.model.restoreStencilProperty = void 0, e.model.activeStencilProperty = void 0
  };
  var t = function(t) {
      var i = function(e) {
        if (!e || 0 == e.length) return void 0;
        for (var o = 0; e.length > o; o++) {
          var n = e[o];
          if (n.type && "group" === n.type) {
            var r = i(n.items);
            if (r) return r
          } else if (n.stencilProperties && n.stencilProperties.length > 0)
            for (var s = 0; n.stencilProperties.length > s; s++)
              if (n.stencilProperties[s].id === t) return n.stencilProperties[s]
        }
      };
      return t ? i(e.model.stencilItems) : !0
    },
    i = function(t) {
      var i = [],
        o = [],
        n = function(e) {
          if (!e || 0 == e.length) return void 0;
          for (var r = 0; e.length > r; r++) {
            var s = e[r];
            if (s.type && "group" === s.type) {
              var a = n(s.items);
              if (a) return a
            } else if (s.stencilProperties && s.stencilProperties.length > 0)
              for (var l = 0; s.stencilProperties.length > l; l++) 0 > o.indexOf(s.stencilProperties[l].id) && 0 > t.indexOf(s.stencilProperties[l].id) && (i.push(s.stencilProperties[l]), o.push(s.stencilProperties[l].id))
          }
        },
        r = function(e, t) {
          return e.name < t.name ? -1 : e.name > t.name ? 1 : 0
        };
      return n(e.model.stencilItems), i.sort(r)
    },
    o = function(t) {
      for (var i = e.model.activeStencilItem.stencilProperties, o = 0; i.length > o; o++)
        if (i[o].id === t.id) return o;
      return void 0
    };
  e.canMoveProperty = function(t) {
    var i = e.model.activeStencilProperty;
    if (i) {
      var n = o(i);
      return "up" === t ? n > 0 : e.model.activeStencilItem.stencilProperties.length - 1 > n
    }
    return !1
  }, e.moveProperty = function(t) {
    var i = e.model.activeStencilProperty;
    if (i) {
      var n = o(i);
      if (null !== n && void 0 !== n && n >= 0) {
        var r = e.model.activeStencilItem.stencilProperties;
        "up" === t ? (r[n] = r[n - 1], r[n - 1] = i) : (r[n] = r[n + 1], r[n + 1] = i), e.model.activeStencilItem.stencilProperties = r
      }
    }
  }, e.deleteProperty = function() {
    e.model.activeStencilProperty.removed = !0, e.model.activeStencilProperty = void 0, e.findRestoreProperties()
  }, e.close = function() {
    e.model.activeStencilProperty = void 0, e.model.newStencilProperty = void 0, e.model.existingProperties = void 0, e.$hide()
  }, e.findRestoreProperties()
}]), angular.module("activitiModeler").controller("StencilStepPropertiesCtrl", ["$scope", function(e) {
  e.propertyTabs = e.model.activeStencilItem.tabs, e.activeTab = e.propertyTabs[0], e.tabClicked = function(t) {
    e.activeTab = t, e.currentStencilProperties = e.activeTab.stencilProperties, e.model.activeStencilProperty = void 0
  }, e.addNewTab = function() {
    var t = {
      id: "tab",
      name: "Tab",
      stencilProperties: []
    };
    e.propertyTabs.push(t), e.tabClicked(t)
  }, e.tabNameChanged = function() {
    (void 0 === e.activeTab.originatesFromServer || e.activeTab.originatesFromServer === !1) && (e.activeTab.id = e.generateIdForTab(e.activeTab))
  }, e.generateIdForTab = function(t) {
    var i = t.name;
    (null === i || void 0 === i) && (i = ""), i = i.toLowerCase(), i = i.split(" ").join("_");
    for (var o = i, n = 1; e.hasTabWithId(i);) i = o + n++;
    return i
  }, e.hasTabWithId = function(t) {
    for (var i = 0; e.propertyTabs.length > i; i++)
      if (t == e.propertyTabs[i].id) return !0;
    return !1
  }, e.canMoveTab = function(t) {
    if (e.activeTab) {
      var i = e.propertyTabs.indexOf(e.activeTab);
      return "left" === t ? i > 0 : e.propertyTabs.length - 1 > i
    }
    return !1
  }, e.moveTab = function(t) {
    if (e.activeTab) {
      var i = e.propertyTabs.indexOf(e.activeTab);
      if (null !== i && void 0 !== i && i >= 0) {
        var o = e.propertyTabs;
        "left" === t ? (o[i] = o[i - 1], o[i - 1] = e.activeTab) : (o[i] = o[i + 1], o[i + 1] = e.activeTab), e.propertyTabs = o
      }
    }
  }, e.canDeleteTab = function() {
    return e.activeTab && "details" != e.activeTab.id && "form" != e.activeTab.id ? !0 : !1
  }, e.deleteTab = function() {
    var t = e.propertyTabs.indexOf(e.activeTab);
    e.propertyTabs.splice(t, 1), e.tabClicked(e.propertyTabs[0])
  }, e.showPropertyDetails = function(t) {
    e.clearPropertyValues(), e.model.activeStencilProperty = t
  }, e.addNewProperty = function() {
    e.clearPropertyValues(), e.model.newStencilProperty = {
      name: "",
      description: "",
      type: "String",
      customStencilProperty: {
        customProperty: !0
      }
    }
  }, e.saveNewProperty = function() {
    if (0 != e.model.newStencilProperty.name.length) {
      if (delete e.model.propertyIdNotUniqueError, t(e.model.newStencilProperty.id)) return e.model.propertyIdNotUniqueError = !0, void 0;
      e.currentStencilProperties.push(e.model.newStencilProperty), e.clearPropertyValues()
    }
  }, e.cancelPropertyEdit = function() {
    e.clearPropertyValues()
  }, e.clearPropertyValues = function() {
    e.model.newStencilProperty = void 0, e.model.restoreProperties = void 0, e.model.restoreStencilProperty = void 0, e.model.activeStencilProperty = void 0
  };
  var t = function(t) {
      var i = function(e) {
        if (!e || 0 == e.length) return void 0;
        for (var i = 0; e.length > i; i++) {
          var o = e[i];
          if (o.tabs && o.tabs.length > 0)
            for (var n = 0; o.tabs.length > n; n++)
              if (o.tabs[n].stencilProperties && o.tabs[n].stencilProperties.length > 0)
                for (var r = 0; o.tabs[n].stencilProperties.length > r; r++)
                  if (o.tabs[n].stencilProperties[r].id === t) return o.tabs[n].stencilProperties[r]
        }
      };
      return t ? i(e.model.stencilItems) : !0
    },
    i = function(t) {
      for (var i = e.currentStencilProperties, o = 0; i.length > o; o++)
        if (i[o].id === t.id) return o;
      return void 0
    };
  e.canMoveProperty = function(t) {
    var o = e.model.activeStencilProperty;
    if (o) {
      var n = i(o);
      return "up" === t ? n > 0 : e.currentStencilProperties.length - 1 > n
    }
    return !1
  }, e.moveProperty = function(t) {
    var o = e.model.activeStencilProperty;
    if (o) {
      var n = i(o);
      if (null !== n && void 0 !== n && n >= 0) {
        var r = e.currentStencilProperties;
        "up" === t ? (r[n] = r[n - 1], r[n - 1] = o) : (r[n] = r[n + 1], r[n + 1] = o), e.currentStencilProperties = r
      }
    }
  }, e.notRemovableProperties = ["id", "name", "description"], e.canDeleteProperty = function() {
    return e.model.activeStencilProperty ? "details" != e.activeTab.id ? !0 : e.notRemovableProperties.indexOf(e.model.activeStencilProperty.id) >= 0 ? !1 : !0 : !1
  }, e.deleteProperty = function() {
    var t = e.currentStencilProperties.indexOf(e.model.activeStencilProperty);
    e.currentStencilProperties.splice(t, 1), e.model.activeStencilProperty = void 0
  }, e.close = function() {
    e.model.activeStencilProperty = void 0, e.model.newStencilProperty = void 0, e.$hide()
  }, e.tabClicked(e.activeTab)
}]), angular.module("activitiModeler").controller("StencilFormPropertiesCtrl", ["$scope", function(e) {
  e.propertyTabs = e.model.activeStencilItem.tabs, e.activeTab = e.propertyTabs[0], e.tabClicked = function(t) {
    e.activeTab = t, e.currentStencilProperties = e.activeTab.stencilProperties, e.model.activeStencilProperty = void 0
  }, e.addNewTab = function() {
    var t = {
      id: "tab",
      name: "Tab",
      stencilProperties: []
    };
    e.propertyTabs.push(t), e.tabClicked(t)
  }, e.tabNameChanged = function() {
    (void 0 === e.activeTab.originatesFromServer || e.activeTab.originatesFromServer === !1) && (e.activeTab.id = e.generateIdForTab(e.activeTab))
  }, e.generateIdForTab = function(t) {
    var i = t.name;
    (null === i || void 0 === i) && (i = ""), i = i.toLowerCase(), i = i.split(" ").join("_");
    for (var o = i, n = 1; e.hasTabWithId(i);) i = o + n++;
    return i
  }, e.hasTabWithId = function(t) {
    for (var i = 0; e.propertyTabs.length > i; i++)
      if (t == e.propertyTabs[i].id) return !0;
    return !1
  }, e.canMoveTab = function(t) {
    if (e.activeTab) {
      var i = e.propertyTabs.indexOf(e.activeTab);
      return "left" === t ? i > 0 : e.propertyTabs.length - 1 > i
    }
    return !1
  }, e.moveTab = function(t) {
    if (e.activeTab) {
      var i = e.propertyTabs.indexOf(e.activeTab);
      if (null !== i && void 0 !== i && i >= 0) {
        var o = e.propertyTabs;
        "left" === t ? (o[i] = o[i - 1], o[i - 1] = e.activeTab) : (o[i] = o[i + 1], o[i + 1] = e.activeTab), e.propertyTabs = o
      }
    }
  }, e.canDeleteTab = function() {
    return e.activeTab && "details" != e.activeTab.id && "form" != e.activeTab.id ? !0 : !1
  }, e.deleteTab = function() {
    var t = e.propertyTabs.indexOf(e.activeTab);
    e.propertyTabs.splice(t, 1), e.tabClicked(e.propertyTabs[0])
  }, e.showPropertyDetails = function(t) {
    e.clearPropertyValues(), e.model.activeStencilProperty = t
  }, e.addNewProperty = function() {
    e.clearPropertyValues(), e.model.newStencilProperty = {
      name: "",
      description: "",
      type: "String",
      customStencilProperty: {
        customProperty: !0
      }
    }
  }, e.saveNewProperty = function() {
    if (0 != e.model.newStencilProperty.name.length) {
      if (delete e.model.propertyIdNotUniqueError, t(e.model.newStencilProperty.id)) return e.model.propertyIdNotUniqueError = !0, void 0;
      e.currentStencilProperties.push(e.model.newStencilProperty), e.clearPropertyValues()
    }
  }, e.cancelPropertyEdit = function() {
    e.clearPropertyValues()
  }, e.clearPropertyValues = function() {
    e.model.newStencilProperty = void 0, e.model.restoreProperties = void 0, e.model.restoreStencilProperty = void 0, e.model.activeStencilProperty = void 0
  };
  var t = function(t) {
      var i = function(e) {
        if (!e || 0 == e.length) return void 0;
        for (var i = 0; e.length > i; i++) {
          var o = e[i];
          if (o.tabs && o.tabs.length > 0)
            for (var n = 0; o.tabs.length > n; n++) {
              var r = o.tabs[n];
              if (r.stencilProperties && r.stencilProperties.length > 0)
                for (var s = 0; r.stencilProperties.length > s; s++) {
                  var a = r.stencilProperties[s];
                  if (a.id === t) return a
                }
            }
        }
      };
      return t ? i(e.model.stencilItems) : !0
    },
    i = function(t) {
      for (var i = e.currentStencilProperties, o = 0; i.length > o; o++)
        if (i[o].id === t.id) return o;
      return void 0
    };
  e.canMoveProperty = function(t) {
    var o = e.model.activeStencilProperty;
    if (o) {
      var n = i(o);
      return "up" === t ? n > 0 : e.currentStencilProperties.length - 1 > n
    }
    return !1
  }, e.moveProperty = function(t) {
    var o = e.model.activeStencilProperty;
    if (o) {
      var n = i(o);
      if (null !== n && void 0 !== n && n >= 0) {
        var r = e.currentStencilProperties;
        "up" === t ? (r[n] = r[n - 1], r[n - 1] = o) : (r[n] = r[n + 1], r[n + 1] = o), e.currentStencilProperties = r
      }
    }
  }, e.notRemovableProperties = ["id", "name", "description"], e.canDeleteProperty = function() {
    return e.model.activeStencilProperty ? "general" != e.activeTab.id ? !0 : e.notRemovableProperties.indexOf(e.model.activeStencilProperty.id) >= 0 ? !1 : !0 : !1
  }, e.deleteProperty = function() {
    var t = e.currentStencilProperties.indexOf(e.model.activeStencilProperty);
    e.currentStencilProperties.splice(t, 1), e.model.activeStencilProperty = void 0
  }, e.close = function() {
    e.model.activeStencilProperty = void 0, e.model.newStencilProperty = void 0, e.$hide()
  }, e.tabClicked(e.activeTab)
}]), angular.module("activitiModeler").controller("CreateNewStencilCrtl", ["$rootScope", "$scope", "$http", "$location", "EventTrackingService", function(e, t, i, o, n) {
  t.status = {
    loading: !1
  }, t.model = {
    stencil: {
      name: "",
      description: "",
      stencilType: 1
    }
  }, t.ok = function() {
    t.model.stencil.name && 0 != t.model.stencil.name.length && (t.status.loading = !0, i({
      method: "POST",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets",
      data: t.model.stencil
    }).success(function(e) {
      o.path("/stencils/" + e.id), 1 === t.model.stencil.stencilType || "1" === t.model.stencil.stencilType ? n.trackEvent("editor", "stencil-bpmn-created") : (2 === t.model.stencil.stencilType || "2" === t.model.stencil.stencilType) && n.trackEvent("editor", "stencil-step-created"), t.$hide(), t.status.loading = !1
    }).error(function() {
      t.status.loading = !1, t.$hide()
    }))
  }, t.cancel = function() {
    t.status.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("StencilDetailsEditCtrl", ["$rootScope", "$scope", "$http", function(e, t, i) {
  t.ok = function() {
    if (t.model.stencil.name && 0 != t.model.stencil.name.length) {
      t.model.loading = !0;
      var e = {
        name: t.model.stencil.name,
        description: t.model.stencil.description
      };
      i({
        method: "PUT",
        url: ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + t.model.stencil.id,
        data: e
      }).success(function() {
        t.model.loading = !1, t.$hide()
      }).error(function() {
        t.model.loading = !1, t.$hide()
      })
    }
  }, t.cancel = function() {
    t.model.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("StencilDeleteCtrl", ["$rootScope", "$scope", "$location", "StencilService", function(e, t, i, o) {
  t.deleteModel = {}, o.fetchStencilUsageCount(t.model.stencil.id).then(function(e) {
    t.deleteModel.stencilCount = e.count
  }), t.ok = function() {
    o.deleteStencil(t.model.stencil.id).then(function() {
      i.path("/stencils")
    }), t.$hide()
  }, t.cancel = function() {
    t.$hide()
  }
}]), angular.module("activitiModeler").controller("RestoreStencilItemCtrl", ["$rootScope", "$scope", "UtilityService", function(e, t, i) {
  t.model.stencilItemsToRestore = [], t.isSelectedStencilItem = function(e) {
    return t.model.stencilItemsToRestore.indexOf(e) >= 0
  }, t.selectStencilItem = function(e) {
    t.isSelectedStencilItem(e) ? t.model.stencilItemsToRestore.splice(t.model.stencilItemsToRestore.indexOf(e), 1) : t.model.stencilItemsToRestore.push(e)
  }, t.ok = function() {
    for (var o = 0; t.model.stencilItemsToRestore.length > o; o++) {
      var n = t.model.stencilItemsToRestore[o];
      n.removed = !1, delete n.group;
      var r = t.model.removedStencilItems.indexOf(n);
      t.model.removedStencilItems.splice(r, 1), e.currentStencilItems.push(n)
    }
    t.clearSelection();
    var s = e.currentStencilItems[e.currentStencilItems.length - 1];
    t.showItemDetails(s), i.scrollToElement("stencil_item_" + s.id), t.$hide()
  }, t.cancel = function() {
    t.status.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("ChangeStencilItemIconCtrl", ["$rootScope", "$scope", "Upload", function(e, t, i) {
  t.popup = {
    loading: !1
  }, t.onFileSelect = function(e, o) {
    for (var n = 0; e.length > n; n++) {
      var r, s = e[n];
      r = o ? ACTIVITI.CONFIG.contextRoot + "/app/rest/images/text" : ACTIVITI.CONFIG.contextRoot + "/app/rest/images", i.upload({
        url: r,
        method: "POST",
        file: s
      }).progress(function(e) {
        t.popup.loading = !0, t.popup.uploadProgress = parseInt(100 * e.loaded / e.total)
      }).success(function(e) {
        t.popup.loading = !1, t.model.activeStencilItem.customIconId = e.id, t.$hide()
      }).error(function(e) {
        e && e.message && (t.popup.errorMessage = e.message), t.popup.error = !0, t.popup.loading = !1
      })
    }
  }, t.cancel = function() {
    t.popup.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("SaveStencilCtrl", ["$rootScope", "$scope", "$route", "$location", "StencilService", function(e, t, i, o, n) {
  t.saveAndClose = function() {
    t.save(!0)
  }, t.save = function(r) {
    t.status.loading = !0;
    for (var s = [], a = 0; e.currentStencilItems.length > a; a++) {
      var l = e.currentStencilItems[a];
      if (l.items && l.items.length > 0)
        for (var d = 0; l.items.length > d; d++) l.items[d].isNewItem && s.push(l.items[d]);
      else l.isNewItem && s.push(l)
    }
    for (var a = 0; s.length > a; a++) e.currentStencil.stencilItems.push(s[a]);
    n.saveStencil(e.currentStencil, e.currentStencilItems).then(function() {
      t.model.dirty = !1, t.status.loading = !1, e.ignoreChanges = !0, t.$hide(), r ? o.path("/stencils") : i.reload()
    })
  }, t.cancel = function() {
    t.status.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("StencilEditorController", ["$rootScope", "$scope", "$q", "$translate", "$http", "$timeout", "$location", "$modal", "$route", "$routeParams", "StencilService", "UtilityService", function(e, t, i, o, n, r, s, a, l, d, c, p) {
  e.account && e.account.type && "enterprise" != e.account.type && s.url("/processes"), e.setMainPageById("stencils"), e.ignoreStencilChanges = !1, t.status = {
    loading: !0
  }, t.model = {
    expandedGroups: [],
    scriptFiles: [],
    executionListeners: [],
    variables: [],
    fieldExtensions: []
  }, t.collapseGroup = function(e) {
    var i = t.model.expandedGroups.indexOf(e);
    i >= 0 && t.model.expandedGroups.splice(i, 1)
  }, t.expandGroup = function(e) {
    var i = t.model.expandedGroups.indexOf(e);
    0 > i && t.model.expandedGroups.push(e)
  }, t.isGroupExpanded = function(e) {
    return t.model.expandedGroups.indexOf(e) >= 0
  }, t.toggleGroupCollapseState = function(e) {
    var i = t.model.expandedGroups.indexOf(e);
    i >= 0 ? t.collapseGroup(e) : t.expandGroup(e)
  }, t.addNewGroup = function() {
    o("STENCILS.NEW-GROUP-NAME").then(function(i) {
      for (var o = i, n = 1; void 0 !== c.findIndexOfGroup(o, e.currentStencilItems);) o = i + n++;
      var r = {
        name: o,
        id: t.model.groupCounter++,
        type: "group",
        items: []
      };
      e.currentStencilItems.push(r), t.showGroupDetails(r), p.scrollToElement("group_" + r.id)
    })
  }, t.addNewItem = function() {
    o("STENCILS.NEW-ITEM-NAME").then(function(i) {
      var o = {
        isNewItem: !0,
        name: i,
        removed: !1
      };
      if (3 !== e.currentStencil.stencilType && (o.customStencilItem = {
        backgroundColor: "#f9f9f9",
        className: void 0,
        expression: void 0,
        delegateExpression: void 0
      }), o.id = c.generateUniqueStencilItemId(e.currentStencilItems, o), 1 === e.currentStencil.stencilType) {
        o.itemType = "BpmnStencilItemDefinition", o.type = "node";
        var n = ["overrideid", "name", "documentation", "asynchronousdefinition", "exclusivedefinition", "executionlisteners", "multiinstance_type", "multiinstance_cardinality", "multiinstance_collection", "multiinstance_variable", "multiinstance_condition", "isforcompensation", "servicetaskresultvariable"],
          r = c.findStencilItemWithIdInCollection(e.currentStencilItems, "ServiceTask");
        if (r) {
          o.stencilProperties = [];
          for (var s = 0; r.stencilProperties.length > s; s++) {
            var a = r.stencilProperties[s];
            n.indexOf(a.id) > 0 && o.stencilProperties.push(JSON.parse(JSON.stringify(a)))
          }
        }
      } else if (2 === e.currentStencil.stencilType) {
        o.itemType = "StepStencilItemDefinition", o.template = "views/process-builder/custom-step-template.html";
        var l = [];
        o.tabs = l;
        var d = {
          id: "details",
          name: "Details",
          stencilProperties: [{
            id: "name",
            name: "Name",
            type: "text",
            placeholder: "Enter a name"
          }, {
            id: "description",
            name: "Description",
            type: "multiline text",
            placeholder: "Enter a description"
          }]
        };
        o.tabs.push(d)
      } else if (3 === e.currentStencil.stencilType) {
        o.itemType = "FormStencilItemDefinition", o.template = "", o.width = 1, o.customFormField = !0;
        var l = [];
        o.tabs = l;
        var d = {
          id: "general",
          name: "FORM-BUILDER.TABS.GENERAL",
          stencilProperties: [{
            id: "label",
            name: "FORM-BUILDER.COMPONENT.LABEL",
            type: "label"
          }, {
            id: "id",
            name: "FORM-BUILDER.COMPONENT.ID",
            type: "id"
          }, {
            id: "required",
            name: "FORM-BUILDER.COMPONENT.REQUIRED",
            type: "required"
          }]
        };
        o.tabs.push(d);
        var u = {
          id: "visibility",
          name: "FORM-BUILDER.TABS.VISIBILITY",
          stencilProperties: [{
            id: "visibility",
            name: "FORM-BUILDER.TABS.VISIBILITY",
            type: "visibility",
            hideLabel: !0
          }]
        };
        o.tabs.push(u)
      }
      e.currentStencilItems.push(o), t.showItemDetails(o), p.scrollToElement("stencil_item_" + o.id)
    })
  }, t.restoreItem = function() {
    _internalCreateModal({
      scope: t,
      template: "views/popup/stencil-item-restore.html"
    }, a, t)
  }, t.clearGroupSelection = function() {
    if (delete t.model.activeGroup, e.currentStencilItems)
      for (var i = 0; e.currentStencilItems.length > i; i++) e.currentStencilItems[i].selected && (e.currentStencilItems[i].selected = !1)
  }, t.clearItemSelection = function() {
    delete t.model.activeStencilItem
  }, t.clearSelection = function() {
    t.clearGroupSelection(), t.clearItemSelection()
  }, t.showGroupDetails = function(e) {
    t.expandGroup(e), t.clearSelection(), t.model.activeGroup = e
  }, t.showItemDetails = function(e) {
    t.clearSelection(), t.model.activeStencilItem = e, !t.model.activeStencilItem.customStencilItem || t.model.activeStencilItem.customStencilItem.customType && 0 != t.model.activeStencilItem.customStencilItem.customType.length || (t.model.activeStencilItem.customStencilItem.customType = "Service task"), t.model.executionListeners.length = 0, t.model.activeStencilItem.customStencilItem && t.model.activeStencilItem.customStencilItem.executionListeners && t.model.activeStencilItem.customStencilItem.executionListeners.length > 0 && Array.prototype.push.apply(t.model.executionListeners, t.model.activeStencilItem.customStencilItem.executionListeners), t.model.variables.length = 0, t.model.activeStencilItem.customStencilItem && t.model.activeStencilItem.customStencilItem.variables && t.model.activeStencilItem.customStencilItem.variables.length > 0 && Array.prototype.push.apply(t.model.variables, t.model.activeStencilItem.customStencilItem.variables), t.model.scriptFiles.length = 0, t.model.activeStencilItem.scriptFiles && t.model.activeStencilItem.scriptFiles.length > 0 && Array.prototype.push.apply(t.model.scriptFiles, t.model.activeStencilItem.scriptFiles)
  }, t.loadStencil = function(i) {
    var o = function() {
      t.status.loading = !0, t.stencilDataWatch && t.stencilDataWatch(), t.stencilItemWatch && t.stencilItemWatch(), c.fetchStencilDetails(i).then(function(i) {
        e.currentStencilItems = c.processStencilItemsFromServer(i), t.model.removedStencilItems = i.removedStencilItems, e.currentStencil = i;
        var o = !0;
        t.stencilDataWatch = t.$watch("currentStencil", function() {
          o ? r(function() {
            o = !1
          }) : t.model.dirty = !0
        }, !0);
        var n = !0;
        t.stencilItemWatch = t.$watch("currentStencilItems", function() {
          n ? r(function() {
            n = !1
          }) : t.model.dirty = !0
        }, !0), t.status.loading = !1
      })
    };
    if (!e.ignoreStencilChanges && e.currentStencilItems && e.currentStencilItems.length > 0 && t.model.dirty) {
      var n = function(e) {
        t.unsavedStencilChangesModalInstance = void 0, e && o()
      };
      t.confirmNavigation(n)
    } else o()
  }, t.$on("$locationChangeStart", function(i, o) {
    var n = function(i) {
      t.unsavedStencilChangesModalInstance = void 0, i ? (e.ignoreStencilChanges = !0, s.url(o.substring(o.indexOf("/#") + 2))) : (e.ignoreStencilChanges = !1, e.setMainPageById("stencils"))
    };
    t.confirmNavigation(n, i)
  }), t.confirmNavigation = function(i, o) {
    !e.ignoreStencilChanges && e.currentStencilItems && e.currentStencilItems.length > 0 && t.model.dirty && (o && o.preventDefault(), t.unsavedStencilChangesModalInstance || (t.handleResponseFunction = i, t.unsavedStencilChangesModalInstance = _internalCreateModal({
      template: "editor-app/popups/unsaved-changes.html",
      scope: t
    }, a, t)))
  }, t.loadStencil(d.stencilId)
}]), angular.module("activitiModeler").controller("StencilToolbarController", ["$scope", "$http", "$modal", "$q", "$rootScope", "$translate", "$location", function(e, t, i, o, n, r, s) {
  var a = STENCIL_TOOLBAR_CONFIG.items;
  e.items = [];
  for (var l = 0; a.length > l; l++) e.items.push(a[l]);
  e.secondaryItems = STENCIL_TOOLBAR_CONFIG.secondaryItems;
  var d = function(e, t) {
    for (var i = Array.prototype.slice.call(arguments).splice(2), o = e.split("."), n = o.pop(), r = 0; o.length > r; r++) t = t[o[r]];
    return t[n].apply(this, i)
  };
  e.toolbarButtonClicked = function(s) {
    var a = e.items[s],
      l = {
        $scope: e,
        $rootScope: n,
        $http: t,
        $modal: i,
        $q: o,
        $translate: r
      };
    d(a.action, window, l)
  }, e.toolbarSecondaryButtonClicked = function(a) {
    var l = e.secondaryItems[a],
      c = {
        $scope: e,
        $rootScope: n,
        $http: t,
        $modal: i,
        $q: o,
        $translate: r,
        $location: s
      };
    d(l.action, window, c)
  }
}]);
var STENCIL_TOOLBAR = {
    ACTIONS: {
      saveStencil: function(e) {
        e.$translate("STENCILS.POPUP.SAVE-STENCIL-INITIAL-SAVE").then(function(t) {
          null === e.$rootScope.currentStencil.version || void 0 === e.$rootScope.currentStencil.version || 1 === e.$rootScope.currentStencil.version ? e.$rootScope.currentStencil.comment = t : delete e.$rootScope.currentStencil.comment, _internalCreateModal({
            backdrop: !0,
            keyboard: !0,
            scope: e.$scope,
            template: "views/popup/stencil-save.html?version=" + Date.now()
          }, e.$modal, e.$scope)
        })
      },
      help: function() {},
      feedback: function() {},
      closeEditor: function(e) {
        e.$location.path("/stencils")
      }
    }
  },
  STENCIL_TOOLBAR_CONFIG = {
    items: [{
      type: "button",
      title: "STENCIL_TOOLBAR.ACTION.SAVE",
      cssClass: "editor-icon editor-icon-save",
      action: "STENCIL_TOOLBAR.ACTIONS.saveStencil"
    }],
    secondaryItems: [{
      type: "button",
      title: "Close",
      cssClass: "glyphicon glyphicon-remove",
      action: "STENCIL_TOOLBAR.ACTIONS.closeEditor"
    }]
  };
angular.module("activitiModeler").service("DecisionTableService", ["$rootScope", "$http", "$q", "$timeout", "$translate", "ProcessScopeService", function(e, t, i, o, n, r) {
  function s(e) {
    var t = (e.inputExpressions || []).concat(e.outputExpressions || []);
    e.rules && e.rules.length > 0 && e.rules.forEach(function(e) {
      var i = [];
      t.forEach(function(e) {
        i.push(e.id)
      }), i.forEach(function(t) {
        e.hasOwnProperty(t) || (e[t] = "")
      }), delete e.$$hashKey;
      for (var o in e) - 1 == i.indexOf(o) && (delete e[o], delete e.validationErrorMessages)
    })
  }
  var a = function(e) {
    var o = i.defer();
    return t(e).success(function(e) {
      o.resolve(e)
    }).error(function(e) {
      console.log("Something went wrong during http call:" + e), o.reject(e)
    }), o.promise
  };
  this.filterDecisionTables = function(t) {
    return a({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/decision-table-models",
      params: {
        filter: t,
        referenceId: e.currentKickstartModel.definition.id
      }
    })
  }, this.fetchDecisionTableDetails = function(e, t) {
    var i = ACTIVITI.CONFIG.contextRoot + "/app/rest/decision-table-models/";
    return i += t ? "history/" + encodeURIComponent(t) : encodeURIComponent(e), a({
      method: "GET",
      url: i
    })
  }, this.saveDecisionTable = function(i, o, n, r, a, l) {
    i.decisionTableRepresentation = {
      name: o
    }, r && r.length > 0 && (i.decisionTableRepresentation.description = r);
    var d = e.currentDecisionTable;
    i.decisionTableRepresentation.decisionTableDefinition = d, d.key = n, d.rules = e.currentDecisionTableRules, s(d), html2canvas(jQuery("#decisionTableGrid"), {
      onrendered: function(o) {
        var n = o.width / 300,
          r = document.createElement("canvas");
        r.setAttribute("width", 300), r.setAttribute("height", o.height / n);
        var s = r.getContext("2d");
        s.drawImage(o, 0, 0, o.width, o.height, 0, 0, 300, o.height / n), i.decisionTableImageBase64 = r.toDataURL("image/png"), delete Array.prototype.toJSON, t({
          method: "PUT",
          url: ACTIVITI.CONFIG.contextRoot + "/app/rest/decision-table-models/" + e.currentDecisionTable.id,
          data: i
        }).success(function() {
          a && a()
        }).error(function() {
          l && l()
        })
      }
    })
  }, this.validateDecisionTable = function(i) {
    var o = {
      decisionTableRepresentation: {
        decisionTableDefinition: e.currentDecisionTable
      },
      processScopeIdentifiers: r.getIdentifiers()
    };
    o.decisionTableRepresentation.decisionTableDefinition.rules = e.currentDecisionTableRules, s(o.decisionTableRepresentation.decisionTableDefinition), delete Array.prototype.toJSON, t({
      method: "PUT",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/decision-table-models/" + e.currentDecisionTable.id + "/validate",
      data: o
    }).success(function(t) {
      t && t.length > 0 ? (e.currentDecisionTableValidationErrors = t, e.addAlertPromise(n("DECISION-TABLE-EDITOR.ALERT.VALIDATION-ERROR"), "error")) : (e.currentDecisionTableValidationErrors = null, e.addAlertPromise(n("DECISION-TABLE-EDITOR.ALERT.VALIDATION-OK"), "info")), i && i(t)
    })
  }, this.getDecisionTables = function(e, i) {
    if (e.length > 0) {
      for (var o = "", n = 0; e.length > n; n++) o.length > 0 && (o += "&"), o += "decisionTableId=" + e[n];
      o.length > 0 && (o += "&"), o += "version=" + Date.now(), t({
        method: "GET",
        url: ACTIVITI.CONFIG.contextRoot + "/app/rest/decision-table-models/values?" + o
      }).success(function(e) {
        i && i(e)
      }).error(function(e) {
        console.log("Something went wrong when fetching decision table(s):" + JSON.stringify(e))
      })
    } else i && i()
  }
}]), angular.module("activitiModeler").controller("DecisionTableDetailsCtrl", ["$rootScope", "$scope", "$translate", "$http", "$location", "$routeParams", "$modal", "$timeout", "$popover", "DecisionTableService", "uiGridConstants", "ProcessScopeService", function(e, t, i, o, n, r, s, a, l, d, c) {
  e.setMainPageById("decision-tables"), t.decisionTableMode = "read", t.model = {
    latestModelId: r.modelId,
    columnDefs: [],
    columnVariableIdMap: {}
  }, e.currentDecisionTableRules = [];
  var p = i.instant("DECISION-TABLE-EDITOR.EMPTY-MESSAGES.NO-VARIABLE-SELECTED");
  t.getVariableNameByColumnId = function(e) {
    return e ? t.model.columnVariableIdMap[e] ? t.model.columnVariableIdMap[e] : p : void 0
  }, t.loadDecisionTable = function() {
    var e;
    e = r.modelHistoryId ? ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + r.modelId + "/history/" + r.modelHistoryId : ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + r.modelId, o({
      method: "GET",
      url: e
    }).success(function(e) {
      t.model.decisionTable = e, t.loadComments(), t.loadVersions()
    }).error(function() {
      t.returnToList()
    })
  }, t.useAsNewVersion = function() {
    _internalCreateModal({
      template: "views/popup/model-use-as-new-version.html",
      scope: t
    }, s, t)
  }, t.toggleFavorite = function() {
    t.model.favoritePending = !0;
    var e = {
      favorite: !t.model.decisionTable.favorite
    };
    o({
      method: "PUT",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.model.latestModelId,
      data: e
    }).success(function() {
      t.model.favoritePending = !1, t.model.decisionTable.favorite ? t.addAlertPromise(i("DECISION-TABLE.ALERT.UN-FAVORITE-CONFIRM"), "info") : t.addAlertPromise(i("DECISION-TABLE.ALERT.FAVORITE-CONFIRM"), "info"), t.model.decisionTable.favorite = !t.model.decisionTable.favorite
    }).error(function() {
      t.model.favoritePending = !1
    })
  }, t.loadVersions = function() {
    var e = {
      includeLatestVersion: !t.model.decisionTable.latestVersion
    };
    o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.model.latestModelId + "/history",
      params: e
    }).success(function(e) {
      t.model.decisionTable.latestVersion && (e.data || (e.data = []), e.data.unshift(t.model.decisionTable)), t.model.versions = e
    })
  }, t.showVersion = function(e) {
    e && (e.latestVersion ? n.path("/decision-tables/" + t.model.latestModelId) : n.path("/decision-tables/" + t.model.latestModelId + "/history/" + e.id))
  }, t.returnToList = function() {
    n.path("/decision-tables/")
  }, t.editDecisionTable = function() {
    _internalCreateModal({
      template: "views/popup/model-edit.html",
      scope: t
    }, s, t)
  }, t.duplicateDecisionTable = function() {
    var e = _internalCreateModal({
      template: "views/popup/decision-table-duplicate.html?version=" + Date.now()
    }, s, t);
    e.$scope.originalModel = t.model, e.$scope.duplicateDecisionTableCallback = function(e) {
      n.url("/decision-table-editor/" + encodeURIComponent(e.id))
    }
  }, t.deleteDecisionTable = function() {
    _internalCreateModal({
      template: "views/popup/model-delete.html",
      scope: t
    }, s, t)
  }, t.shareDecisionTable = function() {
    _internalCreateModal({
      template: "views/popup/model-share.html",
      scope: t
    }, s, t)
  }, t.openEditor = function() {
    t.model.decisionTable && n.path("/decision-table-editor/" + t.model.decisionTable.id)
  }, t.loadComments = function() {
    var e = {
      latestFirst: !0
    };
    o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.model.latestModelId + "/comments",
      params: e
    }).success(function(e) {
      t.model.comments = e
    })
  }, t.toggleComments = function(e) {
    if (!t.commentsState) {
      var i = {};
      t.commentsState = i, i.popover = l(angular.element(e.target), {
        template: "views/popover/comments.html",
        placement: "bottom-right",
        show: !0,
        scope: t,
        container: "body"
      });
      var o = function() {
        i.popover.destroy(), delete t.commentsState
      };
      i.popover.$scope.$on("tooltip.hide", o), t.$on("$destroy", o)
    }
  }, t.toggleHistory = function(e) {
    if (!t.historyState) {
      var i = {};
      t.historyState = i, i.popover = l(angular.element(e.target), {
        template: "views/popover/history.html",
        placement: "bottom-right",
        show: !0,
        scope: t,
        container: "body"
      });
      var o = function() {
        i.popover.destroy(), delete t.historyState
      };
      i.popover.$scope.$on("tooltip.hide", o), t.$on("$destroy", o)
    }
  };
  var u = function(i, o) {
      d.fetchDecisionTableDetails(i, o).then(function(i) {
        e.currentDecisionTable = i.decisionTableDefinition, e.currentDecisionTable.id = i.id, e.currentDecisionTable.name = i.name, e.currentDecisionTable.inputExpressions && e.currentDecisionTable.inputExpressions.forEach(function(e) {
          t.model.columnVariableIdMap[e.id] = e.variableId
        }), e.currentDecisionTable.outputExpressions && e.currentDecisionTable.outputExpressions.forEach(function(e) {
          t.model.columnVariableIdMap[e.id] = e.variableId
        }), e.currentDecisionTable.rules && e.currentDecisionTable.rules.length > 0 && Array.prototype.push.apply(e.currentDecisionTableRules, e.currentDecisionTable.rules), t.getColumnDefinitions(e.currentDecisionTable)
      })
    },
    h = function() {
      return '<div role="columnheader" ui-grid-one-bind-aria-labelledby-grid="col.uid + \'-header-text \' + col.uid + \'-sortdir-text\'">   <div class="ui-grid-cell-contents ui-grid-header-cell-primary-focus" col-index="renderIndex" title="TOOLTIP">       <div class="text-center"><span>{{ col.displayName CUSTOM_FILTERS }}</span></div>       <div class="text-center"><span ui-grid-one-bind-id-grid="col.uid + \'-header-text\'" style="text-decoration: underline;">[ {{ grid.appScope.getVariableNameByColumnId(col.name) }} ]</span></div>   </div></div>'
    },
    m = function() {
      return '<div role="columnheader" ui-grid-one-bind-aria-labelledby-grid="col.uid + \'-header-text \' + col.uid + \'-sortdir-text\'">   <div class="ui-grid-cell-contents ui-grid-header-cell-primary-focus" col-index="renderIndex" title="TOOLTIP">       <div class="text-center"><span>{{ col.displayName CUSTOM_FILTERS }}</span></div>       <div class="text-center"><span ui-grid-one-bind-id-grid="col.uid + \'-header-text\'" style="text-decoration: underline;">[ {{ grid.appScope.getVariableNameByColumnId(col.name) }} ]</span></div>   </div></div>'
    },
    f = function() {
      return '<div class="ui-grid-disable-selection"><div class="ui-grid-cell-contents text-center customRowHeader">{{rowRenderIndex + 1}}</div></div>'
    },
    g = function() {
      var e = '<div class="ui-grid-cell-contents" ng-class="{ \'ui-grid-cell-contents-empty\': !COL_FIELD }" title="TOOLTIP">   <span class="contents-value">{{COL_FIELD}}</span></div>';
      return e
    };
  t.getColumnDefinitions = function(e) {
    if (e) {
      var i = 0,
        o = [];
      e.inputExpressions && e.inputExpressions.length > 0 && e.inputExpressions.forEach(function(e) {
        o.push({
          name: e.id,
          displayName: e.label ? e.label : "",
          field: e.id,
          type: "string",
          headerCellClass: "header-expression header-input-expression",
          headerCellTemplate: h(),
          cellClass: "cell-expression cell-input-expression",
          cellTemplate: g(),
          enableHiding: !1,
          enableCellEditOnFocus: !1
        }), i++
      }), e.outputExpressions && e.outputExpressions.length > 0 && e.outputExpressions.forEach(function(e) {
        o.push({
          name: e.id,
          displayName: e.label ? e.label : "",
          field: e.id,
          type: "string",
          headerCellTemplate: m(),
          headerCellClass: "header-expression header-output-expression",
          cellClass: "cell-expression cell-output-expression",
          cellTemplate: g(),
          enableHiding: !1,
          enableCellEditOnFocus: !1
        }), i++
      }), t.model.columnDefs ? t.model.columnDefs.length = 0 : t.model.columnDefs = [], Array.prototype.push.apply(t.model.columnDefs, o), t.gridApi.core.notifyDataChange(c.dataChange.ALL)
    }
  }, t.gridOptions = {
    data: e.currentDecisionTableRules,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableColumnMenus: !1,
    enableSorting: !1,
    enableCellEditOnFocus: !1,
    columnDefs: t.model.columnDefs,
    headerTemplate: "views/templates/decision-table-header-template.html"
  }, t.gridOptions.onRegisterApi = function(e) {
    t.gridApi = e;
    var i = f();
    t.gridApi.core.addRowHeaderColumn({
      name: "rowHeaderCol",
      displayName: "",
      width: 35,
      cellTemplate: i
    }), u(r.modelId, r.modelHistoryId)
  }, t.loadDecisionTable()
}]), angular.module("activitiModeler").controller("DecisionTablesController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", function(e, t, i, o, n, r, s) {
  e.setMainPageById("decision-tables"), e.decisionTableItems = void 0, t.imageVersion = Date.now(), t.model = {
    filters: [{
      id: "myReusableDecisionTables",
      labelKey: "MY-REUSABLE-DECISION-TABLES"
    }, {
      id: "sharedWithMe",
      labelKey: "SHARED-WITH-ME"
    }, {
      id: "sharedWithOthers",
      labelKey: "SHARED-WITH-OTHERS"
    }, {
      id: "favorite",
      labelKey: "FAVORITES"
    }],
    sorts: [{
      id: "modifiedDesc",
      labelKey: "MODIFIED-DESC"
    }, {
      id: "modifiedAsc",
      labelKey: "MODIFIED-ASC"
    }, {
      id: "nameAsc",
      labelKey: "NAME-ASC"
    }, {
      id: "nameDesc",
      labelKey: "NAME-DESC"
    }]
  }, e.decisionTableFilter ? (t.model.activeFilter = e.decisionTableFilter.filter, t.model.activeSort = e.decisionTableFilter.sort, t.model.filterText = e.decisionTableFilter.filterText, t.model.pendingFilterText = t.model.filterText) : (t.model.activeFilter = t.model.filters[0], t.model.activeSort = t.model.sorts[0], e.decisionTableFilter = {
    filter: t.model.activeFilter,
    sort: t.model.activeSort,
    filterText: ""
  }), t.activateFilter = function(i) {
    t.model.activeFilter = i, e.decisionTableFilter.filter = i, t.loadDecisionTables()
  }, t.activateSort = function(i) {
    t.model.activeSort = i, e.decisionTableFilter.sort = i, t.loadDecisionTables()
  }, t.loadDecisionTables = function() {
    t.model.loading = !0;
    var e = {
      filter: t.model.activeFilter.id,
      sort: t.model.activeSort.id,
      modelType: 4
    };
    t.model.filterText && "" != t.model.filterText && (e.filterText = t.model.filterText), o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models",
      params: e
    }).success(function(e) {
      t.model.decisionTables = e, t.model.loading = !1
    }).error(function() {
      t.model.loading = !1
    })
  };
  var a = function() {
    t.model.isFilterDelayed = !0, n(function() {
      t.model.isFilterDelayed = !1, t.model.isFilterUpdated ? (t.model.isFilterUpdated = !1, a()) : (t.model.filterText = t.model.pendingFilterText, e.decisionTableFilter.filterText = t.model.filterText, t.loadDecisionTables())
    }, 500)
  };
  t.filterDelayed = function() {
    t.model.isFilterDelayed ? t.model.isFilterUpdated = !0 : a()
  }, t.createDecisionTable = function() {
    e.currentKickstartModel = void 0, e.currentDecisionTableModel = void 0, t.createDecisionTableCallback = function(e) {
      r.url("/decision-table-editor/" + encodeURIComponent(e.id))
    }, _internalCreateModal({
      template: "views/popup/decision-table-create.html?version=" + Date.now(),
      scope: t
    }, s, t)
  }, t.showDecisionTableDetails = function(t) {
    t && (e.currentKickstartModel = void 0, r.url("/decision-tables/" + encodeURIComponent(t.id)))
  }, t.editDecisionTableDetails = function(e) {
    e && r.url("/decision-table-editor/" + encodeURIComponent(e.id))
  }, t.loadDecisionTables()
}]), angular.module("activitiModeler").controller("CreateNewDecisionTableCtrl", ["$rootScope", "$scope", "$http", "EventTrackingService", function(e, t, i, o) {
  t.model = {
    loading: !1,
    decisionTable: {
      name: "",
      description: "",
      modelType: 4
    }
  }, e.currentKickstartModel && e.currentKickstartModel.definition && e.currentKickstartModel.definition.id && (t.model.decisionTable.referenceId = e.currentKickstartModel.definition.id), t.ok = function() {
    t.model.decisionTable.name && 0 != t.model.decisionTable.name.length && (t.model.loading = !0, i({
      method: "POST",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models",
      data: t.model.decisionTable
    }).success(function(e) {
      t.$hide(), t.model.loading = !1, o.trackEvent("editor", "decision-table-model-created"), t.createDecisionTableCallback && (t.createDecisionTableCallback(e), t.createDecisionTableCallback = void 0)
    }).error(function() {
      t.model.loading = !1, t.$hide()
    }))
  }, t.cancel = function() {
    t.model.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("DuplicateDecisionTableCtrl", ["$rootScope", "$scope", "$http", "EventTrackingService", function(e, t, i, o) {
  t.model = {
    loading: !1,
    decisionTable: {
      id: "",
      name: "",
      description: "",
      modelType: null
    }
  }, t.originalModel && (t.model.decisionTable.name = t.originalModel.decisionTable.name, t.model.decisionTable.description = t.originalModel.decisionTable.description, t.model.decisionTable.modelType = t.originalModel.decisionTable.modelType, t.model.decisionTable.id = t.originalModel.decisionTable.id), t.ok = function() {
    t.model.decisionTable.name && 0 != t.model.decisionTable.name.length && (t.model.loading = !0, i({
      method: "POST",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t.model.decisionTable.id + "/clone",
      data: t.model.decisionTable
    }).success(function(e) {
      t.$hide(), t.model.loading = !1, o.trackEvent("editor", "decision-table-model-created"), t.duplicateDecisionTableCallback && (t.duplicateDecisionTableCallback(e), t.duplicateDecisionTableCallback = void 0)
    }).error(function() {
      t.model.loading = !1, t.$hide()
    }))
  }, t.cancel = function() {
    t.model.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("DecisionTableEditorController", ["$rootScope", "$scope", "$q", "$translate", "$http", "$timeout", "$location", "$modal", "$route", "$routeParams", "DecisionTableService", "UtilityService", "FormBuilderService", "uiGridConstants", "appResourceRoot", "ProcessScopeService", function(e, t, i, o, n, r, s, a, l, d, c, p, u, h, m, f) {
  f.init(null, {
    success: function() {
      t.availableFormFieldsForStep = f.getFormFields(), t.availableVariablesForStep = f.getVariables()
    }
  }), t.appResourceRoot = m, t.errorsById = void 0, e.currentDecisionTableValidationErrors && (e.currentDecisionTableValidationErrors = void 0), e.$watch("currentDecisionTableValidationErrors", function(e, i) {
    if (void 0 != e || void 0 != i) {
      var o, n = null;
      if (e) {
        n = {};
        for (var r = 0; e.length > r; r++) {
          o = e[r];
          var s = null != o.id ? o.id : "";
          n[s] || (n[s] = []), n[s].push(o)
        }
      }
      t.errorsById = n
    }
  }), e.account && e.account.type && "enterprise" != e.account.type && s.path("/processes"), e.setMainPageById("decision-tables"), t.status = {
    loading: !0
  }, t.model = {
    columnDefs: [],
    columnVariableIdMap: {}
  }, e.decisionTableChanges = !1;
  var g = ["FIRST", "ANY"];
  t.hitPolicies = [], g.forEach(function(e) {
    t.hitPolicies.push({
      id: e,
      label: "DECISION-TABLE.HIT-POLICIES." + e
    })
  }), e.currentDecisionTableRules = [], t.availableVariableTypes = ["string", "number", "boolean", "date"];
  var v = 0;
  t.$on("$locationChangeStart", function(i, o) {
    var n = function(i) {
      t.unsavedDecisionTableChangesModalInstance = void 0, i ? (e.ignoreChanges = !0, s.url(o.substring(o.indexOf("/#") + 2))) : (e.ignoreChanges = !1, e.setMainPageById("decision-tables"))
    };
    t.confirmNavigation(n, i)
  }), t.confirmNavigation = function(i, o) {
    !e.ignoreChanges && e.decisionTableChanges ? (o && o.preventDefault(), t.unsavedDecisionTableChangesModalInstance || (t.handleResponseFunction = i, t.unsavedDecisionTableChangesModalInstance = _internalCreateModal({
      template: "editor-app/popups/unsaved-changes.html",
      scope: t
    }, a, t))) : e.ignoreChanges = !1
  }, t.editInputExpression = function(e) {
    if (e) {
      t.model.selectedColumn = e;
      var i = "views/popup/decision-table-edit-input-expression.html";
      t.currentDecisionTable.inputExpressions.forEach(function(i) {
        i.id === e.name && (t.model.selectedExpression = i)
      }), _internalCreateModal({
        template: i,
        scope: t
      }, a, t)
    }
  }, t.editOutputExpression = function(e) {
    if (e) {
      t.model.selectedColumn = e;
      var i = "views/popup/decision-table-edit-output-expression.html";
      t.currentDecisionTable.outputExpressions.forEach(function(i) {
        i.id === e.name && (t.model.selectedExpression = i)
      }), _internalCreateModal({
        template: i,
        scope: t
      }, a, t)
    }
  }, t.addInputExpression = function(i, o) {
    t.currentDecisionTable.inputExpressions || (t.currentDecisionTable.inputExpressions = []);
    var n;
    n = i ? {
      id: T(),
      label: i.label,
      variableId: i.variableId,
      type: i.type,
      variableType: i.variableType
    } : {
      id: T()
    }, 0 == e.currentDecisionTableRules.length && t.addRule(), e.currentDecisionTableRules.forEach(function(e) {
      e[n.id] = ""
    }), void 0 !== o && -1 != o ? t.currentDecisionTable.inputExpressions.splice(o, 0, n) : t.currentDecisionTable.inputExpressions.push(n), t.model.columnVariableIdMap[n.id] = n.variableId, t.getColumnDefinitions(t.currentDecisionTable), t.gridApi.core.notifyDataChange(h.dataChange.COLUMN), void 0 !== t.errorsById && c.validateDecisionTable()
  }, t.enableRemoveInputExpression = function() {
    return t.currentDecisionTable && t.currentDecisionTable.inputExpressions && t.currentDecisionTable.inputExpressions.length > 1
  }, t.removeInputExpression = function(i, o) {
    if (i) {
      e.currentDecisionTableRules.forEach(function(e) {
        e.hasOwnProperty(i.name) && delete e[i.name]
      }), delete t.model.columnVariableIdMap[i.name];
      for (var n = -1, r = 0; t.currentDecisionTable.inputExpressions.length > r; r++)
        if (t.currentDecisionTable.inputExpressions[r].id === i.name) {
          t.currentDecisionTable.inputExpressions.splice(r, 1), n = r;
          break
        }
      return t.getColumnDefinitions(t.currentDecisionTable), void 0 !== t.errorsById && c.validateDecisionTable(), o && o.stopPropagation(), n
    }
  }, t.addOutputExpression = function(i, o) {
    t.currentDecisionTable.outputExpressions || (t.currentDecisionTable.outputExpressions = []);
    var n;
    n = i ? {
      id: T(),
      label: i.label,
      variableId: i.variableId,
      type: i.type,
      variableType: i.variableType,
      newVariable: i.newVariable
    } : {
      id: T()
    }, 0 == e.currentDecisionTableRules.length && t.addRule(), e.currentDecisionTableRules.forEach(function(e) {
      e[n.id] = ""
    }), void 0 !== o && -1 != o ? t.currentDecisionTable.outputExpressions.splice(o, 0, n) : t.currentDecisionTable.outputExpressions.push(n), t.model.columnVariableIdMap[n.id] = n.variableId, t.getColumnDefinitions(t.currentDecisionTable), t.gridApi.core.notifyDataChange(h.dataChange.COLUMN), void 0 !== t.errorsById && c.validateDecisionTable()
  }, t.enableRemoveOutputExpression = function() {
    return t.currentDecisionTable && t.currentDecisionTable.outputExpressions && t.currentDecisionTable.outputExpressions.length > 1
  }, t.removeOutputExpression = function(i, o) {
    if (i) {
      e.currentDecisionTableRules.forEach(function(e) {
        e.hasOwnProperty(i.name) && delete e[i.name]
      }), delete t.model.columnVariableIdMap[i.name];
      for (var n = -1, r = 0; t.currentDecisionTable.outputExpressions.length > r; r++)
        if (t.currentDecisionTable.outputExpressions[r].id === i.name) {
          t.currentDecisionTable.outputExpressions.splice(r, 1), n = r;
          break
        }
      return t.getColumnDefinitions(t.currentDecisionTable), void 0 !== t.errorsById && c.validateDecisionTable(), o && o.stopPropagation(), n
    }
  }, t.addRule = function() {
    e.currentDecisionTableRules.push({})
  }, t.enableRemoveRule = function() {
    return t.model.selectedRule && e.currentDecisionTableRules.length > 1
  }, t.removeRule = function() {
    if (t.model.selectedRule) {
      var i = e.currentDecisionTableRules.indexOf(t.model.selectedRule);
      i > -1 && e.currentDecisionTableRules.splice(i, 1), t.model.selectedRule = void 0
    }
  }, t.enableMoveUpwards = function(t) {
    return t && 0 != e.currentDecisionTableRules.indexOf(t)
  }, t.moveRuleUpwards = function() {
    var i = e.currentDecisionTableRules.indexOf(t.model.selectedRule);
    if (i > -1) {
      var o = e.currentDecisionTableRules[i];
      e.currentDecisionTableRules.splice(i, 1), e.currentDecisionTableRules.splice(i - 1, 0, o)
    }
  }, t.enableMoveDownwards = function(t) {
    return t && e.currentDecisionTableRules.indexOf(t) != e.currentDecisionTableRules.length - 1
  }, t.moveRuleDownwards = function() {
    var i = e.currentDecisionTableRules.indexOf(t.model.selectedRule);
    if (i > -1) {
      var o = e.currentDecisionTableRules[i];
      e.currentDecisionTableRules.splice(i, 1), e.currentDecisionTableRules.splice(i + 1, 0, o)
    }
  }, t.hasErrorMessages = function(e, t, i) {
    if (i) {
      var o = null != e ? e + ":" + t : t,
        n = i[o];
      return n && n.length > 0
    }
    return !1
  }, t.showErrorMessage = function(e, i, n) {
    if (t.errorsById) {
      for (var r = null != e ? e + ":" + i : i, s = t.errorsById[r], l = 0; s.length > l; l++) s[l].defaultDescription = o.instant("DECISION-TABLE.VALIDATION." + s[l].problem.toUpperCase(), {
        reference: s[l].problemReference ? s[l].problemReference : ""
      });
      t.validationErrors = s, _internalCreateModal({
        backdrop: !0,
        keyboard: !0,
        template: "views/popup/decision-table-validation-errors.html?version=" + Date.now(),
        scope: t
      }, a, t), n && n.stopPropagation()
    }
  }, t.editRuleExpression = function(e, i, o) {
    for (var n, r, s = i.name, l = t.currentDecisionTable.inputExpressions.concat(t.currentDecisionTable.outputExpressions), d = 0, c = l.length; c > d; d++)
      if (r = l[d], r.id == s) {
        n = r.type;
        break
      }
    t.model.currentRuleExpression = {
      inputExpression: t.currentDecisionTable.inputExpressions.length > d,
      row: e,
      columnDisplayName: i.displayName || (r ? r.variableId : ""),
      columnId: s,
      columnType: n
    };
    var p = "views/popup/decision-table-edit-rule-expression.html";
    _internalCreateModal({
      template: p,
      scope: t
    }, a, t), o.stopPropagation()
  }, t.convertVariableType = function(e) {
    var t = "string";
    if (!e || "" != e) switch (e) {
      case "integer":
        t = "number";
        break;
      case "number":
        t = "number";
        break;
      case "date":
        t = "date";
        break;
      case "boolean":
        t = "boolean"
    }
    return t
  }, t.convertFormfieldType = function(e) {
    var t = "string";
    if (!e || "" != e) switch (e) {
      case "number":
        t = "number";
        break;
      case "integer":
        t = "number";
        break;
      case "amount":
        t = "number";
        break;
      case "date":
        t = "date";
        break;
      case "boolean":
        t = "boolean"
    }
    return t
  }, t.getVariableNameByColumnId = function(e) {
    return e ? t.model.columnVariableIdMap[e] ? t.model.columnVariableIdMap[e] : o.instant("DECISION-TABLE-EDITOR.EMPTY-MESSAGES.NO-VARIABLE-SELECTED") : void 0
  };
  var I = function(i) {
      c.fetchDecisionTableDetails(i).then(function(i) {
        e.currentDecisionTable = i.decisionTableDefinition, e.currentDecisionTable.id = i.id, e.currentDecisionTable.name = i.name, e.currentDecisionTable.hitIndicator || (e.currentDecisionTable.hitIndicator = g[0]), S(e.currentDecisionTable), r(function() {
          t.status.loading = !1, e.decisionTableChanges = !1
        }, 200)
      })
    },
    S = function(i) {
      i.rules && i.rules.length > 0 && Array.prototype.push.apply(e.currentDecisionTableRules, i.rules), i.inputExpressions && 0 != i.inputExpressions.length ? i.inputExpressions.forEach(function(e) {
        t.model.columnVariableIdMap[e.id] = e.variableId;
        var i = 0;
        try {
          i = parseInt(e.id)
        } catch (o) {}
        i > v && (v = i)
      }) : t.addInputExpression(), i.outputExpressions && 0 != i.outputExpressions.length ? i.outputExpressions.forEach(function(e) {
        t.model.columnVariableIdMap[e.id] = e.variableId;
        var i = 0;
        try {
          i = parseInt(e.id)
        } catch (o) {}
        i > v && (v = i)
      }) : t.addOutputExpression(), t.getColumnDefinitions(i)
    },
    O = function() {
      return '<div role="columnheader" ng-class="{ \'sortable\': sortable }" ui-grid-one-bind-aria-labelledby-grid="col.uid + \'-header-text \' + col.uid + \'-sortdir-text\'">   <div role="button" tabindex="0" class="ui-grid-cell-contents ui-grid-header-cell-primary-focus" ng-class="{ \'ui-grid-cell-contents-has-error\': grid.appScope.hasErrorMessages(null, col.field, grid.appScope.errorsById) }"col-index="renderIndex" title="TOOLTIP" ng-click="grid.appScope.editInputExpression(col)">       <span tabindex="0" class="show-error-icon"  ng-click="grid.appScope.showErrorMessage(null, col.field, $event)"><img ng-src="{{ appResourceRoot + \'editor-app/images/bpmn-error.png\' }}"/></span>       <div class="text-center"><span>{{ col.displayName CUSTOM_FILTERS }}</span></div>       <div class="text-center"><span ui-grid-one-bind-id-grid="col.uid + \'-header-text\'" style="text-decoration: underline;cursor:pointer">[ {{ grid.appScope.getVariableNameByColumnId(col.name) }} ]</span></div>       <div tabindex="0" ng-show="grid.appScope.enableRemoveInputExpression()" class="ui-grid-column-menu-button" style="margin-right: 10px" ng-click="grid.appScope.removeInputExpression(col, $event)"><i class="glyphicon glyphicon-trash" style="font-size: 12px;"></i></div>   </div></div>'
    },
    R = function() {
      return '<div role="columnheader" ng-class="{ \'sortable\': sortable }" ui-grid-one-bind-aria-labelledby-grid="col.uid + \'-header-text \' + col.uid + \'-sortdir-text\'">   <div role="button" tabindex="0" class="ui-grid-cell-contents ui-grid-header-cell-primary-focus" ng-class="{ \'ui-grid-cell-contents-has-error\': grid.appScope.hasErrorMessages(null, col.field, grid.appScope.errorsById) }" col-index="renderIndex" title="TOOLTIP" ng-click="grid.appScope.editOutputExpression(col)">       <span tabindex="0" class="show-error-icon"  ng-click="grid.appScope.showErrorMessage(null, col.field, $event)"><img ng-src="{{ appResourceRoot + \'editor-app/images/bpmn-error.png\' }}"/></span>       <div class="text-center"><span>{{ col.displayName CUSTOM_FILTERS }}</span></div>       <div class="text-center"><span ui-grid-one-bind-id-grid="col.uid + \'-header-text\'" style="text-decoration: underline;cursor:pointer">[ {{ grid.appScope.getVariableNameByColumnId(col.name) }} ]</span></div>       <div tabindex="0" ng-show="grid.appScope.enableRemoveOutputExpression()" class="ui-grid-column-menu-button" style="margin-right: 10px" ng-click="grid.appScope.removeOutputExpression(col, $event)"><i class="glyphicon glyphicon-trash" style="font-size: 12px;"></i></div>   </div></div>'
    },
    E = function() {
      return '<div class="ui-grid-disable-selection"><div class="ui-grid-cell-contents text-center customRowHeader">{{rowRenderIndex + 1}}</div></div>'
    },
    y = function(e) {
      var t, i = '<div class="ui-grid-cell-contents" ng-class="{ \'ui-grid-cell-contents-empty\': !COL_FIELD, \'ui-grid-cell-contents-has-error\': grid.appScope.hasErrorMessages(rowRenderIndex, col.field, grid.appScope.errorsById) }" title="TOOLTIP">   <span class="show-error-icon" ng-click="grid.appScope.showErrorMessage(rowRenderIndex, col.field, $event)"><img ng-src="{{ appResourceRoot + \'editor-app/images/bpmn-error.png\' }}" /></span>   <span class="contents-value">{{COL_FIELD}}</span>   <span class="edit-icon" ng-click="grid.appScope.editRuleExpression(row.entity, col, $event)"><i class="glyphicon glyphicon-edit" style="font-size: 12px;margin-right: 4px"></i></span></div>';
      switch (e) {
        case "date":
          t = i;
          break;
        case "number":
          t = i;
          break;
        case "boolean":
          t = i;
          break;
        case "string":
          t = i;
          break;
        default:
          t = '<div class="ui-grid-cell-contents" title="TOOLTIP">{{COL_FIELD}}</div>'
      }
      return t
    };
  t.getColumnDefinitions = function(e) {
    if (e) {
      var i = 0,
        o = [];
      e.inputExpressions && e.inputExpressions.length > 0 && e.inputExpressions.forEach(function(e) {
        o.push({
          name: e.id,
          displayName: e.label ? e.label : "",
          field: e.id,
          type: "string",
          headerCellClass: "header-expression header-input-expression",
          headerCellTemplate: O(),
          cellClass: "cell-expression cell-input-expression",
          cellTemplate: y(e.type),
          enableHiding: !1,
          enableCellEditOnFocus: !0,
          cellEditableCondition: function(t) {
            return t.grid.appScope.model.columnVariableIdMap[e.id] ? !0 : !1
          }
        }), i++
      }), e.outputExpressions && e.outputExpressions.length > 0 && e.outputExpressions.forEach(function(e) {
        o.push({
          name: e.id,
          displayName: e.label ? e.label : "",
          field: e.id,
          type: "string",
          headerCellTemplate: R(),
          headerCellClass: "header-expression header-output-expression",
          cellClass: "cell-expression cell-output-expression",
          cellTemplate: y(e.type),
          enableHiding: !1,
          enableCellEditOnFocus: !0,
          cellEditableCondition: function(t) {
            return t.grid.appScope.model.columnVariableIdMap[e.id] ? !0 : !1
          }
        }), i++
      }), t.model.columnDefs.length = 0, Array.prototype.push.apply(t.model.columnDefs, o), t.gridApi.core.notifyDataChange(h.dataChange.ALL)
    }
  }, t.gridOptions = {
    data: e.currentDecisionTableRules,
    enableRowHeaderSelection: !0,
    multiSelect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableColumnMenus: !0,
    enableSorting: !1,
    enableCellEditOnFocus: !0,
    columnDefs: t.model.columnDefs,
    headerTemplate: "views/templates/decision-table-header-template.html"
  }, t.gridOptions.onRegisterApi = function(e) {
    t.gridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
      e.isSelected ? t.model.selectedRule = e.entity : delete t.model.selectedRule
    }), e.edit.on.afterCellEdit(t, function(e, i, o, n) {
      void 0 !== t.errorsById && o != n && c.validateDecisionTable()
    });
    var i = E();
    t.gridApi.core.addRowHeaderColumn({
      name: "rowHeaderCol",
      displayName: "",
      width: 35,
      cellTemplate: i
    })
  }, I(d.modelId), t.changeDetector = function() {
    e.decisionTableChanges = !0
  }, e.$watch("currentDecisionTable", t.changeDetector, !0), e.$watch("currentDecisionTableRules", t.changeDetector, !0);
  var T = function() {
    return v++, "" + v
  };
  t.getSelectedVariable = function(e) {
    if (t.availableFormFieldsForStep && t.availableFormFieldsForStep.length > 0)
      for (var i = 0; t.availableFormFieldsForStep.length > i; i++)
        if (e === t.availableFormFieldsForStep[i].id) return [t.availableFormFieldsForStep[i], "formfield"];
    if (t.availableVariablesForStep && t.availableVariablesForStep.length > 0)
      for (var i = 0; t.availableVariablesForStep.length > i; i++)
        if (e === t.availableVariablesForStep[i].processVariableName) return [{
          id: t.availableVariablesForStep[i].processVariableName,
          name: t.availableVariablesForStep[i].processVariableName,
          type: t.availableVariablesForStep[i].processVariableType
        }, "variable"];
    return [{
      id: e,
      name: null,
      type: null
    }, "value"]
  }
}]), angular.module("activitiModeler").controller("DecisionTableConditionEditorCtlr", ["$rootScope", "$scope", function(e, t) {
  t.popup = {
    selectedExpressionInputOption: "variable",
    selectedExpressionVariableType: "formfield",
    selectedExpressionLabel: t.model.selectedExpression.label
  };
  var i = angular.copy(t.model.selectedExpression.variableId),
    o = t.getSelectedVariable(t.model.selectedExpression.variableId);
  t.popup.selectedExpressionVariable = o[0], t.popup.selectedExpressionVariableType = o[1], t.cancel = function() {
    t.close()
  }, t.save = function() {
    if ("formfield" === t.popup.selectedExpressionVariableType ? (t.model.selectedExpression.variableType = "formfield", t.model.selectedExpression.type = t.convertFormfieldType(t.popup.selectedExpressionVariable.type)) : "variable" === t.popup.selectedExpressionVariableType && (t.model.selectedExpression.variableType = "variable", t.model.selectedExpression.type = t.convertVariableType(t.popup.selectedExpressionVariable.type)), t.model.selectedExpression.variableId = t.popup.selectedExpressionVariable.id, t.model.selectedExpression.label = t.popup.selectedExpressionLabel, i != t.model.selectedExpression.variableId) {
      var e = t.removeInputExpression(t.model.selectedColumn);
      t.addInputExpression({
        label: t.model.selectedExpression.label,
        variableId: t.model.selectedExpression.variableId,
        type: t.model.selectedExpression.type,
        variableType: t.model.selectedExpression.variableType
      }, e)
    } else t.model.selectedColumn.displayName = t.model.selectedExpression.label;
    t.close()
  }, t.close = function() {
    t.$hide()
  }
}]), angular.module("activitiModeler").controller("DecisionTableConclusionEditorCtlr", ["$rootScope", "$scope", "$q", "$translate", function(e, t) {
  if (t.popup = {
    selectedExpressionVariableType: t.model.selectedExpression.variableType || "",
    selectedExpressionLabel: t.model.selectedExpression.label || "",
    selectedExpressionNewVariable: 1 == t.model.selectedExpression.newVariable,
    selectedExpressionNewVariableType: t.availableVariableTypes[0]
  }, t.popup.selectedExpressionNewVariable) t.popup.selectedExpressionNewVariableId = t.model.selectedExpression.variableId, t.popup.selectedExpressionNewVariableType = t.model.selectedExpression.type;
  else {
    var i = t.getSelectedVariable(t.model.selectedExpression.variableId);
    "value" !== i[1] ? (t.popup.selectedExpressionVariable = i[0], t.popup.selectedExpressionVariableType = i[1]) : (t.popup.selectedExpressionVariable = null, t.popup.selectedExpressionVariableType = null)
  }
  var o = angular.copy(t.model.selectedExpression.variableId),
    n = angular.copy(t.model.selectedExpressionNewVariableId),
    r = angular.copy(t.model.selectedExpressionNewVariableType);
  t.cancel = function() {
    t.close()
  }, t.save = function() {
    if (t.popup.selectedExpressionNewVariable ? (t.model.selectedExpression.variableId = t.popup.selectedExpressionNewVariableId, t.model.selectedExpression.type = t.popup.selectedExpressionNewVariableType, t.model.selectedExpression.variableType = "variable") : "formfield" !== t.popup.selectedExpressionVariableType && t.popup.selectedExpressionVariableType ? "variable" === t.popup.selectedExpressionVariableType && (t.model.selectedExpression.variableId = t.popup.selectedExpressionVariable.id, t.model.selectedExpression.type = t.convertVariableType(t.popup.selectedExpressionVariable.type), t.model.selectedExpression.variableType = "variable") : (t.model.selectedExpression.variableId = t.popup.selectedExpressionVariable.id, t.model.selectedExpression.type = t.convertFormfieldType(t.popup.selectedExpressionVariable.type || "formfield"), t.model.selectedExpression.variableType = "formfield"), t.model.selectedExpression.newVariable = t.popup.selectedExpressionNewVariable, t.model.selectedExpression.label = t.popup.selectedExpressionLabel, o != t.model.selectedExpression.variableId || n != t.model.selectedExpressionNewVariableId || r != t.model.selectedExpressionNewVariableType) {
      var e = t.removeOutputExpression(t.model.selectedColumn);
      t.addOutputExpression({
        label: t.model.selectedExpression.label,
        variableId: t.model.selectedExpression.variableId,
        type: t.model.selectedExpression.type,
        variableType: t.model.selectedExpression.variableType,
        newVariable: t.model.selectedExpression.newVariable
      }, e)
    } else t.model.selectedColumn.displayName = t.model.selectedExpression.label;
    t.close()
  }, t.close = function() {
    t.$hide()
  }
}]), angular.module("activitiModeler").controller("DecisionTableRuleExpressionEditorCtlr", ["$rootScope", "$scope", "$q", "$translate", "$filter", "DecisionTableService", function(e, t, i, o, n, r) {
  var s = t.model.currentRuleExpression.columnType,
    a = t.model.currentRuleExpression.inputExpression,
    l = "yyyy-MM-dd",
    d = "YYYY-MM-DD";
  t.invalidExpressionMessage = !1;
  var c = {
    date: ["==", "!=", ">", "<", "<=", ">=", "__isEmpty__", "__isNotEmpty__"],
    number: ["==", "!=", ">", "<", "<=", ">=", "__isEmpty__", "__isNotEmpty__"],
    "boolean": ["==", "!=", "__isEmpty__", "__isNotEmpty__"],
    string: ["==", "!=", ".startswith", ".endswith", ".contains", "__isEmpty__", "__isNotEmpty__"]
  };
  t.formFieldsByType = {
    date: ["date"],
    number: ["integer", "amount"],
    "boolean": ["boolean"],
    string: ["text", "multi-line-text", "dropdown", "radio-buttons", "typeahead"]
  }, t.variablesByType = {
    date: ["date"],
    number: ["integer"],
    "boolean": ["boolean"],
    string: ["string"]
  }, t.additionalValueTypes = {
    date: ["date_execution"],
    number: [],
    "boolean": [],
    string: []
  }, t.availableOperatorsByType = {};
  for (var p in c) {
    var u = c[p],
      h = [];
    u.forEach(function(e) {
      h.push({
        id: e,
        label: "DECISION-TABLE-EDITOR.OPERATOR." + p.toUpperCase() + "." + e
      })
    }), t.availableOperatorsByType[p] = h
  }
  t.getOperators = function(e) {
    return t.availableOperatorsByType[e]
  }, t.availableDateCalculations = [{
    key: "",
    label: "DECISION-TABLE-EDITOR.CALCULATION.DATE.NONE"
  }, {
    key: "fn_addDate",
    label: "DECISION-TABLE-EDITOR.CALCULATION.DATE.ADD"
  }, {
    key: "fn_subtractDate",
    label: "DECISION-TABLE-EDITOR.CALCULATION.DATE.SUBTRACT"
  }], t.availableNumberCalculations = [{
    key: "",
    label: "DECISION-TABLE-EDITOR.CALCULATION.NUMBER.NONE"
  }, {
    key: "+",
    label: "DECISION-TABLE-EDITOR.CALCULATION.NUMBER.ADD"
  }, {
    key: "-",
    label: "DECISION-TABLE-EDITOR.CALCULATION.NUMBER.SUBTRACT"
  }, {
    key: "/",
    label: "DECISION-TABLE-EDITOR.CALCULATION.NUMBER.DIVIDE"
  }, {
    key: "*",
    label: "DECISION-TABLE-EDITOR.CALCULATION.NUMBER.MULTIPLY"
  }], t.availableBooleanValues = [{
    id: "true",
    label: "true"
  }, {
    id: "false",
    label: "false"
  }];
  var m = {
    __isEmpty__: "== empty",
    __isNotEmpty__: "!= empty"
  };
  t.popup = {
    value: {
      type: "value"
    },
    variable: {
      reference: null
    },
    formfield: {
      reference: null
    },
    selectedExpressionVariableType: "value",
    columnType: t.model.currentRuleExpression.columnType,
    inputExpression: a,
    selectedOperator: null,
    date: {
      type: "fixed",
      calculation: {
        method: null
      }
    },
    number: {
      type: "fixed",
      "static": null,
      calculation: {
        method: null
      }
    },
    "boolean": {
      type: "fixed",
      "static": null
    },
    string: {
      type: "fixed",
      "static": ""
    }
  };
  var f = function(e, t) {
      if (!e.method || !e.method.key) return t;
      var i = e.method.key;
      return i += "(", i += t, i += ",", i += e.years ? e.years : 0, i += ",", i += e.months ? e.months : 0, i += ",", i += e.days ? e.days : 0, i += ")"
    },
    g = function(e, t) {
      if (!e.method || !e.method.key) return t;
      var i = "";
      return i += t, i += " " + e.method.key + " ", i += e.param1 ? e.param1 : 0
    },
    v = {
      1: "years",
      2: "months",
      3: "days"
    },
    I = function(e) {
      var i = e.match(/^([a-zA-Z0-9_]+)\((.*)\)$/);
      if (i && i.length >= 2) {
        var o = i[1];
        if ("fn_date" == o && 3 == i.length && i[2]) {
          t.popup.value.type = "value";
          var n = i[2].replace(/"/g, "");
          t.popup.date.static = moment(n, d).toDate()
        } else "fn_now" == o && (t.popup.value.type = "date_execution")
      } else {
        var r = t.getSelectedVariable(e);
        t.popup.value.type = r[1], "value" != r[1] && (t.popup[r[1]].reference = r[0])
      }
    },
    S = function(e, t) {
      if (t)
        for (var i = t.split(","), o = 0; i.length > o && 4 > o; o++)
          if (0 == o) I(i[o].trim());
          else try {
            e[v[o]] = parseInt(i[o].trim())
          } catch (n) {}
    },
    O = function(e) {
      var i = "";
      try {
        i = parseFloat(e)
      } catch (o) {}
      if (isNaN(i)) {
        var n = t.getSelectedVariable(e);
        "value" == n[1] ? (t.invalidExpressionMessage = !0, t.popup.value.type = null) : (t.popup.value.type = n[1], t.popup[n[1]].reference = n[0])
      } else t.popup.value.type = "value", t.popup.date.type = "fixed", t.popup.number.static = i
    },
    R = function(e, i) {
      var o;
      if (e = e.trim()) {
        if ("date" == i) {
          var n = e.match(/^([a-zA-Z0-9_]+)\((.*)\)$/);
          if (n && n.length >= 2) {
            var r = n[1];
            if (t.availableDateCalculations.filter(function(e) {
              return e.key == r
            }).length > 0) return t.popup.date.calculation = {
              method: {
                key: r
              }
            }, n.length > 2 && S(t.popup.date.calculation, n[2]), void 0
          }
          t.popup.date.calculation.method || (t.popup.date.calculation.method = {
            key: ""
          }), I(e)
        } else if ("number" == i) {
          var n = e.match(/^([a-zA-Z0-9_]+)\s*([^a-z^A-Z^0-9^_^\s]+)\s*([0-9\.]+)$/);
          if (n && 4 == n.length) {
            var s = n[2];
            if (t.availableNumberCalculations.filter(function(e) {
              return e.key == s
            }).length > 0) {
              var l = "";
              t.popup.number.calculation = {
                method: {
                  key: s
                }
              };
              try {
                l = parseFloat(n[3]), t.popup.number.calculation.param1 = l
              } catch (d) {
                t.invalidExpressionMessage = !0
              }
              return O(n[1]), void 0
            }
          }
          t.popup.number.calculation.method || (t.popup.number.calculation.method = {
            key: ""
          }), O(e)
        } else if ("boolean" == i) "true" == e.toLowerCase() || "false" == e.toLowerCase() ? (t.popup.value.type = "value", t.popup.boolean.type = "fixed", t.popup.boolean.static = e) : (o = t.getSelectedVariable(e), t.popup.value.type = o[1], "value" != o[1] && (t.popup[o[1]].reference = o[0]));
        else if ("string" == i) {
          var n = e.match(/^'(.*)'$/);
          n ? e = n.length > 1 ? n[1] : "" : (n = e.match(/^"(.*)"$/), n && (e = n.length > 1 ? n[1] : "")), n ? (t.popup.value.type = "value", t.popup.string.type = "fixed", t.popup.string.static = e) : (o = t.getSelectedVariable(e), t.popup.value.type = o[1], "value" != o[1] && (t.popup[o[1]].reference = o[0]))
        }
      } else a && t.availableOperatorsByType[i] && t.availableOperatorsByType[i].length && (t.selectedOperator = t.availableOperatorsByType[i][0].id)
    },
    E = function() {
      var e = t.model.currentRuleExpression.row[t.model.currentRuleExpression.columnId] || "";
      if (e = e.trim(), "" != e)
        if (a)
          if (0 == e.indexOf("==") || 0 == e.indexOf("!=") || 0 == e.indexOf(">=") || 0 == e.indexOf("<=")) t.popup.selectedOperator = e.substring(0, 2), e = e.substring(2), 0 == t.popup.selectedOperator.indexOf("==") && 0 == e.trim().indexOf("empty") ? t.popup.selectedOperator = "__isEmpty__" : 0 == t.popup.selectedOperator.indexOf("!=") && 0 == e.trim().indexOf("empty") ? t.popup.selectedOperator = "__isNotEmpty__" : R(e, s);
          else if (0 == e.indexOf("<") || 0 == e.indexOf(">")) t.popup.selectedOperator = e.substring(0, 1), e = e.substring(1), R(e, s);
          else {
            var i = e.match(/^(\.[a-zA-Z0-9_]+)\(([^\\]*)\)$/);
            i && i.length > 1 ? (t.popup.selectedOperator = i[1], t.popup.selectedOperator && -1 == c[s].indexOf(t.popup.selectedOperator) ? t.invalidExpressionMessage = !0 : R(i.length > 2 ? i[2] : "", s)) : t.invalidExpressionMessage = !0
          } else R(e, s);
      else a && t.availableOperatorsByType[s] && t.availableOperatorsByType[s].length && (t.popup.selectedOperator = t.availableOperatorsByType[s][0].id)
    };
  E(), t.cancel = function() {
    t.close()
  };
  var y = function(e, t) {
      return t && t.length > 1 && "." == t[0] ? "(" + (e || "") + ")" : t && t.length ? " " + (e || "") : e
    },
    T = function() {
      var e = "",
        i = t.popup.selectedOperator;
      if (i && m[i]) e = m[i];
      else {
        a && (e += i);
        var o;
        "value" == t.popup.value.type ? o = t.popup.date.static ? 'fn_date("' + n("date")(t.popup.date.static, l) + '")' : "" : "date_execution" == t.popup.value.type ? o = "fn_now()" : t.popup[t.popup.value.type].reference && (o = t.popup[t.popup.value.type].reference.id + ""), e += y(f(t.popup.date.calculation, o), i)
      }
      t.model.currentRuleExpression.row[t.model.currentRuleExpression.columnId] = e
    },
    b = function() {
      var e = "",
        i = t.popup.selectedOperator;
      if (i && m[i]) e = m[i];
      else {
        a && (e += i);
        var o;
        if ("value" == t.popup.value.type) try {
          o = parseFloat(t.popup.number.static)
        } catch (n) {} else t.popup[t.popup.value.type].reference && (o = t.popup[t.popup.value.type].reference.id + "");
        e += y(g(t.popup.number.calculation, o), i)
      }
      t.model.currentRuleExpression.row[t.model.currentRuleExpression.columnId] = e
    },
    C = function() {
      var e = "",
        i = t.popup.selectedOperator;
      i && m[i] ? e = m[i] : (a && (e = i), "value" == t.popup.value.type ? e += y(t.popup.boolean.static + "", i) : t.popup[t.popup.value.type].reference && (e += y(t.popup[t.popup.value.type].reference.id + "", i))), t.model.currentRuleExpression.row[t.model.currentRuleExpression.columnId] = e
    },
    N = function() {
      var e = "",
        i = t.popup.selectedOperator;
      i && m[i] ? e = m[i] : (a && (e = i), "value" == t.popup.value.type ? e += y('"' + t.popup.string.static + '"', i) : t.popup[t.popup.value.type].reference && (e += y(t.popup[t.popup.value.type].reference.id + "", i))), t.model.currentRuleExpression.row[t.model.currentRuleExpression.columnId] = e
    };
  t.save = function() {
    if (a && !t.popup.selectedOperator) t.model.currentRuleExpression.row[t.model.currentRuleExpression.columnId] = "";
    else {
      var e = t.model.currentRuleExpression.columnType;
      "date" == e ? T() : "number" == e ? b() : "boolean" == e ? C() : "string" == e && N()
    }
    t.close(), void 0 !== t.errorsById && r.validateDecisionTable()
  }, t.close = function() {
    t.$hide()
  }, t.closeDatePopup = function() {
    jQuery("#date").blur()
  }, t.clearDate = function() {
    t.popup.date.static = void 0, jQuery("#date").blur()
  }, t.selectToday = function(e, t) {
    var i = new Date;
    i = new Date(i.getFullYear(), i.getMonth(), i.getDate(), 0, 0, 0, 0), e = i, t && t(e), jQuery("#date").blur()
  }
}]), angular.module("activitiModeler").controller("ValidateDecisionTableModelCtrl", ["$rootScope", "$scope", "$translate", "$timeout", function(e, t, i) {
  t.gridOptions = {
    data: t.validationErrors,
    headerRowHeight: 28,
    enableHorizontalScrollbar: 0,
    enableColumnMenus: !1,
    enableSorting: !1,
    columnDefs: [{
      field: "defaultDescription",
      displayName: i.instant("MODEL.VALIDATION.ERRORS.DESCRIPTION")
    }, {
      field: "warning",
      displayName: i.instant("MODEL.VALIDATION.ERRORS.WARNING"),
      width: 100
    }, {
      field: "validatorSetName",
      displayName: i.instant("MODEL.VALIDATION.ERRORS.SET"),
      width: 200
    }]
  }, t.ok = function() {
    t.$hide()
  }, t.close = function() {
    t.$hide()
  }
}]), angular.module("activitiModeler").controller("DecisionTableToolbarController", ["$scope", "$http", "$modal", "$q", "$rootScope", "$translate", "$location", "DecisionTableService", "ProcessScopeService", function(e, t, i, o, n, r, s, a, l) {
  var d = DECISION_TABLE_TOOLBAR_CONFIG.items;
  e.items = [];
  for (var c = 0; d.length > c; c++) e.items.push(d[c]);
  e.secondaryItems = DECISION_TABLE_TOOLBAR_CONFIG.secondaryItems;
  var p = function(e, t) {
    for (var i = Array.prototype.slice.call(arguments).splice(2), o = e.split("."), n = o.pop(), r = 0; o.length > r; r++) t = t[o[r]];
    return t[n].apply(this, i)
  };
  e.toolbarButtonClicked = function(s) {
    var d = e.items[s],
      c = {
        $scope: e,
        $rootScope: n,
        $http: t,
        $modal: i,
        $q: o,
        $translate: r,
        DecisionTableService: a,
        ProcessScopeService: l
      };
    p(d.action, window, c)
  }, e.toolbarSecondaryButtonClicked = function(d) {
    var c = e.secondaryItems[d],
      u = {
        $scope: e,
        $rootScope: n,
        $http: t,
        $modal: i,
        $q: o,
        $translate: r,
        $location: s,
        DecisionTableService: a,
        ProcessScopeService: l
      };
    p(c.action, window, u)
  }
}]);
var DECISION_TABLE_TOOLBAR = {
  ACTIONS: {
    saveModel: function(e) {
      _internalCreateModal({
        backdrop: !0,
        keyboard: !0,
        template: "views/popup/decision-table-save-model.html?version=" + Date.now(),
        scope: e.$scope
      }, e.$modal, e.$scope)
    },
    validateModel: function(e) {
      e.DecisionTableService.validateDecisionTable()
    },
    help: function() {},
    feedback: function() {},
    closeEditor: function(e) {
      var t = function() {
        e.$rootScope.decisiontableChanges = !1, e.ProcessScopeService.navigateBack("/decision-tables")
      };
      if (1 == e.$rootScope.decisiontableChanges) {
        e.$scope.$emit("decisionTableChangesEvent");
        var i = e.$scope.$on("mustSaveEvent", function() {
            var i = "";
            e.$rootScope.currentDecisionTable.description && (i = e.$rootScope.currentDecisionTable.description);
            var o = {
              newVersion: !1
            };
            r(), e.DecisionTableBuilderService.saveDecisionTable(o, e.$rootScope.currentDecisionTable.name, i, t)
          }),
          o = e.$scope.$on("discardDataEvent", function() {
            r(), t()
          }),
          n = e.$scope.$on("continueEditingEvent", function() {
            r()
          })
      } else t();
      var r = function() {
        n(), i(), o()
      }
    }
  }
};
angular.module("activitiModeler").controller("SaveDecisionTableCtrl", ["$rootScope", "$scope", "$http", "$route", "$location", "$translate", "DecisionTableService", "ProcessScopeService", function(e, t, i, o, n, r, s, a) {
  var l = "";
  e.currentDecisionTable.description && (l = e.currentDecisionTable.description);
  var d = {
    name: e.currentDecisionTable.name,
    key: e.currentDecisionTable.key,
    description: l,
    reusable: !1,
    newVersion: !1,
    comment: ""
  };
  t.saveDialog = d, t.status = {
    loading: !1
  };
  var c = function(e) {
    e && e.length > 0 && (t.saveDialog.validationErrors = !0)
  };
  s.validateDecisionTable(c), t.cancel = function() {
    t.$hide()
  }, t.saveAndClose = function() {
    t.save(function() {
      a.navigateBack("/decision-tables")
    })
  }, t.save = function(i) {
    if (t.saveDialog.name && 0 != t.saveDialog.name.length && t.saveDialog.key && 0 != t.saveDialog.key.length) {
      t.status = {
        loading: !0
      };
      var o = {
          reusable: t.saveDialog.reusable,
          newVersion: t.saveDialog.newVersion,
          comment: t.saveDialog.comment
        },
        n = function() {
          t.$hide(), e.addAlert("Saved decision table '" + t.saveDialog.name, "info"), i && i(), e.decisionTableChanges = !1
        },
        a = function(i) {
          t.$hide(), i ? e.addAlert(i, "error") : e.addAlert(r.instant("DECISION-TABLE-EDITOR.ALERT.SAVE-ERROR", {
            name: t.saveDialog.name
          }), "error")
        };
      s.saveDecisionTable(o, t.saveDialog.name, t.saveDialog.key, t.saveDialog.description, n, a)
    }
  }, t.isOkButtonDisabled = function() {
    return t.status.loading ? !1 : t.error && t.error.conflictResolveAction ? "saveAs" === t.error.conflictResolveAction ? !t.error.saveAs || 0 == t.error.saveAs.length : !1 : !0
  }, t.okClicked = function() {
    t.error && ("discardChanges" === t.error.conflictResolveAction ? (t.close(), o.reload()) : "overwrite" === t.error.conflictResolveAction || "newVersion" === t.error.conflictResolveAction ? t.save() : "saveAs" === t.error.conflictResolveAction && t.save(function() {
      e.ignoreChanges = !0, a.navigateBack("/decision-tables")
    }))
  }
}]);
var DECISION_TABLE_TOOLBAR_CONFIG = {
  items: [{
    type: "button",
    title: "DECISION_TABLE_TOOLBAR.ACTION.SAVE",
    cssClass: "editor-icon editor-icon-save",
    action: "DECISION_TABLE_TOOLBAR.ACTIONS.saveModel"
  }, {
    type: "button",
    title: "DECISION_TABLE_TOOLBAR.ACTION.VALIDATE",
    cssClass: "glyphicon glyphicon-ok",
    action: "DECISION_TABLE_TOOLBAR.ACTIONS.validateModel"
  }],
  secondaryItems: [{
    type: "button",
    title: "DECISION_TABLE_TOOLBAR.ACTION.CLOSE",
    cssClass: "glyphicon glyphicon-remove",
    action: "DECISION_TABLE_TOOLBAR.ACTIONS.closeEditor"
  }]
};
angular.module("activitiModeler").service("ProcessBuilderService", ["$http", "$q", "$rootScope", "$translate", "$location", "ProcessScopeService", function(e, t, i, o, n, r) {
  var s = function(i) {
    var o = t.defer();
    return e(i).success(function(e) {
      o.resolve(e)
    }).error(function(e) {
      o.reject(e)
    }), o.promise
  };
  this.removeStepFromContainer = function(e, t) {
    e = this.getStepArrayForContainer(e);
    var i = this.getIndexInContainer(t, e);
    i >= 0 && e.splice(i, 1)
  }, this.addStepToContainer = function(e, t, i, n) {
    if (e = this.getStepArrayForContainer(e), t && e && i >= 0) {
      var r = {
        id: this._generateUniqueId(t),
        type: t.id,
        name: ""
      };
      return "choice-step" === t.id ? r.choices = [{
        name: "First choice",
        condition: {},
        steps: []
      }, {
        name: "Second choice",
        condition: {},
        steps: []
      }] : "human-step" === t.id ? r.overdueSteps = [] : "email-step" === t.id || "alfresco-cloud-publish-step" === t.id || "box-cloud-publish-step" === t.id || "google-drive-publish-step" === t.id || "subprocess-step" === t.id || "goto-step" === t.id || "end-process-step" === t.id || "rest-call-step" === t.id || "generate-doc-step" === t.id || "decision-step" === t.id || (r.customStepId = t.id, r.type = "custom-step"), this._initializeDefaultData(r, t), o(t.name).then(function(e) {
        r.name = e
      }), e.splice(i, 0, r), this._addStepMetadata(r, n), r.meta.new = !0, r
    }
  }, this.insertStepInContainer = function(e, t, i) {
    t && e && i >= 0 && (e = this.getStepArrayForContainer(e), e.splice(i, 0, t))
  }, this.getIndexInContainer = function(e, t) {
    if (e && t)
      for (var i = 0; t.length > i; i++)
        if (t[i].id == e.id) return i;
    return -1
  }, this.updateStepSummary = function(e) {
    if (e && e.meta) switch (e.type) {
      case "human-step":
        if (e.assignment && "user" === e.assignment.type && (e.assignment.assignee || e.assignment.assigneeField)) {
          var t;
          if (e.assignment.assignee) {
            var i = "";
            e.assignment.assignee.firstName && (i = e.assignment.assignee.firstName), i.length > 0 && (i += " "), e.assignment.assignee.lastName && (i += e.assignment.assignee.lastName), 0 == i.length && e.assignment.assignee.email && (i = e.assignment.assignee.email), t = {
              name: i
            }
          } else e.assignment.assigneeField && (t = {
            name: e.assignment.assigneeField.name + " - " + e.assignment.assigneeField.id
          });
          e.meta.summary = o.instant("PROCESS-BUILDER.HUMAN-STEP.SUMMARY.ASSIGNEE", t)
        } else if (e.assignment && "users" === e.assignment.type && (e.assignment.candidateUsers && e.assignment.candidateUsers.length > 0 || e.assignment.candidateUserFields && e.assignment.candidateUserFields.length > 0)) {
          var n = [];
          e.assignment.candidateUsers && e.assignment.candidateUsers.length > 0 && (n = n.concat(e.assignment.candidateUsers)), e.assignment.candidateUserFields && e.assignment.candidateUserFields.length > 0 && (n = n.concat(e.assignment.candidateUserFields)), e.meta.summary = o.instant("PROCESS-BUILDER.HUMAN-STEP.SUMMARY.USERS", n)
        } else if (e.assignment && "groups" === e.assignment.type && (e.assignment.candidateGroups && e.assignment.candidateGroups.length > 0 || e.assignment.candidateGroupFields && e.assignment.candidateGroupFields.length > 0)) {
          var n = [];
          e.assignment.candidateGroups && e.assignment.candidateGroups.length > 0 && (n = n.concat(e.assignment.candidateGroups)), e.assignment.candidateGroupFields && e.assignment.candidateGroupFields.length > 0 && (n = n.concat(e.assignment.candidateGroupFields)), e.meta.summary = o.instant("PROCESS-BUILDER.HUMAN-STEP.SUMMARY.GROUPS", n)
        } else e.meta.summary = o.instant("PROCESS-BUILDER.HUMAN-STEP.SUMMARY.INITIATOR");
        break;
      case "email-step":
        if (e.recipient && "user" === e.recipient.type && e.recipient.user) {
          var i = "";
          e.recipient.user.firstName && (i = e.recipient.user.firstName), i.length > 0 && (i += " "), e.recipient.user.lastName && (i += e.recipient.user.lastName), 0 == i.length && e.recipient.user.email && (i = e.recipient.user.email), e.meta.summary = "Email to " + i
        } else if (e.recipient && "users" === e.recipient.type) {
          var r = 0;
          e.recipient.users && e.recipient.users.length > 0 && (r = e.recipient.users.length), e.recipient.userFields && e.recipient.userFields.length > 0 && (r += e.recipient.userFields.length), e.meta.summary = "Email to " + r + " recipients"
        } else e.meta.summary = "Email to process initiator";
        break;
      case "choice-step":
        e.meta.summary = e.choices ? "Choice step with " + e.choices.length + " choices" : "Choice step, no choices defined yet";
        break;
      case "subprocess-step":
        e.meta.summary = e.subProcessDefinition ? "Sub process " + e.subProcessDefinition.name : "No sub process selected";
        break;
      case "goto-step":
        e.meta.summary = e.gotoStep && e.gotoStep.name ? "Goto step: " + e.gotoStep.name : "No goto step selected";
        break;
      case "alfresco-cloud-publish-step":
        e.meta.summary = "Publish content to Alfresco";
        break;
      case "box-cloud-publish-step":
        e.meta.summary = "Publish content to Box";
        break;
      case "google-drive-publish-step":
        e.meta.summary = "Publish content to Google Drive";
        break;
      case "rest-call-step":
        e.meta.summary = "Rest call";
        break;
      case "generate-doc-step":
        e.meta.summary = "Generate Document";
        break;
      case "decision-step":
        e.meta.summary = "Decision step";
        break;
      case "custom-step":
        e.meta.summary = "Custom step '" + e.meta.type.name + "'";
        break;
      default:
        e.meta.summary = ""
    }
  }, this.getStencilSet = function(e) {
    var t;
    return t = e && isNaN(e) === !1 ? ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + e + "/stepeditor" : ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/0/stepeditor", s({
      method: "GET",
      url: t
    })
  }, this.filterKickstartForms = function(e) {
    return s({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/form-models",
      params: {
        filter: e,
        referenceId: i.currentKickstartModel.definition.id
      }
    })
  }, this.filterKickstartSubProcesses = function(e) {
    return s({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/editor/sub-processes",
      params: {
        filter: e,
        referenceId: i.currentKickstartModel.definition.id
      }
    })
  }, this.validateKickstartModel = function(t, n, s) {
    delete Array.prototype.toJSON;
    var l = {
      definition: JSON.stringify(this._cloneAndfilterMeta(n)),
      parentProcessScopeIdentifiers: JSON.stringify(r.getParentIdentifiers())
    };
    e({
      method: "POST",
      headers: {
        Accept: "application/json",
        "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8"
      },
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + t + "/editor/validate",
      data: l,
      transformRequest: function(e) {
        var t = [];
        for (var i in e) t.push(encodeURIComponent(i) + "=" + encodeURIComponent(e[i]));
        return t.join("&")
      }
    }).success(function(e) {
      e && e.length > 0 ? i.currentKickstartValidationErrors = e : (i.currentKickstartValidationErrors = [], i.addAlertPromise(o("MODELER.ALERT.VALIDATION-OK"), "info"));
      for (var t = [], r = 0; i.currentKickstartValidationErrors.length > r; r++) 0 > t.indexOf(i.currentKickstartValidationErrors[r].id) && t.push(i.currentKickstartValidationErrors[r].id);
      t.length > 0 && i.addAlertPromise(o("MODELER.ALERT.VALIDATION-ERROR"), "error");
      var l = !1;
      t.indexOf("process") >= 0 && (l = !0), i.kickstartModelRootLevelValidationError = l;
      var d = !1;
      if (t.indexOf("start-event") >= 0 && (d = !0), i.kickstartModelStartEventValidationError = d, n.steps)
        for (var r = 0; n.steps.length > r; r++) n.steps[r].meta.hasValidationError = t.indexOf(n.steps[r].id) >= 0 ? !0 : !1, a(n.steps, t);
      s && s(e)
    })
  };
  var a = function(e, t) {
    if (e && 0 != e.length)
      for (var i = 0; e.length > i; i++) {
        var o = !1;
        if (t.indexOf(e[i].id) >= 0 && (o = !0), e[i].meta.hasValidationError = o, e[i].choices && e[i].choices.length > 0)
          for (var n = 0; e[i].choices.length > n; n++) a(e[i].choices[n].steps, t);
        else e[i].overdueSteps && a(e[i].overdueSteps, t)
      }
  };
  this.processValidationSteps = function(e, t) {
    a(e, t)
  }, this.saveKickstartModel = function(t, o) {
    var n = i.currentKickstartModel.definition;
    delete Array.prototype.toJSON;
    var r = {
      newVersion: t.newVersion,
      comment: t.comment
    };
    r.kickstartModel = {
      name: t.name,
      description: t.description
    }, r.kickstartModel.definition = this._cloneAndfilterMeta(n.definition), html2canvas(jQuery("#canvasSection"), {
      onrendered: function(t) {
        var i = t.width / 300,
          s = document.createElement("canvas");
        s.setAttribute("width", 300), s.setAttribute("height", t.height / i);
        var a = s.getContext("2d");
        a.drawImage(t, 0, 0, t.width, t.height, 0, 0, 300, t.height / i);
        var l = s.toDataURL("image/png");
        r.modelImageBase64 = l, e({
          method: "PUT",
          url: ACTIVITI.CONFIG.contextRoot + "/app/rest/kickstart-models/" + n.id,
          data: r
        }).success(function(e) {
          o && o("success", e)
        }).error(function(e) {
          o && o("error", e)
        })
      }
    })
  }, this.openKickstartModel = function(e) {
    n.path("kickstart-models/" + e)
  }, this.fetchKickstartModel = function(e, t) {
    var i;
    return i = t ? ACTIVITI.CONFIG.contextRoot + "/app/rest/kickstart-models/" + e + "/history/" + t : ACTIVITI.CONFIG.contextRoot + "/app/rest/kickstart-models/" + e, s({
      method: "GET",
      url: i
    })
  }, this.getAllFormsInModel = function(e, t) {
    var i = ACTIVITI.CONFIG.contextRoot + "/app/rest/kickstart-models/" + e + "/forms",
      o = {};
    return t && (o.excludeFormId = t), s({
      method: "GET",
      params: o,
      url: i
    })
  }, this.addMetaToSteps = function(e, t) {
    for (var i = 0; e.steps.length > i; i++) this._addStepMetadata(e.steps[i], t)
  }, this.extractStepsOfType = function(e, t) {
    for (var i = [], o = 0; e.steps.length > o; o++) this._extractStepsOfType(e.steps[o], t, i);
    return i
  }, this._extractStepsOfType = function(e, t, i) {
    if (e && (e.type == t && i.push(e), "choice-step" == e.type && e.choices))
      for (var o = 0; e.choices.length > o; o++) {
        var n = e.choices[o].steps;
        if (n)
          for (var r = 0; n.length > r; r++) this._extractStepsOfType(n[r], t, i)
      }
  }, this.moveStep = function(e, t, i, o) {
    this.removeStepFromContainer(t, e), this.insertStepInContainer(i, e, o)
  }, this.getStepType = function(e, t) {
    for (var i = 0; t.length > i; i++)
      if (t[i].id == e.type || e.customStepId && t[i].id == e.customStepId) return t[i];
    return void 0
  }, this._generateUniqueId = function(e) {
    var t = Math.floor(1e3 * Math.random() + 1),
      i = (new Date).getTime();
    return e.id + "-" + i + "-" + t
  }, this._deleteAllMetaPropertyItems = function(e) {
    if (null != e)
      for (var t = 0; e.length > t; t++) e[t] && null != e[t] && this._deleteAllMetaProperty(e[t])
  }, this._deleteAllMetaProperty = function(e) {
    if (!(null === e || void 0 === e || "string" == typeof e || e instanceof String)) {
      e.meta && delete e.meta, e.$$hashKey && delete e.$$hashKey;
      for (var t in e) e.hasOwnProperty(t) && this._deleteAllMetaProperty(e[t])
    }
  }, this._cloneAndfilterMeta = function(e) {
    var t = jQuery.extend(!0, {}, e);
    return this._deleteAllMetaProperty(t), t
  }, this._initializeDefaultData = function(e) {
    switch (e.type) {
      case "human-step":
        e.assignment = {}
    }
  }, this.getStepArrayForContainer = function(e) {
    var t = e;
    return e && (e.steps ? t = e.steps : e.overdueSteps && (t = e.overdueSteps)), t
  }, this._addStepMetadata = function(e, t) {
    if (e && !e.meta)
      if (e.meta = {
        type: this.getStepType(e, t)
      }, this.updateStepSummary(e), "choice-step" == e.type && e.choices)
        for (var i = 0; e.choices.length > i; i++) {
          var o = e.choices[i].steps;
          if (o)
            for (var n = 0; o.length > n; n++) this._addStepMetadata(o[n], t)
        } else if ("human-step" == e.type)
        if (e.overdueSteps)
          for (var n = 0; e.overdueSteps.length > n; n++) this._addStepMetadata(e.overdueSteps[n], t);
        else e.overdueSteps = []
  }, this.getAllStepsArray = function(e) {
    var t = [];
    if (e)
      for (var i = 0; e.length > i; i++) {
        if (t.push(e[i]), e[i].overdueSteps)
          for (var o = 0; e[i].overdueSteps.length > o; o++) t.push(e[i].overdueSteps[o]);
        if (e[i].choices)
          for (var n = 0; e[i].choices.length > n; n++) {
            if (e[i].choices[n].steps)
              for (var r = 0; e[i].choices[n].steps.length > r; r++) t.push(e[i].choices[n].steps[r]);
            t.push(e[i].choices[n])
          }
      }
    return t
  }, this.isFirstInContainer = function(e, t) {
    if (!e || !t) return !1;
    for (var i = e.currentKickstartModel.definition.definition.steps, o = 0; i.length > o; o++) {
      if (i[0].id === t.id) return !0;
      if (i[o].overdueSteps && i[o].overdueSteps.length > 0 && i[o].overdueSteps[0].id === t.id) return !0;
      if (i[o].choices)
        for (var n = 0; i[o].choices.length > n; n++)
          if (i[o].choices[n].steps && i[o].choices[n].steps.length > 0 && i[o].choices[n].steps[0].id === t.id) return !0
    }
    return !1
  }
}]), angular.module("activitiModeler").controller("KickstartModelController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", "ProcessBuilderService", "FormBuilderService", "ProcessScopeService", function(e, t, i, o, n, r, s, a, l, d, c, p) {
  function u(e, t, i, o) {
    e.unsavedChangesModalInstance || (e.handleResponseFunction = function(n) {
      e.unsavedChangesModalInstance = void 0, 1 == n ? i && i() : 0 == n ? t && t() : o && o()
    }, _internalCreateModal({
      template: "editor-app/popups/unsaved-changes.html",
      scope: e
    }, s, e))
  }
  e.setMainPageById("processes"), e.kickstartModelRootLevelValidationError = !1, e.kickstartModelStartEventValidationError = !1, e.formItems = void 0, t.forms = {}, e.currentKickstartModel = {}, e.currentKickstartValidationErrors = [], t.formInfo = {}, t.formFields = {}, t.formOutcomes = {}, t.startFormFields = [], t.processStartTypes = [{
    id: "none",
    title: i.instant("PROCESS-BUILDER.START-STEP.START-TYPES.USER")
  }, {
    id: "form",
    title: i.instant("PROCESS-BUILDER.START-STEP.START-TYPES.FORM")
  }], t.model = {
    processStart: {
      expanded: !1,
      type: t.processStartTypes[0]
    }
  }, t.processStartChanged = function() {
    e.currentKickstartModel && e.currentKickstartModel.definition && e.currentKickstartModel.definition.definition && "none" == t.model.processStart.type.id && (e.currentKickstartModel.definition.definition.startForm = void 0)
  }, e.modelChanges = !1, p.init(a.modelId, {
    model: function() {
      return e.currentKickstartModel.definition.definition
    },
    success: function() {
      t.$on("form-cache-changed", function(i, o) {
        o && o.stepId && "__startform" === o.stepId && (t.startFormFields.length = 0, e.currentKickstartModel.definition.definition.startForm && Array.prototype.push.apply(t.startFormFields, p.getFormFieldsForForm(e.currentKickstartModel.definition.definition.startForm.id)))
      }), d.fetchKickstartModel(a.modelId, a.modelHistoryId).then(function(i) {
        i.definition || (i.definition = {
          steps: []
        }), d.getStencilSet(i.stencilSetId).then(function(e) {
          t.stencilSet = e, d.addMetaToSteps(i.definition, t.stencilSet.stepTypes)
        }), i.definition.startForm && (t.model.processStart.type = t.processStartTypes[1]), e.currentKickstartModel.definition = i, t.steps = i.definition.steps, e.currentKickstartModel.definition.definition.startForm && Array.prototype.push.apply(t.startFormFields, p.getFormFieldsForForm(e.currentKickstartModel.definition.definition.startForm.id)), e.modelChanges = !1, n(function() {
          t.modelLoaded = !0
        }, 200)
      })
    }
  }), t.$watch("currentKickstartModel", function() {
    t.modelLoaded && (e.modelChanges = !0)
  }, !0), t.$on("$locationChangeStart", function(i, o) {
    if (!e.ignoreChanges && e.modelChanges) {
      i.preventDefault();
      var n = function() {
          e.ignoreChanges = !0, r.url(o.substring(o.indexOf("/#") + 2))
        },
        s = function() {
          e.ignoreChanges = !1, e.setMainPageById("processes")
        };
      t.yesNoCancel = !1, u(t, null, n, s)
    } else e.ignoreChanges = !1
  }), t.$on("modelChangesEvent", function() {
    var e = function() {
        t.$broadcast("discardDataEvent")
      },
      i = function() {
        t.$broadcast("mustSaveEvent")
      },
      o = function() {
        t.$broadcast("continueEditingEvent")
      };
    t.yesNoCancel = !0, u(t, i, e, o)
  }), t.selectStartForm = function(t) {
    e.currentKickstartModel.definition.definition.startForm, e.currentKickstartModel.definition.definition.startForm = t, p.refresh()
  }, t.createStartForm = function() {
    t.createFormCallback = function(i) {
      var o = {
        id: i.id,
        name: i.name,
        description: i.description
      };
      e.currentKickstartModel.definition.definition.startForm = o, t.saveModelBeforeNavigation()
    }, _internalCreateModal({
      template: "views/popup/form-create.html?version=" + Date.now(),
      scope: t
    }, s, t)
  }, t.showStartForm = function() {
    t.saveModelBeforeNavigation()
  }, t.saveModelBeforeNavigation = function() {
    var t = e.currentKickstartModel.definition,
      i = function(t) {
        "success" == t && (e.modelChanges = !1, p.navigateForward("form-editor/" + encodeURIComponent(e.currentKickstartModel.definition.definition.startForm.id), "__startform"))
      },
      o = {
        name: t.name,
        description: t.description,
        newVersion: !1
      };
    d.saveKickstartModel(o, i)
  }, t.toggleProcessStartExpanded = function() {
    t.model.processStart.expanded = !t.model.processStart.expanded
  }, t.deleteModel = function() {
    d.deleteKickstartModel(e.currentKickstartModel.definition.id).then(function() {
      p.navigateBack("kickstart-models"), e.addAlertPromise(i("KICKSTART-MODEL.ALERT.DELETED"), "info")
    })
  }, t.showValidationErrors = function(e) {
    t.currentStep = e, _internalCreateModal({
      backdrop: !0,
      keyboard: !0,
      template: "views/popup/kickstart-validation-errors.html?version=" + Date.now(),
      scope: t
    }, s, t)
  }
}]), angular.module("activitiModeler").controller("KickstartModelDesignController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", "ProcessBuilderService", "ProcessScopeService", function(e, t, i, o, n, r, s, a, l, d, c) {
  t.insertStepBelow = function(e, i, o) {
    var n = d.getStepArrayForContainer(o ? o : t.steps);
    if (t.moveState) {
      if (t.isMoveDisabled(i, o)) return;
      var r = i ? d.getIndexInContainer(i, n) + 1 : 0;
      return t.confirmMove(n, r), void 0
    }
    if (!t.insertState) {
      var r = i ? d.getIndexInContainer(i, n) + 1 : 0,
        s = {};
      if (t.insertState = s, null != o) {
        for (var a = [], p = 0; t.stencilSet.stepTypes.length > p; p++) t.stencilSet.stepTypes[p].isContainer || (t.stencilSet.stepTypes[p].hasOwnProperty("showInChoiceContainer") ? t.stencilSet.stepTypes[p].showInChoiceContainer && o && o.steps && o.condition ? a.push(t.stencilSet.stepTypes[p]) : t.stencilSet.stepTypes[p].showInTimerOverdueContainer && o && "human-step" === o.type && o.meta && o.meta.dueActionOption && o.meta.dueActionOption.nextSteps && a.push(t.stencilSet.stepTypes[p]) : a.push(t.stencilSet.stepTypes[p]));
        s.types = a
      } else {
        for (var a = [], p = 0; t.stencilSet.stepTypes.length > p; p++) t.stencilSet.stepTypes[p].hasOwnProperty("showInChoiceContainer") || a.push(t.stencilSet.stepTypes[p]);
        s.types = a
      }
      s.confirm = function(e) {
        var i = d.addStepToContainer(n, e, r, t.stencilSet.stepTypes);
        if (t.toggleActiveStep(i), "custom-step" == i.type && i.meta && i.meta.type && i.meta.type.custom) {
          var o = i.meta.type.custom.variables;
          if (o && o.length > 0) {
            for (var a = [], l = 0; o.length > l; l++) a.push({
              processVariableName: o[l].name,
              processVariableType: o[l].type
            });
            c.updateCustomStencilVariablesCache(i.id, a)
          }
        }
        s.popover.hide()
      }, s.popover = l(angular.element(e.target), {
        template: "views/popover/insert-step-popover.html",
        placement: "bottom",
        show: !0,
        scope: t
      }), s.popover.$scope.$on("tooltip.hide", function() {
        s.popover.destroy(), delete t.insertState
      })
    }
  }, t.confirmMove = function(e, i) {
    t.moveState && (d.moveStep(t.moveState.step, t.moveState.container, e, i), t.moveState.step.meta.moving = !1, delete t.moveState)
  }, t.toggleActiveStep = function(e) {
    t.activeStep && t.activeStep.meta.new && (t.activeStep.meta.new = !1), t.activeStep = e ? t.activeStep ? t.activeStep.id == e.id ? void 0 : e : e : void 0
  }, t.removeStep = function(e, i) {
    if (e) {
      if (i = i ? i : t.steps, "custom-step" == e.type && e.meta && e.meta.type && e.meta.type.custom) {
        var o = e.meta.type.custom.variables;
        o && o.length > 0 && c.updateCustomStencilVariablesCache(e.id)
      }
      d.removeStepFromContainer(i, e)
    }
  }, t.toggleMoveStep = function(e, i) {
    if (e)
      if (t.toggleActiveStep(), e.meta.moving && e.meta.moving === !0) e.meta.moving = !1, delete t.moveState;
      else {
        for (var o = d.getAllStepsArray(t.currentKickstartModel.definition.definition.steps), n = 0; o.length > n; n++) o[n].id != e.id && o[n].meta && o[n].meta.moving && (o[n].meta.moving = !1);
        e.meta.moving = !0, i = i ? i : t.steps, t.moveState || t.insertState || (t.moveState = {}), t.moveState.step = e, t.moveState.container = i
      }
  }, t.isMoveDisabled = function(e, i, o) {
    if (o) {
      if (e && o.step.id === e.id) return !0;
      if ("choice-step" === o.step.type && i) return !0;
      if ("goto-step" === o.step.type && !i) return !0;
      if ("human-step" === o.step.type && i && i.id === o.step.id) return !0;
      var n, r = d.getStepArrayForContainer(i ? i : t.steps),
        s = d.getIndexInContainer(o.step, r);
      if (e && (n = d.getIndexInContainer(e, r)), s >= 0 && n >= 0 && 1 == s - n) return !0;
      if (r && r.length > 0 && r[0].id === o.step.id) {
        if (!e) return !0;
        if (e.choices && i && i.steps) return !0;
        if (i && i.overdueSteps) return !0
      }
      if (e && "goto-step" === o.step.type && i && i.steps && i.steps[i.steps.length - 1].id != e.id) return !0;
      if (e && "goto-step" === o.step.type && i && i.overdueSteps && i.overdueSteps[i.overdueSteps.length - 1].id != e.id) return !0
    }
    return !1
  }, t.getStepSummary = function(e) {
    return d.getStepSummary(e)
  }
}]), angular.module("activitiModeler").controller("HumanStepOverdueStepsController", ["$rootScope", "$scope", "ProcessBuilderService", function(e, t) {
  t.stepContainer = t.step, t.activeTab = void 0
}]), angular.module("activitiModeler").controller("HumanStepController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", "ProcessBuilderService", "FormBuilderService", "ProcessScopeService", function(e, t, i, o, n, r, s, a, l, d, c, p) {
  t.model = {}, t.model.fieldsForCurrentForm = [];
  for (var u = 0; t.stencilSet.stepTypes.lenth > u; u++)
    if ("human-step" == t.stencilSet.stepTypes[u].id) {
      t.humanStepTabs = t.stencilSet.stepTypes[u].tabs;
      break
    }
  t.$on("$select.select", function() {
    e.safeApply(function() {})
  }), t.$watch("activeStep.meta.type", function(e) {
    e && (t.humanStepTabs = e.tabs)
  }), void 0 == t.step.allowSendEmail && (t.step.allowSendEmail = !0), t.step.assignment ? 0 == t.step.assignment.hasOwnProperty("initiatorCanCompleteTask") && (t.step.assignment.initiatorCanCompleteTask = !0) : t.step.assignment = {
    initiatorCanCompleteTask: !0
  }, t.taskDueDateOptions = [{
    id: "none",
    title: i.instant("PROCESS-BUILDER.FIELD.DUEDATE.TASK-DUE-DATE-OPTIONS.NO-DUEDATE")
  }, {
    id: "static",
    title: i.instant("PROCESS-BUILDER.FIELD.DUEDATE.TASK-DUE-DATE-OPTIONS.STATIC")
  }, {
    id: "field",
    title: i.instant("PROCESS-BUILDER.FIELD.DUEDATE.TASK-DUE-DATE-OPTIONS.FIELD")
  }, {
    id: "variable",
    title: i.instant("PROCESS-BUILDER.FIELD.DUEDATE.TASK-DUE-DATE-OPTIONS.VARIABLE")
  }], t.step.taskDueDateOption && 0 !== t.step.taskDueDateOption.length || (t.step.taskDueDateOption = "none"), t.setAddCalculationType = function() {
    t.step.taskDueDateCalculationType = "add"
  }, t.setSubtractCalculationType = function() {
    t.step.taskDueDateCalculationType = "subtract"
  }, t.dueDateOptions = [{
    id: "none",
    title: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-DATE-OPTIONS.NO-TIMER")
  }, {
    id: "duration",
    title: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-DATE-OPTIONS.DURATION")
  }, {
    id: "property",
    title: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-DATE-OPTIONS.FIELD")
  }, {
    id: "variable",
    title: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-DATE-OPTIONS.VARIABLE")
  }], t.dueActionOptions = [{
    id: "none",
    title: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-ACTION-OPTIONS.NO-ACTION")
  }, {
    id: "reassign-task",
    title: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-ACTION-OPTIONS.REASSIGN.TITLE"),
    description: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-ACTION-OPTIONS.REASSIGN.DESCRIPTION")
  }, {
    id: "keep-task",
    title: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-ACTION-OPTIONS.KEEP.TITLE"),
    description: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-ACTION-OPTIONS.KEEP.DESCRIPTION"),
    nextSteps: !0
  }, {
    id: "end-task",
    title: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-ACTION-OPTIONS.END.TITLE"),
    description: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-ACTION-OPTIONS.END.DESCRIPTION"),
    nextSteps: !0
  }, {
    id: "end-process",
    title: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-ACTION-OPTIONS.END-PROCESS.TITLE"),
    description: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-ACTION-OPTIONS.END-PROCESS.DESCRIPTION")
  }];
  var h;
  h = t.step.dueVariable ? t.dueDateOptions[3] : t.step.dueField ? t.dueDateOptions[2] : t.step.dueDuration ? t.dueDateOptions[1] : t.dueDateOptions[0], t.step.meta.dueDateOption = h.id;
  var m;
  if (t.step.dueAction)
    for (var u = 0; t.dueActionOptions.length > u; u++)
      if (t.dueActionOptions[u].id == t.step.dueAction) {
        m = t.dueActionOptions[u];
        break
      }
  m || (m = t.dueActionOptions[0]), t.step.meta.dueActionOption = m, t.$watch("step.meta.dueActionOption", function(e) {
    e ? ("reassign-task" != e.id || t.step.dueAssignment || (t.step.dueAssignment = {}), t.step.dueAction = e.id) : t.step.dueAction = t.dueActionOptions[0].id
  }), t.$watch("step.meta.dueDateOption", function(e) {
    "duration" == e ? (t.step.dueDuration || (t.step.dueDuration = {}), t.step.dueField = void 0, t.step.dueVariable = void 0) : "variable" == e ? (t.step.dueDuration = void 0, t.step.dueField = void 0) : "property" == e ? (t.step.dueDuration = void 0, t.step.dueVariable = void 0) : (t.step.dueDuration = void 0, t.step.dueField = void 0, t.step.dueVariable = void 0, t.step.meta.dueActionOption = t.dueActionOptions[0])
  }, !0), t.$watch("step.assignment", function(e) {
    e && d.updateStepSummary(t.step)
  }, !0), t.selectForm = function(e) {
    t.step.formDefinition, t.step.formDefinition = e, p.refresh()
  }, t.createForm = function() {
    t.createFormCallback = function(e) {
      var i = {
        id: e.id,
        name: e.name,
        description: e.description
      };
      t.step.formDefinition = i, t.saveModelBeforeNavigation()
    }, _internalCreateModal({
      template: "views/popup/form-create.html?version=" + Date.now(),
      scope: t
    }, s, t)
  }, t.showForm = function() {
    t.saveModelBeforeNavigation()
  }, t.saveModelBeforeNavigation = function() {
    var i = e.currentKickstartModel.definition,
      o = function(i) {
        "success" == i && (e.modelChanges = !1, p.navigateForward("form-editor/" + encodeURIComponent(t.step.formDefinition.id), t.step.id))
      },
      n = {
        name: i.name,
        description: i.description,
        newVersion: !1
      };
    d.saveKickstartModel(n, o)
  }, t.$on("form-cache-changed", function(e, i) {
    i && i.stepId && i.stepId === t.step.id && (t.model.fieldsForCurrentForm.length = 0, t.step.formDefinition && Array.prototype.push.apply(t.model.fieldsForCurrentForm, p.getFormFieldsForForm(t.step.formDefinition.id)))
  }), t.step.formDefinition && Array.prototype.push.apply(t.model.fieldsForCurrentForm, p.getFormFieldsForForm(t.step.formDefinition.id)), t.allSteps = d.getAllStepsArray(t.currentKickstartModel.definition.definition.steps), t.getRestResponseVariables = function() {
    return p.getVariablesForStep(t.allSteps, t.step.id, ["date"])
  }, t.selectTaskDueDateResponseVariable = function(e) {
    t.step.taskDueDateVariable = e
  }, t.selectTimerDueDateResponseVariable = function(e) {
    t.step.dueVariable = e
  }
}]), angular.module("activitiModeler").controller("EmailStepController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", "ProcessBuilderService", function(e, t, i, o, n, r, s, a, l, d) {
  t.emailStepTabs = t.activeStep.meta.type.tabs, t.emailValuesChanged = function() {
    d.updateStepSummary(t.step)
  }, t.step.recipient || (t.step.recipient = {}), t.$watch("step.recipient", function(e) {
    e && d.updateStepSummary(t.step)
  }, !0), t.allSteps = d.getAllStepsArray(t.currentKickstartModel.definition.definition.steps)
}]), angular.module("activitiModeler").controller("ChoiceStepController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", "ProcessBuilderService", "FormBuilderService", "ProcessScopeService", function(e, t, i, o, n, r, s, a, l, d, c, p) {
  function u(e) {
    e.stopPropagation && e.stopPropagation(), e.preventDefault && e.preventDefault(), e.cancelBubble = !0, e.returnValue = !1
  }
  for (var h = 0; t.stencilSet.stepTypes.length > h; h++)
    if ("choice-step" == t.stencilSet.stepTypes[h].id) {
      t.choiceTabs = t.stencilSet.stepTypes[h].tabs;
      break
    }
  t.addChoice = function() {
    t.step.choices || (t.step.choices = []), t.step.choices.push({
      name: "New choice",
      condition: {},
      steps: []
    }), d.updateStepSummary(t.step)
  }, t.nextChoice = function() {
    t.step.choices && t.step.meta.stepIndex < t.step.choices.length - 2 && (t.step.meta.stepIndex += 1, t.updateActiveChoices())
  }, t.previousChoice = function() {
    t.step.choices && t.step.meta.stepIndex > 0 && (t.step.meta.stepIndex -= 1, t.updateActiveChoices())
  }, t.editChoice = function(e) {
    var i = {
      template: "views/process-builder/choice-step-choice-details.html?version=" + Date.now(),
      scope: t
    };
    t.choiceName = angular.copy(e.name), t.expression = angular.copy(e.condition), t.isDefault = e.isDefault ? !0 : !1, t.choice = e, _internalCreateModal(i, s, t)
  }, t.removeChoice = function(e, o) {
    t.handleResponseFunction = function(i) {
      if (i && t.step.choices.length > 2 && e) {
        var o = t.activeChoices.indexOf(e);
        o >= 0 && (t.step.choices.splice(t.step.meta.stepIndex + o, 1), t.step.meta.stepIndex = 0, t.updateActiveChoices())
      }
    }, t.operationAction = i.instant("COMMON.OPERATION.DELETE"), _internalCreateModal({
      template: "editor-app/popups/yes-no-modal.html",
      scope: t
    }, s, t), u(o)
  }, t.$watch("step.choices", function(e) {
    e && t.updateActiveChoices()
  }), t.$watch("step.choices", function(e) {
    e && d.updateStepSummary(t.step)
  }, !0), t.updateActiveChoices = function() {
    var e = t.step.choices,
      i = [];
    e[t.step.meta.stepIndex] && i.push(e[t.step.meta.stepIndex]), e[t.step.meta.stepIndex + 1] && i.push(e[t.step.meta.stepIndex + 1]), t.activeChoices = i
  }, t.setNoCondition = function() {
    t.activeChoice.condition.fieldType = "none", t.resetValues("none")
  }, t.setFieldType = function() {
    t.activeChoice && (t.activeChoice.condition.fieldType = "field", t.resetValues("field"))
  }, t.setOutcomeType = function() {
    t.activeChoice && (t.activeChoice.condition.fieldType = "outcome", t.resetValues("outcome"))
  }, t.setRestResponseVariableType = function() {
    t.activeChoice && (t.activeChoice.condition.fieldType = "restResponseVariable", t.resetValues("restResponseVariable"))
  }, t.resetValues = function(e) {
    t.activeChoice.condition.operator = void 0, ("none" == e || "field" == e || "restResponseVariable" == e) && (t.activeChoice.condition.outcomeFormId = void 0, t.activeChoice.condition.outcomeFormName = void 0, t.activeChoice.condition.outcomeName = void 0), ("none" == e || "outcome" == e || "restResponseVariable" == e) && (t.activeChoice.condition.fieldId = void 0, t.activeChoice.condition.fieldName = void 0, t.activeChoice.condition.value = void 0), ("none" == e || "field" == e || "outcome" == e) && (t.activeChoice.condition.responseVariableName = void 0, t.activeChoice.condition.responseVariableType = void 0)
  }, t.activeTab = t.step.meta.new ? t.choiceTabs[1].id : t.choiceTabs[0].id, t.step.meta.stepIndex || 0 === t.step.meta.stepIndex || (t.step.meta.stepIndex = 0), t.$watch("activeStep", function(e) {
    e && e.id == t.step.id || (t.activeTab = t.choiceTabs[1].id)
  });
  var m = ["text", "integer", "date", "boolean", "dropdown", "radio-buttons", "typeahead", "amount"];
  t.refreshAvailableFormFields = function() {
    var e = d.getAllStepsArray(t.currentKickstartModel.definition.definition.steps);
    t.availableFormFields = p.getFormFieldsForStep(e, t.step.id, m)
  }, t.refreshAvailableForms = function() {
    var e = d.getAllStepsArray(t.currentKickstartModel.definition.definition.steps),
      i = p.getFormsForStep(e, t.step.id);
    t.availableForms = i
  }, t.refreshAvailableOutcomes = function() {
    if (t.activeChoice && t.activeChoice.condition && t.activeChoice.condition.outcomeFormId) {
      var e = p.getFormOutcomesForForm(t.activeChoice.condition.outcomeFormId);
      t.availableFormOutcomes = e
    }
  }, t.refreshAvailableResponseVariables = function() {
    var e = d.getAllStepsArray(t.currentKickstartModel.definition.definition.steps),
      i = p.getVariablesForStep(e, t.step.id, ["date"]);
    t.choiceResponseVariables = i
  }
}]), angular.module("activitiModeler").controller("CustomStepController", ["$rootScope", "$scope", "ProcessBuilderService", function(e, t, i) {
  t.customStepTabs = t.activeStep.meta.type.tabs;
  for (var o = 0; t.customStepTabs.length > o; o++)
    for (var n = 0; t.customStepTabs[o].properties.length > n; n++) {
      var r = t.customStepTabs[o].properties[n];
      "select-fields" == r.type && (t.step[r.id] || (t.step[r.id] = {}))
    }
  e.currentReadonlyFields = {
    fields: {}
  }, i.getAllFormsInModel(e.currentKickstartModel.definition.id).then(function(t) {
    if (t && t.length > 0) {
      for (var i = {}, o = [], n = 0; t.length > n; n++) {
        var r = t[n];
        if (r.fields)
          for (var s = 0; r.fields.length > s; s++) {
            var a = r.fields[s];
            "readonly" === a.type || "readonly-text" === a.type || i[a.id] || (i[a.id] = !0, o.push(a))
          }
      }
      e.currentReadonlyFields.fields.data = o
    } else e.currentReadonlyFields.fields.data = [];
    e.currentReadonlyFields.fields.loading = !1
  })
}]), angular.module("activitiModeler").controller("SubProcessStepController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", "ProcessBuilderService", "ProcessScopeService", function(e, t, i, o, n, r, s, a, l, d, c) {
  for (var p = 0; t.stencilSet.stepTypes.lenth > p; p++)
    if ("subprocess-step" == t.stencilSet.stepTypes[p].id) {
      t.subProcessStepTabs = t.stencilSet.stepTypes[p].tabs;
      break
    }
  t.$on("$select.select", function() {
    e.safeApply(function() {})
  }), t.$watch("activeStep.meta.type", function(e) {
    e && (t.subProcessStepTabs = e.tabs)
  }), t.$watch("step.subProcessDefinition", function(e) {
    e && d.updateStepSummary(t.step)
  }), t.selectSubProcess = function(e) {
    t.step.subProcessDefinition, t.step.subProcessDefinition = e, c.refresh()
  }, t.createSubProcess = function() {
    t.createSubProcessCallback = function(e) {
      var i = {
        id: e.id,
        name: e.name,
        description: e.description
      };
      t.step.subProcessDefinition = i, t.saveModelBeforeNavigation()
    }, _internalCreateModal({
      template: "views/popup/subprocess-create.html?version=" + Date.now(),
      scope: t
    }, s, t)
  }, t.showSubProcess = function() {
    t.saveModelBeforeNavigation()
  }, t.saveModelBeforeNavigation = function() {
    var i = e.currentKickstartModel.definition,
      o = function(i) {
        "success" === i && (e.modelChanges = !1, c.navigateForward("kickstart-editor/" + encodeURIComponent(t.step.subProcessDefinition.id), t.step.id))
      },
      n = {
        name: i.name,
        description: i.description,
        newVersion: !1
      };
    d.saveKickstartModel(n, o)
  }
}]), angular.module("activitiModeler").controller("GotoStepController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", "ProcessBuilderService", function(e, t, i, o, n, r, s, a, l, d) {
  for (var c = 0; t.stencilSet.stepTypes.lenth > c; c++)
    if ("goto-step" == t.stencilSet.stepTypes[c].id) {
      t.gotoStepTabs = t.stencilSet.stepTypes[c].tabs;
      break
    }
  t.$watch("activeStep.meta.type", function(e) {
    e && (t.gotoStepTabs = e.tabs)
  }), t.selectStep = function(e) {
    e && (t.step.gotoStep = {
      id: e.id,
      name: e.name,
      stepType: e.type
    })
  }, t.$watch("step.gotoStep", function(e) {
    e && d.updateStepSummary(t.step)
  }), t.flattenSteps = function(e, i) {
    for (var o = 0; e.length > o; o++)
      if (e[o].choices)
        for (var n = 0; e[o].choices.length > n; n++) e[o].choices[n].steps && t.flattenSteps(e[o].choices[n].steps, i);
      else "goto-step" !== e[o].type && i.push(e[o])
  };
  var p = [];
  t.flattenSteps(t.steps, p), t.flatStepArray = p
}]), angular.module("activitiModeler").controller("EndProcessStepController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", "ProcessBuilderService", function(e, t) {
  t.endProcessStepTabs = t.activeStep.meta.type.tabs
}]), angular.module("activitiModeler").controller("GoogleDriveCloudPublishStepController", ["$rootScope", "$scope", "$translate", "ProcessBuilderService", "ContentAccountService", "FormBuilderService", "ProcessScopeService", function(e, t, i, o, n, r, s) {
  t.googleDriveSourceOptions = [{
    id: "process",
    title: i.instant("PROCESS-BUILDER.PUBLISH-STEP.SOURCE-OPTIONS.ALL")
  }, {
    id: "field",
    title: i.instant("PROCESS-BUILDER.PUBLISH-STEP.SOURCE-OPTIONS.FIELD")
  }], t.step.meta.destinationUseSubfolder = void 0 != t.step.createFolderField, t.$watch("activeStep.meta.type", function(e) {
    e && (t.stepTabs = e.tabs, o.updateStepSummary(t.step))
  }), t.$watch("step.meta.googleDriveSourceOption", function(e) {
    e && "process" == e.id && (t.step.contentContainerField = void 0)
  }), t.$watch("step.meta.destinationUseSubfolder", function(e) {
    e || (t.step.createFolderField = void 0)
  }), t.selectDestinationFolder = function(e) {
    e.path && (t.step.path = e.path, t.step.account = e.account)
  }, t.googleDriveAccount = {
    selected: ""
  }, t.loadGoogleDriveAccounts = function() {
    t.contentGoogleDriveAccounts = {
      loading: !0
    };
    var e = [];
    n.getAccounts().then(function(i) {
      if (i && i.data)
        for (var o = 0; i.data.length > o; o++) i.data[o].serviceId && i.data[o].serviceId.length >= 12 && "google-drive" === i.data[o].serviceId.substring(0, 12) && (i.data[o].name = i.data[o].serviceId, e.push(i.data[o]));
      if (t.step.account)
        for (var o = 0; e.length > o; o++) t.step.account && e[o].serviceId === t.step.account.id ? t.googleDriveAccount.selected = e[o] : "google-drive" === e[o].serviceId && (t.googleDriveAccount.selected = e[o]);
      else t.googleDriveAccount.selected = e[0];
      t.contentGoogleDriveAccounts.rawList = e, t.contentGoogleDriveAccounts.loading = !1
    })
  }, t.resetDestination = function() {
    t.step.path = void 0, t.step.user = void 0, t.step.userName = void 0, t.step.account = void 0
  }, t.addPublishAs = function(e, i) {
    e ? (t.step.user = e.id, t.step.userField = null, t.step.userName = e.firstName ? e.firstName + " " + e.lastName : e.lastName) : (t.step.user = null, t.step.userField = i), t.step.publishAsType = "user"
  }, t.setPublishAs = function(e) {
    "process_initiator" === e && (t.step.user = void 0, t.step.userName = void 0), t.step.publishAsType = e
  }, t.step.publishAsType || (t.step.publishAsType = "process_initiator"), t.allSteps = o.getAllStepsArray(t.currentKickstartModel.definition.definition.steps), t.loadGoogleDriveAccounts(), t.step.meta.googleDriveSourceOption = t.step.contentContainerField ? t.googleDriveSourceOptions[1] : t.googleDriveSourceOptions[0], t.model.variableType = "formField";
  var a = s.getFormFieldsForStep(t.allSteps, t.step.id, ["upload"]),
    l = s.getVariablesForStep(t.allSteps, t.step.id, ["document"]);
  if (t.step.contentContainerField) {
    if (t.step.meta.googleDriveSourceOption = t.googleDriveSourceOptions[1], a && a.length > 0)
      for (var d = !1, c = 0; a.length > c; c++)
        if (a[c].id === t.step.contentContainerField.id) {
          t.model.variableType = "formField", d = !0;
          break
        }
    if (!d && l && l.length > 0)
      for (var c = 0; l.length > c; c++)
        if (l[c].processVariableName === t.step.contentContainerField.id) {
          t.model.variableType = "variable";
          break
        }
  } else t.step.meta.googleDriveSourceOption = t.googleDriveSourceOptions[0]
}]), angular.module("activitiModeler").controller("BoxCloudPublishStepController", ["$rootScope", "$scope", "$translate", "ProcessBuilderService", "ContentAccountService", "FormBuilderService", "ProcessScopeService", function(e, t, i, o, n, r, s) {
  t.boxSourceOptions = [{
    id: "process",
    title: i.instant("PROCESS-BUILDER.PUBLISH-STEP.SOURCE-OPTIONS.ALL")
  }, {
    id: "field",
    title: i.instant("PROCESS-BUILDER.PUBLISH-STEP.SOURCE-OPTIONS.FIELD")
  }], t.step.meta.destinationUseSubfolder = void 0 != t.step.createFolderField, t.$watch("activeStep.meta.type", function(e) {
    e && (t.stepTabs = e.tabs, o.updateStepSummary(t.step))
  }), t.$watch("step.meta.boxSourceOption", function(e) {
    e && "process" == e.id && (t.step.contentContainerField = void 0)
  }), t.$watch("step.meta.destinationUseSubfolder", function(e) {
    e || (t.step.createFolderField = void 0)
  }), t.selectDestinationFolder = function(e) {
    e.path && (t.step.path = e.path, t.step.account = e.account)
  }, t.boxAccount = {
    selected: ""
  }, t.loadBoxAccounts = function() {
    t.contentBoxAccounts = {
      loading: !0
    };
    var e = [];
    n.getAccounts().then(function(i) {
      if (i && i.data)
        for (var o = 0; i.data.length > o; o++) "box" === i.data[o].serviceId.substring(0, 3) && (i.data[o].name = i.data[o].serviceId, e.push(i.data[o]));
      if (t.step.account)
        for (var o = 0; e.length > o; o++) t.step.account && e[o].serviceId === t.step.account.id ? t.boxAccount.selected = e[o] : "box" === e[o].serviceId && (t.boxAccount.selected = e[o]);
      else t.boxAccount.selected = e[0];
      t.contentBoxAccounts.rawList = e, t.contentBoxAccounts.loading = !1
    })
  }, t.resetDestination = function() {
    t.step.path = void 0, t.step.user = void 0, t.step.userName = void 0, t.step.account = void 0
  }, t.addPublishAs = function(e, i) {
    e ? (t.step.user = e.id, t.step.userField = null, t.step.userName = e.firstName ? e.firstName + " " + e.lastName : e.lastName) : (t.step.user = null, t.step.userField = i), t.step.publishAsType = "user"
  }, t.setPublishAs = function(e) {
    "process_initiator" === e && (t.step.user = void 0, t.step.userName = void 0), t.step.publishAsType = e
  }, t.step.publishAsType || (t.step.publishAsType = "process_initiator"), t.allSteps = o.getAllStepsArray(t.currentKickstartModel.definition.definition.steps), t.loadBoxAccounts(), t.step.meta.boxSourceOption = t.step.contentContainerField ? t.boxSourceOptions[1] : t.boxSourceOptions[0], t.isMetaDataAllowed = !1, n.isBoxMetaDataAllowed().then(function(e) {
    t.isMetaDataAllowed = e
  }), t.model.variableType = "formField";
  var a = s.getFormFieldsForStep(t.allSteps, t.step.id, ["upload"]),
    l = s.getVariablesForStep(t.allSteps, t.step.id, ["document"]);
  if (t.step.contentContainerField) {
    if (t.step.meta.boxSourceOption = t.boxSourceOptions[1], a && a.length > 0)
      for (var d = !1, c = 0; a.length > c; c++)
        if (a[c].id === t.step.contentContainerField.id) {
          t.model.variableType = "formField", d = !0;
          break
        }
    if (!d && l && l.length > 0)
      for (var c = 0; l.length > c; c++)
        if (l[c].processVariableName === t.step.contentContainerField.id) {
          t.model.variableType = "variable";
          break
        }
  } else t.step.meta.boxSourceOption = t.boxSourceOptions[0]
}]), angular.module("activitiModeler").controller("AlfrescoCloudPublishStepController", ["$rootScope", "$scope", "$translate", "ProcessBuilderService", "ContentAccountService", "FormBuilderService", "ProcessScopeService", function(e, t, i, o, n, r, s) {
  t.step.meta.alfrescoSourceOption = t.step.source, t.alfrescoSourceOptions = [{
    id: "process",
    title: i.instant("PROCESS-BUILDER.PUBLISH-STEP.SOURCE-OPTIONS.ALL")
  }, {
    id: "field",
    title: i.instant("PROCESS-BUILDER.PUBLISH-STEP.SOURCE-OPTIONS.FIELD")
  }], t.model = {
    currentTab: "documentDefinition"
  }, t.step.meta.destinationUseSubfolder = void 0 != t.step.createFolderField, t.$watch("activeStep.meta.type", function(e) {
    e && (t.stepTabs = e.tabs, o.updateStepSummary(t.step))
  }), t.$watch("step.meta.alfrescoSourceOption", function(e) {
    e && ("process" == e.id && (t.step.contentContainerField = void 0), t.step.source = e.id)
  }), t.$watch("step.meta.destinationUseSubfolder", function(e) {
    e || (t.step.createFolderField = void 0)
  }), t.selectDestinationFolder = function(e) {
    e.site && e.path && (e.network && (t.step.network = e.network), t.step.site = e.site, t.step.path = e.path, t.step.account = e.account)
  }, t.alfrescoAccount = {
    selected: ""
  }, t.loadAlfrescoAccounts = function() {
    t.contentAlfrescoAccounts = {
      loading: !0,
      onPrem: !1
    };
    var e = [],
      i = !1;
    n.getAccounts().then(function(o) {
      if (o && o.data)
        for (var n = 0; o.data.length > n; n++) "alfresco-" === o.data[n].serviceId.substring(0, 9) && (e.push(o.data[n]), "alfresco-cloud" != o.data[n].serviceId && 0 == i ? i = !0 : "alfresco-cloud" === o.data[n].serviceId && (o.data[n].name = "Alfresco Cloud"));
      if (t.step.account || t.step.network)
        for (var n = 0; e.length > n; n++) t.step.account && e[n].serviceId === t.step.account.id ? t.alfrescoAccount.selected = e[n] : t.step.network && "alfresco-cloud" === e[n].serviceId && (t.alfrescoAccount.selected = e[n]);
      else t.alfrescoAccount.selected = e[0];
      t.contentAlfrescoAccounts.onPrem = i, t.contentAlfrescoAccounts.rawList = e, t.contentAlfrescoAccounts.loading = !1
    })
  }, t.resetDestination = function() {
    t.step.network = void 0, t.step.site = void 0, t.step.path = void 0, t.step.user = void 0, t.step.userName = void 0, t.step.account = void 0
  }, t.addPublishAs = function(e, i) {
    e ? (t.step.user = e.id, t.step.userField = null, t.step.userName = e.firstName ? e.firstName + " " + e.lastName : e.lastName) : (t.step.user = null, t.step.userField = i), t.step.publishAsType = "user"
  }, t.setPublishAs = function(e) {
    "process_initiator" === e && (t.step.user = void 0, t.step.userName = void 0), t.step.publishAsType = e
  }, t.step.publishAsType || (t.step.publishAsType = "process_initiator"), t.setActiveContentTab = function(e) {
    t.activeContentTab = e
  }, t.allSteps = o.getAllStepsArray(t.currentKickstartModel.definition.definition.steps), t.model.variableType = "formField";
  var a = s.getFormFieldsForStep(t.allSteps, t.step.id, ["upload"]),
    l = s.getVariablesForStep(t.allSteps, t.step.id, ["document"]);
  if (t.step.contentContainerField) {
    if (t.step.meta.alfrescoSourceOption = t.alfrescoSourceOptions[1], a && a.length > 0)
      for (var d = !1, c = 0; a.length > c; c++)
        if (a[c].id === t.step.contentContainerField.id) {
          t.model.variableType = "formField", d = !0;
          break
        }
    if (!d && l && l.length > 0)
      for (var c = 0; l.length > c; c++)
        if (l[c].processVariableName === t.step.contentContainerField.id) {
          t.model.variableType = "variable";
          break
        }
  } else t.step.meta.alfrescoSourceOption = t.alfrescoSourceOptions[0];
  t.loadAlfrescoAccounts()
}]), angular.module("activitiModeler").controller("RestCallStepController", ["$rootScope", "$scope", "$translate", "$timeout", "$modal", "ProcessBuilderService", "uiGridConstants", "EndpointUtilService", "ProcessScopeService", function(e, t, i, o, n, r, s, a, l) {
  t.restEndpointFieldTypes = ["text", "integer", "amount", "boolean", "dropdown", "typeahead", "people", "functional-group", "radio-buttons", "upload"], t.insertRestUrlField = {
    position: 0
  }, t.$watch("activeStep.meta.type", function(e) {
    e && (t.stepTabs = e.tabs, r.updateStepSummary(t.step))
  }), t.$watch("insertRestUrlField.field", function(e) {
    if (e) {
      var i = t.step.restUrl,
        n = "${" + e.id + "}";
      i = i ? i.substring(0, t.insertRestUrlField.position) + n + i.substring(t.insertRestUrlField.position) : n, t.insertRestUrlField.field = void 0, o(function() {
        var e = angular.element("#rest-url-value");
        e.focus(), e.val(i), t.step.restUrl = i
      }, 200)
    }
  }), t.endpointLabel = function(e, t, i, o, n) {
    return a.getEndpointLabel(e, t, i, o, n)
  }, t.loadBaseEndpoints = function() {
    a.getAllEndpointConfigurations().then(function(e) {
      t.endpointConfigurations = e
    })
  }, t.httpMethods = ["GET", "POST", "PUT", "DELETE"], t.step.httpMethod || (t.step.httpMethod = t.httpMethods[0]), t.model = {
    urlFieldType: "formField",
    requestMappingValues: []
  }, t.setUrlFieldType = function(e) {
    "restResponse" === e ? t.model = {
      urlFieldType: "restResponse"
    } : "formField" === e && (t.model = {
      urlFieldType: "formField"
    })
  }, t.getFullEndpointURL = function() {
    return a.getFullEndpointURL(t.step.endpoint, t.step.restUrl)
  }, t.executeEndpointTest = function() {
    _internalCreateModal({
      template: "views/popup/endpoint-check-test-values.html?version=" + Date.now(),
      scope: t
    }, n, t)
  }, t.jsonTypes = ["string", "boolean", "long", "date"], t.step.requestMappings || (t.step.requestMappings = []);
  var d = i.instant("PROCESS-BUILDER.REST-CALL-STEP.REQUEST-MESSAGE.JSON-PROPERTY"),
    c = i.instant("PROCESS-BUILDER.REST-CALL-STEP.REQUEST-MESSAGE.JSON-VALUE");
  t.requestMessageGridOptions = {
    data: t.step.requestMappings,
    headerRowHeight: 28,
    enableRowSelection: !0,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    unselect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableColumnMenus: !1,
    enableSorting: !1,
    columnDefs: [{
      field: "jsonPropertyValue",
      displayName: c,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getVariableColumnValue(row.entity)}}</div>'
    }, {
      field: "jsonPropertyName",
      displayName: d
    }]
  }, t.requestMessageGridOptions.onRegisterApi = function(e) {
    t.requestMessageGridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
      t.selectedRequestMapping = e.isSelected ? e.entity : void 0
    })
  }, t._getVariableColumnValue = function(e) {
    var t = "";
    return e ? (e.jsonPropertyValueFormField ? t = e.jsonPropertyValueFormField.name : e.jsonPropertyValueRestResponseField ? t = e.jsonPropertyValueRestResponseField.name : e.jsonPropertyValue && "" != e.jsonPropertyValue && (t = e.jsonPropertyValue), t) : t
  }, t.addNewRequestMapping = function() {
    t.popup = {
      selectedRequestMapping: {
        jsonPropertyType: t.jsonTypes[0]
      }
    }, _internalCreateModal({
      template: "views/popup/map-json-request.html?version=" + Date.now(),
      scope: t
    }, n, t)
  }, t.removeRequestMapping = function() {
    if (t.selectedRequestMapping) {
      var e = t.step.requestMappings.indexOf(t.selectedRequestMapping);
      t.requestMessageGridApi.selection.toggleRowSelection(t.selectedRequestMapping), t.step.requestMappings.splice(e, 1), o(function() {
        t.step.requestMappings.length > 0 ? t.requestMessageGridApi.selection.toggleRowSelection(t.step.requestMappings[0]) : t.selectedRequestMapping = void 0
      })
    }
  }, t.editRequestMapping = function() {
    t.popup = {
      selectedRequestMapping: {
        jsonPropertyName: t.selectedRequestMapping.jsonPropertyName,
        jsonPropertyType: t.selectedRequestMapping.jsonPropertyType,
        jsonPropertyValue: t.selectedRequestMapping.jsonPropertyValue,
        jsonPropertyValueFormField: t.selectedRequestMapping.jsonPropertyValueFormField,
        jsonPropertyValueRestResponseField: t.selectedRequestMapping.jsonPropertyValueRestResponseField
      }
    }, t.popup.selectedRequestMapping.jsonPropertyValueType = t.selectedRequestMapping.jsonPropertyValueFormField ? "field" : t.selectedRequestMapping.jsonPropertyValueRestResponseField ? "restResponse" : "static", t.popup.selectedRequestMapping.state = "edit", _internalCreateModal({
      template: "views/popup/map-json-request.html?version=" + Date.now(),
      scope: t
    }, n, t)
  }, t.showRequestMapping = function() {
    t.popup = {
      selectedRequestMapping: t.selectedRequestMapping
    }, t.selectedRequestMapping.jsonPropertyValueFormField ? t.popup.selectedRequestMapping.jsonPropertyValueType = "field" : t.selectedRequestMapping.jsonPropertyValueRestResponseField && (t.popup.selectedRequestMapping.jsonPropertyValueType = "restResponse"), t.popup.selectedRequestMapping.state = "view", _internalCreateModal({
      template: "views/popup/map-json-request.html?version=" + Date.now(),
      scope: t
    }, n, t)
  }, t.setRequestMessageStaticValue = function() {
    t.popup.selectedRequestMapping.jsonPropertyValueType = "static", t.popup.selectedRequestMapping.jsonPropertyValueRestResponseField = void 0, t.popup.selectedRequestMapping.jsonPropertyValueFormField = void 0
  }, t.setRequestMessageFormFieldValue = function() {
    t.popup.selectedRequestMapping.jsonPropertyValueType = "field", t.popup.selectedRequestMapping.jsonPropertyValueRestResponseField = void 0, t.popup.selectedRequestMapping.jsonPropertyValue = void 0
  }, t.setRequestMessageRestResponseValue = function() {
    t.popup.selectedRequestMapping.jsonPropertyValueType = "restResponse", t.popup.selectedRequestMapping.jsonPropertyValue = void 0, t.popup.selectedRequestMapping.jsonPropertyValueFormField = void 0
  }, t.cancelRequestMapping = function() {
    t.popup.selectedRequestMapping = void 0, t.modal.hide()
  }, t.okRequestMapping = function() {
    "edit" === t.popup.selectedRequestMapping.state && (t.selectedRequestMapping.jsonPropertyName = t.popup.selectedRequestMapping.jsonPropertyName, t.selectedRequestMapping.jsonPropertyType = t.popup.selectedRequestMapping.jsonPropertyType, t.selectedRequestMapping.jsonPropertyValue = t.popup.selectedRequestMapping.jsonPropertyValue, t.selectedRequestMapping.jsonPropertyValueFormField = t.popup.selectedRequestMapping.jsonPropertyValueFormField, t.selectedRequestMapping.jsonPropertyValueRestResponseField = t.popup.selectedRequestMapping.jsonPropertyValueRestResponseField, t.requestMessageGridApi.core.notifyDataChange(s.dataChange.ALL), t.requestMessageGridApi.selection.toggleRowSelection(t.selectedRequestMapping)), "edit" != t.popup.selectedRequestMapping.state && (t.popup.selectedRequestMapping.jsonPropertyValueType = void 0, t.step.requestMappings.push(t.popup.selectedRequestMapping)), t.popup.selectedRequestMapping.jsonPropertyValueFormField && (t.popup.selectedRequestMapping.jsonPropertyValueFormField.currency && delete t.popup.selectedRequestMapping.jsonPropertyValueFormField.currency, t.popup.selectedRequestMapping.jsonPropertyValueFormField.enableFractions && delete t.popup.selectedRequestMapping.jsonPropertyValueFormField.enableFractions), t.popup.selectedRequestMapping = void 0, t.modal.hide()
  }, t.step.responseMappings || (t.step.responseMappings = []);
  var p = i.instant("PROCESS-BUILDER.REST-CALL-STEP.RESPONSE-MESSAGE.JSON-PROPERTY"),
    u = i.instant("PROCESS-BUILDER.REST-CALL-STEP.RESPONSE-MESSAGE.PROCESS-VARIABLE");
  t.responseMessageGridOptions = {
    data: t.step.responseMappings,
    headerRowHeight: 28,
    enableRowSelection: !0,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableColumnMenus: !1,
    enableSorting: !1,
    columnDefs: [{
      field: "jsonPropertyName",
      displayName: p
    }, {
      field: "processVariableName",
      displayName: u
    }]
  }, t.responseMessageGridOptions.onRegisterApi = function(e) {
    t.responseMessageGridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
      t.selectedResponseMapping = e.isSelected ? e.entity : void 0
    })
  }, t.addNewResponseMapping = function() {
    t.selectedResponseMapping = {
      processVariableType: t.jsonTypes[0]
    }, _internalCreateModal({
      template: "views/popup/map-json-response.html?version=" + Date.now(),
      scope: t
    }, n, t)
  }, t.removeResponseMapping = function() {
    if (t.selectedResponseMapping) {
      var e = t.step.responseMappings.indexOf(t.selectedResponseMapping);
      t.responseMessageGridApi.selection.toggleRowSelection(t.selectedResponseMapping), t.step.responseMappings.splice(e, 1), o(function() {
        t.step.responseMappings.length > 0 ? t.responseMessageGridApi.selection.toggleRowSelection(t.step.responseMappings[0]) : t.selectedResponseMapping = void 0
      })
    }
  }, t.editResponseMapping = function() {
    t.selectedResponseMapping.state = "edit", _internalCreateModal({
      template: "views/popup/map-json-response.html?version=" + Date.now(),
      scope: t
    }, n, t)
  }, t.showResponseMapping = function() {
    t.selectedResponseMapping.state = "view", _internalCreateModal({
      template: "views/popup/map-json-response.html?version=" + Date.now(),
      scope: t
    }, n, t)
  }, t.cancelResponseMapping = function() {
    t.selectedResponseMapping.state = void 0, t.modal.hide()
  }, t.okResponseMapping = function() {
    "edit" != t.selectedResponseMapping.state && (t.selectedResponseMapping.state = void 0, t.step.responseMappings.push(t.selectedResponseMapping)), t.selectedResponseMapping.state = void 0, t.responseMessageGridApi.selection.toggleRowSelection(t.selectedResponseMapping), t.selectedResponseMapping = void 0, t.modal.hide()
  }, t.$watch("step.responseMappings", function(e, i) {
    if (i != e && e) {
      for (var o = [], n = 0; e.length > n; n++) {
        var r = {
          jsonPropertyName: e[n].jsonPropertyName,
          processVariableName: e[n].processVariableName,
          processVariableType: e[n].processVariableType
        };
        o.push(r)
      }
      l.updateResponseVariablesCache(t.step.id, o)
    }
  }, !0), t.allSteps = r.getAllStepsArray(t.currentKickstartModel.definition.definition.steps), t.loadBaseEndpoints(), t.showEndpointTest = function() {
    return ACTIVITI.CONFIG && ACTIVITI.CONFIG.onPremise ? ACTIVITI.CONFIG.onPremise : !1
  }
}]), angular.module("activitiModeler").controller("ValidateKickstartModelCtrl", ["$rootScope", "$scope", "$translate", "$timeout", function(e, t) {
  t.shapeValidationErrors = [];
  var i;
  i = "process" === t.currentStep ? "process" : "start-event" === t.currentStep ? "start-event" : t.currentStep.id;
  for (var o = 0; e.currentKickstartValidationErrors.length > o; o++) e.currentKickstartValidationErrors[o].id === i && t.shapeValidationErrors.push(e.currentKickstartValidationErrors[o]);
  t.gridOptions = {
    data: t.shapeValidationErrors,
    headerRowHeight: 28,
    enableHorizontalScrollbar: 0,
    enableColumnMenus: !1,
    enableSorting: !1,
    columnDefs: [{
      field: "defaultDescription",
      displayName: "Description"
    }, {
      field: "warning",
      displayName: "Warning",
      width: 100
    }, {
      field: "validatorSetName",
      displayName: "Validator set",
      width: 200
    }]
  }, t.ok = function() {
    t.$hide()
  }, t.close = function() {
    t.$hide()
  }
}]), angular.module("activitiModeler").controller("CreateNewSubProcessCtrl", ["$rootScope", "$scope", "$http", "EventTrackingService", function(e, t, i, o) {
  t.model = {
    loading: !1,
    subProcess: {
      name: "",
      description: "",
      referenceId: e.currentKickstartModel.definition.id,
      modelType: 1
    }
  }, t.ok = function() {
    t.model.subProcess.name && 0 != t.model.subProcess.name.length && (t.model.loading = !0, i({
      method: "POST",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models",
      data: t.model.subProcess
    }).success(function(e) {
      t.$hide(), o.trackEvent("editor", "subprocess-created"), t.model.loading = !1, t.createSubProcessCallback && (t.createSubProcessCallback(e), t.createSubProcessCallback = void 0)
    }).error(function() {
      t.model.loading = !1, t.$hide()
    }))
  }, t.cancel = function() {
    t.model.loading || t.$hide()
  }
}]), angular.module("activitiModeler").controller("StepEndpointCheckController", ["$rootScope", "$scope", "EndpointUtilService", "FormBuilderService", "ProcessScopeService", function(e, t, i, o, n) {
  var r, s, a, l, d = [];
  if (t.step) t.step.httpMethod && "" != t.step.httpMethod && (r = t.step.httpMethod), t.step.restUrl && "" != t.step.restUrl && (s = t.step.restUrl), t.step.endpoint && (a = t.step.endpoint), t.step.requestMappings && (l = t.step.requestMappings), t.step.requestHeaders && (d = t.step.requestHeaders);
  else if (t.formElement) return;
  var c = function() {
    if (i.isTestDataNeeded(s, l, d)) {
      var e = n.getFormFieldsForStep(t.allSteps, t.step.id),
        o = n.getVariablesForStep(t.allSteps, t.step.id);
      t.testDataFields = i.getTestDataFields(s, e, o, l, d)
    } else i.executeEndpointCheck(r, a, s).then(function(e) {
      t.requestResult = e, t.formattedResult = i.getFormattedRequestResult(e)
    })
  };
  t.isRequestSuccessful = function() {
    var e = !1;
    return t.requestResult && t.requestResult.statusCode && t.requestResult.statusCode >= 200 && 400 > t.requestResult.statusCode && (e = !0), e
  }, t.cancel = function() {
    t.$hide()
  }, t.ok = function() {
    i.executeEndpointCheck(r, a, s, t.testDataFields).then(function(e) {
      t.requestResult = e, t.formattedResult = i.getFormattedRequestResult(e)
    })
  }, t.back = function() {
    delete t.requestResult
  }, c()
}]), angular.module("activitiModeler").controller("GenerateDocumentStepController", ["$rootScope", "$scope", "$translate", "ProcessBuilderService", "ContentAccountService", "$location", "$timeout", "Upload", "DocumentTemplateService", "ProcessScopeService", function(e, t, i, o, n, r, s, a, l, d) {
  t.step.outputFormat || (t.step.outputFormat = "pdf"), t.$watch("activeStep.meta.type", function(e) {
    e && (t.stepTabs = e.tabs, o.updateStepSummary(t.step))
  }), t.selectTemplate = function(e) {
    t.step.template = {
      id: e.id,
      name: e.name
    }
  }, t.documentTemplateModel = {
    currentTab: "tenantTemplates",
    currentTemplateDownloadUrl: "",
    nameFilter: "",
    sort: "sort_by_name_asc",
    page: 0,
    pageSize: 20,
    possibleSorts: [{
      id: "sort_by_name_asc",
      title: "PROPERTY.GENERATEDOCUMENT.TEMPLATE.SORT-NAME-ASC"
    }, {
      id: "sort_by_name_desc",
      title: "PROPERTY.GENERATEDOCUMENT.TEMPLATE.SORT-NAME-DESC"
    }, {
      id: "sort_by_create_date_asc",
      title: "PROPERTY.GENERATEDOCUMENT.TEMPLATE.SORT-CREATED-ASC"
    }, {
      id: "sort_by_create_date_desc",
      title: "PROPERTY.GENERATEDOCUMENT.TEMPLATE.SORT-CREATED-DESC"
    }]
  }, t.onNewUploadSelected = function(i, o) {
    for (var n = 0; i.length > n; n++) {
      var r, s = i[n];
      r = o ? ACTIVITI.CONFIG.contextRoot + "/app/rest/admin/document-templates/text" : ACTIVITI.CONFIG.contextRoot + "/app/rest/admin/document-templates", a.upload({
        url: r,
        method: "POST",
        params: {
          modelId: e.currentKickstartModel.definition.id
        },
        file: s
      }).progress(function(e) {
        t.documentTemplateModel.loading = !0, t.documentTemplateModel.uploadProgress = parseInt(100 * e.loaded / e.total)
      }).success(function(e) {
        null !== e.id && void 0 !== e.id && t.selectTemplate(e), t.documentTemplateModel.loading = !1
      }).error(function(e) {
        e && e.message && (t.documentTemplateModel.errorMessage = e.message), t.documentTemplateModel.error = !0, t.documentTemplateModel.loading = !1
      })
    }
  }, t.fetchDocumentTemplates = function() {
    t.documentTemplateModel.loadingDocumentTemplates = !0, l.findAllDocumentTemplates(t.documentTemplateModel.nameFilter, t.documentTemplateModel.sort, t.documentTemplateModel.page, t.documentTemplateModel.pageSize).then(function(e) {
      t.documentTemplateModel.templates = e, t.documentTemplateModel.moreTemplates = e.total > (t.documentTemplateModel.page + 1) * t.documentTemplateModel.pageSize;
      for (var i = 0; t.documentTemplateModel.templates.data.length > i; i++) t.documentTemplateModel.templates.data[i].downloadUrl = ACTIVITI.CONFIG.contextRoot + "/app/rest/document-templates/" + t.documentTemplateModel.templates.data[i].id + "/file?version=" + Date.now();
      t.documentTemplateModel.loadingDocumentTemplates = !1
    })
  }, t.fetchDocumentTemplates(), t.$watch("step.variable", function(e, i) {
    if (i !== e && e) {
      var o = [{
        processVariableName: e,
        processVariableType: "document"
      }];
      d.updateResponseVariablesCache(t.step.id, o)
    }
  }, !0)
}]), angular.module("activitiModeler").controller("DecisionStepController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", "ProcessBuilderService", "ProcessScopeService", function(e, t, i, o, n, r, s, a, l, d, c) {
  t.model = {}, t.model.fieldsForCurrentDecisionTable = [];
  for (var p = 0; t.stencilSet.stepTypes.lenth > p; p++)
    if ("decision-step" == t.stencilSet.stepTypes[p].id) {
      t.humanStepTabs = t.stencilSet.stepTypes[p].tabs;
      break
    }
  t.$on("$select.select", function() {
    e.safeApply(function() {})
  }), t.decisionStepTabs = t.activeStep.meta.type.tabs, t.$watch("activeStep.meta.type", function(e) {
    e && (t.humanStepTabs = e.tabs)
  }), t.selectDecisionTable = function(e) {
    t.step.decisionTableDefinition, t.step.decisionTableDefinition = e, c.refresh()
  }, t.createDecisionTable = function() {
    t.createDecisionTableCallback = function(e) {
      var i = {
        id: e.id,
        name: e.name,
        description: e.description
      };
      t.step.decisionTableDefinition = i, t.saveModelBeforeNavigation()
    }, _internalCreateModal({
      template: "views/popup/decision-table-create.html?version=" + Date.now(),
      scope: t
    }, s, t)
  }, t.showDecisionTable = function() {
    t.saveModelBeforeNavigation()
  }, t.saveModelBeforeNavigation = function() {
    var i = e.currentKickstartModel.definition,
      o = function(i) {
        "success" == i && (e.modelChanges = !1, c.navigateForward("decision-table-editor/" + encodeURIComponent(t.step.decisionTableDefinition.id), t.step.id))
      },
      n = {
        name: i.name,
        description: i.description,
        newVersion: !1
      };
    d.saveKickstartModel(n, o)
  }, t.allSteps = d.getAllStepsArray(t.currentKickstartModel.definition.definition.steps)
}]), angular.module("activitiModeler").controller("RestCallStepHeadersController", ["$rootScope", "$scope", "$q", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", "ProcessBuilderService", "uiGridConstants", function(e, t, i, o, n, r, s, a, l, d, c, p) {
  t.selectedRequestHeaders = [], t.labels = [], t.step.requestHeaders && 0 !== t.step.requestHeaders.length || (t.step.requestHeaders = []), t.restHeaderConfig = {
    position: 0,
    field: ""
  }, t.selectedRequestHeader = void 0, t.labels.idLabel = o.instant("FORM-BUILDER.COMPONENT.REQUEST-HEADER-NAME"), t.labels.nameLabel = o.instant("FORM-BUILDER.COMPONENT.REQUEST-HEADER-VALUE"), t.gridOptions = {
    data: t.step.requestHeaders,
    headerRowHeight: 28,
    enableRowSelection: !0,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableColumnMenus: !1,
    enableSorting: !1,
    columnDefs: [{
      field: "name",
      displayName: t.labels.idLabel,
      cellClass: function(e, t, i) {
        return "" === e.getCellValue(t, i) || 0 == e.getCellValue(t, i) ? "dynamicTable-cellError" : void 0
      }
    }, {
      field: "value",
      displayName: t.labels.nameLabel,
      cellClass: function(e, t, i) {
        return "" === e.getCellValue(t, i) || 0 == e.getCellValue(t, i) ? "dynamicTable-cellError" : void 0
      }
    }]
  }, t.gridOptions.onRegisterApi = function(e) {
    t.gridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
      t.selectedRequestHeader = e.entity, t.focusFirstField()
    })
  }, t.focusFirstField = function() {
    r(function() {
      var e = document.getElementById("headerName");
      e && e.focus()
    }, 100)
  };
  var u = t.$watch("endpointConfigurations", function() {
    if (t.step.endpoint && t.endpointConfigurations)
      for (var e = 0; t.endpointConfigurations.length > e; e++)
        if (t.step.endpoint.id === t.endpointConfigurations[e].id) {
          t.step.endpoint = t.endpointConfigurations[e];
          break
        }
    u()
  });
  t.$watch("step.endpoint", function(e, i) {
    if (t.step.requestHeaders.length > 0 && i && i.requestHeaders && i.requestHeaders.length > 0) {
      for (var o = angular.copy(t.step.requestHeaders), n = {}, r = 0; i.requestHeaders.length > r; r++) n[i.requestHeaders[r].name] = i.requestHeaders[r].value;
      for (var s = [], r = 0; o.length > r; r++) void 0 === n[o[r].name] && s.push(o[r]);
      t.step.requestHeaders = s, t.gridOptions.data = t.step.requestHeaders
    }
    if (t.step.endpoint && t.step.endpoint.requestHeaders && t.step.endpoint.requestHeaders.length > 0) {
      for (var a = {}, r = 0; t.step.requestHeaders.length > r; r++) a[t.step.requestHeaders[r].name] = t.step.requestHeaders[r].value;
      for (var r = 0; t.step.endpoint.requestHeaders.length > r; r++)
        if (void 0 === a[t.step.endpoint.requestHeaders[r].name]) {
          var l = {
            name: t.step.endpoint.requestHeaders[r].name,
            value: t.step.endpoint.requestHeaders[r].value
          };
          t.step.requestHeaders.push(l)
        }
    }
  }), t.$watch("selectedRequestHeader.value", function() {
    t.gridApi.core.notifyDataChange(p.dataChange.ALL)
  }, !0), t.$watch("restHeaderConfig.field", function(e) {
    if (e) {
      var i = t.selectedRequestHeader.value,
        o = "${" + e.id + "}";
      i = i ? i.substring(0, t.restHeaderConfig.position) + o + i.substring(t.restHeaderConfig.position) : o, t.restHeaderConfig.field = void 0, r(function() {
        var e = angular.element("#rest-header-value");
        e.focus(), e.val(i), t.selectedRequestHeader.value = i
      }, 200)
    }
  }), t.addNewRequestHeader = function() {
    var e = {
      name: "",
      value: ""
    };
    t.step.requestHeaders.push(e), t.selectedRequestHeader = e, t.gridApi.core.notifyDataChange(p.dataChange.ALL), r(function() {
      t.gridApi.selection.toggleRowSelection(t.selectedRequestHeader)
    })
  }, t.removeRequestHeader = function() {
    if (t.selectedRequestHeader) {
      var e = t.step.requestHeaders.indexOf(t.selectedRequestHeader);
      t.gridApi.selection.toggleRowSelection(t.selectedRequestHeader), t.step.requestHeaders.splice(e, 1), t.gridApi.core.notifyDataChange(p.dataChange.ALL), t.selectedRequestHeader = void 0, r(function() {
        t.step.requestHeaders.length > 0 && t.gridApi.selection.toggleRowSelection(t.step.requestHeaders[0])
      })
    }
  }, t.model = {
    headerFieldType: "formField"
  }, t.setUrlFieldType = function(e) {
    "restResponse" === e ? t.model = {
      headerFieldType: "restResponse"
    } : "formField" === e && (t.model = {
      headerFieldType: "formField"
    })
  }
}]), angular.module("activitiModeler").controller("KickstartReadOnlyModelController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", "ProcessBuilderService", "FormBuilderService", "ProcessScopeService", function(e, t, i, o, n, r, s, a, l, d, c, p) {
  e.setMainPageById("processes"), e.kickstartModelRootLevelValidationError = !1, t.forms = {}, e.currentKickstartModel = {}, t.formFields = {}, t.startFormFields = [], t.processStartTypes = [{
    id: "none",
    title: i.instant("PROCESS-BUILDER.START-STEP.START-TYPES.USER")
  }, {
    id: "form",
    title: i.instant("PROCESS-BUILDER.START-STEP.START-TYPES.FORM")
  }], t.model = {
    processStart: {
      expanded: !1,
      type: t.processStartTypes[0]
    }
  }, d.fetchKickstartModel(a.modelId, a.modelHistoryId).then(function(i) {
    i.definition || (i.definition = {
      steps: []
    }), d.getStencilSet(i.stencilSetId).then(function(e) {
      t.stencilSet = e;
      for (var o = 0; t.stencilSet.stepTypes.length > o; o++) {
        var n = t.stencilSet.stepTypes[o].template;
        if (n) {
          var r = n.substring(0, n.length - 5);
          t.stencilSet.stepTypes[o].templateReadOnly = r + "-readonly.html"
        }
      }
      d.addMetaToSteps(i.definition, t.stencilSet.stepTypes)
    }), i.definition.startForm && (t.model.processStart.type = t.processStartTypes[1]), e.currentKickstartModel.definition = i, t.steps = i.definition.steps, p.init()
  }), t.toggleProcessStartExpanded = function() {
    t.model.processStart.expanded = !t.model.processStart.expanded
  }, t.selectConditionField = function(e, t) {
    e.condition.fieldId = t.id
  }, t.showStartForm = function() {
    e.currentKickstartModel.definition && e.currentKickstartModel.definition.definition && e.currentKickstartModel.definition.definition.startForm && r.path("forms/" + e.currentKickstartModel.definition.definition.startForm.id)
  }, t.getOperatorLabel = function(e) {
    return "==" == e.condition.operator ? i.instant("PROCESS-BUILDER.CHOICE-STEP.CONDITION.EQUALS") : "!=" == e.condition.operator ? i.instant("PROCESS-BUILDER.CHOICE-STEP.CONDITION.NOTEQUALS") : "<" == e.condition.operator ? i.instant("PROCESS-BUILDER.CHOICE-STEP.CONDITION.LESSTHAN") : ">" == e.condition.operator ? i.instant("PROCESS-BUILDER.CHOICE-STEP.CONDITION.GREATERTHAN") : i.instant("PROCESS-BUILDER.CHOICE-STEP.CONDITION.SELECT-OPERATOR")
  }, t.getFieldsForForm = function(e) {
    return e ? p.getFormFieldsForForm(e.id) : void 0
  }
}]), angular.module("activitiModeler").controller("KickstartReadOnlyModelDesignController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", "ProcessBuilderService", function(e, t, i, o, n, r, s, a, l, d) {
  t.toggleActiveStep = function(e) {
    t.activeStep && t.activeStep.meta.new && (t.activeStep.meta.new = !1), t.activeStep = e ? t.activeStep ? t.activeStep.id == e.id ? void 0 : e : e : void 0
  }, t.getStepSummary = function(e) {
    return d.getStepSummary(e)
  }
}]), angular.module("activitiModeler").controller("HumanStepOverdueStepsReadOnlyController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", function(e, t) {
  t.stepContainer = t.step, t.activeTab = void 0
}]), angular.module("activitiModeler").controller("HumanStepReadOnlyController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", "ProcessBuilderService", function(e, t, i, o, n, r) {
  for (var s = 0; t.stencilSet.stepTypes.lenth > s; s++)
    if ("human-step" == t.stencilSet.stepTypes[s].id) {
      t.humanStepTabs = t.stencilSet.stepTypes[s].tabs;
      break
    }
  t.$watch("activeStep.meta.type", function(e) {
    e && (t.humanStepTabs = e.tabs)
  }), t.step.assignment || (t.step.assignment = {}), t.step.dueAssignment || (t.step.dueAssignment = {}), t.taskDueDateOptions = [{
    id: "none",
    title: i.instant("PROCESS-BUILDER.FIELD.DUEDATE.TASK-DUE-DATE-OPTIONS.NO-DUEDATE")
  }, {
    id: "static",
    title: i.instant("PROCESS-BUILDER.FIELD.DUEDATE.TASK-DUE-DATE-OPTIONS.STATIC")
  }, {
    id: "field",
    title: i.instant("PROCESS-BUILDER.FIELD.DUEDATE.TASK-DUE-DATE-OPTIONS.FIELD")
  }], t.getTaskDueDateLabel = function(e) {
    for (var o = 0; t.taskDueDateOptions.length > o; o++)
      if (e == t.taskDueDateOptions[o].id) return t.taskDueDateOptions[o].title;
    return i.instant("PROCESS-BUILDER.FIELD.DUEDATE.TASK-DUE-DATE-OPTIONS.NO-DUEDATE")
  }, t.dueDateOptions = [{
    id: "none",
    title: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-DATE-OPTIONS.NO-TIMER")
  }, {
    id: "duration",
    title: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-DATE-OPTIONS.DURATION")
  }, {
    id: "property",
    title: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-DATE-OPTIONS.FIELD")
  }], t.getDueDateLabel = function(e) {
    for (var o = 0; t.dueDateOptions.length > o; o++)
      if (e == t.dueDateOptions[o].id) return t.dueDateOptions[o].title;
    return i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-DATE-OPTIONS.NO-TIMER")
  }, t.dueActionOptions = [{
    id: "none",
    title: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-ACTION-OPTIONS.NO-ACTION")
  }, {
    id: "reassign-task",
    title: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-ACTION-OPTIONS.REASSIGN.TITLE"),
    description: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-ACTION-OPTIONS.REASSIGN.DESCRIPTION")
  }, {
    id: "keep-task",
    title: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-ACTION-OPTIONS.KEEP.TITLE"),
    description: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-ACTION-OPTIONS.KEEP.DESCRIPTION"),
    nextSteps: !0
  }, {
    id: "end-task",
    title: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-ACTION-OPTIONS.END.TITLE"),
    description: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-ACTION-OPTIONS.END.DESCRIPTION"),
    nextSteps: !0
  }, {
    id: "end-process",
    title: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-ACTION-OPTIONS.END-PROCESS.TITLE"),
    description: i.instant("PROCESS-BUILDER.FIELD.TIMER.DUE-ACTION-OPTIONS.END-PROCESS.DESCRIPTION")
  }];
  var a;
  a = t.step.dueField ? t.dueDateOptions[2] : t.step.dueDuration ? t.dueDateOptions[1] : t.dueDateOptions[0], t.step.meta.dueDateOption = a.id;
  var l;
  if (t.step.dueAction)
    for (var s = 0; t.dueActionOptions.length > s; s++)
      if (t.dueActionOptions[s].id == t.step.dueAction) {
        l = t.dueActionOptions[s];
        break
      }
  if (l || (l = t.dueActionOptions[0]), t.step.meta.dueActionOption = l, t.assignmentOptions = [{
    id: "none",
    title: "No assignment set"
  }, {
    id: "initiator",
    title: "Assigned to process initiator"
  }, {
    id: "user",
    title: "Assigned to single user"
  }, {
    id: "users",
    title: "Candidate users"
  }, {
    id: "groups",
    title: "Candidate groups"
  }], t.step.assignment && t.step.assignment.type)
    for (var s = 0; t.assignmentOptions.length > s; s++)
      if (t.assignmentOptions[s].id == t.step.assignment.type) {
        t.step.meta.assignmentOption = t.assignmentOptions[s];
        break
      }
  if (t.step.meta.assignmentOption ? ("users" != t.step.meta.assignmentOption || t.step.assignment.candidateUsers && 0 != t.step.assignment.candidateUsers.length || (t.step.assignment.candidateUsers = []), "groups" != t.step.meta.assignmentOption || t.step.assignment.candidateGroups && 0 != t.step.assignment.candidateGroups.length || (t.step.assignment.candidateGroups = [])) : t.step.meta.assignmentOption = t.assignmentOptions[0], t.step.dueAssignment && t.step.dueAssignment.type)
    for (var s = 0; t.assignmentOptions.length > s; s++)
      if (t.assignmentOptions[s].id == t.step.dueAssignment.type) {
        t.step.meta.dueAssignmentOption = t.assignmentOptions[s];
        break
      }
  t.step.meta.dueAssignmentOption ? ("users" != t.step.meta.dueAssignmentOption || t.step.dueAssignmentOption.candidateUsers && 0 != t.step.dueAssignmentOption.candidateUsers.length || (t.step.dueAssignmentOption.candidateUsers = []), "groups" != t.step.meta.dueAssignmentOption || t.step.dueAssignmentOption.candidateGroups && 0 != t.step.dueAssignmentOption.candidateGroups.length || (t.step.dueAssignmentOption.candidateGroups = [])) : t.step.meta.dueAssignmentOption = t.assignmentOptions[0], t.showForm = function() {
    r.path("forms/" + t.step.formDefinition.id)
  }
}]), angular.module("activitiModeler").controller("EmailStepReadOnlyController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", function(e, t, i) {
  if (t.emailStepTabs = t.activeStep.meta.type.tabs, t.recipientOptions = [{
    id: "initiator",
    title: i.instant("PROCESS-BUILDER.EMAIL-STEP.RECIPIENT.POPOVER.SELECT-INITIATOR")
  }, {
    id: "user",
    title: i.instant("PROCESS-BUILDER.EMAIL-STEP.RECIPIENT.POPOVER.SELECT-USER")
  }, {
    id: "users",
    title: i.instant("PROCESS-BUILDER.EMAIL-STEP.RECIPIENT.POPOVER.SELECT-USERS")
  }], t.step.recipient && t.step.recipient.type)
    for (var o = 0; t.recipientOptions.length > o; o++)
      if (t.recipientOptions[o].id == t.step.recipient.type) {
        t.step.meta.recipientOption = t.recipientOptions[o];
        break
      }
  t.step.meta.recipientOption || (t.step.meta.recipientOption = t.recipientOptions[0])
}]), angular.module("activitiModeler").controller("ChoiceStepReadOnlyController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", "ProcessBuilderService", function(e, t, i, o, n, r, s) {
  for (var a = 0; t.stencilSet.stepTypes.length > a; a++)
    if ("choice-step" == t.stencilSet.stepTypes[a].id) {
      t.choiceTabs = t.stencilSet.stepTypes[a].tabs;
      break
    }
  t.nextChoice = function() {
    t.step.choices && t.step.meta.stepIndex < t.step.choices.length - 2 && (t.step.meta.stepIndex += 1, t.updateActiveChoices())
  }, t.previousChoice = function() {
    t.step.choices && t.step.meta.stepIndex > 0 && (t.step.meta.stepIndex -= 1, t.updateActiveChoices())
  }, t.$watch("step.choices", function(e) {
    e && t.updateActiveChoices()
  }), t.updateActiveChoices = function() {
    var e = t.step.choices,
      i = [];
    e[t.step.meta.stepIndex] && i.push(e[t.step.meta.stepIndex]), e[t.step.meta.stepIndex + 1] && i.push(e[t.step.meta.stepIndex + 1]), t.activeChoices = i
  }, t.showChoiceDetails = function(e) {
    var i = {
      template: "views/process-builder/choice-step-choice-details-readonly.html?version=" + Date.now(),
      scope: t
    };
    t.choiceName = angular.copy(e.name), t.expression = angular.copy(e.condition), t.isDefault = e.isDefault ? !0 : !1, t.choice = e, _internalCreateModal(i, s, t)
  }, t.activeTab = t.choiceTabs[1].id, t.step.meta.stepIndex || 0 === t.step.meta.stepIndex || (t.step.meta.stepIndex = 0)
}]), angular.module("activitiModeler").controller("SubProcessStepReadOnlyController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", "ProcessBuilderService", function(e, t, i, o, n, r) {
  for (var s = 0; t.stencilSet.stepTypes.lenth > s; s++)
    if ("subprocess-step" == t.stencilSet.stepTypes[s].id) {
      t.subProcessStepTabs = t.stencilSet.stepTypes[s].tabs;
      break
    }
  t.$watch("activeStep.meta.type", function(e) {
    e && (t.subProcessStepTabs = e.tabs)
  }), t.showSubProcess = function() {
    r.path("processes/" + t.step.subProcessDefinition.id)
  }
}]), angular.module("activitiModeler").controller("EndProcessStepReadOnlyController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", function(e, t) {
  t.endProcessStepTabs = t.activeStep.meta.type.tabs
}]), angular.module("activitiModeler").controller("AlfrescoCloudPublishStepReadOnlyController", ["$rootScope", "$scope", "$translate", "ProcessBuilderService", function(e, t, i, o) {
  t.alfrescoSourceOptions = [{
    id: "process",
    title: i.instant("PROCESS-BUILDER.PUBLISH-STEP.SOURCE-OPTIONS.ALL")
  }, {
    id: "field",
    title: i.instant("PROCESS-BUILDER.PUBLISH-STEP.SOURCE-OPTIONS.FIELD")
  }], t.step.meta.alfrescoSourceOption = t.step.contentContainerField ? t.alfrescoSourceOptions[1] : t.alfrescoSourceOptions[0], t.activeContentTab = "documentDefinition", t.step.meta.destinationUseSubfolder = void 0 != t.step.createFolderField, t.$watch("activeStep.meta.type", function(e) {
    e && (t.stepTabs = e.tabs, o.updateStepSummary(t.step))
  }), t.setActiveContentTab = function(e) {
    t.activeContentTab = e
  }
}]), angular.module("activitiModeler").controller("BoxCloudPublishStepReadOnlyController", ["$rootScope", "$scope", "$translate", "ProcessBuilderService", "ContentAccountService", function(e, t, i, o, n) {
  t.boxSourceOptions = [{
    id: "process",
    title: i.instant("PROCESS-BUILDER.PUBLISH-STEP.SOURCE-OPTIONS.ALL")
  }, {
    id: "field",
    title: i.instant("PROCESS-BUILDER.PUBLISH-STEP.SOURCE-OPTIONS.FIELD")
  }], t.step.meta.boxSourceOption = t.step.contentContainerField ? t.boxSourceOptions[1] : t.boxSourceOptions[0], t.step.meta.destinationUseSubfolder = void 0 != t.step.createFolderField, t.isMetaDataAllowed = !1, n.isBoxMetaDataAllowed().then(function(e) {
    t.isMetaDataAllowed = e
  }), t.$watch("activeStep.meta.type", function(e) {
    e && (t.stepTabs = e.tabs, o.updateStepSummary(t.step))
  })
}]), angular.module("activitiModeler").controller("GoogleDrivePublishStepReadOnlyController", ["$rootScope", "$scope", "$translate", "ProcessBuilderService", function(e, t, i, o) {
  t.googleDriveSourceOptions = [{
    id: "process",
    title: i.instant("PROCESS-BUILDER.PUBLISH-STEP.SOURCE-OPTIONS.ALL")
  }, {
    id: "field",
    title: i.instant("PROCESS-BUILDER.PUBLISH-STEP.SOURCE-OPTIONS.FIELD")
  }], t.step.meta.googleDriveSourceOption = t.step.contentContainerField ? t.googleDriveSourceOptions[1] : t.googleDriveSourceOptions[0], t.step.meta.destinationUseSubfolder = void 0 != t.step.createFolderField, t.$watch("activeStep.meta.type", function(e) {
    e && (t.stepTabs = e.tabs, o.updateStepSummary(t.step))
  })
}]), angular.module("activitiModeler").controller("CustomStepReadOnlyController", ["$rootScope", "$scope", function(e, t) {
  t.customStepTabs = t.activeStep.meta.type.tabs
}]), angular.module("activitiModeler").controller("GenerateDocumentStepReadOnlyController", ["$rootScope", "$scope", "$translate", "ProcessBuilderService", function(e, t, i, o) {
  t.$watch("activeStep.meta.type", function(e) {
    e && (t.stepTabs = e.tabs, o.updateStepSummary(t.step))
  })
}]), angular.module("activitiModeler").controller("DecisionStepReadOnlyController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", "ProcessBuilderService", function(e, t, i, o, n, r) {
  for (var s = 0; t.stencilSet.stepTypes.length > s; s++)
    if ("decision-step" == t.stencilSet.stepTypes[s].id) {
      t.decisionStepTabs = t.stencilSet.stepTypes[s].tabs;
      break
    }
  t.$watch("activeStep.meta.type", function(e) {
    e && (t.decisionStepTabs = e.tabs)
  }), t.showDecisionTable = function() {
    r.path("decision-tables/" + t.step.decisionTableDefinition.id)
  }
}]), angular.module("activitiModeler").controller("KickstartToolbarController", ["$scope", "$http", "$modal", "$q", "$rootScope", "$translate", "$location", "ProcessBuilderService", "ProcessScopeService", function(e, t, i, o, n, r, s, a, l) {
  var d = KICKSTART.PROCESS_TOOLBAR_CONFIG.items;
  e.items = [];
  for (var c = 0; d.length > c; c++) e.items.push(d[c]);
  e.secondaryItems = KICKSTART.PROCESS_TOOLBAR_CONFIG.secondaryItems;
  var p = function(e, t) {
    for (var i = Array.prototype.slice.call(arguments).splice(2), o = e.split("."), n = o.pop(), r = 0; o.length > r; r++) t = t[o[r]];
    return t[n].apply(this, i)
  };
  e.toolbarButtonClicked = function(s) {
    var d = e.items[s],
      c = {
        $scope: e,
        $rootScope: n,
        $http: t,
        $modal: i,
        $q: o,
        $translate: r,
        ProcessBuilderService: a,
        ProcessScopeService: l
      };
    p(d.action, window, c)
  }, e.toolbarSecondaryButtonClicked = function(d) {
    var c = e.secondaryItems[d],
      u = {
        $scope: e,
        $rootScope: n,
        $http: t,
        $modal: i,
        $q: o,
        $translate: r,
        $location: s,
        ProcessBuilderService: a,
        ProcessScopeService: l
      };
    p(c.action, window, u)
  }
}]);
var KICKSTART = KICKSTART || {};
KICKSTART.PROCESS_TOOLBAR = {
  ACTIONS: {
    saveModel: function(e) {
      _internalCreateModal({
        backdrop: !0,
        keyboard: !0,
        template: "views/popup/kickstart-save-model.html?version=" + Date.now(),
        scope: e.$scope
      }, e.$modal, e.$scope)
    },
    validateModel: function(e) {
      e.ProcessBuilderService.validateKickstartModel(e.$rootScope.currentKickstartModel.definition.id, e.$rootScope.currentKickstartModel.definition.definition)
    },
    help: function() {},
    feedback: function(e) {
      var t = {
        template: "editor-app/configuration/properties/feedback-popup.html?version=" + Date.now(),
        scope: e.$scope
      };
      _internalCreateModal(t, e.$modal, e.$scope)
    },
    closeEditor: function(e) {
      var t = function(t) {
        "success" == t && (e.$rootScope.modelChanges = !1, e.ProcessScopeService.navigateBack("/processes"))
      };
      if (1 == e.$rootScope.modelChanges) {
        e.$scope.$emit("modelChangesEvent");
        var i = e.$scope.$on("mustSaveEvent", function() {
            var i = e.$rootScope.currentKickstartModel.definition,
              o = {
                name: i.name,
                description: i.description,
                newVersion: !1
              };
            r(), e.ProcessBuilderService.saveKickstartModel(o, t)
          }),
          o = e.$scope.$on("discardDataEvent", function() {
            r(), t("success")
          }),
          n = e.$scope.$on("continueEditingEvent", function() {
            r()
          })
      } else t("success");
      var r = function() {
        n(), i(), o()
      }
    }
  }
}, angular.module("activitiModeler").controller("SaveKickstartModelCtrl", ["$rootScope", "$scope", "$http", "$route", "$location", "$translate", "ProcessBuilderService", "ProcessScopeService", function(e, t, i, o, n, r, s, a) {
  var l = "";
  e.currentKickstartModel.definition.description && (l = e.currentKickstartModel.definition.description);
  var d = {
    name: e.currentKickstartModel.definition.name,
    description: l,
    newVersion: !1,
    comment: ""
  };
  t.saveDialog = d, t.status = {
    loading: !1
  };
  var c = function(e) {
    e && e.length > 0 && (t.saveDialog.validationErrors = !0)
  };
  s.validateKickstartModel(e.currentKickstartModel.definition.id, e.currentKickstartModel.definition.definition, c), t.cancel = function() {
    t.$hide()
  }, t.saveAndClose = function() {
    t.save(function() {
      a.navigateBack("/processes")
    })
  }, t.save = function(i) {
    if (t.saveDialog.name && 0 != t.saveDialog.name.length) {
      t.status = {
        loading: !0
      };
      var o = function(o) {
        "success" == o ? (i && i(), t.$hide(), e.addAlertPromise(r("KICKSTART-MODEL.ALERT.SAVED"), "info")) : (t.$hide(), e.addAlertPromise(r("KICKSTART-MODEL.ALERT.ERROR-SAVE"), "error")), e.modelChanges = !1
      };
      s.saveKickstartModel(t.saveDialog, o)
    }
  }, t.isOkButtonDisabled = function() {
    return t.status.loading ? !1 : t.error && t.error.conflictResolveAction ? "saveAs" === t.error.conflictResolveAction ? !t.error.saveAs || 0 == t.error.saveAs.length : !1 : !0
  }, t.okClicked = function() {
    t.error && ("discardChanges" === t.error.conflictResolveAction ? (t.close(), o.reload()) : "overwrite" === t.error.conflictResolveAction || "newVersion" === t.error.conflictResolveAction ? t.save() : "saveAs" === t.error.conflictResolveAction && t.save(function() {
      e.ignoreChanges = !0, a.navigateBack("/processes")
    }))
  }
}]);
var KICKSTART = KICKSTART || {};
KICKSTART.PROCESS_TOOLBAR_CONFIG = {
  items: [{
    type: "button",
    title: "KICKSTART.PROCESS_TOOLBAR.ACTION.SAVE",
    cssClass: "editor-icon editor-icon-save",
    action: "KICKSTART.PROCESS_TOOLBAR.ACTIONS.saveModel"
  }, {
    type: "button",
    title: "KICKSTART.PROCESS_TOOLBAR.ACTION.VALIDATE",
    cssClass: "glyphicon glyphicon-ok",
    action: "KICKSTART.PROCESS_TOOLBAR.ACTIONS.validateModel"
  }, {
    type: "separator",
    title: "",
    cssClass: "toolbar-separator"
  }, {
    type: "button",
    title: "KICKSTART.PROCESS_TOOLBAR.ACTION.FEEDBACK",
    cssClass: "glyphicon glyphicon-envelope",
    action: "KICKSTART.PROCESS_TOOLBAR.ACTIONS.feedback"
  }],
  secondaryItems: [{
    type: "button",
    title: "Close",
    cssClass: "glyphicon glyphicon-remove",
    action: "KICKSTART.PROCESS_TOOLBAR.ACTIONS.closeEditor"
  }]
}, angular.module("activitiModeler").controller("ChoiceStepConditionEditorPopupController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", "ProcessBuilderService", "FormBuilderService", "ProcessScopeService", function(e, t, i, o, n, r, s, a, l, d, c, p) {
  t.model = {
    condition: {}
  }, t.choice.condition && (t.model.condition = angular.copy(t.choice.condition), t.model.condition.nextCondition ? t.model.condition.type = "advanced" : t.model.condition.type || (t.model.condition.fieldId ? (t.model.condition.leftFormFieldId = t.model.condition.fieldId, t.model.condition.type = "variables") : t.model.condition.responseVariableName ? (t.model.condition.fieldType = void 0, t.model.condition.leftRestResponseId = t.model.condition.responseVariableName, t.model.condition.responseVariableName = void 0, t.model.condition.type = "variables") : t.model.condition.outcomeFormId && (t.model.condition.leftOutcomeFormId = t.model.condition.outcomeFormId, t.model.condition.leftOutcomeFormName = t.model.condition.outcomeFormName, t.model.condition.rightOutcomeFormId = t.model.condition.outcomeFormId, t.model.condition.rightOutcomeFormName = t.model.condition.outcomeFormName, t.model.condition.outcomeName && (t.model.condition.rightOutcomeName = t.model.condition.outcomeName), t.model.condition.type = "variables"), t.model.condition.value && (t.model.condition.rightValue = t.model.condition.value), t.model.condition.outcomeFormId = void 0, t.model.condition.outcomeFormName = void 0, t.model.condition.fieldId = void 0, t.model.condition.fieldType = void 0, t.model.condition.fieldName = void 0, t.model.condition.outcomeName = void 0, t.model.condition.value = void 0)), t.model.condition.type || (t.model.condition.type = "none"), "variables" === t.model.condition.type ? t.model.condition.leftFieldType = t.model.condition.leftOutcomeFormId ? "outcome" : t.model.condition.leftRestResponseId ? "restResponse" : "formField" : "static" === t.model.condition.type && (t.model.condition.staticValue || (t.model.condition.type = "none")), t.model.isDefault = t.choice.isDefault;
  var u = ["text", "integer", "date", "boolean", "dropdown", "radio-buttons", "typeahead", "amount"];
  t.refreshAvailableFormFields = function() {
    var e = d.getAllStepsArray(t.currentKickstartModel.definition.definition.steps);
    t.availableFormFields = p.getFormFieldsForStep(e, t.step.id, u)
  }, t.refreshAvailableForms = function() {
    var e = d.getAllStepsArray(t.currentKickstartModel.definition.definition.steps),
      i = p.getFormsForStep(e, t.step.id);
    t.availableForms = i
  }, t.refreshAvailableOutcomes = function(e) {
    if (e) {
      var i = p.getFormOutcomesForForm(e);
      t.availableFormOutcomes = i
    }
  }, t.refreshAvailableResponseVariables = function() {
    var e = d.getAllStepsArray(t.currentKickstartModel.definition.definition.steps),
      i = p.getVariablesForStep(e, t.step.id);
    t.choiceResponseVariables = i
  }, t.selectConditionField = function(e, t) {
    e.leftFormFieldId = t.id
  }, t.selectChoiceForm = function(e) {
    t.model.condition.leftOutcomeFormId = e.id, t.model.condition.leftOutcomeFormName = e.name, t.model.condition.rightOutcomeName = void 0, t.refreshAvailableOutcomes(e.id)
  }, t.selectConditionOutcome = function(e, t) {
    e.rightOutcomeName = t.name, e.rightOutcomeFormId = e.leftOutcomeFormId, e.rightOutcomeFormName = e.leftOutcomeFormName, e.rightFieldType = "outcome"
  }, t.selectResponseVariable = function(e, t) {
    e.leftRestResponseId = t.processVariableName
  }, t.getOperatorLabel = function(e) {
    return "==" == e.condition.operator ? i.instant("FORM-BUILDER.VISIBILITY.OPERATORS.EQUALS") : "!=" == e.condition.operator ? i.instant("FORM-BUILDER.VISIBILITY.OPERATORS.NOTEQUALS") : "<" == e.condition.operator ? i.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN") : ">" == e.condition.operator ? i.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN") : "empty" == e.condition.operator ? i.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY") : "notEmpty" == e.condition.operator ? i.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY") : i.instant("PROCESS-BUILDER.CHOICE-STEP.CONDITION.SELECT-OPERATOR")
  }, t.prepareForSave = function() {
    var e = function(t, i) {
        t && (t.nextCondition = void 0);
        var o = {};
        return i.length > 0 ? (o = i.shift(), t.nextCondition = o, e(t.nextCondition, i), void 0) : o
      },
      i = function(e) {
        if (e && e.length > 0)
          for (var t = 0; e.length > t; t++) void 0 != e[t].leftFieldType && ("formField" === e[t].leftFieldType ? (e[t].leftRestResponseId = void 0, e[t].leftOutcomeFormId = void 0, e[t].leftOutcomeFormName = void 0, "variables" === e[t].type && (e[t].rightRestResponseId = void 0, e[t].rightOutcomeFormId = void 0, e[t].rightOutcomeName = void 0, e[t].rightFormFieldId = void 0, e[t].rightFieldType = void 0)) : "restResponse" === e[t].leftFieldType ? (e[t].leftFormFieldId = void 0, e[t].leftOutcomeFormId = void 0, e[t].leftOutcomeFormName = void 0, "variables" === e[t].type && (e[t].rightRestResponseId = void 0, e[t].rightOutcomeFormId = void 0, e[t].rightOutcomeName = void 0, e[t].rightFormFieldId = void 0, e[t].rightFieldType = void 0)) : "outcome" === e[t].leftFieldType && (e[t].leftFormFieldId = void 0, e[t].leftRestResponseId = void 0, "variables" === e[t].type && (e[t].rightRestResponseId = void 0, e[t].rightValue = void 0, e[t].rightFormFieldId = void 0)), e[t].leftFieldType = void 0), void 0 != e[t].rightFieldType && ("formField" === e[t].rightFieldType ? (e[t].rightRestResponseId = void 0, e[t].rightValue = void 0, e[t].rightOutcomeFormId = void 0, e[t].rightOutcomeName = void 0) : "restResponse" === e[t].rightFieldType ? (e[t].rightFormFieldId = void 0, e[t].rightValue = void 0, e[t].rightOutcomeFormId = void 0, e[t].rightOutcomeName = void 0) : "outcome" === e[t].rightFieldType ? (e[t].rightRestResponseId = void 0, e[t].rightValue = void 0, e[t].rightFormFieldId = void 0) : "staticValue" === e[t].rightFieldType && (e[t].rightFormFieldId = void 0, e[t].rightRestResponseId = void 0, e[t].rightOutcomeFormId = void 0, e[t].rightOutcomeFormName = void 0, e[t].rightOutcomeName = void 0), e[t].rightFieldType = void 0), void 0 != e[t].$$hashKey && (e[t].$$hashKey = void 0)
      };
    if ("variables" === t.model.condition.type) {
      t.model.condition.nextCondition = void 0, t.model.condition.nextConditionOperator = void 0;
      var o = [t.model.condition];
      o = h(o), i(o), t.flowCondition = o[0]
    } else if ("advanced" === t.model.condition.type) {
      t.tabFlowConditions = h(t.tabFlowConditions), i(t.tabFlowConditions);
      var n = t.tabFlowConditions.shift();
      e(n, t.tabFlowConditions), t.flowCondition = n, t.flowCondition && (t.flowCondition.type = "advanced")
    } else t.flowCondition = void 0
  };
  var h = function(e) {
    return e.filter(function(e) {
      return !!(void 0 != e.leftFormFieldId && "" != e.leftFormFieldId || void 0 != e.leftOutcomeFormId && "" != e.leftOutcomeFormId || void 0 != e.leftRestResponseId && "" != e.leftRestResponseId || void 0 != e.operator && "" != e.operator || void 0 != e.rightValue && "" != e.rightValue || void 0 != e.rightFormFieldId && "" != e.rightFormFieldId || void 0 != e.rightOutcomeFormId && "" != e.rightOutcomeFormId || void 0 != e.rightRestResponseId && "" != e.rightRestResponseId)
    })
  };
  t.isShowRightHandSide = function() {
    return null !== t.model.condition && void 0 !== t.model.condition && "empty" !== t.model.condition.operator && "notEmpty" !== t.model.condition.operator
  }, t.save = function() {
    function e(e) {
      return e && "static" != e.expression.type && (e.expression.staticValue = void 0), e
    }
    if (t.choice.name = t.choiceName, t.choice.isDefault = t.model.isDefault, t.choice.isDefault && (t.choice.condition = void 0, t.step.choices.length > 0)) {
      var i = t.activeChoices.indexOf(t.choice);
      if (i >= 0) {
        for (var o = 0; t.step.choices.length > o; o++) t.step.choices[o].isDefault = !1;
        t.choice.isDefault = !0
      }
    }
    if ("none" === t.model.condition.type) t.choice.condition = void 0;
    else {
      t.prepareForSave();
      var n = "";
      t.flowCondition ? n = {
        expression: t.flowCondition
      } : "static" === t.model.condition.type && (n = {
        expression: {
          type: "static",
          staticValue: t.model.condition.staticValue
        }
      });
      var r = e(n);
      t.choice.condition = r.expression
    }
    t.close()
  }, t.close = function() {
    t.$hide()
  }
}]), angular.module("activitiModeler").controller("ChoiceStepConditionBuilderController", ["$rootScope", "$scope", "$q", "$translate", "$http", "$timeout", "FormUtilService", "FormBuilderService", "$filter", function(e, t, i, o, n, r, s, a, l) {
  t.model.selectedFlowConditions = [], t.model.selectedFields = [], t.model.labels = [], t.model.flowConditions = [], t.model.selectedFlowCondition = void 0, t.flowCondition = void 0, t.options = {}, t.model.condition && (e.flowCondition = t.model.condition), (void 0 === e.flowCondition.type || null === e.flowCondition.type) && (e.flowCondition.type = "variables");
  var d = function(e, t) {
      if (!t.nextCondition) return t.index = void 0, e.push(t), void 0;
      var i = t.nextCondition;
      t.index = void 0, t.nextCondition = "", e.push(t), d(e, i)
    },
    c = function() {
      var t = [];
      return t[0] = e.flowCondition, e.flowCondition.nextCondition && d(t, e.flowCondition.nextCondition), t
    },
    p = function(e) {
      if (e && void 0 == e.nextConditionOperator) {
        var t = {};
        return e && "variables" === e.type ? "field" === e.fieldType ? (t.leftFormFieldId = e.fieldId, t.operator = e.operator, t.rightValue = e.value) : "outcome" === e.fieldType ? (t.leftOutcomeFormId = e.outcomeFormId, t.leftOutcomeFormName = e.outcomeFormName, t.operator = e.operator, t.rightOutcomeName = e.outcomeName) : "restResponseVariable" === e.fieldType ? (t.leftRestResponseId = e.responseVariableName, t.operator = e.operator, t.rightValue = e.value) : t = "none" === e.fieldType ? void 0 : e : t = e, t
      }
      return e
    };
  e.flowCondition = p(e.flowCondition), e.tabFlowConditions = e.flowCondition ? c() : [];
  var u = function(e) {
      e && (void 0 === e.leftFieldType && (e.leftFieldType = e.leftFormFieldId && "" != e.leftFormFieldId ? "formField" : e.leftRestResponseId && "" != e.leftRestResponseId ? "restResponse" : e.leftOutcomeFormId && "" != e.leftOutcomeFormId ? "outcome" : "formField"), void 0 === e.rightFieldType && (e.rightValue && ("" + e.rightValue).length > 0 ? e.rightFieldType = "staticValue" : e.rightFormFieldId && "" != e.rightFormFieldId ? e.rightFieldType = "formField" : e.rightRestResponseId && "" != e.rightRestResponseId ? e.rightFieldType = "restResponse" : e.rightOutcomeFormId && "" != e.rightOutcomeFormId ? e.rightFieldType = "outcome" : e.rightOutcomeName && "" != e.rightOutcomeName && (e.rightOutcomeFormId = e.leftOutcomeFormId, e.rightOutcomeFormName = e.leftOutcomeFormName, e.rightFieldType = "outcome")))
    },
    h = function() {
      if (e.tabFlowConditions && e.tabFlowConditions.length > 0)
        for (var t = 0; e.tabFlowConditions.length > t; t++) {
          var i = e.tabFlowConditions[t];
          u(i)
        }
    };
  h();
  var m = o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.EQUALS"),
    f = o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.NOTEQUALS");
  t.model.conditionOperatorsByType = {
    text: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5,
        empty: 6,
        notEmpty: 7
      },
      operators: [{
        value: "==",
        description: m
      }, {
        value: "!=",
        description: f
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    string: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5,
        empty: 6,
        notEmpty: 7
      },
      operators: [{
        value: "==",
        description: m
      }, {
        value: "!=",
        description: f
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    date: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5,
        empty: 6,
        notEmpty: 7
      },
      operators: [{
        value: "==",
        description: m
      }, {
        value: "!=",
        description: f
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.DATE.BEFORE")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.DATE.AFTER")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.DATE.BEFOREOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.DATE.AFTEROREQUAL")
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    integer: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5,
        empty: 6,
        notEmpty: 7
      },
      operators: [{
        value: "==",
        description: m
      }, {
        value: "!=",
        description: f
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    "long": {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5,
        empty: 6,
        notEmpty: 7
      },
      operators: [{
        value: "==",
        description: m
      }, {
        value: "!=",
        description: f
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    number: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5,
        empty: 6,
        notEmpty: 7
      },
      operators: [{
        value: "==",
        description: m
      }, {
        value: "!=",
        description: f
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    amount: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5,
        empty: 6,
        notEmpty: 7
      },
      operators: [{
        value: "==",
        description: m
      }, {
        value: "!=",
        description: f
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    dropdown: {
      index: {
        "==": 0,
        "!=": 1,
        empty: 2,
        notEmpty: 3
      },
      operators: [{
        value: "==",
        description: m
      }, {
        value: "!=",
        description: f
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    typeahead: {
      index: {
        "==": 0,
        "!=": 1,
        empty: 2,
        notEmpty: 3
      },
      operators: [{
        value: "==",
        description: m
      }, {
        value: "!=",
        description: f
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    "radio-buttons": {
      index: {
        "==": 0,
        "!=": 1,
        empty: 2,
        notEmpty: 3
      },
      operators: [{
        value: "==",
        description: m
      }, {
        value: "!=",
        description: f
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    "boolean": {
      index: {
        "==": 0,
        "!=": 1,
        empty: 2,
        notEmpty: 3
      },
      operators: [{
        value: "==",
        description: m
      }, {
        value: "!=",
        description: f
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    condition: {
      index: {
        and: 0,
        "and-not": 1,
        or: 2,
        "or-not": 3
      },
      operators: [{
        value: "and",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.CONDITION.AND")
      }, {
        value: "and-not",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.CONDITION.ANDNOT")
      }, {
        value: "or",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.CONDITION.OR")
      }, {
        value: "or-not",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.CONDITION.ORNOT")
      }]
    }
  }, t.model.rightTypes = [{
    value: "string",
    description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_TYPES.CONDITION.STRING")
  }, {
    value: "number",
    description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_TYPES.CONDITION.NUMBER")
  }, {
    value: "date",
    description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_TYPES.CONDITION.DATE")
  }], t.model.rightValueOptions = {
    "boolean": [{
      value: "true",
      description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_VALUE_OPTIONS.BOOLEAN.CHECKED")
    }, {
      value: "false",
      description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_VALUE_OPTIONS.BOOLEAN.UNCHECKED")
    }]
  }, t.getNameForSelectedFormFieldId = function(e) {
    var i = "";
    if (e)
      for (var o = 0; t.availableFormFields.length > o; o++) {
        var n = t.availableFormFields[o];
        if (n.id === e) {
          i = n.name;
          break
        }
      }
    return i
  }, t._getLeftValueColumnValue = function(e) {
    var t = "";
    return e ? ("formField" === e.leftFieldType ? e.leftFormFieldId && "" != e.leftFormFieldId && (t = e.leftFormFieldId) : "outcome" === e.leftFieldType ? e.leftOutcomeFormId && "" != e.leftOutcomeFormId && (t = e.leftOutcomeFormName || e.leftOutcomeFormId) : "restResponse" === e.leftFieldType && e.leftRestResponseId && "" != e.leftRestResponseId && (t = e.leftRestResponseId), t) : t
  }, t._getRightValueColumnValue = function(e) {
    var i = "";
    if (!e) return i;
    if ("formField" === e.rightFieldType) e.rightFormFieldId && "" != e.rightFormFieldId && (i = e.rightFormFieldId);
    else if ("outcome" === e.rightFieldType) i = "outcome" === e.leftFieldType ? e.rightOutcomeFormName && "" != e.rightOutcomeFormName && e.leftOutcomeFormName && "" != e.leftOutcomeFormName ? e.rightOutcomeFormName != e.leftOutcomeFormName ? e.rightOutcomeFormName : e.rightOutcomeName : e.rightOutcomeFormName : e.rightOutcomeFormName;
    else if ("restResponse" === e.rightFieldType) e.rightRestResponseId && "" != e.rightRestResponseId && (i = e.rightRestResponseId);
    else if (e.rightValue && "" != e.rightValue)
      if (e.leftFormFieldId && "" != e.leftFormFieldId) {
        var o = t.getTypeForSelectedFormFieldId(e.leftFormFieldId);
        if ("date" === o) i = l("date")(new Date(e.rightValue), "d-M-yyyy");
        else if ("integer" === o) {
          var n = 0;
          try {
            n = parseInt(e.rightValue)
          } catch (r) {
            n = 0
          }
          e.rightValue = n, i = e.rightValue
        } else i = e.rightValue
      } else i = e.rightValue;
    return i
  }, t.getTypeForSelectedFormFieldId = function(e) {
    return g(e)
  };
  var g = function(e) {
      var i = "";
      if (e)
        for (var o = 0; t.availableFormFields.length > o; o++) {
          var n = t.availableFormFields[o];
          if (n.id === e) {
            i = n.type;
            break
          }
        }
      return i
    },
    v = function(e) {
      var i = "";
      if (e) {
        var o = t.choiceResponseVariables;
        if (o && o.length > 0)
          for (var n = 0; o.length > n; n++) {
            var r = o[n];
            if (r.processVariableName === e) {
              i = r.processVariableType;
              break
            }
          }
      }
      return i.toLowerCase()
    };
  t.getConditionsForFieldId = function(e, i) {
    var o;
    return e ? o = g(e) : i && (o = v(i)), o && t.model.conditionOperatorsByType[o] ? t.model.conditionOperatorsByType[o].operators : t.model.conditionOperatorsByType.string.operators
  }, t.getDropDownOptions = function(e) {
    return t.options && t.options[e] ? t.options[e] : (t.updateSelectOptions(t.detectFormField(e), e), t.options && t.options[e] ? t.options[e] : [])
  }, t.detectFormField = function(e) {
    for (var i = 0; t.availableFormFields.length > i; i++) {
      var o = t.availableFormFields[i];
      if (o.id === e) return o
    }
  }, t.updateSelectOptions = function(e, i) {
    e && ("dropdown" === e.type || "radio-buttons" === e.type || "typeahead" === e.type) && (t.options[e.id] = t.getFieldOptions(e, i))
  }, t.getFieldOptions = function(e, t) {
    var i = [];
    if (e && e.optionType && "rest" === e.optionType) return i;
    if (e.options && e.options.length > 0)
      for (var o = 0; e.options.length > o; o++) {
        var n = e.options[o],
          r = t.endsWith("_LABEL") ? n.name : n.id;
        i.push({
          value: r,
          description: r
        })
      }
    return i
  }, t.getTypeForFieldOrVariable = function(e, t) {
    var i = "string";
    return e ? i = g(e) : t && (i = v(t)), i
  }, t._getOperatorDescriptionForFieldId = function(e) {
    if (e && e.operator) {
      var i;
      return e.leftFormFieldId ? i = g(e.leftFormFieldId) : e.leftRestResponseId ? i = v(e.leftRestResponseId) : e.leftOutcomeFormId && "" != e.leftOutcomeFormId && (i = "string"), i ? t._getOperatorDescriptionForType(e.operator, i) : void 0
    }
  }, t._getOperatorDescriptionForType = function(e, i) {
    if (e && i) {
      var o;
      if (t.model.conditionOperatorsByType[i] ? o = t.model.conditionOperatorsByType[i].index[e] : (i = "string", o = t.model.conditionOperatorsByType[i].index[e]), void 0 != o && o >= 0) {
        var n = t.model.conditionOperatorsByType[i].operators[o].description;
        return n
      }
      return void 0
    }
  }, t.fieldIsNotEmpty = function(e) {
    return e && null === e && void 0 === e && "" !== e ? void 0 : !0
  };
  var I = o.instant("FORM-BUILDER.VISIBILITY.LEFT-FORM-FIELD"),
    S = o.instant("FORM-BUILDER.VISIBILITY.OPERATOR"),
    O = o.instant("FORM-BUILDER.VISIBILITY.RIGHT-VALUE"),
    R = o.instant("FORM-BUILDER.VISIBILITY.NEXT-CONDITION-OPERATOR");
  t.flowConditionGridOptions = {
    data: e.tabFlowConditions,
    headerRowHeight: 28,
    enableRowSelection: !0,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableSorting: !1,
    enableColumnMenus: !1,
    columnDefs: [{
      field: "leftFormFieldId",
      displayName: I,
      resizable: !1,
      sortable: !1,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getLeftValueColumnValue(row.entity)}}</div>'
    }, {
      field: "operator",
      displayName: S,
      resizable: !0,
      sortable: !1,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getOperatorDescriptionForFieldId(row.entity)}}</div>'
    }, {
      field: "rightValue",
      displayName: O,
      resizable: !1,
      sortable: !1,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getRightValueColumnValue(row.entity)}}</div>'
    }, {
      field: "nextConditionOperator",
      displayName: R,
      resizable: !1,
      sortable: !1,
      width: 150,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getOperatorDescriptionForType(row.entity[col.field], "condition")}}</div>'
    }]
  }, t.flowConditionGridOptions.onRegisterApi = function(e) {
    t.flowConditionGridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
      e.isSelected ? (t.model.selectedFlowCondition = e.entity, t.focusFirstField(), t.model.selectedFlowCondition && u(t.model.selectedFlowCondition)) : t.model.selectedFlowCondition = void 0
    })
  }, t.focusFirstField = function() {
    r(function() {
      var e = document.getElementById("leftVariableField");
      e && e.focus()
    }, 100)
  }, t.addNewCondition = function() {
    var i = {
      leftFormFieldId: "",
      operator: "",
      rightFormFieldId: "",
      rightRestResponseId: "",
      rightValue: "",
      nextConditionOperator: ""
    };
    t.flowConditionGridApi.selection.clearSelectedRows(), e.tabFlowConditions.push(i), r(function() {
      t.flowConditionGridApi.selection.toggleRowSelection(i)
    })
  }, t.removeCondition = function() {
    if (t.model.selectedFlowCondition) {
      var i = e.tabFlowConditions.indexOf(t.model.selectedFlowCondition);
      t.flowConditionGridApi.selection.clearSelectedRows(), e.tabFlowConditions.splice(i, 1), r(function() {
        e.tabFlowConditions.length > 0 ? t.flowConditionGridApi.selection.toggleRowSelection(e.tabFlowConditions[0]) : t.model.selectedFlowCondition = void 0
      })
    }
  }, t.moveConditionUp = function() {
    if (t.model.selectedFlowCondition) {
      var i = e.tabFlowConditions.indexOf(t.model.selectedFlowCondition);
      if (0 != i) {
        var o = e.tabFlowConditions[i];
        e.tabFlowConditions.splice(i, 1), r(function() {
          e.tabFlowConditions.splice(i + -1, 0, o), r(function() {
            t.flowConditionGridApi.selection.toggleRowSelection(e.tabFlowConditions[0])
          })
        })
      }
    }
  }, t.moveConditionDown = function() {
    if (t.model.selectedFlowCondition) {
      var i = e.tabFlowConditions.indexOf(t.model.selectedFlowCondition);
      if (i != e.tabFlowConditions.length - 1) {
        var o = e.tabFlowConditions[i];
        e.tabFlowConditions.splice(i, 1), r(function() {
          e.tabFlowConditions.splice(i + 1, 0, o), r(function() {
            t.flowConditionGridApi.selection.toggleRowSelection(e.tabFlowConditions[0])
          })
        })
      }
    }
  }, t.setLeftFieldType = function(e) {
    t.model.selectedFlowCondition.leftFieldType = e, "formField" === e ? (t.model.selectedLeftVariable = "", t.model.selectedFlowCondition.leftRestResponseId = "", t.model.selectedFlowCondition.leftOutcomeFormId = "", t.model.selectedFlowCondition.leftOutcomeFormName = "") : "restResponse" === e ? (t.model.selectedFlowCondition.leftFormFieldId = "", t.model.selectedFlowCondition.leftOutcomeFormId = "", t.model.selectedFlowCondition.leftOutcomeFormName = "") : "outcome" === e && (t.model.selectedLeftVariable = "", t.model.selectedFlowCondition.leftFormFieldId = "", t.model.selectedFlowCondition.leftRestResponseId = "")
  }, t.setRightFieldType = function(e) {
    t.model.selectedFlowCondition.rightFieldType = e, "formField" === e ? (t.model.selectedFlowCondition.rightValue = "", t.model.selectedFlowCondition.rightRestResponseId = "", t.model.selectedFlowCondition.rightOutcomeName = "") : "staticValue" === e ? (t.model.selectedFlowCondition.rightFormFieldId = "", t.model.selectedFlowCondition.rightRestResponseId = "", t.model.selectedFlowCondition.rightOutcomeName = "", t.model.selectedRightVariable = "") : "restResponse" === e ? (t.model.selectedFlowCondition.rightValue = "", t.model.selectedFlowCondition.rightFormFieldId = "", t.model.selectedFlowCondition.rightOutcomeName = "", t.model.selectedRightVariable = "") : "outcome" === e && (t.model.selectedFlowCondition.rightValue = "", t.model.selectedFlowCondition.rightFormFieldId = "", t.model.selectedFlowCondition.rightRestResponseId = "", t.model.selectedRightVariable = "")
  }, t.selectLeftFormField = function(e, t) {
    e.leftFormFieldId = t.id
  }, t.selectRightFormField = function(e, t) {
    e.rightFormFieldId = t.id
  }, t.selectLeftResponseVariable = function(e, t) {
    e.leftRestResponseId = t.processVariableName
  }, t.selectRightResponseVariable = function(e, t) {
    e.rightRestResponseId = t.processVariableName
  }, t.selectLeftForm = function(e, i) {
    e.leftOutcomeFormId = i.id, e.leftOutcomeFormName = i.name, t.selectRightForm(e, i)
  }, t.selectRightForm = function(e, i) {
    e.rightOutcomeFormId = i.id, e.rightOutcomeFormName = i.name, e.rightOutcomeName = void 0, t.refreshAvailableOutcomes(e.rightOutcomeFormId)
  }, t.selectFormOutcome = function(e, t) {
    e.rightOutcomeName = t.name
  }, t.isShowRightHandSide = function() {
    return null !== t.model.selectedFlowCondition && void 0 !== t.model.selectedFlowCondition && "empty" !== t.model.selectedFlowCondition.operator && "notEmpty" !== t.model.selectedFlowCondition.operator
  }, t.closeDatePopup = function() {
    jQuery("#rightValueField").blur()
  }, t.clearDate = function() {
    t.model.selectedFlowCondition.rightValue = void 0, jQuery("#rightValueField").blur()
  }, t.selectToday = function(e, t) {
    var i = new Date;
    i = new Date(i.getFullYear(), i.getMonth(), i.getDate(), 0, 0, 0, 0), e = i, t && t(e), jQuery("#rightValueField").blur()
  }, t.refreshAvailableResponseVariables(), t.refreshAvailableFormFields(), t.refreshAvailableForms()
}]), angular.module("activitiModeler").controller("ChoiceStepConditionBuilderReadOnlyController", ["$rootScope", "$scope", "$q", "$translate", "$http", "$timeout", "FormUtilService", "FormBuilderService", "$filter", function(e, t, i, o, n, r) {
  t.model.selectedFlowConditions = [], t.model.selectedFields = [], t.model.labels = [], t.model.flowConditions = [], t.model.selectedFlowCondition = void 0, t.flowCondition = void 0, t.options = {}, t.model.condition && (e.flowCondition = t.model.condition), (void 0 === e.flowCondition.type || null === e.flowCondition.type) && (e.flowCondition.type = "variables");
  var s = function(e, t) {
      if (!t.nextCondition) return t.index = void 0, e.push(t), void 0;
      var i = t.nextCondition;
      t.index = void 0, t.nextCondition = "", e.push(t), s(e, i)
    },
    a = function() {
      var t = [];
      return t[0] = e.flowCondition, e.flowCondition.nextCondition && s(t, e.flowCondition.nextCondition), t
    },
    l = function(e) {
      if (e && void 0 == e.nextConditionOperator) {
        var t = {};
        return e && "variables" === e.type ? "field" === e.fieldType ? (t.leftFormFieldId = e.fieldId, t.operator = e.operator, t.rightValue = e.value) : "outcome" === e.fieldType ? (t.leftOutcomeFormId = e.outcomeFormId, t.leftOutcomeFormName = e.outcomeFormName, t.operator = e.operator, t.rightOutcomeName = e.outcomeName) : "restResponseVariable" === e.fieldType ? (t.leftRestResponseId = e.responseVariableName, t.operator = e.operator, t.rightValue = e.value) : t = "none" === e.fieldType ? void 0 : e : t = e, t
      }
      return e
    };
  e.flowCondition = l(e.flowCondition), e.tabFlowConditions = e.flowCondition ? a() : [];
  var d = function(e) {
      e && (void 0 === e.leftFieldType && (e.leftFieldType = e.leftFormFieldId && "" != e.leftFormFieldId ? "formField" : e.leftRestResponseId && "" != e.leftRestResponseId ? "restResponse" : e.leftOutcomeFormId && "" != e.leftOutcomeFormId ? "outcome" : "formField"), void 0 === e.rightFieldType && (e.rightValue && ("" + e.rightValue).length > 0 ? e.rightFieldType = "staticValue" : e.rightFormFieldId && "" != e.rightFormFieldId ? e.rightFieldType = "formField" : e.rightRestResponseId && "" != e.rightRestResponseId ? e.rightFieldType = "restResponse" : e.rightOutcomeFormId && "" != e.rightOutcomeFormId ? e.rightFieldType = "outcome" : e.rightOutcomeName && "" != e.rightOutcomeName && (e.rightOutcomeFormId = e.leftOutcomeFormId, e.rightOutcomeFormName = e.leftOutcomeFormName, e.rightFieldType = "outcome")))
    },
    c = function() {
      if (e.tabFlowConditions && e.tabFlowConditions.length > 0)
        for (var t = 0; e.tabFlowConditions.length > t; t++) {
          var i = e.tabFlowConditions[t];
          d(i)
        }
    };
  c();
  var p = o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.EQUALS"),
    u = o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.NOTEQUALS");
  t.model.conditionOperatorsByType = {
    text: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5,
        empty: 6,
        notEmpty: 7
      },
      operators: [{
        value: "==",
        description: p
      }, {
        value: "!=",
        description: u
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    string: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5,
        empty: 6,
        notEmpty: 7
      },
      operators: [{
        value: "==",
        description: p
      }, {
        value: "!=",
        description: u
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    date: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5,
        empty: 6,
        notEmpty: 7
      },
      operators: [{
        value: "==",
        description: p
      }, {
        value: "!=",
        description: u
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.DATE.BEFORE")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.DATE.AFTER")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.DATE.BEFOREOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.DATE.AFTEROREQUAL")
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    integer: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5,
        empty: 6,
        notEmpty: 7
      },
      operators: [{
        value: "==",
        description: p
      }, {
        value: "!=",
        description: u
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    "long": {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5,
        empty: 6,
        notEmpty: 7
      },
      operators: [{
        value: "==",
        description: p
      }, {
        value: "!=",
        description: u
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    number: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5,
        empty: 6,
        notEmpty: 7
      },
      operators: [{
        value: "==",
        description: p
      }, {
        value: "!=",
        description: u
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    amount: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5,
        empty: 6,
        notEmpty: 7
      },
      operators: [{
        value: "==",
        description: p
      }, {
        value: "!=",
        description: u
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    dropdown: {
      index: {
        "==": 0,
        "!=": 1,
        empty: 2,
        notEmpty: 3
      },
      operators: [{
        value: "==",
        description: p
      }, {
        value: "!=",
        description: u
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    typeahead: {
      index: {
        "==": 0,
        "!=": 1,
        empty: 2,
        notEmpty: 3
      },
      operators: [{
        value: "==",
        description: p
      }, {
        value: "!=",
        description: u
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    "radio-buttons": {
      index: {
        "==": 0,
        "!=": 1,
        empty: 2,
        notEmpty: 3
      },
      operators: [{
        value: "==",
        description: p
      }, {
        value: "!=",
        description: u
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    "boolean": {
      index: {
        "==": 0,
        "!=": 1,
        empty: 2,
        notEmpty: 3
      },
      operators: [{
        value: "==",
        description: p
      }, {
        value: "!=",
        description: u
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    condition: {
      index: {
        and: 0,
        "and-not": 1,
        or: 2,
        "or-not": 3
      },
      operators: [{
        value: "and",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.CONDITION.AND")
      }, {
        value: "and-not",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.CONDITION.ANDNOT")
      }, {
        value: "or",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.CONDITION.OR")
      }, {
        value: "or-not",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.CONDITION.ORNOT")
      }]
    }
  }, t.model.rightTypes = [{
    value: "string",
    description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_TYPES.CONDITION.STRING")
  }, {
    value: "number",
    description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_TYPES.CONDITION.NUMBER")
  }, {
    value: "date",
    description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_TYPES.CONDITION.DATE")
  }], t.model.rightValueOptions = {
    "boolean": [{
      value: "true",
      description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_VALUE_OPTIONS.BOOLEAN.CHECKED")
    }, {
      value: "false",
      description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_VALUE_OPTIONS.BOOLEAN.UNCHECKED")
    }]
  }, t.getNameForSelectedFormFieldId = function(e) {
    var i = "";
    if (e)
      for (var o = 0; t.availableFormFields.length > o; o++) {
        var n = t.availableFormFields[o];
        if (n.id === e) {
          i = n.name;
          break
        }
      }
    return i
  }, t._getLeftValueColumnValue = function(e) {
    var t = "";
    return e ? ("formField" === e.leftFieldType ? e.leftFormFieldId && "" != e.leftFormFieldId && (t = e.leftFormFieldId) : "outcome" === e.leftFieldType ? e.leftOutcomeFormId && "" != e.leftOutcomeFormId && (t = e.leftOutcomeFormName || e.leftOutcomeFormId) : "restResponse" === e.leftFieldType && e.leftRestResponseId && "" != e.leftRestResponseId && (t = e.leftRestResponseId), t) : t
  }, t._getRightValueColumnValue = function(e) {
    var t = "";
    return e ? ("formField" === e.rightFieldType ? e.rightFormFieldId && "" != e.rightFormFieldId && (t = e.rightFormFieldId) : "outcome" === e.rightFieldType ? t = "outcome" === e.leftFieldType ? e.rightOutcomeFormName && "" != e.rightOutcomeFormName && e.leftOutcomeFormName && "" != e.leftOutcomeFormName ? e.rightOutcomeFormName != e.leftOutcomeFormName ? e.rightOutcomeFormName : e.rightOutcomeName : e.rightOutcomeFormName : e.rightOutcomeFormName : "restResponse" === e.rightFieldType ? e.rightRestResponseId && "" != e.rightRestResponseId && (t = e.rightRestResponseId) : e.rightValue && "" != e.rightValue && (t = e.rightValue), t) : t
  }, t.getTypeForSelectedFormFieldId = function(e) {
    return h(e)
  };
  var h = function(e) {
      var i = "";
      if (e)
        for (var o = 0; t.availableFormFields.length > o; o++) {
          var n = t.availableFormFields[o];
          if (n.id === e) {
            i = n.type;
            break
          }
        }
      return i
    },
    m = function(e) {
      var i = "";
      if (e) {
        var o = t.choiceResponseVariables;
        if (o && o.length > 0)
          for (var n = 0; o.length > n; n++) {
            var r = o[n];
            if (r.processVariableName === e) {
              i = r.processVariableType;
              break
            }
          }
      }
      return i.toLowerCase()
    };
  t.getConditionsForFieldId = function(e, i) {
    var o;
    return e ? o = h(e) : i && (o = m(i)), o && t.model.conditionOperatorsByType[o] ? t.model.conditionOperatorsByType[o].operators : t.model.conditionOperatorsByType.string.operators
  }, t.getDropDownOptions = function(e) {
    return t.options && t.options[e] ? t.options[e] : (t.updateSelectOptions(t.detectFormField(e), e), t.options && t.options[e] ? t.options[e] : [])
  }, t.detectFormField = function(e) {
    for (var i = 0; t.availableFormFields.length > i; i++) {
      var o = t.availableFormFields[i];
      if (o.id === e) return o
    }
  }, t.updateSelectOptions = function(e, i) {
    e && ("dropdown" === e.type || "radio-buttons" === e.type || "typeahead" === e.type) && (t.options[e.id] = t.getFieldOptions(e, i))
  }, t.getFieldOptions = function(e, t) {
    var i = [];
    if (e && e.optionType && "rest" === e.optionType) return i;
    if (e.options && e.options.length > 0)
      for (var o = 0; e.options.length > o; o++) {
        var n = e.options[o],
          r = t.endsWith("_LABEL") ? n.name : n.id;
        i.push({
          value: r,
          description: r
        })
      }
    return i
  }, t.getTypeForFieldOrVariable = function(e, t) {
    var i = "string";
    return e ? i = h(e) : t && (i = m(t)), i
  }, t._getOperatorDescriptionForFieldId = function(e) {
    if (e && e.operator) {
      var i;
      return e.leftFormFieldId ? i = h(e.leftFormFieldId) : e.leftRestResponseId ? i = m(e.leftRestResponseId) : e.leftOutcomeFormId && "" != e.leftOutcomeFormId && (i = "string"), i ? t._getOperatorDescriptionForType(e.operator, i) : void 0
    }
  }, t._getOperatorDescriptionForType = function(e, i) {
    if (e && i) {
      var o;
      if (o = t.model.conditionOperatorsByType[i] ? t.model.conditionOperatorsByType[i].index[e] : t.model.conditionOperatorsByType.string.index[e], void 0 != o && o >= 0) {
        var n = t.model.conditionOperatorsByType[i].operators[o].description;
        return n
      }
      return void 0
    }
  }, t.fieldIsNotEmpty = function(e) {
    return e && null === e && void 0 === e && "" !== e ? void 0 : !0
  };
  var f = o.instant("FORM-BUILDER.VISIBILITY.LEFT-FORM-FIELD"),
    g = o.instant("FORM-BUILDER.VISIBILITY.OPERATOR"),
    v = o.instant("FORM-BUILDER.VISIBILITY.RIGHT-VALUE"),
    I = o.instant("FORM-BUILDER.VISIBILITY.NEXT-CONDITION-OPERATOR");
  t.flowConditionGridOptions = {
    data: e.tabFlowConditions,
    headerRowHeight: 28,
    enableRowSelection: !1,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableSorting: !1,
    enableColumnMenus: !1,
    columnDefs: [{
      field: "leftFormFieldId",
      displayName: f,
      resizable: !1,
      sortable: !1,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getLeftValueColumnValue(row.entity)}}</div>'
    }, {
      field: "operator",
      displayName: g,
      resizable: !0,
      sortable: !1
    }, {
      field: "rightValue",
      displayName: v,
      resizable: !1,
      sortable: !1,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getRightValueColumnValue(row.entity)}}</div>'
    }, {
      field: "nextConditionOperator",
      displayName: I,
      resizable: !1,
      sortable: !1,
      width: 150
    }]
  }, t.flowConditionGridOptions.onRegisterApi = function(e) {
    t.flowConditionGridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
      e.isSelected ? (t.model.selectedFlowCondition = e.entity, t.focusFirstField(), t.model.selectedFlowCondition && d(t.model.selectedFlowCondition)) : t.model.selectedFlowCondition = void 0
    })
  }, t.focusFirstField = function() {
    r(function() {
      var e = document.getElementById("leftVariableField");
      e && e.focus()
    }, 100)
  }, t.addNewCondition = function() {
    var i = {
      leftFormFieldId: "",
      operator: "",
      rightFormFieldId: "",
      rightRestResponseId: "",
      rightValue: "",
      nextConditionOperator: ""
    };
    t.flowConditionGridApi.selection.clearSelectedRows(), e.tabFlowConditions.push(i), r(function() {
      t.flowConditionGridApi.selection.toggleRowSelection(i)
    })
  }, t.removeCondition = function() {
    if (t.model.selectedFlowCondition) {
      var i = e.tabFlowConditions.indexOf(t.model.selectedFlowCondition);
      t.flowConditionGridApi.selection.clearSelectedRows(), e.tabFlowConditions.splice(i, 1), r(function() {
        e.tabFlowConditions.length > 0 ? t.flowConditionGridApi.selection.toggleRowSelection(e.tabFlowConditions[0]) : t.model.selectedFlowCondition = void 0
      })
    }
  }, t.moveConditionUp = function() {
    if (t.model.selectedFlowCondition) {
      var i = e.tabFlowConditions.indexOf(t.model.selectedFlowCondition);
      if (0 != i) {
        var o = e.tabFlowConditions[i];
        e.tabFlowConditions.splice(i, 1), r(function() {
          e.tabFlowConditions.splice(i + -1, 0, o), r(function() {
            t.flowConditionGridApi.selection.toggleRowSelection(e.tabFlowConditions[0])
          })
        })
      }
    }
  }, t.moveConditionDown = function() {
    if (t.model.selectedFlowCondition) {
      var i = e.tabFlowConditions.indexOf(t.model.selectedFlowCondition);
      if (i != e.tabFlowConditions.length - 1) {
        var o = e.tabFlowConditions[i];
        e.tabFlowConditions.splice(i, 1), r(function() {
          e.tabFlowConditions.splice(i + 1, 0, o), r(function() {
            t.flowConditionGridApi.selection.toggleRowSelection(e.tabFlowConditions[0])
          })
        })
      }
    }
  }, t.setLeftFieldType = function(e) {
    t.model.selectedFlowCondition.leftFieldType = e, "formField" === e ? (t.model.selectedLeftVariable = "", t.model.selectedFlowCondition.leftRestResponseId = "", t.model.selectedFlowCondition.leftOutcomeFormId = "", t.model.selectedFlowCondition.leftOutcomeFormName = "") : "restResponse" === e ? (t.model.selectedFlowCondition.leftFormFieldId = "", t.model.selectedFlowCondition.leftOutcomeFormId = "", t.model.selectedFlowCondition.leftOutcomeFormName = "") : "outcome" === e && (t.model.selectedLeftVariable = "", t.model.selectedFlowCondition.leftFormFieldId = "", t.model.selectedFlowCondition.leftRestResponseId = "")
  }, t.setRightFieldType = function(e) {
    t.model.selectedFlowCondition.rightFieldType = e, "formField" === e ? (t.model.selectedFlowCondition.rightValue = "", t.model.selectedFlowCondition.rightRestResponseId = "", t.model.selectedFlowCondition.rightOutcomeName = "") : "staticValue" === e ? (t.model.selectedFlowCondition.rightFormFieldId = "", t.model.selectedFlowCondition.rightRestResponseId = "", t.model.selectedFlowCondition.rightOutcomeName = "", t.model.selectedRightVariable = "") : "restResponse" === e ? (t.model.selectedFlowCondition.rightValue = "", t.model.selectedFlowCondition.rightFormFieldId = "", t.model.selectedFlowCondition.rightOutcomeName = "", t.model.selectedRightVariable = "") : "outcome" === e && (t.model.selectedFlowCondition.rightValue = "", t.model.selectedFlowCondition.rightFormFieldId = "", t.model.selectedFlowCondition.rightRestResponseId = "", t.model.selectedRightVariable = "")
  }, t.selectLeftFormField = function(e, t) {
    e.leftFormFieldId = t.id
  }, t.selectRightFormField = function(e, t) {
    e.rightFormFieldId = t.id
  }, t.selectLeftResponseVariable = function(e, t) {
    e.leftRestResponseId = t.processVariableName
  }, t.selectRightResponseVariable = function(e, t) {
    e.rightRestResponseId = t.processVariableName
  }, t.selectLeftForm = function(e, i) {
    e.leftOutcomeFormId = i.id, e.leftOutcomeFormName = i.name, t.selectRightForm(e, i)
  }, t.selectRightForm = function(e, i) {
    e.rightOutcomeFormId = i.id, e.rightOutcomeFormName = i.name, e.rightOutcomeName = void 0, t.refreshAvailableOutcomes(e.rightOutcomeFormId)
  }, t.selectFormOutcome = function(e, t) {
    e.rightOutcomeName = t.name
  }, t.isShowRightHandSide = function() {
    return null !== t.model.selectedFlowCondition && void 0 !== t.model.selectedFlowCondition && "empty" !== t.model.selectedFlowCondition.operator && "notEmpty" !== t.model.selectedFlowCondition.operator
  }, t.closeDatePopup = function() {
    jQuery("#rightValueField").blur()
  }, t.clearDate = function() {
    t.model.selectedFlowCondition.rightValue = void 0, jQuery("#rightValueField").blur()
  }, t.selectToday = function(e, t) {
    var i = new Date;
    i = new Date(i.getFullYear(), i.getMonth(), i.getDate(), 0, 0, 0, 0), e = i, t && t(e), jQuery("#rightValueField").blur()
  }
}]), angular.module("activitiModeler").service("FormBuilderService", ["$http", "$q", "$rootScope", "$translate", "editorCache", "ProcessBuilderService", "ProcessScopeService", function(e, t, i, o, n, r, s) {
  function a(e) {
    return e.forEach(function(e) {
      for (var t in e) 0 === t.indexOf("_") && delete e[t];
      if (e.fields)
        for (var i in e.fields) a(e.fields[i])
    }), e
  }
  var l = function(i) {
    var o = t.defer();
    return e(i).success(function(e) {
      o.resolve(e)
    }).error(function(e) {
      o.reject(e)
    }), o.promise
  };
  this.saveForm = function(t, o, n, r, s) {
    var l = 0;
    t.formRepresentation = i.currentForm, t.formRepresentation.name = o, n && n.length > 0 && (t.formRepresentation.description = n);
    for (var d = [], c = 0; i.formItems.length > c; c++) {
      var p = i.formItems[c];
      (!i.activeFormTab || !i.activeFormTab.id || p.tab && p.tab === i.activeFormTab.id) && d.push(p)
    }
    for (var c = 0; d.length > c; c++) i.formItems.splice(i.formItems.indexOf(d[c]), 1);
    for (var c = 0; i.currentFormItems.length > c; c++) i.formItems.push(i.currentFormItems[c]);
    for (var c = 0; i.formItems.length > c; c++) {
      var u = i.formItems[c];
      if (("container" === u.type || "group" === u.type) && u.fields)
        for (var h in u.fields)
          if (u.fields[h])
            for (var m = 0; u.fields[h].length > m; m++) this._cleanFormField(u.fields[h][m], l++);
      "container" !== u.type && this._cleanFormField(u, l++)
    }
    if (i.selectedActiveFormTab && i.selectedActiveFormTab.id) {
      var f = function(e, t) {
        e && (e.nextCondition = void 0);
        var i = {};
        return t.length > 0 ? (i = t.shift(), e.nextCondition = i, f(e.nextCondition, t), void 0) : i
      };
      if (i.tabVisibilityConditions) {
        var g = i.tabVisibilityConditions.shift();
        f(g, i.tabVisibilityConditions), i.selectedActiveFormTab.visibilityCondition = g
      }
    }
    var v = i.formBuilder.activeTab;
    "design" != v && (i.formBuilder.activeTab = "design"), t.formRepresentation.formDefinition = {
      fields: a(angular.copy(i.formItems)),
      tabs: i.formTabs,
      outcomes: i.currentOutcomes,
      javascriptEvents: i.formJavascriptEvents,
      gridsterForm: !1
    }, html2canvas(jQuery("#canvasSection"), {
      onrendered: function(o) {
        var n = o.width / 300,
          a = document.createElement("canvas");
        a.setAttribute("width", 300), a.setAttribute("height", o.height / n);
        var l = a.getContext("2d");
        l.drawImage(o, 0, 0, o.width, o.height, 0, 0, 300, o.height / n), t.formImageBase64 = a.toDataURL("image/png"), delete Array.prototype.toJSON, e({
          method: "PUT",
          url: ACTIVITI.CONFIG.contextRoot + "/app/rest/form-models/" + i.currentForm.id,
          data: t
        }).success(function() {
          r && r()
        }).error(function() {
          s && s()
        }), "design" != v && (i.formBuilder.activeTab = v)
      }
    })
  }, this.validateForm = function(t) {
    var n = {};
    n.formRepresentation = i.currentForm, n.processScopeIdentifiers = s.getIdentifiers();
    for (var r = 0, l = 0; i.formItems.length > l; l++) {
      var d = i.formItems[l];
      if (("container" === d.type || "group" === d.type) && d.fields)
        for (var c in d.fields)
          if (d.fields[c])
            for (var p = 0; d.fields[c].length > p; p++) this._cleanFormField(d.fields[c][p], r++);
      "container" !== d.type && this._cleanFormField(d, r++)
    }
    var u = i.formBuilder.activeTab;
    "design" != u && (i.formBuilder.activeTab = "design"), n.formRepresentation.formDefinition = {
      fields: a(angular.copy(i.formItems)),
      outcomes: i.currentOutcomes
    }, delete Array.prototype.toJSON, e({
      method: "PUT",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/form-models/" + i.currentForm.id + "/validate",
      data: n
    }).success(function(e) {
      e && e.length > 0 ? (i.currentFormValidationErrors = e, i.addAlertPromise(o("FORM-BUILDER.ALERT.VALIDATION-ERROR"), "error")) : (i.currentFormValidationErrors = [], i.addAlertPromise(o("FORM-BUILDER.ALERT.VALIDATION-OK"), "info"));
      for (var n = [], r = 0; i.currentFormValidationErrors.length > r; r++) 0 > n.indexOf(i.currentFormValidationErrors[r].id) && n.push(i.currentFormValidationErrors[r].id);
      if (i.formItems)
        for (var r = 0; i.formItems.length > r; r++) {
          var s = i.formItems[r];
          if (("container" === s.type || "group" === s.type) && s.fields)
            for (var a in s.fields)
              if (s.fields[a])
                for (var l = 0; s.fields[a].length > l; l++) s.fields[a][l].hasValidationError = n.indexOf(s.fields[a][l].id) >= 0;
          "container" !== s.type && (s.hasValidationError = n.indexOf(s.id) >= 0)
        }
      t && t(e)
    })
  }, this.getStencilSet = function(e) {
    var t;
    return t = e && isNaN(e) === !1 ? ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + e + "/formeditor" : ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/0/formeditor", l({
      method: "GET",
      url: t
    })
  }, this._cleanFormField = function(e, t) {
    if (!e.overrideId) {
      var i;
      e.name && e.name.length > 0 ? (i = e.name.toLowerCase(), i = i.replace(RegExp(" ", "g"), ""), i = i.replace(/[&\/\\#,+~%.'":*?!<>{}()$@;]/g, "")) : i = "field" + t, e.id = i
    }
    e.layout || (e.layout = {}), e.layout.colspan = e.sizeX, e.layout.row = e.row, e.layout.column = e.col, delete e.hasValidationError
  }, this.additionalFormFieldProcessing = function(e) {
    return d(e)
  };
  var d = function(e) {
    if (e && !(1 > e.length)) {
      var t = [],
        i = [];
      angular.copy(e, t);
      for (var o = 0; t.length > o; o++) {
        var n = t[o];
        if ("RestFieldRepresentation" === n.fieldType) {
          var r = angular.copy(n);
          r.id = n.id + "_LABEL", r.name = n.name + " - label", i.push(r), n.name = n.name + " - id"
        }
        i.push(n)
      }
      return i
    }
  }
}]), angular.module("activitiModeler").controller("FormBuilderController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", "FormBuilderService", "ProcessBuilderService", "FormUtilService", "EndpointUtilService", "ProcessScopeService", "SystemPropertiesService", function(e, t, i, o, n, r, s, a, l, d, c, p, u, h, m) {
  function f(e, i) {
    if (e._guid || (e._guid = i + E++), !e._width) {
      var o;
      o = "container" == e.type || "group" == e.type ? 2 : t.palletteElements.filter(function(t) {
        return "custom" === t.type && t.customType ? t.customType === e.type : t.type === e.type
      }).map(function(e) {
        return e.width
      })[0], e._width = o
    }
    if (e.fields)
      for (var n in e.fields) e.fields[n].forEach(function(e) {
        f(e, i)
      })
  }

  function g(e) {
    ("container" == e.type || "group" == e.type) && (e.fieldType = "ContainerRepresentation", e.fields || (e.fields = {
      1: [],
      2: []
    }))
  }

  function v(e) {
    if (("container" == e.type || "group" == e.type) && e.fields) {
      var t = !0;
      for (var i in e.fields) {
        var o = e.fields[i];
        if (0 !== o.length) {
          t = !1;
          break
        }
      }
      t && (e.fields = null)
    }
  }

  function I(e, i, o, n) {
    var r = "1";
    try {
      var s = n.currentTarget.getBoundingClientRect();
      r = n.pageX - s.left < s.width / 2 ? "1" : "2"
    } catch (a) {}
    var l = null;
    if (o > 0 && (l = e[o - 1], "group" === l.type && !l.fields && "dynamic-table" === e[o].type)) {
      var d = t.findFieldContainer(i);
      return y = null, t.onFieldMoved(i, d), g(l), l.fields[r].push(i), !0
    }
    return !1
  }

  function S(t, i) {
    var o = "1";
    try {
      var n = i.currentTarget.getBoundingClientRect();
      o = i.pageX - n.left < n.width / 2 ? "1" : "2"
    } catch (r) {}
    var s = void 0;
    e.activeFormTab && e.activeFormTab.id && (s = e.activeFormTab.id);
    var a = {
      id: (new Date).getTime(),
      type: "container",
      fieldType: "ContainerRepresentation",
      name: "Label",
      numberOfColumns: 2,
      required: !1,
      readOnly: !1,
      tab: s,
      sizeX: 2,
      sizeY: 1,
      row: -1,
      col: -1,
      fields: {
        1: [],
        2: []
      }
    };
    return a.fields[o].push(t), f(a, "newField"), a
  }

  function O(e, t, i, o) {
    e.unsavedChangesModalInstance || (e.handleResponseFunction = function(n) {
      e.unsavedChangesModalInstance = void 0, 1 == n ? i && i() : 0 == n ? t && t() : o && o()
    }, _internalCreateModal({
      template: "editor-app/popups/unsaved-changes.html",
      scope: e
    }, s, e))
  }
  h.init(), e.setMainPageById("forms"), e.formBuilder = {
    activeTab: "design"
  }, t.model = {
    useOutcomes: !1
  }, e.currentReadonlyFields = {
    fields: {}
  }, e.formItems = void 0, e.formTabs = void 0, e.activeFormTab = void 0, e.selectedActiveFormTab = void 0, e.tabVisibilityConditions = void 0, e.currentFormItems = void 0, t.$watch("model.useOutcomes", function(t) {
    t ? e.currentOutcomes && 0 !== e.currentOutcomes.length || (e.currentOutcomes = [{
      name: ""
    }]) : e.currentOutcomes = []
  });
  var R = 1;
  t.formTabClicked = function(t) {
    for (var i = [], o = 0; e.formItems.length > o; o++) {
      var n = e.formItems[o];
      e.activeFormTab && e.activeFormTab.id && n.tab && n.tab === e.activeFormTab.id && i.push(n)
    }
    for (var o = 0; i.length > o; o++) e.formItems.splice(e.formItems.indexOf(i[o]), 1);
    for (var o = 0; e.currentFormItems.length > o; o++) e.formItems.push(e.currentFormItems[o]);
    e.activeFormTab = t, e.currentFormItems.length = 0;
    for (var o = 0; e.formItems.length > o; o++) {
      var n = e.formItems[o];
      n.tab && n.tab === e.activeFormTab.id && e.currentFormItems.push(n)
    }
  }, t.addNewFormTab = function() {
    var i = {
      id: "tab" + R++,
      title: "Tab"
    };
    e.formTabs.push(i), 1 == e.formTabs.length ? e.currentFormItems.forEach(function(e) {
      if (("container" === e.type || "group" === e.type) && e.fields)
        for (var t in e.fields) {
          var o = e.fields[t];
          o && o.length > 0 && o.forEach(function(e) {
            e.tab = i.id
          })
        }
      e.tab = i.id
    }) : e.currentFormItems.length = 0, e.activeFormTab = i, t.formTabClicked(i)
  }, t.canMoveTab = function(t) {
    if (e.activeFormTab) {
      var i = e.formTabs.indexOf(e.activeFormTab);
      return "left" === t ? i > 0 : e.formTabs.length - 1 > i
    }
    return !1
  }, t.moveTab = function(i) {
    if (e.activeFormTab) {
      var o = e.formTabs.indexOf(e.activeFormTab);
      if (null !== o && void 0 !== o && o >= 0) {
        var n = t.formTabs;
        "left" === i ? (n[o] = n[o - 1], n[o - 1] = e.activeFormTab) : (n[o] = n[o + 1], n[o + 1] = e.activeFormTab), e.formTabs = n
      }
    }
  }, t.canDeleteTab = function() {
    return e.activeFormTab && "details" != e.activeFormTab.id && "form" != e.activeFormTab.id ? !0 : !1
  }, t.deleteTab = function() {
    var i = e.formTabs.indexOf(e.activeFormTab);
    e.formTabs.splice(i, 1), e.formTabs.length > 0 ? (e.currentFormItems.length = 0, t.formTabClicked(e.formTabs[0])) : e.currentFormItems && e.currentFormItems.length > 0 && (e.currentFormItems.forEach(function(e) {
      if (("container" === e.type || "group" === e.type) && e.fields)
        for (var t in e.fields) {
          var i = e.fields[t];
          i && i.length > 0 && i.forEach(function(e) {
            e.tab = void 0
          })
        }
      e.tab = void 0
    }), e.activeFormTab = void 0)
  }, t.form = {
    name: "",
    description: "",
    version: 1
  }, t.formElements = [], e.currentOutcomes = [], e.formJavascriptEvents = [], e.formChanges = !1;
  var E = 0;
  e.checkGroupsInSource = function(e) {
    e.forEach(function(t, i) {
      "group" === t.type && (e.length - 1 > i && "dynamic-table" === e[i + 1].type ? v(t) : g(t))
    })
  };
  var y = null;
  if (t.findFieldContainer = function(t) {
    var i = null;
    return e.formItems.forEach(function(e) {
      if (("container" == e.type || "group" == e.type) && e.fields)
        for (var o in e.fields) {
          var n = e.fields[o],
            r = -1;
          n && n.length > 0 && (n.forEach(function(e, i) {
            t._guid == e._guid && (r = i)
          }), r >= 0 && (i = n))
        }
    }), i
  }, t.onFieldMoved = function(t, i) {
    if (i)
      if (y == i) e.checkGroupsInSource(i);
      else {
        if (i) {
          var o = -1;
          if (i.forEach(function(e, i) {
            t._guid == e._guid && (o = i)
          }), -1 != o && i.splice(o, 1), 0 == i.length && i != e.currentFormItems) {
            var n = function(e) {
              var t, o;
              e.forEach(function(e, n) {
                if ("container" == e.type && e.fields) {
                  var r = !1,
                    s = !0;
                  for (var a in e.fields) e.fields[a] === i && (r = !0), e.fields[a] && e.fields[a].length > 0 && (s = !1);
                  r && s && (t = n, o = e._guid)
                }
              }), t > -1 && e.splice(t, 1)
            };
            n(e.currentFormItems), n(e.formItems)
          }
        }
        e.checkGroupsInSource(e.currentFormItems), e.checkGroupsInSource(e.formItems);
        for (var r, o = 0; e.currentFormItems.length > o; o++) {
          var s = e.currentFormItems[o];
          if (("container" === s.type || "group" === s.type) && s.fields) {
            for (var a in s.fields)
              if (s.fields[a] === i) {
                r = s;
                break
              }
            if (r) break
          }
        }
        for (var o = 0; e.currentFormItems.length > o; o++) {
          var l = e.currentFormItems[o];
          if (("container" === l.type || "group" === l.type) && l.fields) {
            var d = 2;
            l.numberOfColumns && (d = l.numberOfColumns);
            var c, p = 1,
              u = 1,
              h = 1,
              m = 0;
            i && i.length > 0 && (m = i.length), t.colspan && (u = t.colspan);
            for (var a in l.fields) {
              var f = l.fields[a];
              if (f && f.length > 0)
                for (var g = 0; f.length > g; g++)
                  if (t._guid == f[g]._guid) {
                    if (h = f.length, c = parseInt(a), f.length > 1) {
                      for (var v = 0; f.length > v; v++)
                        if (t._guid != f[v]._guid) {
                          p = f[v].colspan;
                          break
                        }
                    } else p = f[0].colspan;
                    break
                  }
              if (c) break
            }
            if (c) {
              if (h > 1 && u > 1) {
                var I = 0;
                for (var a in l.fields)
                  if (l.fields[a])
                    if (l.fields[a].length > 0) {
                      var S = parseInt(l.fields[a][0].colspan);
                      S ? I += S : I++
                    } else I++;
                if (l.numberOfColumns > I)
                  for (var g = I + 1; l.numberOfColumns >= g; g++) l.fields["" + (Object.keys(l.fields).length + 1)] = []
              } else if ((m > 0 || r != l) && 1 == h && u > 1)
                if (c + u - 1 > Object.keys(l.fields).length) p = 1, l.fields["" + (Object.keys(l.fields).length + 1)] = [], delete l.fields["" + Object.keys(l.fields).length];
                else {
                  for (var O = 0, R = !1; !R;) {
                    if (0 == Object.keys(l.fields).length) return;
                    var E = Object.keys(l.fields).length,
                      T = l.fields["" + E],
                      b = 1;
                    T && T.length > 0 && T[0].colspan && (b = T[0].colspan);
                    var C = l.fields["" + (E - 1)];
                    if (C && C.length > 0 ? O += b : O++, T && T.length > 0)
                      if (C && C.length > 0) {
                        for (var v = 0; T.length > v; v++) T[v].colspan = C[0].colspan ? C[0].colspan : 1;
                        Array.prototype.push.apply(C, T)
                      } else l.fields["" + (E - 1)] = T;
                    delete l.fields["" + E], O >= u - 1 && (R = !0)
                  }
                  var I = 0;
                  for (var a in l.fields)
                    if (l.fields[a])
                      if (l.fields[a].length > 0) {
                        var S = parseInt(l.fields[a][0].colspan);
                        S ? I += S : I++
                      } else I++;
                  if (l.numberOfColumns > I)
                    for (var g = I + 1; l.numberOfColumns >= g; g++) l.fields["" + (Object.keys(l.fields).length + 1)] = []
                }
              var N = l.numberOfColumns;
              for (var a in l.fields) {
                var A = l.fields[a];
                if (A)
                  if (A.length > 0) {
                    for (var u = A[0].colspan, g = 0; A.length > g; g++) c == a && (A[g].colspan = p), A[g].params.maxColspan = N;
                    u ? N -= u : N--
                  } else N--
              }
              if (r && r.fields && r != l)
                for (var a in r.fields)
                  if (r.fields[a] === i) {
                    var F = 0;
                    for (var a in r.fields)
                      if (r.fields[a])
                        if (r.fields[a].length > 0) {
                          var D = parseInt(r.fields[a][0].colspan);
                          D ? F += D : F++
                        } else F++;
                    if (r.numberOfColumns > F)
                      for (var v = F + 1; r.numberOfColumns >= v; v++) r.fields["" + (Object.keys(r.fields).length + 1)] = [];
                    var P = r.numberOfColumns;
                    for (var M in r.fields) {
                      var _ = r.fields[M];
                      if (_)
                        if (_.length > 0) {
                          for (var x = _[0].colspan, v = 0; _.length > v; v++) _[v].params.maxColspan = N;
                          x ? P -= x : P--
                        } else P--
                    }
                    break
                  }
              break
            }
          }
        }
      }
  }, t.afterDropField = function(t, i) {
    e.checkGroupsInSource(i)
  }, t.onFieldDrop = function(t, o, n, r) {
    if (t.hasOwnProperty("_guid")) {
      if (y = o, o) {
        var s = -1;
        o.forEach(function(e, i) {
          t._guid == e._guid && (s = i)
        }), -1 != s && o.splice(s, 1)
      }
      if (o == e.currentFormItems && 1 == t._width) {
        var a = I(e.currentFormItems, t, r, n);
        if (!a) {
          var l = S(t, n);
          return e.formItems.push(l), l
        }
        return null
      }
      return -1 != navigator.appVersion.indexOf("MSIE 9") && (t._guid += "_"), t
    }
    y = null;
    var d, c = t.type,
      p = 1;
    ("group" === c || "dynamic-table" === c) && (p = 2);
    var u = 1;
    "multi-line-text" === c ? u = 2 : "dynamic-table" === c && (u = 2), "dynamic-table" === c ? d = "DynamicTableRepresentation" : "container" === c || "group" === c ? d = "ContainerRepresentation" : "hyperlink" === c ? d = "HyperlinkRepresentation" : "amount" === c ? d = "AmountFieldRepresentation" : "upload" === c ? d = "AttachFileFieldRepresentation" : ("typeahead" === c || "radio-buttons" === c || "dropdown" === c) && (d = "RestFieldRepresentation"), "custom" === c && t.customType && t.customType.length > 0 && (c = t.customType);
    var h = void 0;
    e.activeFormTab && e.activeFormTab.id && (h = e.activeFormTab.id);
    var m = {
      type: c,
      fieldType: d,
      name: "Label",
      required: !1,
      readOnly: !1,
      tab: h,
      sizeX: p,
      sizeY: u,
      row: -1,
      col: -1,
      colspan: 1
    };
    if (f(m, "newField"), "radio-buttons" === c && (m.options = [{
      id: "option_1",
      name: i.instant("FORM-BUILDER.COMPONENT.RADIO-BUTTON-DEFAULT_1")
    }, {
      id: "option_2",
      name: i.instant("FORM-BUILDER.COMPONENT.RADIO-BUTTON-DEFAULT_2")
    }], m.value = m.options[0].name), "dropdown" === c && (m.options = [{
      id: "",
      name: i.instant("FORM-BUILDER.COMPONENT.DROPDOWN-DEFAULT-EMPTY-SELECTION")
    }], m.value = m.options[0].name, m.hasEmptyValue = !0), "readonly-text" === m.type && (m.value = i.instant("FORM-BUILDER.COMPONENT.DISPLAY-TEXT-DEFAULT")), ("container" === m.type || "group" === m.type) && (m.id = (new Date).getTime(), m.fields = {
      1: [],
      2: []
    }), o == e.currentFormItems && 1 == m._width) {
      var a = I(e.currentFormItems, m, r, n);
      if (!a) {
        var l = S(m, n);
        return e.formItems.push(l), l
      }
      return null
    }
    if (2 == m._width) e.formItems.push(m);
    else if (o && o.length > 0) {
      var g = 1;
      o[0].colspan && (g = o[0].colspan), m.colspan = g
    } else m.colspan = 1;
    return m
  }, t.javascriptEventsDisabled = !1, m.getSystemProperties().then(function(e) {
    e.disableJavaScriptEventsInFormEditor && (t.javascriptEventsDisabled = e.disableJavaScriptEventsInFormEditor)
  }), a.modelId) {
    var T;
    T = a.modelHistoryId ? ACTIVITI.CONFIG.contextRoot + "/app/rest/form-models/" + a.modelId + "/history/" + a.modelHistoryId : ACTIVITI.CONFIG.contextRoot + "/app/rest/form-models/" + a.modelId, o({
      method: "GET",
      url: T
    }).success(function(i) {
      var o = i,
        r = 0;
      o.stencilSetId && o.stencilSetId > 0 && (r = o.stencilSetId), d.getStencilSet(r).then(function(r) {
        if (t.stencilSet = r, t.palletteElements = t.stencilSet && t.stencilSet.fieldTypes ? t.stencilSet.fieldTypes : [], e.formTabs = o.formDefinition.tabs, e.formTabs && e.formTabs.length > 0) {
          e.activeFormTab = e.formTabs[0];
          for (var s = 0; e.formTabs.length > s; s++) {
            var a = e.formTabs[s];
            if (a.id && "tab" == a.id.substring(0, 3)) {
              var l = a.id.replace("tab", "");
              if (l && isNaN(l) === !1) {
                var d = parseInt(l);
                d > R && (R = d)
              }
            }
          }
          R++
        } else e.formTabs = [];
        if (o.formDefinition.fields) {
          e.checkGroupsInSource(o.formDefinition.fields);
          for (var s = 0; o.formDefinition.fields.length > s; s++) {
            var c = o.formDefinition.fields[s];
            c.params || (c.params = {}), f(c, "savedField")
          }
          t.formElements = o.formDefinition.fields
        } else t.formElements = [];
        if (o.formDefinition.outcomes ? (e.currentOutcomes = o.formDefinition.outcomes, e.currentOutcomes.length > 0 && (t.model.useOutcomes = !0)) : e.currentOutcomes = [], o.formDefinition.javascriptEvents ? Array.prototype.push.apply(e.formJavascriptEvents, o.formDefinition.javascriptEvents) : e.formJavascriptEvents.length = 0, e.currentForm = i, delete e.currentForm.formDefinition, e.formItems = t.formElements, e.formTabs.length > 0) {
          e.currentFormItems = [];
          for (var s = 0; e.formItems.length > s; s++) {
            var p = e.formItems[s];
            p.tab && p.tab === e.activeFormTab.id && e.currentFormItems.push(p)
          }
        } else e.currentFormItems = e.formItems.slice();
        e.formChanges = !1, n(function() {
          t.formLoaded = !0
        }, 200)
      })
    }).error(function() {
      t.model.loading = !1
    })
  } else t.formLoaded = !0;
  t.$watch("formItems", function() {
    t.formLoaded && (e.formChanges = !0)
  }, !0), t.$watch("currentOutcomes", function() {
    t.formLoaded && (e.formChanges = !0)
  }, !0), t.addOutcome = function() {
    e.currentOutcomes[e.currentOutcomes.length] = {
      name: ""
    }
  }, t.removeOutcome = function(t) {
    e.currentOutcomes.splice(t, 1)
  }, t.loadPreviousFormFields = function() {
    e.currentReadonlyFields.fields.data = h.getFormFields()
  }, void 0 === e.endpointConfigurations && (e.endpointConfigurations = []), u.getAllEndpointConfigurations().then(function(t) {
    e.endpointConfigurations.length = 0, Array.prototype.push.apply(e.endpointConfigurations, t)
  }), t.$on("$locationChangeStart", function(i, o) {
    if (!e.ignoreChanges && e.formChanges) {
      i.preventDefault();
      var n = function() {
          e.ignoreChanges = !0, r.url(o.substring(o.indexOf("/#") + 2))
        },
        s = function() {
          e.ignoreChanges = !1, e.setMainPageById("forms")
        };
      t.yesNoCancel = !1, O(t, null, n, s)
    } else e.ignoreChanges = !1
  }), t.$on("formChangesEvent", function() {
    var e = function() {
        t.$broadcast("discardDataEvent")
      },
      i = function() {
        t.$broadcast("mustSaveEvent")
      },
      o = function() {
        t.$broadcast("continueEditingEvent")
      };
    t.yesNoCancel = !0, O(t, i, e, o)
  }), t.$on("readonly-field-referenced-field-changed", function(i, o) {
    "dynamic-table" !== o.originalDisplayFieldType && "dynamic-table" === o.formElement.params.field.type ? n(function() {
      var t = p.determineContainerIndex(e.currentFormItems, o.formElement);
      o.formElement._width = 2, p.removeFormElement(e.currentFormItems, o.formElement), p.removeFormElement(e.formItems, o.formElement), null !== t && void 0 !== t && t >= 0 ? t + 1 >= e.currentFormItems.length ? e.currentFormItems.splice(t, 0, o.formElement) : e.currentFormItems.splice(t + 1, 0, o.formElement) : e.currentFormItems.push(o.formElement)
    }, 0) : "dynamic-table" === o.originalDisplayFieldType && "dynamic-table" !== o.formElement.params.field.type && n(function() {
      var i = p.determineContainerIndex(e.currentFormItems, o.formElement);
      if (p.removeFormElement(e.currentFormItems, o.formElement), p.removeFormElement(t.formItems, o.formElement), o.formElement._width = 1, i > 0 && "container" === e.currentFormItems[i - 1].type) e.currentFormItems[i - 1].fields["1"] ? e.currentFormItems[i - 1].fields["1"].push(o.formElement) : e.currentFormItems[i - 1].fields["1"] = [o.formElement];
      else if (i > 0 && e.currentFormItems.length > i + 1) e.currentFormItems[i + 1].fields["1"] ? e.currentFormItems[i + 1].fields["1"].splice(0, 0, o.formElement) : e.currentFormItems[i + 1].fields["1"] = [o.formElement];
      else {
        var n = S(o.formElement);
        e.formItems.push(n), e.currentFormItems.splice(i, 0, n)
      }
    }, 0)
  }), t.getRestResponseVariables = function() {
    return h.getVariables()
  }, t.$watch("formBuilder.activeTab", function() {
    if (e.formBuilder && e.formBuilder.activeTab && "tab" !== e.formBuilder.activeTab) {
      var t = function(e, i) {
          e && (e.nextCondition = void 0);
          var o = {};
          return i.length > 0 ? (o = i.shift(), e.nextCondition = o, t(e.nextCondition, i), void 0) : o
        },
        i = function(e, t) {
          if (!t.nextCondition) return e.push(t), void 0;
          var o = t.nextCondition;
          t.nextCondition = "", e.push(t), i(e, o)
        },
        o = function() {
          var t = [];
          return t[0] = e.activeFormTab.visibilityCondition, e.activeFormTab.visibilityCondition.nextCondition && i(t, e.activeFormTab.visibilityCondition.nextCondition), t
        };
      if (e.tabVisibilityConditions) {
        var n = e.tabVisibilityConditions.shift();
        t(n, e.tabVisibilityConditions), e.selectedActiveFormTab.visibilityCondition = n
      }
      e.activeFormTab && e.activeFormTab.visibilityCondition ? (e.tabVisibilityConditions.length = 0, Array.prototype.push.apply(e.tabVisibilityConditions, o())) : e.tabVisibilityConditions && (e.tabVisibilityConditions.length = 0)
    }
  })
}]), angular.module("activitiModeler").controller("DynamicTableBuilderController", ["$rootScope", "$scope", "$q", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", "ProcessBuilderService", "uiGridConstants", function(e, t, i, o, n, r, s, a, l, d, c, p) {
  t.selectedColumnDefinitions = [], t.selectedFields = [], t.labels = [], t.formElement.columnDefinitions || (t.formElement.columnDefinitions = []), t.columnTypes = ["Boolean", "Date", "Dropdown", "Number", "Amount", "String"], t.urlDynamicTableConfig = {
    position: 0,
    field: ""
  }, t.selectedColumnDefinition = void 0, t.labels.idLabel = o.instant("FORM-BUILDER.COMPONENT.HEADER-ID"), t.labels.nameLabel = o.instant("FORM-BUILDER.COMPONENT.HEADER-NAME"), t.labels.typeLabel = o.instant("FORM-BUILDER.COMPONENT.HEADER-TYPE"), t.gridOptions = {
    data: t.formElement.columnDefinitions,
    headerRowHeight: 28,
    enableRowSelection: !0,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableColumnMenus: !1,
    enableSorting: !1,
    columnDefs: [{
      field: "id",
      displayName: t.labels.idLabel,
      cellClass: function(e, t, i) {
        return "" === e.getCellValue(t, i) || 0 == e.getCellValue(t, i) ? "dynamicTable-cellError" : void 0
      }
    }, {
      field: "name",
      displayName: t.labels.nameLabel,
      cellClass: function(e, t, i) {
        return "" === e.getCellValue(t, i) || 0 == e.getCellValue(t, i) ? "dynamicTable-cellError" : void 0
      }
    }, {
      field: "type",
      displayName: t.labels.typeLabel
    }]
  }, t.gridOptions.onRegisterApi = function(e) {
    t.gridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
      t.selectedColumnDefinition = e.entity, t.focusFirstField(), t.$broadcast("col-selection-changed", t.selectedColumnDefinition)
    })
  }, t.focusFirstField = function() {
    r(function() {
      var e = document.getElementById("idField");
      e && e.focus()
    }, 100)
  }, t.columnTypeChanged = function() {
    t.selectedColumnDefinition && "Dropdown" === t.selectedColumnDefinition.type && (t.selectedColumnDefinition.optionType && "manual" !== t.selectedColumnDefinition.optionType || t.selectedColumnDefinition.options && 0 != t.selectedColumnDefinition.options.length || (t.selectedColumnDefinition.options = [{
      name: "Option 1"
    }]))
  }, t.setDynamicTableManualOptions = function() {
    t.selectedColumnDefinition.optionType = "manual"
  }, t.setDynamicTableRestOptions = function() {
    t.selectedColumnDefinition.optionType = "rest"
  }, t.confirmNewDynamicTableOption = function(e) {
    if (t.newOption.name) {
      var i = t.selectedColumnDefinition.options;
      i.push(t.newOption), t.newOption = {
        name: ""
      }, 2 == i.length && (t.selectedColumnDefinition.value = t.selectedColumnDefinition.options[0].name), e && $(e.target).focus()
    }
  }, t.columnDefinitionEndpointChanged = function() {
    t.$broadcast("col-endpoint-selection-changed", t.selectedColumnDefinition.endpoint)
  }, t.$watch("selectedColumnDefinition.id", function() {
    t.gridApi.core.notifyDataChange(p.dataChange.ALL)
  }, !0), t.$watch("selectedColumnDefinition.name", function() {
    t.gridApi.core.notifyDataChange(p.dataChange.ALL)
  }, !0), t.$watch("urlDynamicTableConfig.field", function(e) {
    if (e) {
      var i = t.selectedColumnDefinition.restUrl,
        o = "${" + e.id + "}";
      i = i ? i.substring(0, t.urlDynamicTableConfig.position) + o + i.substring(t.urlDynamicTableConfig.position) : o, t.urlDynamicTableConfig.field = void 0, r(function() {
        var e = angular.element("#rest-url-value");
        e.focus(), e.val(i), t.selectedColumnDefinition.restUrl = i
      }, 200)
    }
  }), t.removeDynamicTableOption = function(e) {
    if (t.selectedColumnDefinition.options.splice(e, 1), 1 == t.selectedColumnDefinition.options) t.selectedColumnDefinition.value = "";
    else {
      for (var i = !1, o = 0; t.selectedColumnDefinition.options.length > o; o++) t.selectedColumnDefinition.options[o].name == t.selectedColumnDefinition.value && (i = !0);
      i || (t.selectedColumnDefinition.value = t.selectedColumnDefinition.options[0].name)
    }
  }, t.addNewDefinition = function() {
    var e = {
      id: "",
      name: "",
      type: "String",
      required: !0,
      editable: !0,
      sortable: !0,
      visible: !0
    };
    t.formElement.columnDefinitions.push(e), t.gridApi.selection.clearSelectedRows(), r(function() {
      t.gridApi.selection.toggleRowSelection(e)
    })
  }, t.removeDefinition = function() {
    if (t.selectedColumnDefinition) {
      var e = t.formElement.columnDefinitions.indexOf(t.selectedColumnDefinition);
      t.gridApi.selection.toggleRowSelection(t.selectedColumnDefinition), t.formElement.columnDefinitions.splice(e, 1), r(function() {
        t.formElement.columnDefinitions.length > 0 ? t.gridApi.selection.toggleRowSelection(t.formElement.columnDefinitions[0]) : t.selectedColumnDefinition = void 0
      })
    }
  }, t.moveDefinitionUp = function() {
    if (t.selectedColumnDefinition) {
      var e = t.formElement.columnDefinitions.indexOf(t.selectedColumnDefinition);
      if (0 != e) {
        var i = t.formElement.columnDefinitions[e];
        t.formElement.columnDefinitions.splice(e, 1), t.gridApi.selection.clearSelectedRows(), r(function() {
          t.formElement.columnDefinitions.splice(e + -1, 0, i), r(function() {
            t.gridApi.selection.toggleRowSelection(i)
          })
        })
      }
    }
  }, t.moveDefinitionDown = function() {
    if (t.selectedColumnDefinition) {
      var e = t.formElement.columnDefinitions.indexOf(t.selectedColumnDefinition);
      if (e != t.formElement.columnDefinitions.length - 1) {
        var i = t.formElement.columnDefinitions[e];
        t.formElement.columnDefinitions.splice(e, 1), t.gridApi.selection.clearSelectedRows(), r(function() {
          t.formElement.columnDefinitions.splice(e + 1, 0, i), r(function() {
            t.gridApi.selection.toggleRowSelection(i)
          })
        })
      }
    }
  }, t.model = {
    urlFieldType: "formField",
    requestMappingValues: []
  }, t.setUrlFieldType = function(e) {
    "restResponse" === e ? t.model = {
      urlFieldType: "restResponse"
    } : "formField" === e && (t.model = {
      urlFieldType: "formField"
    })
  }, t.getFullEndpointURL = function() {
    var e = "";
    return t.selectedColumnDefinition.endpoint && (e = u(t.selectedColumnDefinition.endpoint.protocol, t.selectedColumnDefinition.endpoint.host, t.selectedColumnDefinition.endpoint.port, t.selectedColumnDefinition.endpoint.path)), t.selectedColumnDefinition.restUrl && (e = "/" === e.charAt(e.length - 1) && "/" === t.selectedColumnDefinition.restUrl.charAt(0) ? e.concat(t.selectedColumnDefinition.restUrl.substr(1)) : "" != e && "/" !== e.charAt(e.length - 1) && "/" !== t.selectedColumnDefinition.restUrl.charAt(0) ? e.concat("/" + t.selectedColumnDefinition.restUrl) : e.concat(t.selectedColumnDefinition.restUrl)), e
  };
  var u = function(e, t, i, o) {
    var n = e.toLowerCase() + "://" + t;
    return n = i && 80 != i && 443 != i ? n.concat(":" + i) : n, n = o ? n.concat(o) : n
  }
}]), angular.module("activitiModeler").controller("AttachFieldMetadataMappingBuilderController", ["$rootScope", "$scope", "$q", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", function(e, t, i, o, n, r) {
  t.metaDataSelectedColumnDefinitions = [], t.selectedFields = [], t.labels = [], t.formElement.metaDataColumnDefinitions || (t.formElement.metaDataColumnDefinitions = []), t.propertyTypes = ["boolean", "date", "number", "string"], t.urlDynamicTableConfig = {
    position: 0,
    field: ""
  }, t.metaDataSelectedColumnDefinition = void 0, t.labels.filePropertyLabel = o.instant("FORM-BUILDER.COMPONENT.ATTACH-FILE.METADATA.HEADER-FILE-PROPERTY"), t.labels.variableLabel = o.instant("FORM-BUILDER.COMPONENT.ATTACH-FILE.METADATA.HEADER-VARIABLE"), t.setValueType = function(e) {
    t.metaDataSelectedColumnDefinition.valueType = e
  }, t.gridOptions = {
    data: t.formElement.metaDataColumnDefinitions,
    headerRowHeight: 28,
    enableRowSelection: !0,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableColumnMenus: !1,
    enableSorting: !1,
    columnDefs: [{
      field: "fileProperty",
      displayName: t.labels.filePropertyLabel
    }, {
      field: "processVariable",
      displayName: t.labels.variableLabel,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getMappingColumnValue("processVariable",row.entity)}}</div>'
    }]
  }, t._getMappingColumnValue = function(e, t) {
    var i = "";
    return t ? (t[e] && (i = t[e].name, i || (i = t[e].id)), i) : i
  }, t.gridOptions.onRegisterApi = function(e) {
    t.gridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
      t.metaDataSelectedColumnDefinition = e.entity, t.focusFirstField()
    })
  }, t.focusFirstField = function() {
    r(function() {
      var e = document.getElementById("filePropertyField");
      e && e.focus()
    }, 100)
  }, t.addNewDefinition = function() {
    var e = {
      fileProperty: "",
      propertyType: "String",
      processVariable: {
        id: ""
      }
    };
    t.formElement.metaDataColumnDefinitions.push(e), t.gridApi.selection.clearSelectedRows(), r(function() {
      t.gridApi.selection.toggleRowSelection(e)
    })
  }, t.removeDefinition = function() {
    if (t.metaDataSelectedColumnDefinition) {
      var e = t.formElement.metaDataColumnDefinitions.indexOf(t.metaDataSelectedColumnDefinition);
      t.gridApi.selection.toggleRowSelection(t.metaDataSelectedColumnDefinition), t.formElement.metaDataColumnDefinitions.splice(e, 1), r(function() {
        t.formElement.metaDataColumnDefinitions.length > 0 ? t.gridApi.selection.toggleRowSelection(t.formElement.metaDataColumnDefinitions[0]) : t.metaDataSelectedColumnDefinition = void 0
      })
    }
  }, t.moveDefinitionUp = function() {
    if (t.metaDataSelectedColumnDefinition) {
      var e = t.formElement.metaDataColumnDefinitions.indexOf(t.metaDataSelectedColumnDefinition);
      if (0 != e) {
        var i = t.formElement.metaDataColumnDefinitions[e];
        t.formElement.metaDataColumnDefinitions.splice(e, 1), t.gridApi.selection.clearSelectedRows(), r(function() {
          t.formElement.metaDataColumnDefinitions.splice(e + -1, 0, i), r(function() {
            t.gridApi.selection.toggleRowSelection(i)
          })
        })
      }
    }
  }, t.moveDefinitionDown = function() {
    if (t.metaDataSelectedColumnDefinition) {
      var e = t.formElement.metaDataColumnDefinitions.indexOf(t.metaDataSelectedColumnDefinition);
      if (e != t.formElement.metaDataColumnDefinitions.length - 1) {
        var i = t.formElement.metaDataColumnDefinitions[e];
        t.formElement.metaDataColumnDefinitions.splice(e, 1), t.gridApi.selection.clearSelectedRows(), r(function() {
          t.formElement.metaDataColumnDefinitions.splice(e + 1, 0, i), r(function() {
            t.gridApi.selection.toggleRowSelection(i)
          })
        })
      }
    }
  }
}]), angular.module("activitiModeler").controller("AttachFieldBuilderController", ["$rootScope", "$scope", function(e, t) {
  function i(e) {
    var i = t.formElement.params.fileSource.selectedFolder;
    e && (e.account && (i.accountId = e.account.id), e.network && (i.network = e.network), e.site && e.path && (i.siteId = e.site.id, i.pathId = e.path.id, i.folderTree = e.path.folderTree, i.path = e.path.title, i.site = e.site.title))
  }

  function o(e) {
    var i = t.formElement.params.fileSource.selectedFolder;
    e && (e.account && (i.accountId = e.account.id), e.path && (i.pathId = e.path.id, i.path = e.path.title, i.folderTree = e.path.folderTree))
  }

  function n(e) {
    var i = t.formElement.params.fileSource.selectedFolder;
    e && (e.account && (i.accountId = e.account.id), e.path && (i.pathId = e.path.id, i.path = e.path.title, i.folderTree = e.path.folderTree))
  }
  t.selectDestinationFolder = function(e) {
    var r = t.formElement.params.fileSource.serviceId;
    t.formElement.params.fileSource.selectedFolder = {}, void 0 != r && r.trim().length > 9 && "alfresco-" === r.substring(0, 9) ? i(e) : "google-drive" === r ? o(e) : "box" === r && n(e)
  }
}]), angular.module("activitiModeler").controller("VisibilityConditionBuilderController", ["$rootScope", "$scope", "$q", "$translate", "$http", "$timeout", "FormUtilService", "FormBuilderService", "$filter", "ProcessScopeService", function(e, t, i, o, n, r, s, a, l, d) {
  t.model = {}, t.model.selectedVisibilityConditions = [], t.model.selectedFields = [], t.model.labels = [], t.model.visibilityConditions = [], t.model.selectedVisibilityCondition = void 0, t.model.leftFieldType = "formField", t.model.rightFieldType = "staticValue";
  var c = function(e, t) {
      if (!t.nextCondition) return e.push(t), void 0;
      var i = t.nextCondition;
      t.nextCondition = "", e.push(t), c(e, i)
    },
    p = function() {
      var e = [];
      return e[0] = t.formElement.visibilityCondition, t.formElement.visibilityCondition.nextCondition && c(e, t.formElement.visibilityCondition.nextCondition), e
    };
  t.formElement.visibilityConditions = t.formElement.visibilityCondition ? p() : [];
  var u = o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.EQUALS"),
    h = o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.NOTEQUALS");
  t.model.conditionOperatorsByType = {
    text: {
      index: {
        "==": 0,
        "!=": 1
      },
      operators: [{
        value: "==",
        description: u
      }, {
        value: "!=",
        description: h
      }]
    },
    string: {
      index: {
        "==": 0,
        "!=": 1
      },
      operators: [{
        value: "==",
        description: u
      }, {
        value: "!=",
        description: h
      }]
    },
    date: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5
      },
      operators: [{
        value: "==",
        description: u
      }, {
        value: "!=",
        description: h
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.DATE.BEFORE")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.DATE.AFTER")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.DATE.BEFOREOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.DATE.AFTEROREQUAL")
      }]
    },
    integer: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5
      },
      operators: [{
        value: "==",
        description: u
      }, {
        value: "!=",
        description: h
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }]
    },
    number: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5
      },
      operators: [{
        value: "==",
        description: u
      }, {
        value: "!=",
        description: h
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }]
    },
    amount: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5
      },
      operators: [{
        value: "==",
        description: u
      }, {
        value: "!=",
        description: h
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }]
    },
    dropdown: {
      index: {
        "==": 0,
        "!=": 1
      },
      operators: [{
        value: "==",
        description: u
      }, {
        value: "!=",
        description: h
      }]
    },
    typeahead: {
      index: {
        "==": 0,
        "!=": 1
      },
      operators: [{
        value: "==",
        description: u
      }, {
        value: "!=",
        description: h
      }]
    },
    "radio-buttons": {
      index: {
        "==": 0,
        "!=": 1
      },
      operators: [{
        value: "==",
        description: u
      }, {
        value: "!=",
        description: h
      }]
    },
    "boolean": {
      index: {
        "==": 0,
        "!=": 1
      },
      operators: [{
        value: "==",
        description: u
      }, {
        value: "!=",
        description: h
      }]
    },
    condition: {
      index: {
        and: 0,
        "and-not": 1,
        or: 2,
        "or-not": 3
      },
      operators: [{
        value: "and",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.CONDITION.AND")
      }, {
        value: "and-not",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.CONDITION.ANDNOT")
      }, {
        value: "or",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.CONDITION.OR")
      }, {
        value: "or-not",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.CONDITION.ORNOT")
      }]
    }
  }, t.model.rightTypes = [{
    value: "string",
    description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_TYPES.CONDITION.STRING")
  }, {
    value: "number",
    description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_TYPES.CONDITION.NUMBER")
  }, {
    value: "date",
    description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_TYPES.CONDITION.DATE")
  }], t.model.rightValueOptions = {
    "boolean": [{
      value: "true",
      description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_VALUE_OPTIONS.BOOLEAN.CHECKED")
    }, {
      value: "false",
      description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_VALUE_OPTIONS.BOOLEAN.UNCHECKED")
    }]
  }, t.getNameForSelectedFormFieldId = function(e) {
    var i = "";
    if (e)
      for (var o = 0; t.model.conditionFields.length > o; o++) {
        var n = t.model.conditionFields[o];
        if (n.id === e) {
          i = n.name;
          break
        }
      }
    return i
  }, t._getLeftValueColumnValue = function(e) {
    var t = "";
    return e ? (e.leftFormFieldId && "" != e.leftFormFieldId ? t = e.leftFormFieldId : e.leftRestResponseId && "" != e.leftRestResponseId && (t = e.leftRestResponseId), t) : t
  }, t._getRightValueColumnValue = function(e) {
    var i = "";
    return e ? (e.rightFormFieldId && "" != e.rightFormFieldId ? i = e.rightFormFieldId : e.rightRestResponseId && "" != e.rightRestResponseId ? i = e.rightRestResponseId : e.rightValue && "" != e.rightValue && (i = e.leftFormFieldId && "" != e.leftFormFieldId ? "date" === t.getTypeForSelectedFormFieldId(e.leftFormFieldId) ? l("date")(new Date(e.rightValue), "d-M-yyyy") : e.rightValue : e.rightValue), i) : i
  }, t.getTypeForSelectedFormFieldId = function(e) {
    return m(e)
  };
  var m = function(e) {
      var i = "";
      if (e)
        for (var o = 0; t.model.conditionFields.length > o; o++) {
          var n = t.model.conditionFields[o];
          if (n.id === e) {
            i = n.type;
            break
          }
        }
      return i
    },
    f = function(e) {
      var t = "";
      if (e) {
        var i = d.getVariables();
        if (i && i.length > 0)
          for (var o = 0; i.length > o; o++) {
            var n = i[o];
            if (n.processVariableName === e) {
              t = n.processVariableType;
              break
            }
          }
      }
      return t.toLowerCase()
    };
  t.getConditionsForFieldId = function(e, i) {
    var o;
    return e ? o = m(e) : i && (o = f(i)), o && t.model.conditionOperatorsByType[o] ? t.model.conditionOperatorsByType[o].operators : void 0
  }, t._getOperatorDescriptionForFieldId = function(e) {
    if (e && e.operator) {
      var i;
      return e.leftFormFieldId ? i = m(e.leftFormFieldId) : e.leftRestResponseId && (i = f(e.leftRestResponseId)), i ? t._getOperatorDescriptionForType(e.operator, i) : void 0
    }
  }, t._getOperatorDescriptionForType = function(e, i) {
    if (e && i) {
      var o = t.model.conditionOperatorsByType[i].index[e],
        n = t.model.conditionOperatorsByType[i].operators[o].description;
      return n
    }
  }, t.fieldIsNotEmpty = function(e) {
    return e && null === e && void 0 === e && "" !== e ? void 0 : !0
  };
  var g = o.instant("FORM-BUILDER.VISIBILITY.LEFT-FORM-FIELD"),
    v = o.instant("FORM-BUILDER.VISIBILITY.OPERATOR"),
    I = o.instant("FORM-BUILDER.VISIBILITY.RIGHT-VALUE"),
    S = o.instant("FORM-BUILDER.VISIBILITY.NEXT-CONDITION-OPERATOR");
  t.visibilityGridOptions = {
    data: t.formElement.visibilityConditions,
    headerRowHeight: 28,
    enableRowSelection: !0,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableSorting: !1,
    enableColumnMenus: !1,
    columnDefs: [{
      field: "leftFormFieldId",
      displayName: g,
      resizable: !1,
      sortable: !1,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getLeftValueColumnValue(row.entity)}}</div>'
    }, {
      field: "operator",
      displayName: v,
      resizable: !0,
      sortable: !1,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getOperatorDescriptionForFieldId(row.entity)}}</div>'
    }, {
      field: "rightValue",
      displayName: I,
      resizable: !1,
      sortable: !1,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getRightValueColumnValue(row.entity)}}</div>'
    }, {
      field: "nextConditionOperator",
      displayName: S,
      resizable: !1,
      sortable: !1,
      width: 150,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getOperatorDescriptionForType(row.entity[col.field], "condition")}}</div>'
    }]
  }, t.visibilityGridOptions.onRegisterApi = function(e) {
    t.visibilityGridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
      if (e.isSelected) {
        if (t.model.selectedVisibilityCondition = e.entity, t.focusFirstField(), t.model.selectedVisibilityCondition) {
          var i = {},
            o = {};
          if (t.model.conditionFields)
            for (var n = 0; t.model.conditionFields.length > n; n++) t.model.selectedVisibilityCondition.leftFormFieldId && t.model.selectedVisibilityCondition.leftFormFieldId === t.model.conditionFields[n].id && (i = t.model.conditionFields[n]), t.model.selectedVisibilityCondition.rightFormFieldId && t.model.selectedVisibilityCondition.rightFormFieldId === t.model.conditionFields[n].id && (o = t.model.conditionFields[n]);
          t.model.selectedLeftVariable = i, t.model.selectedRightVariable = o, t.model.selectedVisibilityCondition.leftFormFieldId && "" != t.model.selectedVisibilityCondition.leftFormFieldId ? t.model.leftFieldType = "formField" : t.model.selectedVisibilityCondition.leftRestResponseId && "" != t.model.selectedVisibilityCondition.leftRestResponseId && (t.model.leftFieldType = "restResponse"), t.model.selectedVisibilityCondition.rightValue && ("" + t.model.selectedVisibilityCondition.rightValue).length > 0 ? t.model.rightFieldType = "staticValue" : t.model.selectedVisibilityCondition.rightFormFieldId && "" != t.model.selectedVisibilityCondition.rightFormFieldId ? t.model.rightFieldType = "formField" : t.model.selectedVisibilityCondition.rightRestResponseId && "" != t.model.selectedVisibilityCondition.rightRestResponseId && (t.model.rightFieldType = "restResponse")
        }
      } else t.model.selectedVisibilityCondition = void 0
    })
  }, t.focusFirstField = function() {
    r(function() {
      var e = document.getElementById("leftVariableField");
      e && e.focus()
    }, 100)
  }, t.addNewCondition = function() {
    var e = {
      leftFormFieldId: "",
      operator: "",
      rightFormFieldId: "",
      rightRestResponseId: "",
      rightValue: "",
      nextConditionOperator: ""
    };
    t.visibilityGridApi.selection.clearSelectedRows(), t.formElement.visibilityConditions.push(e), r(function() {
      t.visibilityGridApi.selection.toggleRowSelection(e)
    })
  }, t.removeCondition = function() {
    if (t.model.selectedVisibilityCondition) {
      var e = t.formElement.visibilityConditions.indexOf(t.model.selectedVisibilityCondition);
      t.visibilityGridApi.selection.clearSelectedRows(), t.formElement.visibilityConditions.splice(e, 1), r(function() {
        t.formElement.visibilityConditions.length > 0 ? t.visibilityGridApi.selection.toggleRowSelection(t.formElement.visibilityConditions[0]) : t.model.selectedVisibilityCondition = void 0
      })
    }
  }, t.moveConditionUp = function() {
    if (t.model.selectedVisibilityCondition) {
      var e = t.formElement.visibilityConditions.indexOf(t.model.selectedVisibilityCondition);
      if (0 != e) {
        var i = t.formElement.visibilityConditions[e];
        t.formElement.visibilityConditions.splice(e, 1), r(function() {
          t.formElement.visibilityConditions.splice(e + -1, 0, i), r(function() {
            t.visibilityGridApi.selection.toggleRowSelection(t.formElement.visibilityConditions[0])
          })
        })
      }
    }
  }, t.moveConditionDown = function() {
    if (t.model.selectedVisibilityCondition) {
      var e = t.formElement.visibilityConditions.indexOf(t.model.selectedVisibilityCondition);
      if (e != t.formElement.visibilityConditions.length - 1) {
        var i = t.formElement.visibilityConditions[e];
        t.formElement.visibilityConditions.splice(e, 1), r(function() {
          t.formElement.visibilityConditions.splice(e + 1, 0, i), r(function() {
            t.visibilityGridApi.selection.toggleRowSelection(t.formElement.visibilityConditions[0])
          })
        })
      }
    }
  }, t.getPreviousAndCurrentFormFields = function() {
    var i = {},
      o = [],
      n = ["text", "integer", "date", "boolean", "dropdown", "radio-buttons", "typeahead", "amount"],
      r = d.getFormFields(n);
    if (r && r.length > 0)
      for (var l = 0; r.length > l; l++) n.indexOf(r[l].type) > -1 && ("readonly" === t.formElement.type || r[l].id !== t.formElement.id) && (i[r[l].id] = !0, o.push(r[l]));
    var c = s.flattenFields(e.formItems);
    if (c && c.length > 0) {
      c = a.additionalFormFieldProcessing(c);
      for (var l = 0; c.length > l; l++) {
        var p = c[l];
        n.indexOf(p.type) > -1 && !i[p.id] && p.id !== t.formElement.id && (i[p.id] = !0, o.push(p))
      }
    }
    o.sort(function(e, t) {
      return e.name.toLowerCase() > t.name.toLowerCase() ? 1 : -1
    }), t.model.conditionFields = o
  }, t.setLeftFieldType = function(e) {
    t.model.leftFieldType = e, "formField" === e ? (t.model.selectedVisibilityCondition.leftRestResponseId = "", t.model.selectedLeftVariable = "") : "restResponse" === e && (t.model.selectedVisibilityCondition.leftFormFieldId = "")
  }, t.setRightFieldType = function(e) {
    t.model.rightFieldType = e, "formField" === e ? (t.model.selectedVisibilityCondition.rightValue = "", t.model.selectedVisibilityCondition.rightRestResponseId = "") : "staticValue" === e ? (t.model.selectedVisibilityCondition.rightFormFieldId = "", t.model.selectedVisibilityCondition.rightRestResponseId = "", t.model.selectedRightVariable = "") : "restResponse" === e && (t.model.selectedVisibilityCondition.rightValue = "", t.model.selectedVisibilityCondition.rightFormFieldId = "", t.model.selectedRightVariable = "")
  }, t.getPreviousAndCurrentFormFields(), t.getRestResponseVariables = function() {
    return d.getVariables()
  }, t.selectLeftResponseVariable = function(e, t) {
    e.leftRestResponseId = t.processVariableName
  }, t.selectRightResponseVariable = function(e, t) {
    e.rightRestResponseId = t.processVariableName
  }, t.closeDatePopup = function() {
    jQuery("#rightValueField").blur()
  }, t.clearDate = function() {
    t.model.selectedVisibilityCondition.rightValue = void 0, jQuery("#rightValueField").blur()
  }, t.selectToday = function(e, t) {
    var i = new Date;
    i = new Date(i.getFullYear(), i.getMonth(), i.getDate(), 0, 0, 0, 0), e = i, t && t(e), jQuery("#rightValueField").blur()
  }
}]), angular.module("activitiModeler").controller("TabVisibilityConditionBuilderController", ["$rootScope", "$scope", "$q", "$translate", "$http", "$timeout", "FormUtilService", "FormBuilderService", "$filter", "ProcessScopeService", function(e, t, i, o, n, r, s, a, l, d) {
  t.model = {}, t.model.selectedVisibilityConditions = [], t.model.selectedFields = [], t.model.labels = [], t.model.visibilityConditions = [], t.model.selectedVisibilityCondition = void 0, t.model.leftFieldType = "formField", t.model.rightFieldType = "staticValue";
  var c = function(e, t) {
      if (!t.nextCondition) return e.push(t), void 0;
      var i = t.nextCondition;
      t.nextCondition = "", e.push(t), c(e, i)
    },
    p = function() {
      var t = [];
      return t[0] = e.activeFormTab.visibilityCondition, e.activeFormTab.visibilityCondition.nextCondition && c(t, e.activeFormTab.visibilityCondition.nextCondition), t
    };
  e.tabVisibilityConditions = e.activeFormTab && e.activeFormTab.visibilityCondition ? p() : [], e.selectedActiveFormTab = e.activeFormTab, t.$watch("activeFormTab", function() {
    if (e.selectedActiveFormTab && e.selectedActiveFormTab.id !== e.activeFormTab.id) {
      var i = function(e, t) {
        e && (e.nextCondition = void 0);
        var o = {};
        return t.length > 0 ? (o = t.shift(), e.nextCondition = o, i(e.nextCondition, t), void 0) : o
      };
      if (e.tabVisibilityConditions) {
        var o = e.tabVisibilityConditions.shift();
        i(o, e.tabVisibilityConditions), e.selectedActiveFormTab.visibilityCondition = o
      }
      e.activeFormTab.visibilityCondition ? (e.tabVisibilityConditions.length = 0, Array.prototype.push.apply(e.tabVisibilityConditions, p())) : e.tabVisibilityConditions.length = 0, t.model.selectedVisibilityCondition = void 0, e.selectedActiveFormTab = e.activeFormTab
    }
  });
  var u = o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.EQUALS"),
    h = o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.NOTEQUALS");
  t.model.conditionOperatorsByType = {
    text: {
      index: {
        "==": 0,
        "!=": 1
      },
      operators: [{
        value: "==",
        description: u
      }, {
        value: "!=",
        description: h
      }]
    },
    string: {
      index: {
        "==": 0,
        "!=": 1
      },
      operators: [{
        value: "==",
        description: u
      }, {
        value: "!=",
        description: h
      }]
    },
    date: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5
      },
      operators: [{
        value: "==",
        description: u
      }, {
        value: "!=",
        description: h
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.DATE.BEFORE")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.DATE.AFTER")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.DATE.BEFOREOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.DATE.AFTEROREQUAL")
      }]
    },
    integer: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5
      },
      operators: [{
        value: "==",
        description: u
      }, {
        value: "!=",
        description: h
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }]
    },
    number: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5
      },
      operators: [{
        value: "==",
        description: u
      }, {
        value: "!=",
        description: h
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }]
    },
    amount: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5
      },
      operators: [{
        value: "==",
        description: u
      }, {
        value: "!=",
        description: h
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }]
    },
    dropdown: {
      index: {
        "==": 0,
        "!=": 1
      },
      operators: [{
        value: "==",
        description: u
      }, {
        value: "!=",
        description: h
      }]
    },
    "radio-buttons": {
      index: {
        "==": 0,
        "!=": 1
      },
      operators: [{
        value: "==",
        description: u
      }, {
        value: "!=",
        description: h
      }]
    },
    "boolean": {
      index: {
        "==": 0,
        "!=": 1
      },
      operators: [{
        value: "==",
        description: u
      }, {
        value: "!=",
        description: h
      }]
    },
    condition: {
      index: {
        and: 0,
        "and-not": 1,
        or: 2,
        "or-not": 3
      },
      operators: [{
        value: "and",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.CONDITION.AND")
      }, {
        value: "and-not",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.CONDITION.ANDNOT")
      }, {
        value: "or",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.CONDITION.OR")
      }, {
        value: "or-not",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.CONDITION.ORNOT")
      }]
    }
  }, t.model.rightTypes = [{
    value: "string",
    description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_TYPES.CONDITION.STRING")
  }, {
    value: "number",
    description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_TYPES.CONDITION.NUMBER")
  }, {
    value: "date",
    description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_TYPES.CONDITION.DATE")
  }], t.model.rightValueOptions = {
    "boolean": [{
      value: "true",
      description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_VALUE_OPTIONS.BOOLEAN.CHECKED")
    }, {
      value: "false",
      description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_VALUE_OPTIONS.BOOLEAN.UNCHECKED")
    }]
  }, t.getNameForSelectedFormFieldId = function(e) {
    var i = "";
    if (e)
      for (var o = 0; t.model.conditionFields.length > o; o++) {
        var n = t.model.conditionFields[o];
        if (n.id === e) {
          i = n.name;
          break
        }
      }
    return i
  }, t._getLeftValueColumnValue = function(e) {
    var t = "";
    return e ? (e.leftFormFieldId && "" != e.leftFormFieldId ? t = e.leftFormFieldId : e.leftRestResponseId && "" != e.leftRestResponseId && (t = e.leftRestResponseId), t) : t
  }, t._getRightValueColumnValue = function(e) {
    var i = "";
    return e ? (e.rightFormFieldId && "" != e.rightFormFieldId ? i = e.rightFormFieldId : e.rightRestResponseId && "" != e.rightRestResponseId ? i = e.rightRestResponseId : e.rightValue && "" != e.rightValue && (i = e.leftFormFieldId && "" != e.leftFormFieldId ? "date" === t.getTypeForSelectedFormFieldId(e.leftFormFieldId) ? l("date")(new Date(e.rightValue), "d-M-yyyy") : e.rightValue : e.rightValue), i) : i
  }, t.getTypeForSelectedFormFieldId = function(e) {
    return m(e)
  };
  var m = function(e) {
      var i = "";
      if (e)
        for (var o = 0; t.model.conditionFields.length > o; o++) {
          var n = t.model.conditionFields[o];
          if (n.id === e) {
            i = n.type;
            break
          }
        }
      return i
    },
    f = function(e) {
      var t = "";
      if (e) {
        var i = d.getVariables();
        if (i && i.length > 0)
          for (var o = 0; i.length > o; o++) {
            var n = i[o];
            if (n.processVariableName === e) {
              t = n.processVariableType;
              break
            }
          }
      }
      return t.toLowerCase()
    };
  t.getConditionsForFieldId = function(e, i) {
    var o;
    return e ? o = m(e) : i && (o = f(i)), o && t.model.conditionOperatorsByType[o] ? t.model.conditionOperatorsByType[o].operators : void 0
  }, t._getOperatorDescriptionForFieldId = function(e) {
    if (e && e.operator) {
      var i;
      return e.leftFormFieldId ? i = m(e.leftFormFieldId) : e.leftRestResponseId && (i = f(e.leftRestResponseId)), i ? t._getOperatorDescriptionForType(e.operator, i) : void 0
    }
  }, t._getOperatorDescriptionForType = function(e, i) {
    if (e && i) {
      var o = t.model.conditionOperatorsByType[i].index[e],
        n = t.model.conditionOperatorsByType[i].operators[o].description;
      return n
    }
  }, t.fieldIsNotEmpty = function(e) {
    return e && null === e && void 0 === e && "" !== e ? void 0 : !0
  };
  var g = o.instant("FORM-BUILDER.VISIBILITY.LEFT-FORM-FIELD"),
    v = o.instant("FORM-BUILDER.VISIBILITY.OPERATOR"),
    I = o.instant("FORM-BUILDER.VISIBILITY.RIGHT-VALUE"),
    S = o.instant("FORM-BUILDER.VISIBILITY.NEXT-CONDITION-OPERATOR");
  t.visibilityGridOptions = {
    data: e.tabVisibilityConditions,
    headerRowHeight: 28,
    enableRowSelection: !0,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableSorting: !1,
    enableColumnMenus: !1,
    columnDefs: [{
      field: "leftFormFieldId",
      displayName: g,
      resizable: !1,
      sortable: !1,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getLeftValueColumnValue(row.entity)}}</div>'
    }, {
      field: "operator",
      displayName: v,
      resizable: !0,
      sortable: !1,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getOperatorDescriptionForFieldId(row.entity)}}</div>'
    }, {
      field: "rightValue",
      displayName: I,
      resizable: !1,
      sortable: !1,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getRightValueColumnValue(row.entity)}}</div>'
    }, {
      field: "nextConditionOperator",
      displayName: S,
      resizable: !1,
      sortable: !1,
      width: 150,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getOperatorDescriptionForType(row.entity[col.field], "condition")}}</div>'
    }]
  }, t.visibilityGridOptions.onRegisterApi = function(e) {
    t.visibilityGridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
      if (e.isSelected) {
        if (t.model.selectedVisibilityCondition = e.entity, t.focusFirstField(), t.model.selectedVisibilityCondition) {
          var i = {},
            o = {};
          if (t.model.conditionFields)
            for (var n = 0; t.model.conditionFields.length > n; n++) t.model.selectedVisibilityCondition.leftFormFieldId && t.model.selectedVisibilityCondition.leftFormFieldId === t.model.conditionFields[n].id && (i = t.model.conditionFields[n]), t.model.selectedVisibilityCondition.rightFormFieldId && t.model.selectedVisibilityCondition.rightFormFieldId === t.model.conditionFields[n].id && (o = t.model.conditionFields[n]);
          t.model.selectedLeftVariable = i, t.model.selectedRightVariable = o, t.model.selectedVisibilityCondition.leftFormFieldId && "" != t.model.selectedVisibilityCondition.leftFormFieldId ? t.model.leftFieldType = "formField" : t.model.selectedVisibilityCondition.leftRestResponseId && "" != t.model.selectedVisibilityCondition.leftRestResponseId && (t.model.leftFieldType = "restResponse"), t.model.selectedVisibilityCondition.rightValue && ("" + t.model.selectedVisibilityCondition.rightValue).length > 0 ? t.model.rightFieldType = "staticValue" : t.model.selectedVisibilityCondition.rightFormFieldId && "" != t.model.selectedVisibilityCondition.rightFormFieldId ? t.model.rightFieldType = "formField" : t.model.selectedVisibilityCondition.rightRestResponseId && "" != t.model.selectedVisibilityCondition.rightRestResponseId && (t.model.rightFieldType = "restResponse")
        }
      } else t.model.selectedVisibilityCondition = void 0
    })
  }, t.focusFirstField = function() {
    r(function() {
      var e = document.getElementById("leftVariableField");
      e && e.focus()
    }, 100)
  }, t.addNewCondition = function() {
    var i = {
      leftFormFieldId: "",
      operator: "",
      rightFormFieldId: "",
      rightRestResponseId: "",
      rightValue: "",
      nextConditionOperator: ""
    };
    t.visibilityGridApi.selection.clearSelectedRows(), e.tabVisibilityConditions.push(i), r(function() {
      t.visibilityGridApi.selection.toggleRowSelection(i)
    })
  }, t.removeCondition = function() {
    if (t.model.selectedVisibilityCondition) {
      var i = e.tabVisibilityConditions.indexOf(t.model.selectedVisibilityCondition);
      t.visibilityGridApi.selection.clearSelectedRows(), e.tabVisibilityConditions.splice(i, 1), r(function() {
        e.tabVisibilityConditions.length > 0 ? t.visibilityGridApi.selection.toggleRowSelection(e.tabVisibilityConditions[0]) : t.model.selectedVisibilityCondition = void 0
      })
    }
  }, t.moveConditionUp = function() {
    if (t.model.selectedVisibilityCondition) {
      var i = e.tabVisibilityConditions.indexOf(t.model.selectedVisibilityCondition);
      if (0 != i) {
        var o = e.tabVisibilityConditions[i];
        e.tabVisibilityConditions.splice(i, 1), r(function() {
          e.tabVisibilityConditions.splice(i + -1, 0, o), r(function() {
            t.visibilityGridApi.selection.toggleRowSelection(e.tabVisibilityConditions[0])
          })
        })
      }
    }
  }, t.moveConditionDown = function() {
    if (t.model.selectedVisibilityCondition) {
      var i = e.tabVisibilityConditions.indexOf(t.model.selectedVisibilityCondition);
      if (i != e.tabVisibilityConditions.length - 1) {
        var o = e.tabVisibilityConditions[i];
        e.tabVisibilityConditions.splice(i, 1), r(function() {
          e.tabVisibilityConditions.splice(i + 1, 0, o), r(function() {
            t.visibilityGridApi.selection.toggleRowSelection(e.tabVisibilityConditions[0])
          })
        })
      }
    }
  }, t.getPreviousAndCurrentFormFields = function() {
    var i = {},
      o = [],
      n = ["text", "integer", "date", "boolean", "dropdown", "radio-buttons", "typeahead", "amount"],
      r = d.getFormFields(n);
    if (r && r.length > 0)
      for (var l = 0; r.length > l; l++) n.indexOf(r[l].type) > -1 && (i[r[l].id] = !0, o.push(r[l]));
    var c = s.flattenFields(e.formItems);
    if (c && c.length > 0) {
      c = a.additionalFormFieldProcessing(c);
      for (var l = 0; c.length > l; l++) {
        var p = c[l];
        n.indexOf(p.type) > -1 && !i[p.id] && (i[p.id] = !0, o.push(p))
      }
    }
    o.sort(function(e, t) {
      return e.name.toLowerCase() > t.name.toLowerCase() ? 1 : -1
    }), t.model.conditionFields = o
  }, t.setLeftFieldType = function(e) {
    t.model.leftFieldType = e, "formField" === e ? (t.model.selectedVisibilityCondition.leftRestResponseId = "", t.model.selectedLeftVariable = "") : "restResponse" === e && (t.model.selectedVisibilityCondition.leftFormFieldId = "")
  }, t.setRightFieldType = function(e) {
    t.model.rightFieldType = e, "formField" === e ? (t.model.selectedVisibilityCondition.rightValue = "", t.model.selectedVisibilityCondition.rightRestResponseId = "") : "staticValue" === e ? (t.model.selectedVisibilityCondition.rightFormFieldId = "", t.model.selectedVisibilityCondition.rightRestResponseId = "", t.model.selectedRightVariable = "") : "restResponse" === e && (t.model.selectedVisibilityCondition.rightValue = "", t.model.selectedVisibilityCondition.rightFormFieldId = "", t.model.selectedRightVariable = "")
  }, t.getPreviousAndCurrentFormFields(), t.getRestResponseVariables = function() {
    return d.getVariables()
  }, t.selectLeftResponseVariable = function(e, t) {
    e.leftRestResponseId = t.processVariableName
  }, t.selectRightResponseVariable = function(e, t) {
    e.rightRestResponseId = t.processVariableName
  }, t.closeDatePopup = function() {
    jQuery("#rightValueField").blur()
  }, t.clearDate = function() {
    t.model.selectedVisibilityCondition.rightValue = void 0, jQuery("#rightValueField").blur()
  }, t.selectToday = function(e, t) {
    var i = new Date;
    i = new Date(i.getFullYear(), i.getMonth(), i.getDate(), 0, 0, 0, 0), e = i, t && t(e), jQuery("#rightValueField").blur()
  }
}]), angular.module("activitiModeler").controller("TabCustomJavascriptController", ["$rootScope", "$scope", "$q", "$translate", "$http", "$timeout", "$filter", function(e, t, i, o, n, r) {
  t.model = {}, t.model.labels = [], t.model.selectedJavascriptEvent = void 0;
  var s = o.instant("FORM-BUILDER.JAVASCRIPT.EVENT");
  t.javascriptGridOptions = {
    data: e.formJavascriptEvents,
    headerRowHeight: 28,
    enableRowSelection: !0,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableSorting: !1,
    enableColumnMenus: !1,
    columnDefs: [{
      field: "event",
      displayName: s
    }]
  }, t.javascriptGridOptions.onRegisterApi = function(e) {
    t.javascriptGridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
      e.isSelected ? (t.model.selectedJavascriptEvent = e.entity, t.focusFirstField()) : t.model.selectedJavascriptEvent = void 0
    })
  }, t.focusFirstField = function() {
    r(function() {
      var e = document.getElementById("eventField");
      e && e.focus()
    }, 100)
  }, t.addNewJavascriptEvent = function() {
    var i = {
      event: "",
      javascriptLogic: ""
    };
    t.javascriptGridApi.selection.clearSelectedRows(), e.formJavascriptEvents.push(i), r(function() {
      t.javascriptGridApi.selection.toggleRowSelection(i)
    })
  }, t.removeJavascriptEvent = function() {
    if (t.model.selectedJavascriptEvent) {
      var i = e.formJavascriptEvents.indexOf(t.model.selectedJavascriptEvent);
      t.javascriptGridApi.selection.clearSelectedRows(), e.formJavascriptEvents.splice(i, 1), r(function() {
        e.formJavascriptEvents.length > 0 ? t.javascriptGridApi.selection.toggleRowSelection(e.formJavascriptEvents[0]) : t.model.selectedJavascriptEvent = void 0
      })
    }
  }
}]), angular.module("activitiModeler").controller("GroupRestrictionBuilderController", ["$rootScope", "$scope", "$q", "$translate", "$http", "$timeout", "GroupService", function(e, t, i, o, n, r, s) {
  t.popup = {}, t.formElement.params || (t.formElement.params = {}), t.$watch("popup.groupFilter", function() {
    t.updateGroupFilter()
  }), t.updateGroupFilter = function() {
    (void 0 == t.popup.oldGroupFilter || t.popup.oldGroupFilter != t.popup.groupFilter) && (t.popup.oldGroupFilter = t.popup.groupFilter ? t.popup.groupFilter : "", s.getFilteredGroups(t.popup.groupFilter).then(function(e) {
      t.popup.groupResults = e.data, t.resetGroupSelection()
    }))
  }, t.confirmGroup = function(e) {
    if (!e) {
      var i = t.popup.groupResults;
      t.popup.selectedGroupIndex >= 0 && t.popup.selectedGroupIndex < i.length && (e = i[t.popup.selectedGroupIndex])
    }
    e && (t.formElement.params.restrictWithGroup = e)
  }, t.removeGroup = function() {
    t.formElement.params.restrictWithGroup = void 0
  }, t.nextGroup = function() {
    var e = t.popup.groupResults;
    e && e.length > 0 && t.popup.selectedGroupIndex < e.length - 1 && (t.popup.selectedGroupIndex += 1)
  }, t.previousGroup = function() {
    var e = t.popup.groupResults;
    e && e.length > 0 && t.popup.selectedGroupIndex > 0 && (t.popup.selectedGroupIndex -= 1)
  }, t.resetGroupSelection = function() {
    t.popup.selectedGroupIndex = t.popup.groupResults && t.popup.groupResults.length > 0 ? 0 : -1
  }
}]), angular.module("activitiModeler").controller("ValidateFormModelCtrl", ["$rootScope", "$scope", "$q", "$translate", function(e, t, i, o) {
  t.formFieldValidationErrors = [];
  for (var n = 0; e.currentFormValidationErrors.length > n; n++) e.currentFormValidationErrors[n].id === t.currentFormField.id && t.formFieldValidationErrors.push(e.currentFormValidationErrors[n]);
  t.translationsRetrieved = !1, t.labels = {};
  var r = o("FORM-BUILDER.VALIDATOR-POPUP.DESCRIPTION"),
    s = o("FORM-BUILDER.VALIDATOR-POPUP.WARNING"),
    a = o("FORM-BUILDER.VALIDATOR-POPUP.VALIDATOR-SET");
  i.all([r, s, a]).then(function(e) {
    t.labels.descriptionLabel = e[0], t.labels.warningLabel = e[1], t.labels.validatorLabel = e[2], t.translationsRetrieved = !0, t.gridOptions = {
      data: t.formFieldValidationErrors,
      headerRowHeight: 28,
      enableHorizontalScrollbar: 0,
      enableColumnMenus: !1,
      columnDefs: [{
        field: "defaultDescription",
        displayName: t.labels.descriptionLabel
      }, {
        field: "warning",
        displayName: t.labels.warningLabel,
        width: 100
      }, {
        field: "validatorSetName",
        displayName: t.labels.validatorLabel,
        width: 200
      }]
    }
  }), t.ok = function() {
    t.$hide()
  }, t.close = function() {
    t.$hide()
  }
}]), angular.module("activitiModeler").controller("FormEndpointCheckController", ["$rootScope", "$scope", "EndpointUtilService", "ProcessScopeService", function(e, t, i, o) {
  var n, r, s, a = "GET";
  t.selectedColumnDef ? (n = t.selectedColumnDef.restUrl, r = t.selectedColumnDef.endpoint, s = t.selectedColumnDef.requestHeaders) : (n = t.formElement.restUrl, r = t.formElement.endpoint, s = t.formElement.requestHeaders);
  var l = function() {
    if (i.isTestDataNeeded(n, null, s)) {
      var e = o.getFormFields(t.allSteps, t.stepId),
        l = o.getVariables(t.allSteps, t.stepId);
      t.testDataFields = i.getTestDataFields(n, e, l, null, s)
    } else i.executeEndpointCheck(a, r, n).then(function(e) {
      t.requestResult = e, t.formattedResult = i.getFormattedRequestResult(e)
    })
  };
  t.isRequestSuccessful = function() {
    var e = !1;
    return t.requestResult && t.requestResult.statusCode && t.requestResult.statusCode >= 200 && 400 > t.requestResult.statusCode && (e = !0), e
  }, t.cancel = function() {
    t.endpointTestVisible.visible = !1
  }, t.ok = function() {
    i.executeEndpointCheck(a, r, n, t.testDataFields).then(function(e) {
      t.requestResult = e, t.formattedResult = i.getFormattedRequestResult(e)
    })
  }, t.back = function() {
    delete t.requestResult, t.testDataFields || t.cancel()
  }, l()
}]), angular.module("activitiModeler").controller("RestHeadersBuilderController", ["$rootScope", "$scope", "$q", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", "ProcessBuilderService", "uiGridConstants", function(e, t, i, o, n, r, s, a, l, d, c, p) {
  t.selectedRequestHeaders = [], t.selectedFields = [], t.labels = [];
  var u = t.formElement.endpoint.requestHeaders;
  if (t.formElement.requestHeaders && 0 !== t.formElement.requestHeaders.length) {
    for (var h = {}, m = 0; u.length > m; m++) h[u[m].name] = angular.copy(u[m]);
    for (var f = [], g = {}, m = 0; t.formElement.requestHeaders.length > m; m++) h[t.formElement.requestHeaders[m].name] && (f.push(t.formElement.requestHeaders[m]), g[t.formElement.requestHeaders[m].name] = t.formElement.requestHeaders[m]);
    for (var m = 0; u.length > m; m++) g[u[m].name] || f.push(u[m]);
    t.formElement.requestHeaders = f
  } else t.formElement.requestHeaders = angular.copy(u);
  t.restHeaderConfig = {
    position: 0,
    field: ""
  }, t.selectedRequestHeader = void 0, t.labels.idLabel = o.instant("FORM-BUILDER.COMPONENT.REQUEST-HEADER-NAME"), t.labels.nameLabel = o.instant("FORM-BUILDER.COMPONENT.REQUEST-HEADER-VALUE"), t.gridOptions = {
    data: t.formElement.requestHeaders,
    headerRowHeight: 28,
    enableRowSelection: !0,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableColumnMenus: !1,
    enableSorting: !1,
    columnDefs: [{
      field: "name",
      displayName: t.labels.idLabel,
      cellClass: function(e, t, i) {
        return "" === e.getCellValue(t, i) || 0 == e.getCellValue(t, i) ? "dynamicTable-cellError" : void 0
      }
    }, {
      field: "value",
      displayName: t.labels.nameLabel,
      cellClass: function(e, t, i) {
        return "" === e.getCellValue(t, i) || 0 == e.getCellValue(t, i) ? "dynamicTable-cellError" : void 0
      }
    }]
  }, t.gridOptions.onRegisterApi = function(e) {
    t.gridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
      t.selectedRequestHeader = e.entity, t.focusFirstField()
    })
  }, t.focusFirstField = function() {
    r(function() {
      var e = document.getElementById("headerValue");
      e && e.focus()
    }, 100)
  };
  var v = t.$on("endpoint-selection-changed", function(e, i) {
      i ? (t.formElement.requestHeaders = angular.copy(i.requestHeaders), t.gridOptions.data = t.formElement.requestHeaders, t.gridApi.core.notifyDataChange(p.dataChange.ALL), t.selectedRequestHeader = void 0) : t.formElement.requestHeaders = void 0
    }),
    I = t.$on("done-editing-field", function() {
      v(), I()
    });
  t.$on("$destroy", function() {
    v(), I()
  }), t.$watch("selectedRequestHeader.value", function() {
    t.gridApi.core.notifyDataChange(p.dataChange.ALL)
  }, !0), t.$watch("restHeaderConfig.field", function(e) {
    if (e) {
      var i = t.selectedRequestHeader.value,
        o = "${" + e.id + "}";
      i = i ? i.substring(0, t.restHeaderConfig.position) + o + i.substring(t.restHeaderConfig.position) : o, t.restHeaderConfig.field = void 0, r(function() {
        var e = angular.element("#rest-header-value");
        e.focus(), e.val(i), t.selectedRequestHeader.value = i
      }, 200)
    }
  }), t.model = {
    headerFieldType: "formField"
  }, t.setUrlFieldType = function(e) {
    "restResponse" === e ? t.model = {
      headerFieldType: "restResponse"
    } : "formField" === e && (t.model = {
      headerFieldType: "formField"
    })
  }
}]), angular.module("activitiModeler").controller("RestHeadersBuilderDynTableController", ["$rootScope", "$scope", "$q", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", "ProcessBuilderService", "uiGridConstants", function(e, t, i, o, n, r, s, a, l, d, c, p) {
  function u() {
    var e = t.selectedColumnDefinition.endpoint.requestHeaders;
    if (t.selectedColumnDefinition.requestHeaders && 0 !== t.selectedColumnDefinition.requestHeaders.length) {
      for (var i = {}, o = 0; e.length > o; o++) i[e[o].name] = angular.copy(e[o]);
      for (var n = [], r = {}, o = 0; t.selectedColumnDefinition.requestHeaders.length > o; o++) i[t.selectedColumnDefinition.requestHeaders[o].name] && (n.push(t.selectedColumnDefinition.requestHeaders[o]), r[t.selectedColumnDefinition.requestHeaders[o].name] = t.selectedColumnDefinition.requestHeaders[o]);
      for (var o = 0; e.length > o; o++) r[e[o].name] || n.push(e[o]);
      t.selectedColumnDefinition.requestHeaders = n
    } else t.selectedColumnDefinition.requestHeaders = angular.copy(e)
  }
  t.selectedRequestHeaders = [], t.selectedFields = [], t.labels = [], u(), t.restHeaderConfig = {
    position: 0,
    field: ""
  }, t.selectedRequestHeader = void 0, t.labels.idLabel = o.instant("FORM-BUILDER.COMPONENT.REQUEST-HEADER-NAME"), t.labels.nameLabel = o.instant("FORM-BUILDER.COMPONENT.REQUEST-HEADER-VALUE"), t.gridOptions = {
    data: t.selectedColumnDefinition.requestHeaders,
    headerRowHeight: 28,
    enableRowSelection: !0,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableColumnMenus: !1,
    enableSorting: !1,
    columnDefs: [{
      field: "name",
      displayName: t.labels.idLabel,
      cellClass: function(e, t, i) {
        return "" === e.getCellValue(t, i) || 0 == e.getCellValue(t, i) ? "dynamicTable-cellError" : void 0
      }
    }, {
      field: "value",
      displayName: t.labels.nameLabel,
      cellClass: function(e, t, i) {
        return "" === e.getCellValue(t, i) || 0 == e.getCellValue(t, i) ? "dynamicTable-cellError" : void 0
      }
    }]
  }, t.gridOptions.onRegisterApi = function(e) {
    t.gridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
      t.selectedRequestHeader = e.entity, t.focusFirstField()
    })
  }, t.focusFirstField = function() {
    r(function() {
      var e = document.getElementById("headerValue");
      e && e.focus()
    }, 100)
  }, t.$on("col-selection-changed", function() {
    t.selectedColumnDefinition.endpoint && t.selectedColumnDefinition.endpoint.requestHeaders && t.selectedColumnDefinition.endpoint.requestHeaders.length > 0 ? (u(), t.gridOptions.data = t.selectedColumnDefinition.requestHeaders, t.gridApi.core.notifyDataChange(p.dataChange.ALL), t.selectedRequestHeader = void 0) : t.selectedColumnDefinition.requestHeaders = void 0
  }), t.$on("col-endpoint-selection-changed", function(e, i) {
    i ? (t.selectedColumnDefinition.requestHeaders = angular.copy(i.requestHeaders), t.gridOptions.data = t.selectedColumnDefinition.requestHeaders, t.gridApi.core.notifyDataChange(p.dataChange.ALL), t.selectedRequestHeader = void 0) : t.selectedColumnDefinition.requestHeaders = void 0
  }), t.$watch("selectedRequestHeader.value", function() {
    t.gridApi.core.notifyDataChange(p.dataChange.ALL)
  }, !0), t.$watch("restHeaderConfig.field", function(e) {
    if (e) {
      var i = t.selectedRequestHeader.value,
        o = "${" + e.id + "}";
      i = i ? i.substring(0, t.restHeaderConfig.position) + o + i.substring(t.restHeaderConfig.position) : o, t.restHeaderConfig.field = void 0, r(function() {
        var e = angular.element("#rest-header-value");
        e.focus(), e.val(i), t.selectedRequestHeader.value = i
      }, 200)
    }
  }), t.model = {
    headerFieldType: "formField"
  }, t.setUrlFieldType = function(e) {
    "restResponse" === e ? t.model = {
      headerFieldType: "restResponse"
    } : "formField" === e && (t.model = {
      headerFieldType: "formField"
    })
  }
}]), angular.module("activitiModeler").controller("FlowConditionBuilderController", ["$rootScope", "$scope", "$q", "$translate", "$http", "$timeout", "FormUtilService", "FormBuilderService", "$filter", function(e, t, i, o, n, r, s, a, l) {
  t.model.selectedFlowConditions = [], t.model.selectedFields = [], t.model.labels = [], t.model.flowConditions = [], t.model.selectedFlowCondition = void 0, t.flowCondition = void 0, t.options = {}, t.model.condition && (e.flowCondition = t.model.condition), (void 0 === e.flowCondition.type || null === e.flowCondition.type) && (e.flowCondition.type = "variables");
  var d = function(e, t) {
      if (!t.nextCondition) return t.index = void 0, e.push(t), void 0;
      var i = t.nextCondition;
      t.index = void 0, t.nextCondition = "", e.push(t), d(e, i)
    },
    c = function() {
      var t = [];
      return t[0] = e.flowCondition, e.flowCondition.nextCondition && d(t, e.flowCondition.nextCondition), t
    },
    p = function(e) {
      var t = {};
      return e && "variables" === e.type ? "field" === e.fieldType ? (t.leftFormFieldId = e.fieldId, t.operator = e.operator, t.rightValue = e.value) : "outcome" === e.fieldType ? (t.outcomeFormId = e.outcomeFormId, t.outcomeFormName = e.outcomeFormName, t.operator = e.operator, t.rightOutcomeName = e.outcomeName) : "restResponseVariable" === e.fieldType ? (t.leftRestResponseId = e.responseVariableName, t.operator = e.operator, t.rightValue = e.value) : t = "none" === e.fieldType ? void 0 : e : t = e, t
    };
  e.flowCondition = p(e.flowCondition), e.tabFlowConditions = e.flowCondition ? c() : [];
  var u = function(e) {
      e && (void 0 === e.leftFieldType && (e.leftFieldType = e.leftFormFieldId && "" != e.leftFormFieldId ? "formField" : e.leftRestResponseId && "" != e.leftRestResponseId ? "restResponse" : e.outcomeFormId && "" != e.outcomeFormId ? "outcome" : "formField"), void 0 === e.rightFieldType && (e.rightValue && ("" + e.rightValue).length > 0 ? e.rightFieldType = "staticValue" : e.rightFormFieldId && "" != e.rightFormFieldId ? e.rightFieldType = "formField" : e.rightRestResponseId && "" != e.rightRestResponseId ? e.rightFieldType = "restResponse" : e.rightOutcomeFormId && "" != e.rightOutcomeFormId ? e.rightFieldType = "outcome" : e.rightOutcomeName && "" != e.rightOutcomeName ? (e.rightOutcomeFormId = e.outcomeFormId, e.rightOutcomeFormName = e.outcomeFormName, e.rightFieldType = "outcome") : e.rightFieldType = "staticValue"))
    },
    h = function() {
      if (e.tabFlowConditions && e.tabFlowConditions.length > 0)
        for (var t = 0; e.tabFlowConditions.length > t; t++) {
          var i = e.tabFlowConditions[t];
          u(i)
        }
    };
  h();
  var m = o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.EQUALS"),
    f = o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.NOTEQUALS");
  t.model.conditionOperatorsByType = {
    text: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5,
        empty: 6,
        notEmpty: 7
      },
      operators: [{
        value: "==",
        description: m
      }, {
        value: "!=",
        description: f
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    string: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5,
        empty: 6,
        notEmpty: 7
      },
      operators: [{
        value: "==",
        description: m
      }, {
        value: "!=",
        description: f
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    date: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5,
        empty: 6,
        notEmpty: 7
      },
      operators: [{
        value: "==",
        description: m
      }, {
        value: "!=",
        description: f
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.DATE.BEFORE")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.DATE.AFTER")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.DATE.BEFOREOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.DATE.AFTEROREQUAL")
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    integer: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5,
        empty: 6,
        notEmpty: 7
      },
      operators: [{
        value: "==",
        description: m
      }, {
        value: "!=",
        description: f
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    "long": {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5,
        empty: 6,
        notEmpty: 7
      },
      operators: [{
        value: "==",
        description: m
      }, {
        value: "!=",
        description: f
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    number: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5,
        empty: 6,
        notEmpty: 7
      },
      operators: [{
        value: "==",
        description: m
      }, {
        value: "!=",
        description: f
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    amount: {
      index: {
        "==": 0,
        "!=": 1,
        "<": 2,
        ">": 3,
        "<=": 4,
        ">=": 5,
        empty: 6,
        notEmpty: 7
      },
      operators: [{
        value: "==",
        description: m
      }, {
        value: "!=",
        description: f
      }, {
        value: "<",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN")
      }, {
        value: ">",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN")
      }, {
        value: "<=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHANOREQUAL")
      }, {
        value: ">=",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHANOREQUAL")
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    dropdown: {
      index: {
        "==": 0,
        "!=": 1,
        empty: 2,
        notEmpty: 3
      },
      operators: [{
        value: "==",
        description: m
      }, {
        value: "!=",
        description: f
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    typeahead: {
      index: {
        "==": 0,
        "!=": 1,
        empty: 2,
        notEmpty: 3
      },
      operators: [{
        value: "==",
        description: m
      }, {
        value: "!=",
        description: f
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    "radio-buttons": {
      index: {
        "==": 0,
        "!=": 1,
        empty: 2,
        notEmpty: 3
      },
      operators: [{
        value: "==",
        description: m
      }, {
        value: "!=",
        description: f
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    "boolean": {
      index: {
        "==": 0,
        "!=": 1,
        empty: 2,
        notEmpty: 3
      },
      operators: [{
        value: "==",
        description: m
      }, {
        value: "!=",
        description: f
      }, {
        value: "empty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY")
      }, {
        value: "notEmpty",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY")
      }]
    },
    condition: {
      index: {
        and: 0,
        "and-not": 1,
        or: 2,
        "or-not": 3
      },
      operators: [{
        value: "and",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.CONDITION.AND")
      }, {
        value: "and-not",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.CONDITION.ANDNOT")
      }, {
        value: "or",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.CONDITION.OR")
      }, {
        value: "or-not",
        description: o.instant("FORM-BUILDER.VISIBILITY.OPERATORS.CONDITION.ORNOT")
      }]
    }
  }, t.model.rightTypes = [{
    value: "string",
    description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_TYPES.CONDITION.STRING")
  }, {
    value: "number",
    description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_TYPES.CONDITION.NUMBER")
  }, {
    value: "date",
    description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_TYPES.CONDITION.DATE")
  }], t.model.rightValueOptions = {
    "boolean": [{
      value: "true",
      description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_VALUE_OPTIONS.BOOLEAN.CHECKED")
    }, {
      value: "false",
      description: o.instant("FORM-BUILDER.VISIBILITY.RIGHT_VALUE_OPTIONS.BOOLEAN.UNCHECKED")
    }]
  }, t.getNameForSelectedFormFieldId = function(e) {
    var i = "";
    if (e)
      for (var o = 0; t.model.conditionFields.length > o; o++) {
        var n = t.model.conditionFields[o];
        if (n.id === e) {
          i = n.name;
          break
        }
      }
    return i
  }, t._getLeftValueColumnValue = function(e) {
    var t = "";
    return e ? ("formField" === e.leftFieldType ? e.leftFormFieldId && "" != e.leftFormFieldId && (t = e.leftFormFieldId) : "outcome" === e.leftFieldType ? e.outcomeFormId && "" != e.outcomeFormId && (t = e.outcomeFormName || e.outcomeFormId) : "restResponse" === e.leftFieldType && e.leftRestResponseId && "" != e.leftRestResponseId && (t = e.leftRestResponseId), t) : t
  }, t._getRightValueColumnValue = function(e) {
    var i = "";
    if (!e) return i;
    if ("formField" === e.rightFieldType) e.rightFormFieldId && "" != e.rightFormFieldId && (i = e.rightFormFieldId);
    else if ("outcome" === e.rightFieldType) i = "outcome" === e.leftFieldType ? e.rightOutcomeFormName && "" != e.rightOutcomeFormName && e.outcomeFormName && "" != e.outcomeFormName ? e.rightOutcomeFormName != e.outcomeFormName ? e.rightOutcomeFormName : e.rightOutcomeName : e.rightOutcomeFormName : e.rightOutcomeFormName;
    else if ("restResponse" === e.rightFieldType) e.rightRestResponseId && "" != e.rightRestResponseId && (i = e.rightRestResponseId);
    else if (e.rightValue && "" != e.rightValue)
      if (e.leftFormFieldId && "" != e.leftFormFieldId) {
        var o = t.getTypeForSelectedFormFieldId(e.leftFormFieldId);
        if ("date" === o) i = l("date")(new Date(e.rightValue), "d-M-yyyy");
        else if ("integer" === o) {
          var n = 0;
          try {
            n = parseInt(e.rightValue)
          } catch (r) {
            n = 0
          }
          e.rightValue = n, i = e.rightValue
        } else i = e.rightValue
      } else i = e.rightValue;
    return i
  }, t.getTypeForFieldOrVariable = function(e, t) {
    var i = "string";
    return e ? i = g(e) : t && (i = v(t)), i
  }, t.getTypeForSelectedFormFieldId = function(e) {
    return g(e)
  };
  var g = function(e) {
      var i = "";
      if (e)
        for (var o = 0; t.availableFormFields.length > o; o++) {
          var n = t.availableFormFields[o];
          if (n.id === e) {
            i = n.type;
            break
          }
        }
      return i
    },
    v = function(e) {
      var i = "";
      if (e) {
        var o = t.availableRestResponseVariables;
        if (o && o.length > 0)
          for (var n = 0; o.length > n; n++) {
            var r = o[n];
            if (r.processVariableName === e) {
              i = r.processVariableType;
              break
            }
          }
      }
      return i.toLowerCase()
    };
  t.getConditionsForFieldId = function(e, i) {
    var o;
    return e ? o = g(e) : i && (o = v(i)), o && t.model.conditionOperatorsByType[o] ? t.model.conditionOperatorsByType[o].operators : t.model.conditionOperatorsByType.string.operators
  }, t.getDropDownOptions = function(e) {
    return t.options && t.options[e] ? t.options[e] : (t.updateSelectOptions(t.detectFormField(e), e), t.options && t.options[e] ? t.options[e] : [])
  }, t.detectFormField = function(e) {
    for (var i = 0; t.model.conditionFields.length > i; i++) {
      var o = t.model.conditionFields[i];
      if (o.id === e) return o
    }
  }, t.updateSelectOptions = function(e, i) {
    e && ("dropdown" === e.type || "radio-buttons" === e.type || "typeahead" === e.type) && (t.options[e.id] = t.getFieldOptions(e, i))
  }, t.getFieldOptions = function(e, t) {
    var i = [];
    if (e && e.optionType && "rest" === e.optionType) return i;
    if (e.options && e.options.length > 0)
      for (var o = 0; e.options.length > o; o++) {
        var n = e.options[o],
          r = t.endsWith("_LABEL") ? n.name : n.id;
        i.push({
          value: r,
          description: r
        })
      }
    return i
  }, t._getOperatorDescriptionForFieldId = function(e) {
    if (e && e.operator) {
      var i;
      return e.leftFormFieldId ? i = g(e.leftFormFieldId) : e.leftRestResponseId ? i = v(e.leftRestResponseId) : e.outcomeFormId && "" != e.outcomeFormId && (i = "string"), i ? t._getOperatorDescriptionForType(e.operator, i) : void 0
    }
  }, t._getOperatorDescriptionForType = function(e, i) {
    if (e && i) {
      var o = t.model.conditionOperatorsByType[i].index[e],
        n = t.model.conditionOperatorsByType[i].operators[o].description;
      return n
    }
  }, t.fieldIsNotEmpty = function(e) {
    return e && null === e && void 0 === e && "" !== e ? void 0 : !0
  };
  var I = o.instant("FORM-BUILDER.VISIBILITY.LEFT-FORM-FIELD"),
    S = o.instant("FORM-BUILDER.VISIBILITY.OPERATOR"),
    O = o.instant("FORM-BUILDER.VISIBILITY.RIGHT-VALUE"),
    R = o.instant("FORM-BUILDER.VISIBILITY.NEXT-CONDITION-OPERATOR");
  t.flowConditionGridOptions = {
    data: e.tabFlowConditions,
    headerRowHeight: 28,
    enableRowSelection: !0,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableSorting: !1,
    enableColumnMenus: !1,
    columnDefs: [{
      field: "leftFormFieldId",
      displayName: I,
      resizable: !1,
      sortable: !1,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getLeftValueColumnValue(row.entity)}}</div>'
    }, {
      field: "operator",
      displayName: S,
      resizable: !0,
      sortable: !1,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getOperatorDescriptionForFieldId(row.entity)}}</div>'
    }, {
      field: "rightValue",
      displayName: O,
      resizable: !1,
      sortable: !1,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getRightValueColumnValue(row.entity)}}</div>'
    }, {
      field: "nextConditionOperator",
      displayName: R,
      resizable: !1,
      sortable: !1,
      width: 150,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getOperatorDescriptionForType(row.entity[col.field], "condition")}}</div>'
    }]
  }, t.flowConditionGridOptions.onRegisterApi = function(e) {
    t.flowConditionGridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
      e.isSelected ? (t.model.selectedFlowCondition = e.entity, t.focusFirstField(), t.model.selectedFlowCondition && u(t.model.selectedFlowCondition)) : t.model.selectedFlowCondition = void 0
    })
  }, t.focusFirstField = function() {
    r(function() {
      var e = document.getElementById("leftVariableField");
      e && e.focus()
    }, 100)
  }, t.addNewCondition = function() {
    var i = {
      leftFormFieldId: "",
      operator: "",
      rightFormFieldId: "",
      rightRestResponseId: "",
      rightValue: "",
      nextConditionOperator: ""
    };
    t.flowConditionGridApi.selection.clearSelectedRows(), e.tabFlowConditions.push(i), r(function() {
      t.flowConditionGridApi.selection.toggleRowSelection(i)
    })
  }, t.removeCondition = function() {
    if (t.model.selectedFlowCondition) {
      var i = e.tabFlowConditions.indexOf(t.model.selectedFlowCondition);
      t.flowConditionGridApi.selection.clearSelectedRows(), e.tabFlowConditions.splice(i, 1), r(function() {
        e.tabFlowConditions.length > 0 ? t.flowConditionGridApi.selection.toggleRowSelection(e.tabFlowConditions[0]) : t.model.selectedFlowCondition = void 0
      })
    }
  }, t.moveConditionUp = function() {
    if (t.model.selectedFlowCondition) {
      var i = e.tabFlowConditions.indexOf(t.model.selectedFlowCondition);
      if (0 != i) {
        var o = e.tabFlowConditions[i];
        e.tabFlowConditions.splice(i, 1), r(function() {
          e.tabFlowConditions.splice(i + -1, 0, o), r(function() {
            t.flowConditionGridApi.selection.toggleRowSelection(e.tabFlowConditions[0])
          })
        })
      }
    }
  }, t.moveConditionDown = function() {
    if (t.model.selectedFlowCondition) {
      var i = e.tabFlowConditions.indexOf(t.model.selectedFlowCondition);
      if (i != e.tabFlowConditions.length - 1) {
        var o = e.tabFlowConditions[i];
        e.tabFlowConditions.splice(i, 1), r(function() {
          e.tabFlowConditions.splice(i + 1, 0, o), r(function() {
            t.flowConditionGridApi.selection.toggleRowSelection(e.tabFlowConditions[0])
          })
        })
      }
    }
  }, t.setLeftFieldType = function(e) {
    t.model.selectedFlowCondition.leftFieldType = e, "formField" === e ? (t.model.selectedLeftVariable = "", t.model.selectedFlowCondition.leftRestResponseId = "", t.model.selectedFlowCondition.outcomeFormId = "", t.model.selectedFlowCondition.outcomeFormName = "") : "restResponse" === e ? (t.model.selectedFlowCondition.leftFormFieldId = "", t.model.selectedFlowCondition.outcomeFormId = "", t.model.selectedFlowCondition.outcomeFormName = "") : "outcome" === e && (t.model.selectedLeftVariable = "", t.model.selectedFlowCondition.leftFormFieldId = "", t.model.selectedFlowCondition.leftRestResponseId = "")
  }, t.setRightFieldType = function(e) {
    t.model.selectedFlowCondition.rightFieldType = e, "formField" === e ? (t.model.selectedFlowCondition.rightValue = "", t.model.selectedFlowCondition.rightRestResponseId = "", t.model.selectedFlowCondition.rightOutcomeName = "") : "staticValue" === e ? (t.model.selectedFlowCondition.rightFormFieldId = "", t.model.selectedFlowCondition.rightRestResponseId = "", t.model.selectedFlowCondition.rightOutcomeName = "", t.model.selectedRightVariable = "") : "restResponse" === e ? (t.model.selectedFlowCondition.rightValue = "", t.model.selectedFlowCondition.rightFormFieldId = "", t.model.selectedFlowCondition.rightOutcomeName = "", t.model.selectedRightVariable = "") : "outcome" === e && (t.model.selectedFlowCondition.rightValue = "", t.model.selectedFlowCondition.rightFormFieldId = "", t.model.selectedFlowCondition.rightRestResponseId = "", t.model.selectedRightVariable = "")
  }, t.selectLeftFormField = function(e, t) {
    e.leftFormFieldId = t.id
  }, t.selectRightFormField = function(e, t) {
    e.rightFormFieldId = t.id
  }, t.selectLeftResponseVariable = function(e, t) {
    e.leftRestResponseId = t.processVariableName
  }, t.selectRightResponseVariable = function(e, t) {
    e.rightRestResponseId = t.processVariableName
  }, t.selectLeftForm = function(e, i) {
    e.outcomeFormId = i.id, e.outcomeFormName = i.name, t.selectRightForm(e, i)
  }, t.selectRightForm = function(e, i) {
    e.rightOutcomeFormId = i.id, e.rightOutcomeFormName = i.name, e.rightOutcomeName = void 0, t.refreshAvailableOutcomes(e.rightOutcomeFormId)
  }, t.selectFormOutcome = function(e, t) {
    e.rightOutcomeName = t.name
  }, t.isShowRightHandSide = function() {
    return null !== t.model.selectedFlowCondition && void 0 !== t.model.selectedFlowCondition && "empty" !== t.model.selectedFlowCondition.operator && "notEmpty" !== t.model.selectedFlowCondition.operator
  }, t.closeDatePopup = function() {
    jQuery("#rightValueField").blur()
  }, t.clearDate = function() {
    t.model.selectedFlowCondition.rightValue = void 0, jQuery("#rightValueField").blur()
  }, t.selectToday = function(e, t) {
    var i = new Date;
    i = new Date(i.getFullYear(), i.getMonth(), i.getDate(), 0, 0, 0, 0), e = i, t && t(e), jQuery("#rightValueField").blur()
  }, t.refreshAvailableResponseVariables(), t.refreshAvailableFormFields(), t.refreshAvailableForms(), t.model.conditionFields = t.availableFormFields
}]);
var FORM_TOOLBAR = {
  ACTIONS: {
    saveModel: function(e) {
      _internalCreateModal({
        backdrop: !0,
        keyboard: !0,
        template: "views/popup/form-save-model.html?version=" + Date.now(),
        scope: e.$scope
      }, e.$modal, e.$scope)
    },
    validateModel: function(e) {
      e.FormBuilderService.validateForm()
    },
    help: function() {},
    feedback: function() {},
    closeEditor: function(e) {
      var t = function() {
        e.$rootScope.formChanges = !1, e.ProcessScopeService.navigateBack("/forms")
      };
      if (1 == e.$rootScope.formChanges) {
        e.$scope.$emit("formChangesEvent");
        var i = e.$scope.$on("mustSaveEvent", function() {
            var i = "";
            e.$rootScope.currentForm.description && (i = e.$rootScope.currentForm.description);
            var o = {
              newVersion: !1
            };
            r(), e.FormBuilderService.saveForm(o, e.$rootScope.currentForm.name, i, t)
          }),
          o = e.$scope.$on("discardDataEvent", function() {
            r(), t()
          }),
          n = e.$scope.$on("continueEditingEvent", function() {
            r()
          })
      } else t();
      var r = function() {
        n(), i(), o()
      }
    }
  }
};
angular.module("activitiModeler").controller("SaveFormCtrl", ["$rootScope", "$scope", "$http", "$route", "$location", "$translate", "FormBuilderService", "ProcessScopeService", function(e, t, i, o, n, r, s, a) {
  var l = "";
  e.currentForm.description && (l = e.currentForm.description);
  var d = {
    name: e.currentForm.name,
    description: l,
    reusable: !1,
    newVersion: !1,
    comment: ""
  };
  t.saveDialog = d, t.status = {
    loading: !1
  };
  var c = function(e) {
    e && e.length > 0 && (t.saveDialog.validationErrors = !0)
  };
  s.validateForm(c), t.cancel = function() {
    t.$hide()
  }, t.saveAndClose = function() {
    t.save(function() {
      a.navigateBack("/forms")
    })
  }, t.save = function(i) {
    if (t.saveDialog.name && 0 != t.saveDialog.name.length) {
      t.status = {
        loading: !0
      };
      var o = {
          reusable: t.saveDialog.reusable,
          newVersion: t.saveDialog.newVersion,
          comment: t.saveDialog.comment
        },
        n = function() {
          t.$hide(), e.addAlert("Saved form '" + t.saveDialog.name, "info"), i && i(), e.formChanges = !1
        },
        r = function() {
          t.$hide(), e.addAlert("Form '" + t.saveDialog.name, " could not be saved")
        };
      s.saveForm(o, t.saveDialog.name, t.saveDialog.description, n, r)
    }
  }, t.validate = function() {
    t.saveDialog.name && 0 != t.saveDialog.name.length && (t.status = {
      loading: !0
    }, {
      reusable: t.saveDialog.reusable,
      newVersion: t.saveDialog.newVersion,
      comment: t.saveDialog.comment
    }, s.validateForm(saveCallback))
  }, t.isOkButtonDisabled = function() {
    return t.status.loading ? !1 : t.error && t.error.conflictResolveAction ? "saveAs" === t.error.conflictResolveAction ? !t.error.saveAs || 0 == t.error.saveAs.length : !1 : !0
  }, t.okClicked = function() {
    t.error && ("discardChanges" === t.error.conflictResolveAction ? (t.close(), o.reload()) : "overwrite" === t.error.conflictResolveAction || "newVersion" === t.error.conflictResolveAction ? t.save() : "saveAs" === t.error.conflictResolveAction && t.save(function() {
      e.ignoreChanges = !0, a.navigateBack("/forms")
    }))
  }
}]);
var FORM_TOOLBAR_CONFIG = {
  items: [{
    type: "button",
    title: "FORM_TOOLBAR.ACTION.SAVE",
    cssClass: "editor-icon editor-icon-save",
    action: "FORM_TOOLBAR.ACTIONS.saveModel"
  }, {
    type: "button",
    title: "FORM_TOOLBAR.ACTION.VALIDATE",
    cssClass: "glyphicon glyphicon-ok",
    action: "FORM_TOOLBAR.ACTIONS.validateModel"
  }],
  secondaryItems: [{
    type: "button",
    title: "Close",
    cssClass: "glyphicon glyphicon-remove",
    action: "FORM_TOOLBAR.ACTIONS.closeEditor"
  }]
};
angular.module("activitiModeler").controller("FormToolbarController", ["$scope", "$http", "$modal", "$q", "$rootScope", "$translate", "$location", "FormBuilderService", "ProcessScopeService", function(e, t, i, o, n, r, s, a, l) {
  var d = FORM_TOOLBAR_CONFIG.items;
  e.items = [];
  for (var c = 0; d.length > c; c++) e.items.push(d[c]);
  e.secondaryItems = FORM_TOOLBAR_CONFIG.secondaryItems;
  var p = function(e, t) {
    for (var i = Array.prototype.slice.call(arguments).splice(2), o = e.split("."), n = o.pop(), r = 0; o.length > r; r++) t = t[o[r]];
    return t[n].apply(this, i)
  };
  e.toolbarButtonClicked = function(s) {
    var d = e.items[s],
      c = {
        $scope: e,
        $rootScope: n,
        $http: t,
        $modal: i,
        $q: o,
        $translate: r,
        FormBuilderService: a,
        ProcessScopeService: l
      };
    p(d.action, window, c)
  }, e.toolbarSecondaryButtonClicked = function(d) {
    var c = e.secondaryItems[d],
      u = {
        $scope: e,
        $rootScope: n,
        $http: t,
        $modal: i,
        $q: o,
        $translate: r,
        $location: s,
        FormBuilderService: a,
        ProcessScopeService: l
      };
    p(c.action, window, u)
  }
}]), angular.module("activitiModeler").controller("FormReadonlyViewController", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", "$modal", "$routeParams", "$popover", "FormBuilderService", "ProcessBuilderService", function(e, t, i, o, n, r, s, a, l, d) {
  function c(e, t) {
    if (e._guid || (e._guid = t + p++), !e._width) {
      var i;
      i = "container" === e.type || "dynamic-table" === e.type || "group" === e.type ? 2 : 1, e._width = i
    }
    if (e.fields)
      for (var o in e.fields) e.fields[o].forEach(function(e) {
        c(e, t)
      })
  }
  e.setMainPageById("forms"), e.currentFormItems = void 0, t.formLoaded = !1, t.formTabClicked = function(i) {
    t.activeFormTab = i, e.currentFormItems.length = 0;
    for (var o = 0; t.formItems.length > o; o++) {
      var n = t.formItems[o];
      n.tab && n.tab === t.activeFormTab.id && e.currentFormItems.push(n)
    }
  };
  var p = 0;
  if (a.modelId) {
    var u;
    u = a.modelHistoryId ? ACTIVITI.CONFIG.contextRoot + "/app/rest/form-models/" + a.modelId + "/history/" + a.modelHistoryId : ACTIVITI.CONFIG.contextRoot + "/app/rest/form-models/" + a.modelId, o({
      method: "GET",
      url: u
    }).success(function(i) {
      var o = 0;
      i.stencilSetId && i.stencilSetId > 0 && (o = i.stencilSetId), d.getStencilSet(o).then(function(o) {
        if (t.stencilSet = o, t.palletteElements = t.stencilSet && t.stencilSet.fieldTypes ? t.stencilSet.fieldTypes : [], i.formDefinition.fields) {
          for (var r = 0; i.formDefinition.fields.length > r; r++) {
            var s = i.formDefinition.fields[r];
            s.params || (s.params = {}), c(s, "savedField")
          }
          t.formElements = i.formDefinition.fields
        } else t.formElements = [];
        if (t.formTabs = i.formDefinition.tabs, t.formTabs && t.formTabs.length > 0 ? t.activeFormTab = t.formTabs[0] : t.formTabs = [], t.formItems = t.formElements, t.formTabs.length > 0) {
          e.currentFormItems = [];
          for (var r = 0; t.formItems.length > r; r++) {
            var a = t.formItems[r];
            a.tab && a.tab === t.activeFormTab.id && e.currentFormItems.push(a)
          }
        } else e.currentFormItems = t.formItems.slice();
        n(function() {
          t.formLoaded = !0
        }, 200)
      })
    }).error(function() {
      t.model.loading = !1
    })
  } else t.formLoaded = !0
}]), angular.module("activitiModeler").service("EndpointUtilService", ["$q", "$http", function(e, t) {
  var i = function(i) {
    var o = e.defer();
    return t(i).success(function(e) {
      o.resolve(e)
    }).error(function(e) {
      o.reject(e)
    }), o.promise
  };
  this.isTestDataNeeded = function(e, t, i) {
    var o = !1;
    return e && "" != e && e.indexOf("?") > -1 && (o = !0), !o && (t && t.length > 0 || i && i.length > 0) && (o = !0), o
  }, this.executeEndpointCheck = function(e, t, i, o) {
    var s = [],
      a = [],
      l = [];
    return o && o.urlVariableValues && (a = n(o.urlVariableValues)), o && o.requestVariableValues && (s = n(o.requestVariableValues)), o && o.requestHeaderVariableValues && (l = n(o.requestHeaderVariableValues)), r(e, t, i, a, s, l)
  }, this.getFormattedRequestResult = function(e) {
    var t = "";
    return e && e.statusCode && (t = t.concat("Request URL: " + e.endpointUrl + "\n")), e && e.statusCode && (t = t.concat("Response code: " + e.statusCode + "\n")), e && e.responseMessage && (t = t.concat("Response message: " + e.responseMessage + "\n")), e && e.responseEntity && (t = t.concat("Response entity: " + JSON.stringify(e.responseEntity, null, 4) + "\n")), t
  }, this.getTestDataFields = function(e, t, i, o, n) {
    var r = {},
      l = [],
      d = [],
      c = [];
    if (e && "" != e) {
      var p = s(e);
      if (p)
        for (var u = 0; p.length > u; u++) {
          var h = void 0,
            m = p[u].paramValue;
          if (0 == m.indexOf("$")) {
            if (m = m.replace(/[{}]/g, ""), m = m.substring(1), t && t.length > 0) e: for (var f = 0; t.length > f; f++)
              if (m === t[f].id) {
                h = {
                  id: t[f].id,
                  name: p[u].paramName,
                  type: t[f].type
                };
                break e
              }
            if (!h && i && i.length > 0) e: for (var f = 0; i.length > f; f++)
              if (m === i[f].processVariableName) {
                h = {
                  id: i[f].processVariableName,
                  name: p[u].paramName,
                  type: i[f].processVariableType
                };
                break e
              }
            h || (h = {
              id: m,
              name: p[u].paramName,
              type: "string"
            })
          }
          h || (h = {
            id: p[u].paramName,
            name: p[u].paramName,
            type: "string",
            value: p[u].paramValue
          }), l.push(h)
        }
      var g = a(e);
      if (g)
        for (var u = 0; g.length > u; u++) {
          var v = void 0,
            I = g[u];
          if (t && t.length > 0) e: for (var f = 0; t.length > f; f++)
            if (I === t[f].id) {
              v = {
                id: t[f].id,
                name: "path variable " + (u + 1),
                type: t[f].type
              };
              break e
            }
          if (!v && i && i.length > 0)
            for (var f = 0; i.length > f; f++)
              if (I === i[f].processVariableName) {
                v = {
                  id: i[f].processVariableName,
                  name: "path variable " + (u + 1),
                  type: i[f].processVariableType
                };
                break
              }
          v || (v = {
            id: I,
            name: "path variable " + (u + 1),
            type: "string"
          }), l.push(v)
        }
      r.urlVariableValues = l
    }
    if (o && o.length > 0) {
      for (var u = 0; o.length > u; u++) o[u].jsonPropertyValue && o[u].jsonPropertyValue.length > 0 ? d.push({
        id: o[u].jsonPropertyName,
        name: o[u].jsonPropertyName,
        type: o[u].jsonPropertyType,
        value: o[u].jsonPropertyValue
      }) : o[u].jsonPropertyValueFormField ? d.push({
        id: o[u].jsonPropertyValueFormField.id,
        name: o[u].jsonPropertyName,
        type: o[u].jsonPropertyType
      }) : o[u].jsonPropertyValueRestResponseField && d.push({
        id: o[u].jsonPropertyValueRestResponseField.id,
        name: o[u].jsonPropertyName,
        type: o[u].jsonPropertyType
      });
      r.requestVariableValues = d
    }
    if (n && n.length > 0) {
      for (var u = 0; n.length > u; u++) {
        var S = void 0,
          O = n[u].value;
        if (0 == O.indexOf("$")) {
          if (O = O.replace(/[{}]/g, ""), O = O.substring(1), t && t.length > 0) e: for (var f = 0; t.length > f; f++)
            if (O === t[f].id) {
              S = {
                id: t[f].id,
                name: n[u].name,
                type: t[f].type
              };
              break e
            }
          if (!S && i && i.length > 0) e: for (var f = 0; i.length > f; f++)
            if (O === i[f].processVariableName) {
              S = {
                id: i[f].processVariableName,
                name: n[u].name,
                type: i[f].processVariableType
              };
              break e
            }
          S || (S = {
            id: O,
            name: n[u].name,
            type: "string"
          })
        }
        S || (S = {
          id: n[u].name,
          name: n[u].name,
          type: "string",
          value: n[u].value
        }), c.push(S)
      }
      r.requestHeaderVariableValues = c
    }
    return r
  }, this.getFullEndpointURL = function(e, t) {
    var i = "";
    return e && (i = o(e.protocol, e.host, e.port, e.path)), t && (i = "?" != t.charAt(0) && "&" != t.charAt(0) ? "/" === i.charAt(i.length - 1) && "/" === t.charAt(0) ? i.concat(t.substr(1)) : "" != i && "/" !== i.charAt(i.length - 1) && "/" !== t.charAt(0) ? i.concat("/" + t) : i.concat(t) : i.concat(t)), i
  }, this.getAllEndpointConfigurations = function() {
    return i({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/admin/endpoints"
    })
  }, this.getEndpointLabel = function(e, t, i, n, r) {
    var s = " (" + o(t, i, n, r) + ")";
    return s = s.toLowerCase(), e + s
  }, this.getVisibleTestDataFields = function(e) {
    var t, i = {
      urlVariableValues: [],
      requestVariableValues: []
    };
    return e && e.urlVariableValues && (i.urlVariableValues = e.urlVariableValues, t = {}, i.urlVariableValues.forEach(function(e) {
      t[e.id] = e
    })), e && e.requestVariableValues && e.requestVariableValues.length > 0 && e.requestVariableValues.forEach(function(e) {
      t && void 0 !== t[e.id] || i.requestVariableValues.push(e)
    }), i
  };
  var o = function(e, t, i, o) {
      if (!e) return "";
      var n = e.toLowerCase() + "://" + t;
      return n = i && 80 != i && 443 != i ? n.concat(":" + i) : n, o && (n = "/" === o.charAt(0) ? n.concat(o) : n.concat("/" + o)), n
    },
    n = function(e) {
      if (e && e.length > 0)
        for (var t = 0; e.length > t; t++) e[t].$$hashKey && delete e[t].$$hashKey;
      return e
    },
    r = function(e, t, o, n, r, s) {
      if (e && (t || "" !== o)) {
        delete Array.prototype.toJSON;
        var a = {
          httpMethod: e,
          restUrl: o,
          urlValues: n,
          requestValues: r,
          requestHeaderValues: s
        };
        return t && (a.endpointConfigurationId = t.id), i({
          method: "POST",
          url: ACTIVITI.CONFIG.contextRoot + "/app/rest/editor/endpoint-check",
          data: a
        })
      }
    },
    s = function(e) {
      for (var t, i = /[?&]([^=#]+)=([^&#]*)/g, o = e, n = []; t = i.exec(o);) n.push({
        paramName: t[1],
        paramValue: t[2]
      });
      return n
    },
    a = function(e) {
      for (var t, i = /\/\${(.*?)}/g, o = e, n = []; t = i.exec(o);) n.push(t[1]);
      return n
    }
}]), angular.module("activitiModeler").service("ProcessScopeService", ["$rootScope", "$http", "$location", "$q", "$translate", "editorCache", function(e, t, i, o, n, r) {
  function s() {
    B = [], $ = null, G = null
  }

  function a() {
    U = null, H = null, j = {
      responseVariables: [],
      executionVariables: [],
      metadataVariables: [],
      customStencilVariables: [],
      forms: [],
      formFields: [],
      formFieldVariables: []
    }, r.remove(EDITOR_CACHE.REST_RESULT_VARIABLES_KEY), r.remove(EDITOR_CACHE.EXECUTION_VARIABLES_KEY), r.remove(EDITOR_CACHE.METADATA_VARIABLES_KEY), r.remove(EDITOR_CACHE.CUSTOM_STENCIL_VARIABLES_KEY), r.remove(EDITOR_CACHE.FORM_FIELDS_KEY), r.remove(EDITOR_CACHE.FORM_FIELD_VARIABLES_KEY)
  }

  function l(e) {
    for (var t in e.responseVariables) Array.prototype.push.apply(j.responseVariables, e.responseVariables[t]);
    for (var t in e.executionVariables) Array.prototype.push.apply(j.executionVariables, e.executionVariables[t]);
    for (var t in e.metadataVariables) Array.prototype.push.apply(j.metadataVariables, e.metadataVariables[t]);
    for (var t in e.customStencilVariables) Array.prototype.push.apply(j.customStencilVariables, e.customStencilVariables[t]);
    if (e.forms) {
      Array.prototype.push.apply(j.forms, e.forms);
      for (var i = 0; e.forms.length > i; i++) Array.prototype.push.apply(j.formFields, e.forms[i].fields), Array.prototype.push.apply(j.formFieldVariables, e.forms[i].fieldVariables)
    }
  }

  function d(e) {
    U = e.activityIds.map(function(e) {
      return {
        id: e,
        resourceId: e
      }
    });
    for (var t in e.responseVariables) h(t, e.responseVariables[t]);
    for (var t in e.executionVariables) m(t, e.executionVariables[t]);
    for (var t in e.metadataVariables) f(t, e.metadataVariables[t]);
    for (var t in e.customStencilVariables) g(t, e.customStencilVariables[t]);
    if (e.forms)
      for (var i, o = 0; e.forms.length > o; o++) {
        i = e.forms[o];
        for (var t, n = {
          id: i.id,
          name: i.name,
          description: i.description,
          outcomes: i.outcomes,
          fields: i.fields || []
        }, r = {
          id: i.id,
          name: i.name,
          description: i.description,
          outcomes: i.outcomes,
          fields: i.fieldVariables || []
        }, s = 0; e.activityIdsByFormIdMap[i.id].length > s; s++) t = e.activityIdsByFormIdMap[i.id][s], w(t, n), L(t, r)
      }
  }

  function c(e, i) {
    var o = {},
      n = [].concat(B ? B : []);
    null != $ && (n = n.concat({
      processModelId: $,
      processActivityId: null
    }), e && (o.overriddenModel = JSON.stringify(e))), o.identifiers = n, delete Array.prototype.toJSON, t({
      method: "POST",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/process-scopes",
      data: o
    }).success(function(e) {
      H = e, H.length > 0 && d(H[H.length - 1]);
      for (var t = 0; H.length - 1 > t; t++) $ !== H[t].modelId && l(H[t]);
      i && i.success && i.success(H, !0)
    }).error(function(e, t) {
      i && i.failure && i.failure(e, !1, t)
    })
  }

  function p(e, t, i, o) {
    for (var n = e, r = 0; t.length > r; r++) {
      if (n += 0 == r && -1 == e.indexOf("?") ? "?" : "&", !t[r].hasOwnProperty("processModelId") || !t[r].hasOwnProperty("processActivityId")) throw Error("Invalid process identifiers present in the ProcessScopeService");
      n += i + (r + 1) + "=" + encodeURIComponent(t[r].processModelId), n += "&", n += o + (r + 1) + "=" + encodeURIComponent(t[r].processActivityId)
    }
    return n
  }

  function u() {
    return [].concat(B ? B : [])
  }

  function h(e, t) {
    e && t ? O(e, t) : e && !t && T(e)
  }

  function m(e, t) {
    e && t ? R(e, t) : e && !t && b(e)
  }

  function f(e, t) {
    e && t ? E(e, t) : e && !t && C(e)
  }

  function g(e, t) {
    e && t ? y(e, t) : e && !t && N(e)
  }

  function v(e, t) {
    if (e) {
      for (var i = 0; e.length > i; i++)
        if (-1 != H[H.length - 1].activityIdsWithExcludedSubProcess.indexOf(e[i].resourceId || e[i].id)) {
          e = U, t = null;
          break
        }
    } else e = U;
    return {
      steps: e,
      stepId: t
    }
  }

  function I(e, t, i) {
    var o = v(e, t);
    e = o.steps, t = o.stepId;
    var n = [];
    if (Array.prototype.push.apply(n, D("__startform")), Array.prototype.push.apply(n, F("__root__process__")), e && e.length > 0)
      for (var r = 0; e.length > r; r++) {
        var s;
        if (s = e[r].resourceId ? e[r].resourceId : e[r].id, s == t) break;
        Array.prototype.push.apply(n, A(s)), Array.prototype.push.apply(n, F(s)), Array.prototype.push.apply(n, D(s)), Array.prototype.push.apply(n, P(s))
      }
    if (i && i.length > 0) {
      for (var a = [], r = 0; n.length > r; r++) i.indexOf(n[r].processVariableType) > -1 && a.push(n[r]);
      n = a
    }
    Array.prototype.push.apply(n, j.responseVariables), Array.prototype.push.apply(n, j.executionVariables), Array.prototype.push.apply(n, j.metadataVariables), Array.prototype.push.apply(n, j.customStencilVariables);
    var l = [],
      d = [];
    return n.forEach(function(e) {
      void 0 !== e.processVariableName && null !== e.processVariableName && 0 > l.indexOf(e.processVariableName) && (l.push(e.processVariableName), d.push(e))
    }), d.sort(function(e, t) {
      return void 0 !== e.processVariableName && null !== e.processVariableName ? e.processVariableName.toLowerCase() > t.processVariableName.toLowerCase() ? 1 : -1 : void 0
    }), d
  }

  function S(e, t) {
    var i = v(e, t);
    e = i.steps, t = i.stepId;
    var o = [];
    if (Array.prototype.push.apply(o, A("__startform")), e && e.length > 0)
      for (var n = 0; e.length > n; n++) {
        var r;
        if (r = e[n].resourceId ? e[n].resourceId : e[n].id, r == t) break;
        Array.prototype.push.apply(o, A(r))
      }
    Array.prototype.push.apply(o, j.responseVariables);
    var s = [],
      a = [];
    return o.forEach(function(e) {
      0 > s.indexOf(e.processVariableName) && (s.push(e.processVariableName), a.push(e))
    }), a.sort(function(e, t) {
      return e.processVariableName.toLowerCase() > t.processVariableName.toLowerCase() ? 1 : -1
    }), a
  }

  function O(e, t) {
    if (e && t) {
      var i = r.get(EDITOR_CACHE.REST_RESULT_VARIABLES_KEY);
      i ? i[e] = t : (i = {}, i[e] = t), r.put(EDITOR_CACHE.REST_RESULT_VARIABLES_KEY, i)
    }
  }

  function R(e, t) {
    if (e && t) {
      var i = r.get(EDITOR_CACHE.EXECUTION_VARIABLES_KEY);
      i ? i[e] = t : (i = {}, i[e] = t), r.put(EDITOR_CACHE.EXECUTION_VARIABLES_KEY, i)
    }
  }

  function E(e, t) {
    if (e && t) {
      var i = r.get(EDITOR_CACHE.METADATA_VARIABLES_KEY);
      i ? i[e] = t : (i = {}, i[e] = t), r.put(EDITOR_CACHE.METADATA_VARIABLES_KEY, i)
    }
  }

  function y(e, t) {
    if (e && t) {
      var i = r.get(EDITOR_CACHE.CUSTOM_STENCIL_VARIABLES_KEY);
      i || (i = {}), i[e] = t, r.put(EDITOR_CACHE.CUSTOM_STENCIL_VARIABLES_KEY, i)
    }
  }

  function T(e) {
    if (e) {
      var t = r.get(EDITOR_CACHE.REST_RESULT_VARIABLES_KEY);
      t[e] = void 0
    }
  }

  function b(e) {
    if (e) {
      var t = r.get(EDITOR_CACHE.EXECUTION_VARIABLES_KEY);
      t[e] = void 0
    }
  }

  function C(e) {
    if (e) {
      var t = r.get(EDITOR_CACHE.METADATA_VARIABLES_KEY);
      t[e] = void 0
    }
  }

  function N(e) {
    if (e) {
      var t = r.get(EDITOR_CACHE.CUSTOM_STENCIL_VARIABLES_KEY);
      t[e] = void 0
    }
  }

  function A(e) {
    var t = [];
    if (e) {
      var i = r.get(EDITOR_CACHE.REST_RESULT_VARIABLES_KEY);
      i && i[e] && (t = i[e])
    }
    return t
  }

  function F(e) {
    var t = [];
    if (e) {
      var i = r.get(EDITOR_CACHE.EXECUTION_VARIABLES_KEY);
      i && i[e] && (t = i[e])
    }
    return t
  }

  function D(e) {
    var t = [];
    if (e) {
      var i = r.get(EDITOR_CACHE.METADATA_VARIABLES_KEY);
      i && i[e] && (t = i[e])
    }
    return t
  }

  function P(e) {
    var t = [];
    if (e) {
      var i = r.get(EDITOR_CACHE.CUSTOM_STENCIL_VARIABLES_KEY);
      i && i[e] && (t = i[e])
    }
    return t
  }

  function M(e, t, i) {
    var o = v(e, t);
    e = o.steps, t = o.stepId;
    var n = [];
    if ("__startform" !== t && (Array.prototype.push.apply(n, Y("__startform")), e && e.length > 0))
      for (var r = 0; e.length > r; r++) {
        var s;
        if (s = e[r].resourceId ? e[r].resourceId : e[r].id, s == t) break;
        Array.prototype.push.apply(n, Y(s))
      }
    if (i && i.length > 0) {
      for (var a = [], r = 0; n.length > r; r++) i.indexOf(n[r].type) > -1 && a.push(n[r]);
      n = a
    }
    Array.prototype.push.apply(n, j.formFieldVariables);
    var l = [],
      d = [];
    return n.forEach(function(e) {
      e && e.id && 0 > l.indexOf(e.id) && (l.push(e.id), d.push(e))
    }), d.sort(function(e, t) {
      return e.name.toLowerCase() > t.name.toLowerCase() ? 1 : -1
    }), d
  }

  function _(e, t) {
    var i = v(e, t);
    e = i.steps, t = i.stepId;
    var o = [];
    if ("__startform" !== t && (o = V("__startform"), e && e.length > 0))
      for (var n = 0; e.length > n; n++) {
        var r;
        if (r = e[n].resourceId ? e[n].resourceId : e[n].id, r == t) break;
        Array.prototype.push.apply(o, V(r))
      }
    Array.prototype.push.apply(o, j.forms);
    var s = [],
      a = [];
    return o.forEach(function(e) {
      e && e.id && 0 > s.indexOf(e.id) && (s.push(e.id), a.push(e))
    }), a.sort(function(e, t) {
      return e.name.toLowerCase() > t.name.toLowerCase() ? 1 : -1
    }), a
  }

  function x(e) {
    var t = [];
    return e && (t = X(e)), t.sort(function(e, t) {
      return e.name.toLowerCase() > t.name.toLowerCase() ? 1 : -1
    }), t
  }

  function w(t, i) {
    if (t && i) {
      var o = r.get(EDITOR_CACHE.FORM_FIELDS_KEY);
      if (o) {
        var n = o[t];
        n ? n.push(i) : o[t] = [i]
      } else o = {}, o[t] = [i];
      r.put(EDITOR_CACHE.FORM_FIELDS_KEY, o), e.$broadcast("form-cache-changed", {
        stepId: t
      })
    }
  }

  function L(t, i) {
    if (t && i) {
      var o = r.get(EDITOR_CACHE.FORM_FIELD_VARIABLES_KEY);
      if (o) {
        var n = o[t];
        n ? n.push(i) : o[t] = [i]
      } else o = {}, o[t] = [i];
      r.put(EDITOR_CACHE.FORM_FIELD_VARIABLES_KEY, o), e.$broadcast("form-cache-changed", {
        stepId: t
      })
    }
  }

  function Y(e) {
    var t = [];
    if (e) {
      var i = r.get(EDITOR_CACHE.FORM_FIELD_VARIABLES_KEY);
      if (i) {
        var o = i[e];
        if (o)
          for (var n = 0; o.length > n; n++) Array.prototype.push.apply(t, o[n].fields || [])
      }
    }
    return t
  }

  function k(e) {
    var t = [];
    if (e) {
      var i = r.get(EDITOR_CACHE.FORM_FIELDS_KEY);
      if (i)
        for (var o in i) {
          var n = i[o];
          if (n)
            for (var s = 0; n.length > s; s++)
              if (n[s] && n[s].id == e) return n[s].fields || []
        }
      if (j.forms)
        for (var s = 0; j.forms.length > s; s++)
          if (j.forms[s].id == e) return j.forms[s].fields
    }
    return t
  }

  function V(e) {
    var t;
    if (e) {
      var i = r.get(EDITOR_CACHE.FORM_FIELDS_KEY);
      i && i[e] && (t = i[e])
    }
    return t || []
  }

  function X(e) {
    if (e) {
      var t = r.get(EDITOR_CACHE.FORM_FIELDS_KEY);
      if (t)
        for (var i in t) {
          var o = t[i];
          if (o)
            for (var n = 0; o.length > n; n++)
              if (o[n] && o[n].id == e) return o[n].outcomes || []
        }
      for (var n = 0; j.forms.length > n; n++)
        if (j.forms[n].id == e) return j.forms[n].outcomes
    }
    return []
  }
  var B, $, G, U, H, j = {},
    z = "processModelId",
    K = "processActivityId";
  this.init = function(t, o, r, l) {
    a(), s(), G = o || {}, r = r || z, l = l || K, B = [];
    for (var d, p, u = i.search(), h = 1; !0 && (d = r + h, p = l + h, u.hasOwnProperty(d) && u.hasOwnProperty(p)); h++) try {
      var m = parseInt(u[d]);
      B.push({
        processModelId: m,
        processActivityId: u[p]
      }), m != u[d] && e.addAlertPromise(n("GENERAL.ERROR.INVALID-URL-MODEL-ID", {
        param: d
      }), "error")
    } catch (f) {
      e.addAlertPromise(n("GENERAL.ERROR.INVALID-URL-MODEL-ID", {
        param: d
      }), "error")
    }
    void 0 !== t && null !== t && ($ = parseInt(t)), c(null, G)
  }, this.getParentIdentifiers = u, this.getIdentifiers = function() {
    var e = u();
    return null != $ && (e = e.concat({
      processModelId: $,
      processActivityId: null
    })), e
  }, this.refresh = function() {
    var e = null;
    G.model && (e = G.model()), a(), c(e, null)
  }, this.navigateBack = function(e, t, o) {
    var n = e;
    if (B && B.length > 0 && H) {
      var r = H[B.length - 1];
      if (!r) throw Error("Correct usage for ProcessScopeService is to first init service and then navigate back. The current state suggests that didn't happen.");
      t = t || z, o = o || K;
      var s;
      0 == r.processModelType ? s = "/editor/" + encodeURIComponent(r.modelId) : 1 == r.processModelType && (s = "/kickstart-editor/" + encodeURIComponent(r.modelId)), n = p(s, B.slice(0, B.length - 1), t, o)
    }
    i.url(n)
  }, this.navigateForward = function(e, t, o, n) {
    if (null == $) throw Error("Correct usage for ProcessScopeService includes already having setting the current process model (when setting the identifiers) before navigating forward.");
    if (!t) throw Error("Correct usage for ProcessScopeService includes supplying the current activity id when navigating forward, otherwise the scope would be lost.");
    o = o || z, n = n || K;
    var r = p(e, B.concat([{
      processModelId: $,
      processActivityId: t
    }]), o, n);
    i.url(r)
  }, this.updateResponseVariablesCache = h, this.updateExecutionVariablesCache = function(e, t) {
    if (t) {
      t.constructor == String && (t = JSON.parse(t));
      for (var i = [], o = 0; t.length > o; o++) {
        var n = t[o];
        Array.prototype.push.apply(i, [{
          processVariableName: n.variableName,
          processVariableType: n.variableType
        }])
      }
      m(e, i)
    } else m(e, t)
  }, this.updateMetadataVariablesCache = f, this.updateCustomStencilVariablesCache = g, this.getVariablesForStep = I, this.getVariables = function(e) {
    return I(null, null, e)
  }, this.getResponseVariablesForStep = S, this.getFormFieldsForStep = M, this.getFormFields = function(e) {
    return M(null, null, e)
  }, this.getFormsForStep = _, this.getFormOutcomesForForm = x, this.getFormFieldsForForm = function(e) {
    var t = [];
    return e && (t = k(e)), t
  }
}]), angular.module("activitiModeler").controller("AppDefinitionBuilderController", ["$rootScope", "$scope", "$translate", "$http", "$location", "$routeParams", "$modal", "$popover", "$timeout", function(e, t, i, o, n, r, s, a) {
  e.setMainPageById("apps"), t.model = {
    latestModelId: r.modelId,
    currentlySharedUserIds: [],
    currentlySharedGroupIds: []
  }, t.loadApp = function() {
    o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/app-definitions/" + r.modelId
    }).success(function(i) {
      if (e.currentAppDefinition = i, e.currentAppDefinition.definition.theme || (e.currentAppDefinition.definition.theme = "theme-1"), e.currentAppDefinition.definition.icon || (e.currentAppDefinition.definition.icon = "glyphicon-asterisk"), e.currentAppDefinition.definition.publishIdentityInfo && e.currentAppDefinition.definition.publishIdentityInfo.length > 0)
        for (var o = 0; e.currentAppDefinition.definition.publishIdentityInfo.length > o; o++) {
          var n = e.currentAppDefinition.definition.publishIdentityInfo[o];
          null !== n.person && void 0 !== n.person ? t.model.currentlySharedUserIds.push(n.person.id) : null !== n.group && void 0 !== n.group && t.model.currentlySharedGroupIds.push(n.group.id)
        }
    }).error(function() {
      console.log("Error loading model")
    })
  }, t.$on("$destroy", function() {
    e.currentAppDefinition = void 0
  }), t.editIncludedModels = function() {
    _internalCreateModal({
      template: "views/popup/app-definition-models-included.html?version=" + Date.now(),
      scope: t
    }, s, t)
  }, t.availableIcons = ["glyphicon-asterisk", "glyphicon-plus", "glyphicon-euro", "glyphicon-cloud", "glyphicon-envelope", "glyphicon-pencil", "glyphicon-glass", "glyphicon-music", "glyphicon-search", "glyphicon-heart", "glyphicon-star", "glyphicon-star-empty", "glyphicon-user", "glyphicon-film", "glyphicon-th-large", "glyphicon-th", "glyphicon-th-list", "glyphicon-ok", "glyphicon-remove", "glyphicon-zoom-in", "glyphicon-zoom-out", "glyphicon-off", "glyphicon-signal", "glyphicon-cog", "glyphicon-trash", "glyphicon-home", "glyphicon-file", "glyphicon-time", "glyphicon-road", "glyphicon-download-alt", "glyphicon-download", "glyphicon-upload", "glyphicon-inbox", "glyphicon-play-circle", "glyphicon-repeat", "glyphicon-refresh", "glyphicon-list-alt", "glyphicon-lock", "glyphicon-flag", "glyphicon-headphones", "glyphicon-volume-up", "glyphicon-tag", "glyphicon-tags", "glyphicon-book", "glyphicon-bookmark", "glyphicon-print", "glyphicon-camera", "glyphicon-list", "glyphicon-facetime-video", "glyphicon-picture", "glyphicon-map-marker", "glyphicon-adjust", "glyphicon-tint", "glyphicon-edit", "glyphicon-share", "glyphicon-check", "glyphicon-move", "glyphicon-play", "glyphicon-eject", "glyphicon-plus-sign", "glyphicon-minus-sign", "glyphicon-remove-sign", "glyphicon-ok-sign", "glyphicon-question-sign", "glyphicon-info-sign", "glyphicon-screenshot", "glyphicon-remove-circle", "glyphicon-ok-circle", "glyphicon-ban-circle", "glyphicon-share-alt", "glyphicon-exclamation-sign", "glyphicon-gift", "glyphicon-leaf", "glyphicon-fire", "glyphicon-eye-open", "glyphicon-eye-close", "glyphicon-warning-sign", "glyphicon-plane", "glyphicon-calendar", "glyphicon-random", "glyphicon-comment", "glyphicon-magnet", "glyphicon-retweet", "glyphicon-shopping-cart", "glyphicon-folder-close", "glyphicon-folder-open", "glyphicon-hdd", "glyphicon-bullhorn", "glyphicon-bell", "glyphicon-certificate", "glyphicon-thumbs-up", "glyphicon-thumbs-down", "glyphicon-hand-left", "glyphicon-globe", "glyphicon-wrench", "glyphicon-tasks", "glyphicon-filter", "glyphicon-briefcase", "glyphicon-dashboard", "glyphicon-paperclip", "glyphicon-heart-empty", "glyphicon-link", "glyphicon-phone", "glyphicon-pushpin", "glyphicon-usd", "glyphicon-gbp", "glyphicon-sort", "glyphicon-flash", "glyphicon-record", "glyphicon-save", "glyphicon-open", "glyphicon-saved", "glyphicon-send", "glyphicon-floppy-disk", "glyphicon-credit-card", "glyphicon-cutlery", "glyphicon-earphone", "glyphicon-phone-alt", "glyphicon-tower", "glyphicon-stats", "glyphicon-cloud-download", "glyphicon-cloud-upload", "glyphicon-tree-conifer", "glyphicon-tree-deciduous"], t.availableThemes = ["theme-1", "theme-2", "theme-3", "theme-4", "theme-5", "theme-6", "theme-7", "theme-8", "theme-9", "theme-10"], t.changeIcon = function(e) {
    if (!t.changeIconState) {
      var i = {};
      t.changeIconState = i, i.popover = a(angular.element(e.currentTarget), {
        template: "views/popover/select-app-icon.html",
        placement: "bottom-left",
        show: !0,
        scope: t
      });
      var o = function() {
        i.popover.destroy(), delete t.changeIconState
      };
      i.popover.$scope.$on("tooltip.hide", o), t.$on("$destroy", o)
    }
  }, t.selectIcon = function(t) {
    e.currentAppDefinition.definition.icon = t
  }, t.changeTheme = function(e) {
    if (!t.changeThemeState) {
      var i = {};
      t.changeThemeState = i, i.popover = a(angular.element(e.currentTarget), {
        template: "views/popover/select-app-theme.html",
        placement: "bottom-left",
        show: !0,
        scope: t
      });
      var o = function() {
        i.popover.destroy(), delete t.changeThemeState
      };
      i.popover.$scope.$on("tooltip.hide", o), t.$on("$destroy", o)
    }
  }, t.selectTheme = function(t) {
    e.currentAppDefinition.definition.theme = t
  }, t.addPublishUser = function(i) {
    var o = {
      person: i,
      type: "user"
    };
    if (e.currentAppDefinition.definition.publishIdentityInfo) {
      for (var n = 0; e.currentAppDefinition.definition.publishIdentityInfo.length > n; n++) {
        var r = e.currentAppDefinition.definition.publishIdentityInfo[n];
        if ("user" === r.type && r.person && r.person.id == i.id) return
      }
      e.currentAppDefinition.definition.publishIdentityInfo.splice(0, 0, o)
    } else e.currentAppDefinition.definition.publishIdentityInfo = [o];
    t.model.currentlySharedUserIds.push(i.id)
  }, t.addPublishGroup = function(i) {
    var o = {
      group: i,
      type: "group"
    };
    if (e.currentAppDefinition.definition.publishIdentityInfo) {
      for (var n = 0; e.currentAppDefinition.definition.publishIdentityInfo.length > n; n++) {
        var r = e.currentAppDefinition.definition.publishIdentityInfo[n];
        if ("group" === r.type && r.group && r.group.id == i.id) return
      }
      e.currentAppDefinition.definition.publishIdentityInfo.splice(0, 0, o)
    } else e.currentAppDefinition.definition.publishIdentityInfo = [o];
    t.model.currentlySharedGroupIds.push(i.id)
  }, t.removePublishIdentity = function(i) {
    var o = e.currentAppDefinition.definition.publishIdentityInfo;
    if (i.person) {
      var n = t.model.currentlySharedUserIds.indexOf(i.person.id);
      n >= 0 && t.model.currentlySharedUserIds.splice(n, 1)
    } else if (i.group) {
      var r = t.model.currentlySharedGroupIds.indexOf(i.group.id);
      r >= 0 && t.model.currentlySharedGroupIds.splice(r, 1)
    }
    for (var s = 0; o.length > s; s++)
      if (o[s] == i) {
        o.splice(s, 1);
        break
      }
  }, t.loadApp()
}]), angular.module("activitiModeler").controller("ModelsIncludedPopupCtrl", ["$rootScope", "$scope", "$translate", "$http", "$timeout", "$location", function(e, t, i, o) {
  if (t.popup = {
    loading: !1,
    selectedModels: []
  }, e.currentAppDefinition.definition.models)
    for (var n = 0; e.currentAppDefinition.definition.models.length > n; n++) t.popup.selectedModels.push(e.currentAppDefinition.definition.models[n].id);
  t.loadModels = function() {
    t.popup.loading = !0, o({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models-for-app-definition"
    }).success(function(e) {
      t.popup.models = e, t.popup.loading = !1
    }).error(function() {
      t.popup.loading = !1
    })
  }, t.selectModel = function(i) {
    var o = t.popup.selectedModels.indexOf(i.id);
    o >= 0 ? t.popup.selectedModels.splice(o, 1) : t.popup.selectedModels.push(i.id);
    for (var n = [], r = 0; t.popup.models.data.length > r; r++)
      if (t.popup.selectedModels.indexOf(t.popup.models.data[r].id) >= 0) {
        var s = t.popup.models.data[r],
          a = {
            id: s.id,
            name: s.name,
            version: s.version,
            modelType: s.modelType,
            description: s.description,
            stencilSetId: s.stencilSet,
            createdByFullName: s.createdByFullName,
            createdBy: s.createdBy,
            lastUpdatedByFullName: s.lastUpdatedByFullName,
            lastUpdatedBy: s.lastUpdatedBy,
            lastUpdated: s.lastUpdated
          };
        n.push(a)
      }
    e.currentAppDefinition.definition.models = n
  }, t.isModelSelected = function(e) {
    return t.popup.selectedModels.indexOf(e.id) >= 0 ? !0 : !1
  }, t.close = function() {
    t.$hide()
  }, t.loadModels()
}]);
var APP_DEFINITION_TOOLBAR = {
  ACTIONS: {
    saveModel: function(e) {
      _internalCreateModal({
        backdrop: !0,
        keyboard: !0,
        template: "views/popup/app-definition-save-model.html?version=" + Date.now(),
        scope: e.$scope
      }, e.$modal, e.$scope)
    },
    help: function() {},
    feedback: function() {},
    closeEditor: function(e) {
      e.$location.path("/apps")
    }
  }
};
angular.module("activitiModeler").controller("SaveAppDefinitionCtrl", ["$rootScope", "$scope", "$http", "$route", "$location", "$translate", function(e, t, i, o, n, r) {
  var s = "";
  e.currentAppDefinition.description && (s = e.currentAppDefinition.description);
  var a = {
    name: e.currentAppDefinition.name,
    description: s,
    publish: !1
  };
  t.saveDialog = a, t.status = {
    loading: !1
  }, t.cancel = function() {
    t.$hide()
  }, t.saveAndClose = function(e) {
    t.save(function() {
      n.path("/apps")
    }, e)
  }, t.saveAndContinue = function(e) {
    t.save(void 0, e)
  }, t.save = function(o, n) {
    if (t.saveDialog.name && 0 != t.saveDialog.name.length) {
      t.status.loading = !0;
      var s = {
        appDefinition: e.currentAppDefinition,
        publish: t.saveDialog.publish
      };
      s.appDefinition.name = t.saveDialog.name, t.saveDialog.description && t.saveDialog.description.length > 0 && (s.appDefinition.description = t.saveDialog.description), void 0 !== n && null !== n && n === !0 && (s.force = !0), delete Array.prototype.toJSON, delete t.conflict, i({
        method: "PUT",
        url: ACTIVITI.CONFIG.contextRoot + "/app/rest/app-definitions/" + e.currentAppDefinition.id,
        data: s
      }).success(function(i) {
        i.error ? (t.status.loading = !1, 1 == i.errorType ? t.error = {
          hasCustomStencilItem: !0,
          modelName: i.errorDescription
        } : 2 == i.errorType && (t.error = {
          hasValidationErrors: !0,
          modelName: i.errorDescription
        })) : (t.$hide(), e.addAlert(r.instant("APP.POPUP.SAVE-APP-SAVE-SUCCESS", "info")), o && o())
      }).error(function(i, o) {
        409 === o && i && "app.publish.procdef.key.conflict" === i.messageKey ? t.conflict = {
          type: "conflictingProcDefKey",
          data: i.customData
        } : 409 === o && i && "app.publish.dectable.key.conflict" === i.messageKey ? t.conflict = {
          type: "conflictingDecTableKey",
          data: i.customData
        } : 409 === o && i && "app.publish.procdef.duplicate.keys" === i.messageKey ? t.conflict = {
          type: "duplicateProcDefKeys",
          data: i.customData
        } : 409 === o && i && "app.publish.dectable.duplicate.keys" === i.messageKey ? t.conflict = {
          type: "duplicateDecTableKeys",
          data: i.customData
        } : 409 === o && i && "app.publish.process.model.already.used" === i.messageKey ? t.conflict = {
          type: "processModelAlreadyUsed",
          data: i.customData
        } : (t.$hide(), e.addAlertPromise(r("APP.POPUP.SAVE-APP-SAVE-FAIL"), "error"))
      })
    }
  }, t.isOkButtonDisabled = function() {
    return t.status.loading ? !1 : t.error && t.error.hasCustomStencilItem ? !1 : !0
  }, t.okClicked = function() {
    t.error && ("discardChanges" === t.error.conflictResolveAction ? (t.close(), o.reload()) : "overwrite" === t.error.conflictResolveAction || "newVersion" === t.error.conflictResolveAction ? t.save() : "saveAs" === t.error.conflictResolveAction && t.save(function() {
      e.ignoreChanges = !0, n.path("/apps")
    }))
  }
}]);
var APP_DEFINITION_TOOLBAR_CONFIG = {
  items: [{
    type: "button",
    title: "APP_DEFINITION_TOOLBAR.ACTION.SAVE",
    cssClass: "editor-icon editor-icon-save",
    action: "APP_DEFINITION_TOOLBAR.ACTIONS.saveModel"
  }],
  secondaryItems: [{
    type: "button",
    title: "Close",
    cssClass: "glyphicon glyphicon-remove",
    action: "APP_DEFINITION_TOOLBAR.ACTIONS.closeEditor"
  }]
};
angular.module("activitiModeler").controller("AppDefinitionToolbarController", ["$scope", "$http", "$modal", "$q", "$rootScope", "$translate", "$location", function(e, t, i, o, n, r, s) {
  var a = APP_DEFINITION_TOOLBAR_CONFIG.items;
  e.items = [];
  for (var l = 0; a.length > l; l++) e.items.push(a[l]);
  e.secondaryItems = APP_DEFINITION_TOOLBAR_CONFIG.secondaryItems;
  var d = function(e, t) {
    for (var i = Array.prototype.slice.call(arguments).splice(2), o = e.split("."), n = o.pop(), r = 0; o.length > r; r++) t = t[o[r]];
    return t[n].apply(this, i)
  };
  e.toolbarButtonClicked = function(s) {
    var a = e.items[s],
      l = {
        $scope: e,
        $rootScope: n,
        $http: t,
        $modal: i,
        $q: o,
        $translate: r
      };
    d(a.action, window, l)
  }, e.toolbarSecondaryButtonClicked = function(a) {
    var l = e.secondaryItems[a],
      c = {
        $scope: e,
        $rootScope: n,
        $http: t,
        $modal: i,
        $q: o,
        $translate: r,
        $location: s
      };
    d(l.action, window, c)
  }
}]);
var KISBPM = KISBPM || {};
KISBPM.eventBus = {
  EVENT_TYPE_EDITOR_READY: "event-type-editor-ready",
  EVENT_TYPE_SELECTION_CHANGE: "event-type-selection-change",
  EVENT_TYPE_TOOLBAR_BUTTON_CLICKED: "event-type-toolbar-button-clicked",
  EVENT_TYPE_ITEM_DROPPED: "event-type-item-dropped",
  EVENT_TYPE_PROPERTY_VALUE_CHANGED: "event-type-property-value-changed",
  EVENT_TYPE_DOUBLE_CLICK: "event-type-double-click",
  EVENT_TYPE_MOUSE_OUT: "event-type-mouse-out",
  EVENT_TYPE_MOUSE_OVER: "event-type-mouse-over",
  EVENT_TYPE_MODEL_SAVED: "event-type-model-saved",
  EVENT_TYPE_HIDE_SHAPE_BUTTONS: "event-type-hide-shape-buttons",
  EVENT_TYPE_SHOW_VALIDATION_POPUP: "event-type-show-validation-popup",
  EVENT_TYPE_NAVIGATE_TO_PROCESS: "event-type-navigate-to-process",
  listeners: {},
  editor: null,
  addListener: function(e, t, i) {
    return this.listeners[e] !== void 0 ? this.listeners[e].push({
      scope: i,
      callback: t
    }) : this.listeners[e] = [{
      scope: i,
      callback: t
    }], t
  },
  removeListener: function(e, t, i) {
    if (this.listeners[e] !== void 0) {
      for (var o = this.listeners[e].length, n = [], r = 0; o > r; r++) {
        var s = this.listeners[e][r];
        s.scope === i && s.callback === t || n.push(s)
      }
      this.listeners[e] = n
    }
  },
  hasListener: function(e, t, i) {
    if (this.listeners[e] !== void 0) {
      var o = this.listeners[e].length;
      if (void 0 === t && void 0 === i) return o > 0;
      for (var n = 0; o > n; n++) {
        var r = this.listeners[e][n];
        if (r.scope == i && r.callback == t) return !0
      }
    }
    return !1
  },
  dispatch: function(e, t) {
    if (this.listeners[e] !== void 0)
      for (var i = this.listeners[e].length, o = 0; i > o; o++) {
        var n = this.listeners[e][o];
        n && n.callback && n.callback.apply(n.scope, [t])
      }
  },
  dispatchOryxEvent: function(e, t) {
    KISBPM.eventBus.editor.handleEvents(e, t)
  }
}, angular.module("activitiModeler").controller("EditorController", ["$rootScope", "$scope", "$http", "$q", "$routeParams", "$timeout", "$location", "$translate", "$modal", "FormBuilderService", "ProcessScopeService", function(e, t, i, o, n, r, s, a, l, d, c) {
  function p() {
    var t;
    t = n.modelId ? KISBPM.URL.getModel(n.modelId) : KISBPM.URL.newModelInfo(), i({
      method: "GET",
      url: t
    }).success(function(t) {
      e.editor = new ORYX.Editor(t), e.modelData = angular.fromJson(t), e.editorFactory.resolve(), c.init(n.modelId, {
        model: function() {
          return e.editor.getJSON()
        }
      })
    }).error(function() {
      s.url("/processes/")
    })
  }

  function u() {
    var i = jQuery("#canvasSection");
    i.scroll(function() {
      var i = e.editor.selection,
        o = e.editor._subSelection;
      t.selectedElements = i, t.subSelectionElements = o, i && i.length > 0 && (e.selectedElementBeforeScrolling = i[0]), jQuery(".Oryx_button").each(function(e, i) {
        t.orginalOryxButtonStyle = i.style.display, i.style.display = "none"
      }), e.hideValidationIcons(!1), jQuery(".resizer_southeast").each(function(e, i) {
        t.orginalResizerSEStyle = i.style.display, i.style.display = "none"
      }), jQuery(".resizer_northwest").each(function(e, i) {
        t.orginalResizerNWStyle = i.style.display, i.style.display = "none"
      }), e.editor.handleEvents({
        type: ORYX.CONFIG.EVENT_CANVAS_SCROLL
      })
    }), i.scrollStopped(function() {
      function i(e) {
        e.style.display = jQuery(e).position().top > 0 ? "block" : "none"
      }
      e.editor.setSelection([]), e.editor.setSelection(t.selectedElements, t.subSelectionElements), t.selectedElements = void 0, t.subSelectionElements = void 0, jQuery(".Oryx_button").each(function(e, t) {
        i(t)
      }), e.showValidationIcons(), jQuery(".resizer_southeast").each(function(e, t) {
        i(t)
      }), jQuery(".resizer_northwest").each(function(e, t) {
        i(t)
      })
    })
  }
  e.editorFactory = o.defer(), e.forceSelectionRefresh = !1, e.ignoreChanges = !1, e.validationErrors = [], e.mappedObjects = {}, e.staticIncludeVersion = Date.now(), e.editorInitialized ? p() : (ORYX._loadPlugins(), p(), e.safeApply = function(e) {
    var t = this.$root.$$phase;
    "$apply" == t || "$digest" == t ? e && "function" == typeof e && e() : this.$apply(e)
  }, e.editorFactory.promise.then(function() {
    e.formItems = void 0, KISBPM.eventBus.editor = e.editor;
    var i = [{
      oryxType: ORYX.CONFIG.EVENT_SELECTION_CHANGED,
      kisBpmType: KISBPM.eventBus.EVENT_TYPE_SELECTION_CHANGE
    }, {
      oryxType: ORYX.CONFIG.EVENT_DBLCLICK,
      kisBpmType: KISBPM.eventBus.EVENT_TYPE_DOUBLE_CLICK
    }, {
      oryxType: ORYX.CONFIG.EVENT_MOUSEOUT,
      kisBpmType: KISBPM.eventBus.EVENT_TYPE_MOUSE_OUT
    }, {
      oryxType: ORYX.CONFIG.EVENT_MOUSEOVER,
      kisBpmType: KISBPM.eventBus.EVENT_TYPE_MOUSE_OVER
    }];
    i.forEach(function(t) {
      e.editor.registerOnEvent(t.oryxType, function(e) {
        KISBPM.eventBus.dispatch(t.kisBpmType, e)
      })
    }), e.editor.registerOnEvent(ORYX.CONFIG.EVENT_SHAPEREMOVED, function(e) {
      var t = document.getElementById(e.shape.resourceId + "-validate-button");
      t && (t.style.display = "none")
    }), KISBPM.eventBus.dispatch(KISBPM.eventBus.EVENT_TYPE_EDITOR_READY, {
      type: KISBPM.eventBus.EVENT_TYPE_EDITOR_READY
    }), ACTIVITI_EDITOR_TOUR.gettingStarted(t, a, o, !0)
  }), e.showValidationIcons = function() {
    if (e.validationErrors && e.validationErrors.length > 0) {
      for (var t = {}, i = {}, o = e.editor.getCanvas().getChildShapes(!0), n = 0; o.length > n; n++) t[o[n].resourceId] = o[n], o[n].properties["oryx-overrideid"] && o[n].properties["oryx-overrideid"].length > 0 && (i[o[n].properties["oryx-overrideid"]] = o[n]);
      for (var r = e.editor.getCanvas().getSvgContainer(), s = {}, n = 0; e.validationErrors.length > n; n++) {
        var a = e.validationErrors[n],
          l = null;
        if (l = t[a.id] ? t[a.id] : i[a.id], a.id) {
          if (!l) continue;
          a.warning ? s[l.getId()] || (s[l.getId()] = !1) : s[l.getId()] = !0
        } else a.warning ? s.ROOTSCOPE || (s.ROOTSCOPE = !1) : s.ROOTSCOPE = !0
      }
      for (var d = [], n = 0; e.validationErrors.length > n; n++) {
        var a = e.validationErrors[n],
          l = null;
        l = t[a.id] ? t[a.id] : i[a.id];
        var c, p, u, h = !1;
        if (a.id) {
          if (!l) continue;
          if (d.indexOf(l.getId()) >= 0) continue;
          d.push(l.getId());
          var m = "#FB9908";
          if (u = "editor-app/images/bpmn-warning.png", s[l.getId()] && (m = "#FF0000", u = "editor-app/images/bpmn-error.png"), "SequenceFlow" == l.getStencil().idWithoutNs()) {
            var f = r.ownerDocument.getElementById(l.getId() + "arrowhead");
            if (!f) continue;
            f.setAttributeNS(null, "stroke", m), f.setAttributeNS(null, "fill", m);
            var g = r.ownerDocument.getElementById(l.getId() + "_1");
            if (!g) continue;
            g.setAttributeNS(null, "stroke", m)
          } else {
            var v = r.ownerDocument.getElementById(l.getId() + "bg_frame");
            if (!v) continue;
            v.setAttributeNS(null, "stroke", m), v.setAttributeNS(null, "style", "stroke-width:2")
          }
          c = l.resourceId + "-validate-button", p = a.id, e.mappedObjects[p] = l
        } else {
          if (d.indexOf("ROOTSCOPE") >= 0) continue;
          d.push("ROOTSCOPE"), u = "editor-app/images/bpmn-warning.png", s.ROOTSCOPE && (u = "editor-app/images/bpmn-error.png"), c = "ROOT-process-definition-validate-button", p = "ROOT-process-definition", h = !0
        }
        var I = document.getElementById(c);
        if (I) I.style.display = "block", I.getElementsByTagName("img")[0].src = u;
        else {
          var S = p.replace(/(<([^>]+)>)/gi, "");
          jQuery("#canvasSection").append('<div class="ValidateButton" id="' + c + '" onclick="KISBPM.TOOLBAR.ACTIONS.showValidation(\'' + S + "'," + h + ')"><img src="' + u + '"/></div>'), I = document.getElementById(c)
        }
        if (a.id) {
          var O = l.node.getScreenCTM(),
            R = l.absoluteXY();
          O.e = O.a * R.x;
          var E = 0,
            y = jQuery("#canvasSection");
          if (y && y[0])
            for (var T = y[0].children, b = 0; T.length > b; b++)
              if (y[0].children[b].className && "ORYX_Editor" === y[0].children[b].className) {
                E = y[0].children[b].offsetLeft;
                break
              }
          var C = jQuery("#canvasSection").scrollLeft();
          O.e = O.e + E - C, O.f = O.d * R.y, O.f = O.f - jQuery("#canvasSection").scrollTop();
          var N = new ORYX.Core.Bounds(O.e, O.f, O.e + O.a * l.bounds.width(), O.f + O.d * l.bounds.height());
          O = N.upperLeft(), I.style.left = O.x + "px", I.style.top = O.y - 25 + "px", -5 > O.y - 25 && (I.style.display = "none")
        } else I.style.left = "5px", I.style.top = "5px"
      }
    }
  }, e.getCurrentId = function(t) {
    var i = e.mappedObjects[t];
    if (i) {
      var o = i.properties["oryx-overrideid"];
      o || (o = i.getId())
    } else o = t;
    return o
  }, e.hideValidationIcons = function(i) {
    if (e.validationErrors && e.validationErrors.length > 0) {
      for (var o = {}, n = {}, r = t.editor.getCanvas().getChildShapes(!0), s = 0; r.length > s; s++) o[r[s].resourceId] = r[s], r[s].properties["oryx-overrideid"] && r[s].properties["oryx-overrideid"].length > 0 && (n[r[s].properties["oryx-overrideid"]] = r[s]);
      for (var a = e.editor.getCanvas().getSvgContainer(), s = 0; e.validationErrors.length > s; s++) {
        var l = e.validationErrors[s],
          d = null;
        d = o[l.id] ? o[l.id] : n[l.id], d || e.mappedObjects[l.id] && (d = e.mappedObjects[l.id]);
        var c;
        if (l.id) {
          if (!d) continue;
          if (i)
            if ("SequenceFlow" == d.getStencil().idWithoutNs()) {
              var p = a.ownerDocument.getElementById(d.getId() + "arrowhead");
              if (!p) continue;
              p.setAttributeNS(null, "stroke", "#585858"), p.setAttributeNS(null, "fill", "#585858");
              var u = a.ownerDocument.getElementById(d.getId() + "_1");
              if (!u) continue;
              u.setAttributeNS(null, "stroke", "#585858")
            } else {
              var h = a.ownerDocument.getElementById(d.getId() + "bg_frame");
              if (!h) continue;
              h.setAttributeNS(null, "stroke", "#bbbbbb"), h.setAttributeNS(null, "style", "stroke-width:1")
            }
          c = d.resourceId + "-validate-button"
        } else c = "ROOT-process-definition-validate-button";
        var m = document.getElementById(c);
        m && (m.style.display = "none")
      }
    }
  }, jQuery(window).resize(function() {
    var i = jQuery("#editor-header").offset(),
      o = jQuery("#propertySection").height(),
      n = jQuery("#canvasSection"),
      r = jQuery("#main-header");
    if (void 0 != i && null !== i && void 0 !== o && null !== o && void 0 !== n && null !== n && null !== r) {
      if (e.editor) {
        var s = e.editor.selection,
          a = e.editor._subSelection;
        t.selectedElements = s, t.subSelectionElements = a, s && s.length > 0 && (e.selectedElementBeforeScrolling = s[0], e.editor.setSelection([]), e.editor.setSelection(t.selectedElements, t.subSelectionElements), t.selectedElements = void 0, t.subSelectionElements = void 0), e.showValidationIcons()
      }
      var l = jQuery(window).height() - i.top - r.height() - 21;
      n.height(l - o), jQuery("#paletteSection").height(l);
      var d = null;
      n && n[0].children[1] && (d = n[0].children[1]);
      var c = n.position().top,
        p = n.position().left,
        u = n[0].clientHeight,
        h = n[0].clientWidth,
        m = 8,
        f = 0,
        g = 0;
      d && (g = d.clientWidth || d.parentNode.clientWidth), n[0].clientWidth > g && (f = g - n[0].clientWidth, p -= f / 2, h += f);
      var v = 17,
        I = 20,
        S = jQuery("#canvas-grow-N");
      S.css("top", c + I + "px"), S.css("left", p - 10 + (h - v) / 2 + "px");
      var O = jQuery("#canvas-grow-S");
      O.css("top", c + u - I - m + "px"), O.css("left", p - 10 + (h - v) / 2 + "px");
      var R = jQuery("#canvas-grow-E");
      R.css("top", c - 10 + (u - v) / 2 + "px"), R.css("left", p + h - I - m + "px");
      var E = jQuery("#canvas-grow-W");
      E.css("top", c - 10 + (u - v) / 2 + "px"), E.css("left", p + I + "px"), S = jQuery("#canvas-shrink-N"), S.css("top", c + I + "px"), S.css("left", p + 10 + (h - v) / 2 + "px"), O = jQuery("#canvas-shrink-S"), O.css("top", c + u - I - m + "px"), O.css("left", p + 10 + (h - v) / 2 + "px"), R = jQuery("#canvas-shrink-E"), R.css("top", c + 10 + (u - v) / 2 + "px"), R.css("left", p + h - I - m + "px"), E = jQuery("#canvas-shrink-W"), E.css("top", c + 10 + (u - v) / 2 + "px"), E.css("left", p + I + "px")
    }
  }), jQuery(window).trigger("resize"), jQuery.fn.scrollStopped = function(e) {
    jQuery(this).scroll(function() {
      var t = this,
        i = jQuery(t);
      i.data("scrollTimeout") && clearTimeout(i.data("scrollTimeout")), i.data("scrollTimeout", setTimeout(e, 50, t))
    })
  }, e.editorInitialized = !0), t.$on("$locationChangeStart", function(i, o) {
    if (e.editor && !e.ignoreChanges) {
      for (var n, r = e.editor.loadedPlugins, a = 0; r.length > a; a++)
        if ("ORYX.Plugins.Save" == r[a].type) {
          n = r[a];
          break
        }
      if (n && n.hasChanges() && (i.preventDefault(), !t.unsavedChangesModalInstance)) {
        var d = function(i) {
          t.unsavedChangesModalInstance = void 0, i ? (e.ignoreChanges = !0, s.url(o.substring(o.indexOf("/#") + 2))) : (e.ignoreChanges = !1, e.setMainPageById("processes"))
        };
        t.handleResponseFunction = d, _internalCreateModal({
          template: "editor-app/popups/unsaved-changes.html",
          scope: t
        }, l, t)
      }
    }
  }), u()
}]), angular.module("activitiModeler").controller("EditorUnsavedChangesPopupCrtl", ["$rootScope", "$scope", "$http", "$location", "$window", function(e, t, i, o, n) {
  t.discard = function() {
    t.handleResponseFunction && (t.handleResponseFunction(!0), n.onbeforeunload = void 0), t.$hide()
  }, t.save = function() {
    t.handleResponseFunction && t.handleResponseFunction(!1), t.$hide()
  }, t.cancel = function() {
    t.handleResponseFunction && t.handleResponseFunction(null), t.$hide()
  }
}]), angular.module("activitiModeler").controller("EditorYesNoCancelPopupCrtl", ["$rootScope", "$scope", "$http", "$location", "$window", function(e, t) {
  t.yes = function() {
    t.handleResponseFunction && t.handleResponseFunction(!0), t.$hide()
  }, t.no = function() {
    t.handleResponseFunction && t.handleResponseFunction(!1), t.$hide()
  }, t.cancel = function() {
    t.handleResponseFunction && t.handleResponseFunction(null), t.$hide()
  }
}]), angular.module("activitiModeler").controller("StencilController", ["$rootScope", "$scope", "$http", "$modal", "$timeout", "ProcessScopeService", function(e, t, i, o, n, r) {
  t.propertyWindowState = {
    collapsed: !1
  }, t.headerConfig = KISBPM.HEADER_CONFIG, t.propertyWindowState.toggle = function() {
    t.propertyWindowState.collapsed = !t.propertyWindowState.collapsed, n(function() {
      jQuery(window).trigger("resize")
    })
  }, t.editorFactory.promise.then(function() {
    var s = [],
      a = function(e, t) {
        for (var i = 0; t.length > i; i++)
          if (t[i].name === e) return t[i];
        return null
      },
      l = function(e, t) {
        var i = {
          name: e,
          items: [],
          paletteItems: [],
          groups: [],
          visible: !0
        };
        return t.push(i), i
      };
    i({
      method: "GET",
      url: KISBPM.URL.getStencilSet(t.modelData.stencilSetId)
    }).success(function(e) {
      for (var i = ["UserTask", "EndNoneEvent", "ExclusiveGateway", "CatchTimerEvent", "ThrowNoneEvent", "TextAnnotation", "SequenceFlow", "Association"], o = ["SequenceFlow", "MessageFlow", "Association", "DataAssociation", "DataStore", "SendTask"], n = [], r = [], d = 0; e.rules.morphingRules.length > d; d++) {
        var c = e.rules.morphingRules[d].role,
          p = {
            role: c,
            morphOptions: []
          };
        r.push(p)
      }
      for (var u = 0; e.stencils.length > u; u++) {
        var h = e.stencils[u].groups[0];
        if ("Diagram" !== h && "Form" !== h) {
          var m = !1;
          e.stencils[u].removed && (m = !0);
          var f = void 0;
          if (!m && null !== h && void 0 !== h && h.length > 0) {
            f = a(h, s), null === f && (f = l(h, s));
            for (var g = 1; e.stencils[u].groups.length > g; g++) {
              var v = e.stencils[u].groups[g],
                I = a(v, f.groups);
              null === I && (I = l(v, f.groups)), f = I
            }
          }
          var S = {
            id: e.stencils[u].id,
            name: e.stencils[u].title,
            description: e.stencils[u].description,
            icon: e.stencils[u].icon,
            type: e.stencils[u].type,
            roles: e.stencils[u].roles,
            removed: m,
            customIcon: !1,
            canConnect: !1,
            canConnectTo: !1,
            canConnectAssociation: !1
          };
          if (e.stencils[u].custom && e.stencils[u].custom.variables) {
            for (var O = [], R = e.stencils[u].custom.variables, d = 0; R.length > d; d++) O.push({
              processVariableName: R[d].name,
              processVariableType: R[d].type
            });
            S.customVariables = O
          }
          e.stencils[u].customIconId && e.stencils[u].customIconId > 0 && (S.customIcon = !0, S.icon = e.stencils[u].customIconId), m || i.indexOf(S.id) >= 0 && (n[i.indexOf(S.id)] = S), ("TextAnnotation" === S.id || "BoundaryCompensationEvent" === S.id) && (S.canConnectAssociation = !0);
          for (var d = 0; e.stencils[u].roles.length > d; d++) {
            var E = e.stencils[u].roles[d];
            "sequence_start" === E ? S.canConnect = !0 : "sequence_end" === E && (S.canConnectTo = !0);
            for (var y = 0; r.length > y; y++)
              if (E === r[y].role) {
                m || r[y].morphOptions.push(S), S.morphRole = r[y].role;
                break
              }
          }
          f ? (f.items.push(S), 0 > o.indexOf(S.id) && f.paletteItems.push(S)) : m || s.push(S)
        }
      }
      for (var d = 0; s.length > d; d++) s[d].paletteItems && 0 == s[d].paletteItems.length && (s[d].visible = !1);
      t.stencilItemGroups = s;
      for (var T = [], d = 0; e.rules.containmentRules.length > d; d++) {
        var b = e.rules.containmentRules[d];
        T.push(b)
      }
      t.containmentRules = T;
      for (var C = [], d = 0; n.length > d; d++) n[d] && (C[C.length] = n[d]);
      t.quickMenuItems = C, t.morphRoles = r
    }).error(function(e) {
      console.log("Something went wrong when fetching stencil items:" + JSON.stringify(e))
    }), t.editor.registerOnEvent(ORYX.CONFIG.EVENT_SELECTION_CHANGED, function(i) {
      var o = i.elements,
        n = !1;
      if (o && 0 == o.length && (o = [t.editor.getCanvas()], n = !0), o && o.length > 0) {
        var s = o.first(),
          a = s.getStencil();
        if (e.selectedElementBeforeScrolling && -1 !== a.id().indexOf("BPMNDiagram")) return;
        if (e.selectedElementBeforeScrolling && e.selectedElementBeforeScrolling.getId() === s.getId()) return e.selectedElementBeforeScrolling = null, void 0;
        if (t.previousSelectedShape = t.selectedShape, void 0 !== t.selectedShape && t.selectedShape.getId() === s.getId()) {
          if (!e.forceSelectionRefresh) return;
          e.forceSelectionRefresh = !1
        }
        var l = t.getStencilItemById(s.getStencil().idWithoutNs());
        l && l.customVariables && l.customVariables.length > 0 && r.updateCustomStencilVariablesCache(s.resourceId, l.customVariables);
        var d = "";
        l && (d = l.name);
        var c = {
          title: "",
          properties: [],
          stencilType: d
        };
        n && (c.auditData = {
          author: t.modelData.createdByUser,
          createDate: t.modelData.createDate
        });
        for (var p = a.properties(), u = 0; p.length > u; u++) {
          var h = p[u];
          if (0 != h.popular()) {
            var m = h.prefix() + "-" + h.id();
            "oryx-name" === m && (c.title = s.properties[m]);
            var f = KISBPM.PROPERTY_CONFIG[m + "-" + h.type()];
            if ((void 0 === f || null === f) && (f = KISBPM.PROPERTY_CONFIG[h.type()]), void 0 === f || null === f) console.log("WARNING: no property configuration defined for " + m + " of type " + h.type());
            else {
              if ("true" === s.properties[m] && (s.properties[m] = !0), 0 == KISBPM.CONFIG.showRemovedProperties && h.isHidden()) continue;
              var g = {
                key: m,
                title: h.title(),
                description: h.description(),
                type: h.type(),
                mode: "read",
                hidden: h.isHidden(),
                value: s.properties[m]
              };
              if (("complex" === g.type || "multiplecomplex" === g.type) && g.value && g.value.length > 0) try {
                g.value = JSON.parse(g.value)
              } catch (v) {}
              void 0 !== f.readModeTemplateUrl && null !== f.readModeTemplateUrl && (g.readModeTemplateUrl = f.readModeTemplateUrl + "?version=" + e.staticIncludeVersion), null !== f.writeModeTemplateUrl && null !== f.writeModeTemplateUrl && (g.writeModeTemplateUrl = f.writeModeTemplateUrl + "?version=" + e.staticIncludeVersion), void 0 !== f.templateUrl && null !== f.templateUrl ? (g.templateUrl = f.templateUrl + "?version=" + e.staticIncludeVersion, g.hasReadWriteMode = !1) : g.hasReadWriteMode = !0, (void 0 === g.value || null === g.value || 0 == g.value.length) && (g.noValue = !0), c.properties.push(g)
            }
          }
        }
        t.safeApply(function() {
          t.selectedItem = c, t.selectedShape = s
        })
      } else t.safeApply(function() {
        t.selectedItem = {}, t.selectedShape = null
      })
    }), t.editor.registerOnEvent(ORYX.CONFIG.EVENT_SELECTION_CHANGED, function(e) {
      KISBPM.eventBus.dispatch(KISBPM.eventBus.EVENT_TYPE_HIDE_SHAPE_BUTTONS);
      var i = e.elements;
      if (i && 1 == i.length) {
        var o = i.first(),
          n = t.editor.getCanvas().node.getScreenCTM(),
          r = o.absoluteXY();
        r.x *= n.a, r.y *= n.d;
        var s = 1;
        if (!isNaN(screen.logicalXDPI) && !isNaN(screen.systemXDPI)) {
          var a = navigator.userAgent;
          if (a.indexOf("MSIE") >= 0) {
            var l = Math.round(100 * (screen.deviceXDPI / screen.logicalXDPI));
            100 !== l && (s = l / 100)
          }
        }
        if (1 === s) r.y = r.y - jQuery("#canvasSection").offset().top + 5, r.x = r.x - jQuery("#canvasSection").offset().left;
        else {
          var d = jQuery("#canvasSection").offset().left,
            c = jQuery("#canvasSection").scrollLeft(),
            p = jQuery("#canvasSection").scrollTop(),
            u = n.e - d * s,
            h = 0;
          u > 10 && (h = u / s - u), r.y = r.y - jQuery("#canvasSection").offset().top * s + 5 + (p * s - p), r.x = r.x - d * s + h + (c * s - c)
        }
        var m = new ORYX.Core.Bounds(n.e + r.x, n.f + r.y, n.e + r.x + n.a * o.bounds.width(), n.f + r.y + n.d * o.bounds.height()),
          f = m.upperLeft(),
          g = t.getStencilItemById(o.getStencil().idWithoutNs()),
          v = [];
        if (g && g.morphRole)
          for (var I = 0; t.morphRoles.length > I; I++) t.morphRoles[I].role === g.morphRole && (v = t.morphRoles[I].morphOptions);
        var S = f.x;
        if (48 > m.width() && (S -= 24), v && v.length > 0) {
          var O = document.getElementById("morph-button");
          O.style.display = "block", O.style.left = S + 24 + "px", O.style.top = f.y + m.height() + 2 + "px"
        }
        var R = document.getElementById("delete-button");
        if (R.style.display = "block", R.style.left = S + "px", R.style.top = f.y + m.height() + 2 + "px", g && (g.canConnect || g.canConnectAssociation)) {
          var E = 0,
            y = f.x + m.width() + 5,
            T = f.y;
          jQuery(".Oryx_button").each(function(e, t) {
            "morph-button" !== t.id && "delete-button" != t.id && (E++, E > 3 ? (y = f.x + m.width() + 5, T += 24, E = 1) : E > 1 && (y += 24), t.style.display = "block", t.style.left = y + "px", t.style.top = T + "px")
          })
        }
      }
    }), t.editor.registerOnEvent(ORYX.CONFIG.EVENT_DRAGDROP_END, function() {
      var t = e.editor.getSelection();
      t && t.length > 0 && e.showValidationIcons()
    }), t.editor.registerOnEvent(ORYX.CONFIG.EVENT_RESIZE_END, function() {
      var t = e.editor.getSelection();
      t && t.length > 0 && e.showValidationIcons()
    }), t.kisbpmListeners = [], t.addScopedKISBPMListener = function(e, i, o) {
      KISBPM.eventBus.addListener(e, i, o), t.kisbpmListeners.push([e, i, o])
    }, t.removeScopedKISBPMListeners = function() {
      for (var e, i = 0; t.kisbpmListeners.length > i; i++) e = t.kisbpmListeners[i], KISBPM.eventBus.removeListener(e[0], e[1], e[2])
    }, t.$on("$destroy", function() {
      t.removeScopedKISBPMListeners()
    }), t.addScopedKISBPMListener(KISBPM.eventBus.EVENT_TYPE_HIDE_SHAPE_BUTTONS, function() {
      jQuery(".Oryx_button").each(function(e, t) {
        t.style.display = "none"
      })
    }), t.addScopedKISBPMListener(KISBPM.eventBus.EVENT_TYPE_PROPERTY_VALUE_CHANGED, function(e) {
      e.property && e.property.key && ("oryx-name" === e.property.key && void 0 !== t.selectedItem && null !== t.selectedItem && (t.selectedItem.title = e.newValue), e.property.noValue = void 0 === e.property.value || null === e.property.value || 0 == e.property.value.length)
    }), t.addScopedKISBPMListener(KISBPM.eventBus.EVENT_TYPE_SHOW_VALIDATION_POPUP, function(t) {
      var i = e.getCurrentId(t.validationId),
        n = function() {
          e.originalValidationId = t.validationId, e.currentValidationId = i, e.isOnProcessLevel = t.onProcessLevel, _internalCreateModal({
            template: "editor-app/popups/validation-errors.html?version=" + Date.now()
          }, o, e)
        };
      n()
    }), t.addScopedKISBPMListener(KISBPM.eventBus.EVENT_TYPE_NAVIGATE_TO_PROCESS, function(e) {
      n(function() {
        r.navigateForward("editor/" + encodeURIComponent(e.processId), t.selectedShape.resourceId)
      })
    }), t.morphShape = function() {
      t.safeApply(function() {
        var i = e.editor.getSelection();
        if (i && 1 == i.length) {
          e.currentSelectedShape = i.first();
          for (var n = t.getStencilItemById(e.currentSelectedShape.getStencil().idWithoutNs()), r = [], s = 0; t.morphRoles.length > s; s++) t.morphRoles[s].role === n.morphRole && (r = t.morphRoles[s].morphOptions.slice());
          var a = function() {
            e.morphShapes = r, _internalCreateModal({
              backdrop: !1,
              keyboard: !0,
              template: "editor-app/popups/select-shape.html?version=" + Date.now()
            }, o, e)
          };
          a()
        }
      })
    }, t.deleteShape = function() {
      KISBPM.TOOLBAR.ACTIONS.deleteItem({
        $scope: t
      })
    }, t.quickAddItem = function(i) {
      t.safeApply(function() {
        var o = e.editor.getSelection();
        if (o && 1 == o.length) {
          e.currentSelectedShape = o.first();
          for (var n = void 0, r = t.editor.getStencilSets().values(), s = 0; r.length > s; s++)
            for (var a = r[s], l = a.nodes(), d = 0; l.length > d; d++)
              if (l[d].idWithoutNs() === i) {
                n = l[d];
                break
              }
          if (!n) return;
          var c = {
            type: t.currentSelectedShape.getStencil().namespace() + i,
            namespace: t.currentSelectedShape.getStencil().namespace()
          };
          c.connectedShape = e.currentSelectedShape, c.parent = e.currentSelectedShape.parent, c.containedStencil = n;
          var p = {
              sourceShape: e.currentSelectedShape,
              targetStencil: n
            },
            u = t.editor.getRules().connectMorph(p);
          if (!u) return;
          c.connectingType = u.id();
          var h = new KISBPM.CreateCommand(c, void 0, void 0, t.editor);
          t.editor.executeCommands([h])
        }
      })
    }
  }), t.propertyClicked = function(e) {
    t.selectedItem.properties[e].hidden || (t.selectedItem.properties[e].mode = "write")
  }, t.getPropertyTemplateUrl = function(e) {
    return t.selectedItem.properties[e].templateUrl
  }, t.getPropertyReadModeTemplateUrl = function(e) {
    return t.selectedItem.properties[e].readModeTemplateUrl
  }, t.getPropertyWriteModeTemplateUrl = function(e) {
    return t.selectedItem.properties[e].writeModeTemplateUrl
  }, t.updatePropertyInModel = function(e, i) {
    var o = t.selectedShape;
    if (i && (o = o.id != i && t.previousSelectedShape && t.previousSelectedShape.id == i ? t.previousSelectedShape : null), o) {
      var n = e.key,
        r = e.value,
        s = o.properties[n];
      if (r != s) {
        var a = ORYX.Core.Command.extend({
            construct: function() {
              this.key = n, this.oldValue = s, this.newValue = r, this.shape = o, this.facade = t.editor
            },
            execute: function() {
              this.shape.setProperty(this.key, this.newValue), this.facade.getCanvas().update(), this.facade.updateSelection()
            },
            rollback: function() {
              this.shape.setProperty(this.key, this.oldValue), this.facade.getCanvas().update(), this.facade.updateSelection()
            }
          }),
          l = new a;
        t.editor.executeCommands([l]), t.editor.handleEvents({
          type: ORYX.CONFIG.EVENT_PROPWINDOW_PROP_CHANGED,
          elements: [o],
          key: n
        }), e.mode = "read";
        var d = {
          type: KISBPM.eventBus.EVENT_TYPE_PROPERTY_VALUE_CHANGED,
          property: e,
          oldValue: s,
          newValue: r
        };
        KISBPM.eventBus.dispatch(d.type, d)
      } else e.mode = "read"
    }
  }, t.findStencilItemInGroup = function(e, i) {
    for (var o, n = 0; i.items.length > n; n++)
      if (o = i.items[n], o.id === e) return o;
    if (i.groups && i.groups.length > 0)
      for (var r = 0; i.groups.length > r; r++)
        if (o = t.findStencilItemInGroup(e, i.groups[r])) return o;
    return void 0
  }, t.getStencilItemById = function(e) {
    if (!t.stencilItemGroups) return void 0;
    for (var i = 0; t.stencilItemGroups.length > i; i++) {
      var o = t.stencilItemGroups[i];
      if (null !== o.items && void 0 !== o.items) {
        var n = t.findStencilItemInGroup(e, o);
        if (n) return n
      } else if (o.id === e) return o
    }
    return void 0
  }, t.dropCallback = function(e, i) {
    if (t.editor.handleEvents({
      type: ORYX.CONFIG.EVENT_HIGHLIGHT_HIDE,
      highlightId: "shapeRepo.attached"
    }), t.editor.handleEvents({
      type: ORYX.CONFIG.EVENT_HIGHLIGHT_HIDE,
      highlightId: "shapeRepo.added"
    }), t.editor.handleEvents({
      type: ORYX.CONFIG.EVENT_HIGHLIGHT_HIDE,
      highlightId: "shapeMenu"
    }), KISBPM.eventBus.dispatch(KISBPM.eventBus.EVENT_TYPE_HIDE_SHAPE_BUTTONS), t.dragCanContain) {
      var o = t.getStencilItemById(i.draggable[0].id),
        n = {
          x: e.pageX,
          y: e.pageY
        },
        r = 1;
      if (!isNaN(screen.logicalXDPI) && !isNaN(screen.systemXDPI)) {
        var s = navigator.userAgent;
        if (s.indexOf("MSIE") >= 0) {
          var a = Math.round(100 * (screen.deviceXDPI / screen.logicalXDPI));
          100 !== a && (r = a / 100)
        }
      }
      var l = t.editor.getCanvas().node.getScreenCTM();
      n.x -= l.e / r, n.y -= l.f / r, n.x /= l.a, n.y /= l.d, n.x -= document.documentElement.scrollLeft, n.y -= document.documentElement.scrollTop;
      var d = t.dragCurrentParent.absoluteXY();
      if (n.x -= d.x, n.y -= d.y, t.quickMenu) {
        var c = t.editor.getSelection();
        if (c && 1 == c.length) {
          for (var p = c.first(), u = void 0, h = t.editor.getStencilSets().values(), m = 0; h.length > m; m++) {
            for (var f = h[m], g = f.nodes(), v = 0; g.length > v; v++)
              if (g[v].idWithoutNs() === i.draggable[0].id) {
                u = g[v];
                break
              }
            if (!u)
              for (var I = f.edges(), v = 0; I.length > v; v++)
                if (I[v].idWithoutNs() === i.draggable[0].id) {
                  u = I[v];
                  break
                }
          }
          if (!u) return;
          var S = {};
          if (S.type = p.getStencil().namespace() + i.draggable[0].id, S.namespace = p.getStencil().namespace(), S.connectedShape = p, S.parent = t.dragCurrentParent, S.containedStencil = u, !e.ctrlKey) {
            var O = p.bounds.center();
            20 > Math.abs(O.x - n.x) && (n.x = O.x), 20 > Math.abs(O.y - n.y) && (n.y = O.y)
          }
          if (S.position = n, "SequenceFlow" !== u.idWithoutNs() && "Association" !== u.idWithoutNs() && "MessageFlow" !== u.idWithoutNs() && "DataAssociation" !== u.idWithoutNs()) {
            var R = {
                sourceShape: p,
                targetStencil: u
              },
              E = t.editor.getRules().connectMorph(R);
            if (!E) return;
            S.connectingType = E.id()
          }
          var y = new KISBPM.CreateCommand(S, t.dropTargetElement, n, t.editor);
          t.editor.executeCommands([y])
        }
      } else {
        var S = {};
        S.type = t.modelData.model.stencilset.namespace + o.id, S.namespace = t.modelData.model.stencilset.namespace, S.position = n, S.parent = t.dragCurrentParent;
        var T = ORYX.Core.Command.extend({
            construct: function(e, t, i, o, n) {
              this.option = e, this.currentParent = t, this.canAttach = i, this.position = o, this.facade = n, this.selection = this.facade.getSelection(), this.shape, this.parent
            },
            execute: function() {
              if (this.shape ? this.parent.add(this.shape) : (this.shape = this.facade.createShape(S), this.parent = this.shape.parent), this.canAttach && this.currentParent instanceof ORYX.Core.Node && this.shape.dockers.length > 0) {
                var e = this.shape.dockers[0];
                this.currentParent.parent instanceof ORYX.Core.Node && this.currentParent.parent.add(e.parent), e.bounds.centerMoveTo(this.position), e.setDockedShape(this.currentParent)
              }
              this.facade.setSelection([this.shape]), this.facade.getCanvas().update(), this.facade.updateSelection()
            },
            rollback: function() {
              this.facade.deleteShape(this.shape), this.facade.setSelection(this.selection.without(this.shape)), this.facade.getCanvas().update(), this.facade.updateSelection()
            }
          }),
          y = new T(S, t.dragCurrentParent, !1, n, t.editor);
        t.editor.executeCommands([y]);
        var b = {
          type: KISBPM.eventBus.EVENT_TYPE_ITEM_DROPPED,
          droppedItem: o,
          position: n
        };
        KISBPM.eventBus.dispatch(b.type, b)
      }
    }
    t.dragCurrentParent = void 0, t.dragCurrentParentId = void 0, t.dragCurrentParentStencil = void 0, t.dragCanContain = void 0, t.quickMenu = void 0, t.dropTargetElement = void 0
  }, t.overCallback = function() {
    t.dragModeOver = !0
  }, t.outCallback = function() {
    t.dragModeOver = !1
  }, t.startDragCallback = function() {
    t.dragModeOver = !1, t.quickMenu = !1
  }, t.startDragCallbackQuickMenu = function() {
    t.dragModeOver = !1, t.quickMenu = !0
  }, t.dragCallback = function(e) {
    if (0 != t.dragModeOver) {
      var i = t.editor.eventCoordinatesXY(e.pageX, e.pageY),
        o = 1;
      if (!isNaN(screen.logicalXDPI) && !isNaN(screen.systemXDPI)) {
        var n = navigator.userAgent;
        if (n.indexOf("MSIE") >= 0) {
          var r = Math.round(100 * (screen.deviceXDPI / screen.logicalXDPI));
          100 !== r && (o = r / 100)
        }
      }
      1 !== o && (i.x = i.x / o, i.y = i.y / o);
      var s = t.editor.getCanvas().getAbstractShapesAtPosition(i);
      if (0 >= s.length && e.helper) return t.dragCanContain = !1, !1;
      if (s[0] instanceof ORYX.Core.Canvas && t.editor.getCanvas().setHightlightStateBasedOnX(i.x), 1 == s.length && s[0] instanceof ORYX.Core.Canvas) {
        var a = t.getStencilItemById(e.target.id),
          l = s[0];
        return "Lane" === a.id || "BoundaryErrorEvent" === a.id || "BoundaryMessageEvent" === a.id || "BoundarySignalEvent" === a.id || "BoundaryTimerEvent" === a.id || "BoundaryCancelEvent" === a.id || "BoundaryCompensationEvent" === a.id ? (t.dragCanContain = !1, t.editor.handleEvents({
          type: ORYX.CONFIG.EVENT_HIGHLIGHT_SHOW,
          highlightId: "shapeRepo.added",
          elements: [l],
          style: ORYX.CONFIG.SELECTION_HIGHLIGHT_STYLE_RECTANGLE,
          color: ORYX.CONFIG.SELECTION_INVALID_COLOR
        })) : (t.dragCanContain = !0, t.dragCurrentParent = l, t.dragCurrentParentId = l.id, t.editor.handleEvents({
          type: ORYX.CONFIG.EVENT_HIGHLIGHT_HIDE,
          highlightId: "shapeRepo.added"
        })), t.editor.handleEvents({
          type: ORYX.CONFIG.EVENT_HIGHLIGHT_HIDE,
          highlightId: "shapeRepo.attached"
        }), !1
      }
      var a = t.getStencilItemById(e.target.id),
        l = s.reverse().find(function(e) {
          return e instanceof ORYX.Core.Canvas || e instanceof ORYX.Core.Node || e instanceof ORYX.Core.Edge
        });
      if (!l) return t.dragCanContain = !1, !1;
      if ("node" === a.type) {
        var d = !1,
          c = l.getStencil().id();
        if (t.dragCurrentParentId && t.dragCurrentParentId === l.id) return !1;
        var p = t.getStencilItemById(l.getStencil().idWithoutNs());
        if (p.roles.indexOf("Activity") > -1 ? a.roles.indexOf("IntermediateEventOnActivityBoundary") > -1 && (d = !0) : "Pool" === l.getStencil().idWithoutNs() && "Lane" === a.id && (d = !0), d) t.editor.handleEvents({
          type: ORYX.CONFIG.EVENT_HIGHLIGHT_SHOW,
          highlightId: "shapeRepo.attached",
          elements: [l],
          style: ORYX.CONFIG.SELECTION_HIGHLIGHT_STYLE_RECTANGLE,
          color: ORYX.CONFIG.SELECTION_VALID_COLOR
        }), t.editor.handleEvents({
          type: ORYX.CONFIG.EVENT_HIGHLIGHT_HIDE,
          highlightId: "shapeRepo.added"
        });
        else {
          for (var u = 0; t.containmentRules.length > u; u++) {
            var h = t.containmentRules[u];
            if (h.role === p.id) {
              for (var m = 0; h.contains.length > m; m++)
                if (a.roles.indexOf(h.contains[m]) > -1) {
                  d = !0;
                  break
                }
              if (d) break
            }
          }
          t.editor.handleEvents({
            type: ORYX.CONFIG.EVENT_HIGHLIGHT_SHOW,
            highlightId: "shapeRepo.added",
            elements: [l],
            color: d ? ORYX.CONFIG.SELECTION_VALID_COLOR : ORYX.CONFIG.SELECTION_INVALID_COLOR
          }), t.editor.handleEvents({
            type: ORYX.CONFIG.EVENT_HIGHLIGHT_HIDE,
            highlightId: "shapeRepo.attached"
          })
        }
        t.dragCurrentParent = l, t.dragCurrentParentId = l.id, t.dragCurrentParentStencil = c, t.dragCanContain = d
      } else {
        var f = t.editor.getCanvas(),
          g = !1,
          v = t.getStencilItemById(l.getStencil().idWithoutNs());
        if (v) {
          var I = !1;
          "Association" !== stencil.idWithoutNs() || "TextAnnotation" !== curCan.getStencil().idWithoutNs() && "BoundaryCompensationEvent" !== curCan.getStencil().idWithoutNs() ? "DataAssociation" === stencil.idWithoutNs() && "DataStore" === curCan.getStencil().idWithoutNs() && (I = !0) : I = !0, (v.canConnectTo || I) && (g = !0)
        }
        t.dragCurrentParent = f, t.dragCurrentParentId = f.id, t.dragCurrentParentStencil = f.getStencil().id(), t.dragCanContain = g, t.editor.handleEvents({
          type: ORYX.CONFIG.EVENT_HIGHLIGHT_SHOW,
          highlightId: "shapeRepo.added",
          elements: [f],
          color: ORYX.CONFIG.SELECTION_VALID_COLOR
        }), t.editor.handleEvents({
          type: ORYX.CONFIG.EVENT_HIGHLIGHT_HIDE,
          highlightId: "shapeRepo.attached"
        })
      }
    }
  }, t.dragCallbackQuickMenu = function(e) {
    if (0 != t.dragModeOver) {
      var i = t.editor.eventCoordinatesXY(e.pageX, e.pageY),
        o = 1;
      if (!isNaN(screen.logicalXDPI) && !isNaN(screen.systemXDPI)) {
        var n = navigator.userAgent;
        if (n.indexOf("MSIE") >= 0) {
          var r = Math.round(100 * (screen.deviceXDPI / screen.logicalXDPI));
          100 !== r && (o = r / 100)
        }
      }
      1 !== o && (i.x = i.x / o, i.y = i.y / o);
      var s = t.editor.getCanvas().getAbstractShapesAtPosition(i);
      if (0 >= s.length && e.helper) return t.dragCanContain = !1, !1;
      s[0] instanceof ORYX.Core.Canvas && t.editor.getCanvas().setHightlightStateBasedOnX(i.x);
      for (var a = void 0, l = t.editor.getStencilSets().values(), d = 0; l.length > d; d++) {
        for (var c = l[d], p = c.nodes(), u = 0; p.length > u; u++)
          if (p[u].idWithoutNs() === e.target.id) {
            a = p[u];
            break
          }
        if (!a)
          for (var h = c.edges(), u = 0; h.length > u; u++)
            if (h[u].idWithoutNs() === e.target.id) {
              a = h[u];
              break
            }
      }
      var m = s.last(),
        f = !1;
      if ("node" === a.type()) {
        var g = t.editor.getRules().canContain({
            containingShape: m,
            containedStencil: a
          }),
          v = s.reverse().find(function(e) {
            return e instanceof ORYX.Core.Canvas || e instanceof ORYX.Core.Node || e instanceof ORYX.Core.Edge
          });
        if (!v) return t.dragCanContain = !1, !1;
        t.dragCurrentParent = v, t.dragCurrentParentId = v.id, t.dragCurrentParentStencil = v.getStencil().id(), t.dragCanContain = g, t.dropTargetElement = v, f = g
      } else {
        var I = t.editor.getSelection();
        if (I && 1 == I.length) {
          var S = I.first(),
            O = m,
            R = !1,
            E = t.getStencilItemById(O.getStencil().idWithoutNs());
          if (E) {
            var y = !1;
            if ("Association" !== a.idWithoutNs() || "TextAnnotation" !== O.getStencil().idWithoutNs() && "BoundaryCompensationEvent" !== O.getStencil().idWithoutNs() ? "DataAssociation" === a.idWithoutNs() && "DataStore" === O.getStencil().idWithoutNs() && (y = !0) : y = !0, E.canConnectTo || y)
              for (; !R && O && !(O instanceof ORYX.Core.Canvas);) m = O, R = t.editor.getRules().canConnect({
                sourceShape: S,
                edgeStencil: a,
                targetShape: O
              }), O = O.parent
          }
          var v = t.editor.getCanvas();
          f = R, t.dragCurrentParent = v, t.dragCurrentParentId = v.id, t.dragCurrentParentStencil = v.getStencil().id(), t.dragCanContain = R, t.dropTargetElement = m
        }
      }
      t.editor.handleEvents({
        type: ORYX.CONFIG.EVENT_HIGHLIGHT_SHOW,
        highlightId: "shapeMenu",
        elements: [m],
        color: f ? ORYX.CONFIG.SELECTION_VALID_COLOR : ORYX.CONFIG.SELECTION_INVALID_COLOR
      })
    }
  }
}]);
var KISBPM = KISBPM || {};
KISBPM.CreateCommand = ORYX.Core.Command.extend({
  construct: function(e, t, i, o) {
    this.option = e, this.currentReference = t, this.position = i, this.facade = o, this.shape, this.edge, this.targetRefPos, this.sourceRefPos, this.connectedShape = e.connectedShape, this.connectingType = e.connectingType, this.namespace = e.namespace, this.type = e.type, this.containedStencil = e.containedStencil, this.parent = e.parent, this.currentReference = t, this.shapeOptions = e.shapeOptions
  },
  execute: function() {
    if (this.shape ? (this.shape instanceof ORYX.Core.Node ? (this.parent.add(this.shape), this.edge && (this.facade.getCanvas().add(this.edge), this.edge.dockers.first().setDockedShape(this.connectedShape), this.edge.dockers.first().setReferencePoint(this.sourceRefPos), this.edge.dockers.last().setDockedShape(this.shape), this.edge.dockers.last().setReferencePoint(this.targetRefPos)), this.facade.setSelection([this.shape])) : this.shape instanceof ORYX.Core.Edge && (this.facade.getCanvas().add(this.shape), this.shape.dockers.first().setDockedShape(this.connectedShape), this.shape.dockers.first().setReferencePoint(this.sourceRefPos)), resume = !0) : (this.shape = this.facade.createShape(this.option), this.edge = this.shape instanceof ORYX.Core.Edge ? void 0 : this.shape.getIncomingShapes().first()), this.currentReference && this.position)
      if (this.shape instanceof ORYX.Core.Edge) {
        if (this.currentReference instanceof ORYX.Core.Canvas) this.shape.dockers.last().bounds.centerMoveTo(this.position);
        else if (this.shape.dockers.last().setDockedShape(this.currentReference), "TextAnnotation" === this.currentReference.getStencil().idWithoutNs()) {
          var e = {};
          e.x = 0, e.y = this.currentReference.bounds.height() / 2, this.shape.dockers.last().setReferencePoint(e)
        } else this.shape.dockers.last().setReferencePoint(this.currentReference.bounds.midPoint());
        this.sourceRefPos = this.shape.dockers.first().referencePoint, this.targetRefPos = this.shape.dockers.last().referencePoint
      } else this.edge && (this.sourceRefPos = this.edge.dockers.first().referencePoint, this.targetRefPos = this.edge.dockers.last().referencePoint);
    else {
      var t = this.containedStencil,
        i = this.connectedShape,
        o = i.bounds,
        n = this.shape.bounds,
        r = o.center();
      "north" === t.defaultAlign() ? r.y -= o.height() / 2 + ORYX.CONFIG.SHAPEMENU_CREATE_OFFSET + n.height() / 2 : "northeast" === t.defaultAlign() ? (r.x += o.width() / 2 + ORYX.CONFIG.SHAPEMENU_CREATE_OFFSET_CORNER + n.width() / 2, r.y -= o.height() / 2 + ORYX.CONFIG.SHAPEMENU_CREATE_OFFSET_CORNER + n.height() / 2) : "southeast" === t.defaultAlign() ? (r.x += o.width() / 2 + ORYX.CONFIG.SHAPEMENU_CREATE_OFFSET_CORNER + n.width() / 2, r.y += o.height() / 2 + ORYX.CONFIG.SHAPEMENU_CREATE_OFFSET_CORNER + n.height() / 2) : "south" === t.defaultAlign() ? r.y += o.height() / 2 + ORYX.CONFIG.SHAPEMENU_CREATE_OFFSET + n.height() / 2 : "southwest" === t.defaultAlign() ? (r.x -= o.width() / 2 + ORYX.CONFIG.SHAPEMENU_CREATE_OFFSET_CORNER + n.width() / 2, r.y += o.height() / 2 + ORYX.CONFIG.SHAPEMENU_CREATE_OFFSET_CORNER + n.height() / 2) : "west" === t.defaultAlign() ? r.x -= o.width() / 2 + ORYX.CONFIG.SHAPEMENU_CREATE_OFFSET + n.width() / 2 : "northwest" === t.defaultAlign() ? (r.x -= o.width() / 2 + ORYX.CONFIG.SHAPEMENU_CREATE_OFFSET_CORNER + n.width() / 2, r.y -= o.height() / 2 + ORYX.CONFIG.SHAPEMENU_CREATE_OFFSET_CORNER + n.height() / 2) : r.x += o.width() / 2 + ORYX.CONFIG.SHAPEMENU_CREATE_OFFSET + n.width() / 2, this.shape.bounds.centerMoveTo(r), this.shape instanceof ORYX.Core.Node && (this.shape.dockers || []).each(function(e) {
        e.bounds.centerMoveTo(r)
      }), this.position = r, this.edge && (this.sourceRefPos = this.edge.dockers.first().referencePoint, this.targetRefPos = this.edge.dockers.last().referencePoint)
    }
    this.facade.getCanvas().update(), this.facade.updateSelection()
  },
  rollback: function() {
    this.facade.deleteShape(this.shape), this.edge && this.facade.deleteShape(this.edge), this.facade.setSelection(this.facade.getSelection().without(this.shape, this.edge))
  }
}), angular.module("activitiModeler").controller("ToolbarController", ["$scope", "$http", "$modal", "$q", "$rootScope", "$translate", "$location", "ProcessScopeService", function(e, t, i, o, n, r, s, a) {
  e.editorFactory.promise.then(function() {
    var t = KISBPM.TOOLBAR_CONFIG.items;
    e.items = [];
    for (var i = 0; t.length > i; i++) "form" === n.modelData.model.modelType ? t[i].disableInForm || e.items.push(t[i]) : e.items.push(t[i])
  }), e.secondaryItems = KISBPM.TOOLBAR_CONFIG.secondaryItems;
  var l = function(e, t) {
    for (var i = Array.prototype.slice.call(arguments).splice(2), o = e.split("."), n = o.pop(), r = 0; o.length > r; r++) t = t[o[r]];
    return t[n].apply(this, i)
  };
  e.toolbarButtonClicked = function(s) {
    var d = e.items[s],
      c = {
        $scope: e,
        $rootScope: n,
        $http: t,
        $modal: i,
        $q: o,
        $translate: r,
        ProcessScopeService: a
      };
    l(d.action, window, c);
    var p = {
      type: KISBPM.eventBus.EVENT_TYPE_TOOLBAR_BUTTON_CLICKED,
      toolbarItem: d
    };
    KISBPM.eventBus.dispatch(p.type, p)
  }, e.toolbarSecondaryButtonClicked = function(n) {
    var d = e.secondaryItems[n],
      c = {
        $scope: e,
        $http: t,
        $modal: i,
        $q: o,
        $translate: r,
        $location: s,
        ProcessScopeService: a
      };
    l(d.action, window, c)
  }, Mousetrap.bind(["command+z", "ctrl+z"], function() {
    var s = {
      $scope: e,
      $rootScope: n,
      $http: t,
      $modal: i,
      $q: o,
      $translate: r,
      ProcessScopeService: a
    };
    return KISBPM.TOOLBAR.ACTIONS.undo(s), !1
  }), Mousetrap.bind(["command+y", "ctrl+y"], function() {
    var s = {
      $scope: e,
      $rootScope: n,
      $http: t,
      $modal: i,
      $q: o,
      $translate: r,
      ProcessScopeService: a
    };
    return KISBPM.TOOLBAR.ACTIONS.redo(s), !1
  }), Mousetrap.bind(["command+c", "ctrl+c"], function() {
    var s = {
      $scope: e,
      $rootScope: n,
      $http: t,
      $modal: i,
      $q: o,
      $translate: r,
      ProcessScopeService: a
    };
    return KISBPM.TOOLBAR.ACTIONS.copy(s), !1
  }), Mousetrap.bind(["command+v", "ctrl+v"], function() {
    var s = {
      $scope: e,
      $rootScope: n,
      $http: t,
      $modal: i,
      $q: o,
      $translate: r,
      ProcessScopeService: a
    };
    return KISBPM.TOOLBAR.ACTIONS.paste(s), !1
  }), Mousetrap.bind(["del"], function() {
    var s = {
      $scope: e,
      $rootScope: n,
      $http: t,
      $modal: i,
      $q: o,
      $translate: r,
      ProcessScopeService: a
    };
    return KISBPM.TOOLBAR.ACTIONS.deleteItem(s), !1
  }), e.undoStack = [], e.redoStack = [], e.editorFactory.promise.then(function() {
    e.editor.registerOnEvent(ORYX.CONFIG.EVENT_EXECUTE_COMMANDS, function(t) {
      if (t.commands) {
        e.undoStack.push(t.commands), e.redoStack = [];
        for (var i = 0; e.items.length > i; i++) {
          var o = e.items[i];
          "KISBPM.TOOLBAR.ACTIONS.undo" === o.action ? o.enabled = !0 : "KISBPM.TOOLBAR.ACTIONS.redo" === o.action && (o.enabled = !1)
        }
        e.editor.getCanvas().update(), e.editor.updateSelection()
      }
    })
  }), e.editorFactory.promise.then(function() {
    e.editor.registerOnEvent(ORYX.CONFIG.EVENT_SELECTION_CHANGED, function(t) {
      for (var i = t.elements, o = 0; e.items.length > o; o++) {
        var n = e.items[o];
        if (n.enabledAction && "element" === n.enabledAction) {
          var r = 1;
          n.minSelectionCount && (r = n.minSelectionCount), i.length >= r && !n.enabled ? e.safeApply(function() {
            n.enabled = !0
          }) : 0 == i.length && n.enabled && e.safeApply(function() {
            n.enabled = !1
          })
        }
      }
    })
  })
}]), angular.module("activitiModeler").controller("HeaderController", ["$rootScope", "$scope", "$http", "$timeout", function(e, t) {
  t.headerConfig = KISBPM.HEADER_CONFIG
}]), angular.module("activitiModeler").controller("KisBpmShapeSelectionCtrl", ["$rootScope", "$scope", "ProcessScopeService", function(e, t, i) {
  t.currentSelectedMorph = void 0, t.availableMorphShapes = [];
  for (var o = 0; t.morphShapes.length > o; o++) t.morphShapes[o].id != t.currentSelectedShape.getStencil().idWithoutNs() && t.availableMorphShapes.push(t.morphShapes[o]);
  t.gridOptions = {
    data: t.availableMorphShapes,
    headerRowHeight: 28,
    enableRowSelection: !0,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableColumnMenus: !1,
    enableSorting: !1,
    columnDefs: [{
      field: "objectId",
      displayName: "Icon",
      width: 50,
      cellTemplate: "editor-app/popups/icon-template.html?version=" + Date.now()
    }, {
      field: "name",
      displayName: "Name",
      cellTemplate: '<div class="ui-grid-cell-contents">{{"" + row.entity[col.field] | translate}}</div>'
    }]
  }, t.gridOptions.onRegisterApi = function(e) {
    t.gridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
      t.currentSelectedMorph = e.isSelected ? e.entity : void 0
    })
  }, t.select = function() {
    if (t.currentSelectedMorph) {
      var e = ORYX.Core.Command.extend({
          construct: function(e, t, i) {
            this.shape = e, this.stencil = t, this.facade = i
          },
          execute: function() {
            var e = this.shape,
              t = this.stencil,
              o = e.resourceId,
              n = e.serialize();
            t.properties().each(function(e) {
              e.readonly() && (n = n.reject(function(t) {
                return t.name == e.id()
              }))
            }.bind(this)), this.newShape ? (newShape = this.newShape, this.facade.getCanvas().add(newShape)) : newShape = this.facade.createShape({
              type: t.id(),
              namespace: t.namespace(),
              resourceId: o
            });
            var r = n.find(function(e) {
                return "oryx" === e.prefix && "bounds" === e.name
              }),
              s = null;
            if (this.facade.getRules().preserveBounds(e.getStencil())) {
              var a = e.bounds.height(),
                l = e.bounds.width();
              newShape.minimumSize && (e.bounds.height() < newShape.minimumSize.height && (a = newShape.minimumSize.height), e.bounds.width() < newShape.minimumSize.width && (l = newShape.minimumSize.width)), newShape.maximumSize && (e.bounds.height() > newShape.maximumSize.height && (a = newShape.maximumSize.height), e.bounds.width() > newShape.maximumSize.width && (l = newShape.maximumSize.width)), s = {
                a: {
                  x: e.bounds.a.x,
                  y: e.bounds.a.y
                },
                b: {
                  x: e.bounds.a.x + l,
                  y: e.bounds.a.y + a
                }
              }
            } else {
              var d = r.value.split(",");
              if (parseInt(d[0], 10) > parseInt(d[2], 10)) {
                var c = d[0];
                d[0] = d[2], d[2] = c, c = d[1], d[1] = d[3], d[3] = c
              }
              d[2] = parseInt(d[0], 10) + newShape.bounds.width(), d[3] = parseInt(d[1], 10) + newShape.bounds.height(), r.value = d.join(",")
            }
            var p = e.bounds.center();
            null !== s && newShape.bounds.set(s), this.setRelatedDockers(e, newShape);
            var u = e.node.parentNode,
              h = e.node.nextSibling;
            this.facade.deleteShape(e), newShape.deserialize(n), e.getStencil().property("oryx-bgcolor") && e.properties["oryx-bgcolor"] && e.getStencil().property("oryx-bgcolor").value().toUpperCase() == e.properties["oryx-bgcolor"].toUpperCase() && newShape.getStencil().property("oryx-bgcolor") && newShape.setProperty("oryx-bgcolor", newShape.getStencil().property("oryx-bgcolor").value()), null !== s && newShape.bounds.set(s), "edge" !== newShape.getStencil().type() && 0 != newShape.dockers.length && newShape.dockers[0].getDockedShape() || newShape.bounds.centerMoveTo(p), "node" !== newShape.getStencil().type() || 0 != newShape.dockers.length && newShape.dockers[0].getDockedShape() || this.setRelatedDockers(newShape, newShape), h ? u.insertBefore(newShape.node, h) : u.appendChild(newShape.node), this.facade.setSelection([newShape]), this.facade.getCanvas().update(), this.facade.updateSelection(), this.newShape = newShape, i.refresh()
          },
          rollback: function() {
            this.shape && this.newShape && this.newShape.parent && (this.newShape.parent.add(this.shape), this.setRelatedDockers(this.newShape, this.shape), this.facade.deleteShape(this.newShape), this.facade.setSelection([this.shape]), this.facade.getCanvas().update(), this.facade.updateSelection(), i.refresh())
          },
          setRelatedDockers: function(e, t) {
            "node" === e.getStencil().type() ? ((e.incoming || []).concat(e.outgoing || []).each(function(i) {
              i.dockers.each(function(o) {
                if (o.getDockedShape() == e) {
                  var n = Object.clone(o.referencePoint),
                    r = {
                      x: n.x * t.bounds.width() / e.bounds.width(),
                      y: n.y * t.bounds.height() / e.bounds.height()
                    };
                  if (o.setDockedShape(t), o.setReferencePoint(r), i instanceof ORYX.Core.Edge) o.bounds.centerMoveTo(r);
                  else {
                    var s = e.absoluteXY();
                    o.bounds.centerMoveTo({
                      x: r.x + s.x,
                      y: r.y + s.y
                    })
                  }
                }
              })
            }), e.dockers.length > 0 && e.dockers.first().getDockedShape() && (t.dockers.first().setDockedShape(e.dockers.first().getDockedShape()), t.dockers.first().setReferencePoint(Object.clone(e.dockers.first().referencePoint)))) : (t.dockers.first().setDockedShape(e.dockers.first().getDockedShape()), t.dockers.first().setReferencePoint(e.dockers.first().referencePoint), t.dockers.last().setDockedShape(e.dockers.last().getDockedShape()), t.dockers.last().setReferencePoint(e.dockers.last().referencePoint))
          }
        }),
        o = void 0,
        n = t.editor.getStencilSets().values(),
        r = t.currentSelectedMorph.id;
      t.currentSelectedMorph.genericTaskId && (r = t.currentSelectedMorph.genericTaskId);
      for (var s = 0; n.length > s; s++)
        for (var a = n[s], l = a.nodes(), d = 0; l.length > d; d++)
          if (l[d].idWithoutNs() === r) {
            o = l[d];
            break
          }
      if (!o) return;
      var c = new e(t.currentSelectedShape, o, t.editor);
      t.editor.executeCommands([c])
    }
    t.close()
  }, t.cancel = function() {
    t.$hide()
  }, t.close = function() {
    t.$hide()
  }
}]);
var KisBpmDefineDataCtrl = ["$rootScope", "$scope", "dialog", "$timeout", "$translate", function(e, t, i, o) {
  t.definedDataItems = [], t.selectedDataItems = [], t.gridOptions = {
    data: "definedDataItems",
    enableRowSelection: !0,
    headerRowHeight: 28,
    multiSelect: !1,
    keepLastSelected: !1,
    selectedItems: t.selectedDataItems,
    enableHorizontalScrollbar: 0,
    enableColumnMenus: !1,
    enableSorting: !1,
    columnDefs: [{
      field: "name",
      displayName: "Name"
    }, {
      field: "value",
      displayName: "Value"
    }]
  }, t.addNewDataItem = function() {
    t.definedDataItems.push({
      name: "",
      value: ""
    })
  }, t.removeDataItem = function() {
    if (t.selectedDataItems.length > 0) {
      var e = t.definedDataItems.indexOf(t.selectedDataItems[0]);
      t.gridOptions.selectItem(e, !1), t.definedDataItems.splice(e, 1), t.selectedDataItems.length = 0, t.definedDataItems.length > e ? t.gridOptions.selectItem(e + 1, !0) : t.definedDataItems.length > 0 && t.gridOptions.selectItem(e - 1, !0)
    }
  }, t.moveDataItemUp = function() {
    if (t.selectedParameters.length > 0) {
      var e = t.definedDataItems.indexOf(t.selectedDataItems[0]);
      if (0 != e) {
        var i = t.definedDataItems[e];
        t.definedDataItems.splice(e, 1), o(function() {
          t.definedDataItems.splice(e + -1, 0, i)
        }, 100)
      }
    }
  }, t.moveDataItemDown = function() {
    if (t.selectedParameters.length > 0) {
      var e = t.definedDataItems.indexOf(t.selectedDataItems[0]);
      if (e != t.definedDataItems.length - 1) {
        var i = t.definedDataItems[e];
        t.definedDataItems.splice(e, 1), o(function() {
          t.definedDataItems.splice(e + 1, 0, i)
        }, 100)
      }
    }
  }, t.save = function() {
    i.close()
  }, t.cancel = function() {
    i.close()
  }, t.close = function() {
    i.close()
  }
}];
angular.module("activitiModeler").controller("KisBpmValidationPopupCtrl", ["$rootScope", "$scope", "$timeout", "$translate", function(e, t) {
  t.shapeValidationErrors = [];
  for (var i = 0; e.validationErrors.length > i; i++)(e.isOnProcessLevel && !e.validationErrors[i].id || 0 == e.isOnProcessLevel && (e.validationErrors[i].id === t.currentValidationId || e.validationErrors[i].id === t.originalValidationId)) && t.shapeValidationErrors.push(e.validationErrors[i]);
  t.gridOptions = {
    data: t.shapeValidationErrors,
    headerRowHeight: 28,
    enableRowSelection: !1,
    enableCellSelection: !0,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    modifierKeysToMultiSelect: !1,
    enableColumnMenus: !1,
    enableSorting: !1,
    columnDefs: [{
      field: "defaultDescription",
      displayName: "Description",
      cellTemplate: '<div class="ui-grid-cell-contents" style="white-space: nowrap; text-overflow: ellipsis; overflow: hidden;" title="{{row.entity[col.field]}}">{{row.entity[col.field]}}</div>'
    }, {
      field: "warning",
      displayName: "Warning",
      width: 100
    }, {
      field: "validatorSetName",
      displayName: "Validator set",
      width: 200
    }]
  }, t.ok = function() {
    t.$hide()
  }, t.close = function() {
    t.$hide()
  }
}]);
var ACTIVITI_EDITOR_TOUR = {
    gettingStarted: function(e, t, i, o) {
      var n;
      n = e.account.firstName ? e.account.firstName : e.account.fullname, i.all([t("TOUR.WELCOME-TITLE", {
          userName: n
        }), t("TOUR.WELCOME-CONTENT"), t("TOUR.PALETTE-TITLE"), t("TOUR.PALETTE-CONTENT"), t("TOUR.CANVAS-TITLE"), t("TOUR.CANVAS-CONTENT"), t("TOUR.DRAGDROP-TITLE"), t("TOUR.DRAGDROP-CONTENT"), t("TOUR.PROPERTIES-TITLE"), t("TOUR.PROPERTIES-CONTENT"), t("TOUR.TOOLBAR-TITLE"), t("TOUR.TOOLBAR-CONTENT"), t("TOUR.END-TITLE"), t("TOUR.END-CONTENT")]).then(function(e) {
        var t = ["body", "#paletteHelpWrapper", "#canvasHelpWrapper", "#propertiesHelpWrapper", "#editor-header"],
          i = new Tour({
            name: "activitiEditorTour",
            storage: o ? window.localStorage : !1,
            container: "body",
            backdrop: !0,
            keyboard: !0,
            steps: [{
              orphan: !0,
              title: e[0],
              content: e[1],
              template: ACTIVITI_EDITOR_TOUR._buildStepTemplate(!1, !0, !1, 300),
              onNext: ACTIVITI_EDITOR_TOUR._buildOnNextFunction(t[0])
            }, {
              element: t[1],
              title: e[2],
              content: e[3],
              template: ACTIVITI_EDITOR_TOUR._buildStepTemplate(!1, !0, !1, 400, "images/tour/open-group.gif"),
              onNext: ACTIVITI_EDITOR_TOUR._buildOnNextFunction(t[1])
            }, {
              element: t[2],
              title: e[4],
              content: e[5],
              placement: "left",
              template: ACTIVITI_EDITOR_TOUR._buildStepTemplate(!1, !0, !1),
              onNext: ACTIVITI_EDITOR_TOUR._buildOnNextFunction(t[2])
            }, {
              orphan: !0,
              title: e[6],
              content: e[7],
              template: ACTIVITI_EDITOR_TOUR._buildStepTemplate(!1, !0, !1, 720, "images/tour/tour-dnd.gif"),
              onNext: ACTIVITI_EDITOR_TOUR._buildOnNextFunction(t[0])
            }, {
              element: t[3],
              title: e[8],
              content: e[9],
              placement: "top",
              template: ACTIVITI_EDITOR_TOUR._buildStepTemplate(!1, !0, !1, 400),
              onNext: ACTIVITI_EDITOR_TOUR._buildOnNextFunction(t[3])
            }, {
              element: t[4],
              title: e[10],
              content: e[11],
              placement: "bottom",
              template: ACTIVITI_EDITOR_TOUR._buildStepTemplate(!1, !0, !1, 400),
              onNext: ACTIVITI_EDITOR_TOUR._buildOnNextFunction(t[4])
            }, {
              orphan: !0,
              title: e[12],
              content: e[13],
              template: ACTIVITI_EDITOR_TOUR._buildStepTemplate(!1, !1, !0, 400),
              onNext: ACTIVITI_EDITOR_TOUR._buildOnNextFunction(t[0])
            }],
            onEnd: ACTIVITI_EDITOR_TOUR._buildOnEndFunction(t)
          });
        i.init(), i.start()
      })
    },
    sequenceFlowBendpoint: function(e, t, i, o) {
      i.all([t("FEATURE-TOUR.BENDPOINT.TITLE"), t("FEATURE-TOUR.BENDPOINT.DESCRIPTION")]).then(function(e) {
        var t = ["body"],
          i = new Tour({
            name: "bendpointTour",
            storage: o ? window.localStorage : !1,
            container: "body",
            backdrop: !0,
            keyboard: !0,
            steps: [{
              orphan: !0,
              title: e[0],
              content: e[1],
              template: ACTIVITI_EDITOR_TOUR._buildStepTemplate(!1, !1, !0, 500, "images/tour/sequenceflow-bendpoint.gif"),
              onNext: ACTIVITI_EDITOR_TOUR._buildOnNextFunction(t[0])
            }],
            onEnd: ACTIVITI_EDITOR_TOUR._buildOnEndFunction(t)
          });
        i.init(), i.start()
      })
    },
    _buildStepTemplate: function(e, t, i, o, n) {
      var r = 200;
      o && (r = o);
      var s = "<div class='popover tour' style='max-width:" + r + "px'>" + "<div class='arrow'></div>" + "<h3 class='popover-title'></h3>" + "<div class='popover-content'></div>" + "<div class='popover-navigation'>";
      return n && (s = s + "<div><img src='" + n + "' style='border 1px solid black;margin:5px 0 5px 0;'></img></div>"), e && (s += "<button class='btn btn-sm btn-default ' data-role='prev'>« Prev</button>"), t && (s += "<button class='btn btn-sm btn-default' data-role='next' style='float:right'\">Next »</button>"), i && (s += "<button class='btn btn-warning btn-sm' data-role='end' style='float:right'\">Got it!</button>"), s = s + "</div>" + "</nav>" + "</div>"
    },
    _buildOnNextFunction: function(e) {
      return function() {
        jQuery(e).each(function(e, t) {
          t.style.display = "block"
        })
      }
    },
    _buildOnEndFunction: function(e) {
      return function() {
        for (var t = 0; e.length > t; t++) jQuery(e[t]).each(function(e, t) {
          t.style.display = "block"
        })
      }
    }
  },
  EDITOR = EDITOR || {};
EDITOR.UTIL = {
  getParameterByName: function(e) {
    e = e.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var t = RegExp("[\\?&]" + e + "=([^&#]*)"),
      i = t.exec(location.search);
    return null == i ? "" : decodeURIComponent(i[1].replace(/\+/g, " "))
  },
  collectPropertiesFromPrecedingElements: function(e, t) {
    var i = [],
      o = [];
    return EDITOR.UTIL._visitElementAndCollectProperty(e, t, i, o), o
  },
  collectElementsFromPrecedingElements: function(e, t) {
    var i = [],
      o = [],
      n = e.getIncomingShapes();
    if (n)
      for (var r = 0; n.length > r; r++) {
        var s = n[r];
        0 > i.indexOf(s.id) && EDITOR.UTIL._visitElementAndCollectElement(s, t, i, o)
      }
    return o
  },
  collectShapes: function(e, t) {
    var i = [];
    if (e && e.length > 0)
      for (var o = 0; e.length > o; o++) EDITOR.UTIL._visitShapeAndCollectShape(e[o], t, i);
    return i
  },
  collectSortedElementsFromPrecedingElements: function(e) {
    var t = [],
      i = [];
    t.push(e.id);
    var o = e.getStencil().id();
    o && i.push(e);
    var n = e.getIncomingShapes();
    if (n)
      for (var r = 0; n.length > r; r++) {
        var s = n[r];
        0 > t.indexOf(s.id) && EDITOR.UTIL._visitElementAndCollectAllElement(s, t, i)
      }
    return i.reverse()
  },
  _visitShapeAndCollectShape: function(e, t, i) {
    if (e.childShapes && e.childShapes.length > 0)
      for (var o = 0; e.childShapes.length > o; o++) EDITOR.UTIL._visitShapeAndCollectShape(e.childShapes[o], t, i);
    e.stencil && e.stencil.id === t && i.push(e)
  },
  _visitElementAndCollectProperty: function(e, t, i, o) {
    i.push(e.id);
    var n = e.properties[t];
    n && o.push(n);
    var r = e.getIncomingShapes();
    if (r)
      for (var s = 0; r.length > s; s++) {
        var a = r[s];
        0 > i.indexOf(a.id) && EDITOR.UTIL._visitElementAndCollectProperty(a, t, i, o)
      }
    var l = e.getChildShapes();
    if (l)
      for (var s = 0; l.length > s; s++) {
        var d = l[s];
        0 > i.indexOf(d.id) && EDITOR.UTIL._visitElementAndCollectProperty(d, t, i, o)
      }
  },
  _visitElementAndCollectElement: function(e, t, i, o) {
    i.push(e.id);
    var n = e.getStencil().id();
    n && n.indexOf(t) >= 0 && o.push(e);
    var r = e.getIncomingShapes();
    if (r)
      for (var s = 0; r.length > s; s++) {
        var a = r[s];
        0 > i.indexOf(a.id) && EDITOR.UTIL._visitElementAndCollectElement(a, t, i, o)
      }
    var l = e.getChildShapes();
    if (l)
      for (var s = 0; l.length > s; s++) {
        var d = l[s];
        0 > i.indexOf(d.id) && EDITOR.UTIL._visitElementAndCollectElement(d, t, i, o)
      }
  },
  _visitElementAndCollectAllElement: function(e, t, i) {
    t.push(e.id);
    var o = e.getStencil().id();
    o && i.push(e);
    var n = e.getIncomingShapes();
    if (n)
      for (var r = 0; n.length > r; r++) {
        var s = n[r];
        0 > t.indexOf(s.id) && EDITOR.UTIL._visitElementAndCollectAllElement(s, t, i)
      }
    var a = e.getChildShapes();
    if (a)
      for (var r = 0; a.length > r; r++) {
        var l = a[r];
        0 > t.indexOf(l.id) && EDITOR.UTIL._visitElementAndCollectAllElement(l, t, i)
      }
    var d = e.getParentShape();
    if (d) try {
      var c = d.getIncomingShapes();
      if (c)
        for (var r = 0; c.length > r; r++) {
          var p = c[r];
          0 > t.indexOf(p.id) && EDITOR.UTIL._visitElementAndCollectAllElement(p, t, i)
        }
    } catch (u) {}
  },
  getPropertyFromParent: function(e, t) {
    return e.parent ? EDITOR.UTIL._getPropertyFromParent(e.parent, t) : void 0
  },
  _getPropertyFromParent: function(e, t) {
    var i = e.properties[t];
    return i ? i : e.parent ? EDITOR.UTIL._getPropertyFromParent(e.parent, t) : void 0
  },
  extractSortedStepsOfType: function(e, t) {
    var i = [],
      o = EDITOR.UTIL.extractSortedSteps(e);
    if (o && o.length > 0)
      for (var n = 0; o.length > n; n++) o[n].stencil && o[n].stencil.id === t && i.push(o[n]);
    return i
  },
  extractSortedSteps: function(e) {
    var t = {},
      i = [];
    if (e && e.length > 0) {
      for (var o = 0; e.length > o; o++) t[e[o].resourceId] = e[o];
      EDITOR.UTIL.getOutgoingElements(e[0], t, i, !0)
    }
    return i
  },
  getOutgoingElements: function(e, t, i, o) {
    if (e && t)
      if (e.outgoing && e.outgoing.length > 0)
        for (var n = 0; e.outgoing.length > n; n++) o && EDITOR.UTIL._elementIsStep(e) ? (e.id = e.resourceId, i.push(e)) : o || (e.id = e.resourceId, i.push(e)), EDITOR.UTIL.getOutgoingElements(t[e.outgoing[n].resourceId], t, i);
      else o && EDITOR.UTIL._elementIsStep(e) ? (e.id = e.resourceId, i.push(e)) : o || (e.id = e.resourceId, i.push(e))
  },
  _elementIsStep: function(e) {
    var t = !1;
    return e && e.stencil && "SequenceFlow" != e.stencil.id && (t = !0), t
  }
};
var KISBPM = KISBPM || {};
KISBPM.TOOLBAR = {
  ACTIONS: {
    showValidation: function(e, t) {
      var i = {
        type: KISBPM.eventBus.EVENT_TYPE_SHOW_VALIDATION_POPUP,
        validationId: e,
        onProcessLevel: t
      };
      KISBPM.eventBus.dispatch(KISBPM.eventBus.EVENT_TYPE_SHOW_VALIDATION_POPUP, i)
    },
    saveModel: function(e) {
      _internalCreateModal({
        backdrop: !0,
        keyboard: !0,
        template: "editor-app/popups/save-model.html?version=" + Date.now(),
        scope: e.$scope
      }, e.$modal, e.$scope)
    },
    validateModel: function(e) {
      var t = e.$scope,
        i = t.editor.getModelMetaData(),
        o = t.editor.getJSON();
      o = JSON.stringify(o);
      var n = {
        modeltype: i.model.modelType,
        json_xml: o,
        name: "model",
        parentProcessScopeIdentifiers: JSON.stringify(e.ProcessScopeService.getParentIdentifiers())
      };
      e.$http({
        method: "POST",
        data: n,
        headers: {
          Accept: "application/json",
          "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8"
        },
        transformRequest: function(e) {
          var t = [];
          for (var i in e) t.push(encodeURIComponent(i) + "=" + encodeURIComponent(e[i]));
          return t.join("&")
        },
        url: KISBPM.URL.validateModel(i.modelId)
      }).success(function(t) {
        return e.$rootScope.hideValidationIcons(!0), 0 == t.length ? (e.$rootScope.validationErrors = [], e.$rootScope.addAlertPromise(e.$translate("MODELER.ALERT.VALIDATION-OK"), "info"), void 0) : (e.$rootScope.validationErrors = t, e.$rootScope.addAlertPromise(e.$translate("MODELER.ALERT.VALIDATION-ERROR"), "error"), e.$rootScope.showValidationIcons(), void 0)
      }).error(function(e) {
        console.log("Error while validating model:" + JSON.stringify(e))
      })
    },
    undo: function(e) {
      var t = e.$scope.undoStack.pop();
      if (t) {
        e.$scope.redoStack.push(t), e.$rootScope && e.$rootScope.forceSelectionRefresh && (e.$rootScope.forceSelectionRefresh = !0);
        for (var i = t.length - 1; i >= 0; --i) t[i].rollback();
        e.$scope.editor.handleEvents({
          type: ORYX.CONFIG.EVENT_UNDO_ROLLBACK,
          commands: t
        }), e.$scope.editor.getCanvas().update(), e.$scope.editor.updateSelection(), e.$rootScope.showValidationIcons()
      }
      var o = !1;
      0 == e.$scope.undoStack.length && (o = !0);
      var n = !1;
      if (e.$scope.redoStack.length > 0 && (n = !0), o || n)
        for (var i = 0; e.$scope.items.length > i; i++) {
          var r = e.$scope.items[i];
          o && "KISBPM.TOOLBAR.ACTIONS.undo" === r.action ? e.$scope.safeApply(function() {
            r.enabled = !1
          }) : n && "KISBPM.TOOLBAR.ACTIONS.redo" === r.action && e.$scope.safeApply(function() {
            r.enabled = !0
          })
        }
    },
    redo: function(e) {
      var t = e.$scope.redoStack.pop();
      t && (e.$scope.undoStack.push(t), e.$rootScope && e.$rootScope.forceSelectionRefresh && (e.$rootScope.forceSelectionRefresh = !0), t.each(function(e) {
        e.execute()
      }), e.$scope.editor.handleEvents({
        type: ORYX.CONFIG.EVENT_UNDO_EXECUTE,
        commands: t
      }), e.$scope.editor.getCanvas().update(), e.$scope.editor.updateSelection(), e.$rootScope.showValidationIcons());
      var i = !1;
      e.$scope.undoStack.length > 0 && (i = !0);
      var o = !1;
      if (0 == e.$scope.redoStack.length && (o = !0), i || o)
        for (var n = 0; e.$scope.items.length > n; n++) {
          var r = e.$scope.items[n];
          i && "KISBPM.TOOLBAR.ACTIONS.undo" === r.action ? e.$scope.safeApply(function() {
            r.enabled = !0
          }) : o && "KISBPM.TOOLBAR.ACTIONS.redo" === r.action && e.$scope.safeApply(function() {
            r.enabled = !1
          })
        }
    },
    cut: function(e) {
      KISBPM.TOOLBAR.ACTIONS._getOryxEditPlugin(e.$scope).editCut();
      for (var t = 0; e.$scope.items.length > t; t++) {
        var i = e.$scope.items[t];
        "KISBPM.TOOLBAR.ACTIONS.paste" === i.action && e.$scope.safeApply(function() {
          i.enabled = !0
        })
      }
    },
    copy: function(e) {
      KISBPM.TOOLBAR.ACTIONS._getOryxEditPlugin(e.$scope).editCopy();
      for (var t = 0; e.$scope.items.length > t; t++) {
        var i = e.$scope.items[t];
        "KISBPM.TOOLBAR.ACTIONS.paste" === i.action && e.$scope.safeApply(function() {
          i.enabled = !0
        })
      }
    },
    paste: function(e) {
      KISBPM.TOOLBAR.ACTIONS._getOryxEditPlugin(e.$scope).editPaste()
    },
    deleteItem: function(e) {
      KISBPM.TOOLBAR.ACTIONS._getOryxEditPlugin(e.$scope).editDelete()
    },
    addBendPoint: function(e) {
      ACTIVITI_EDITOR_TOUR.sequenceFlowBendpoint(e.$scope, e.$translate, e.$q, !0);
      var t = KISBPM.TOOLBAR.ACTIONS._getOryxDockerPlugin(e.$scope),
        i = !t.enabledAdd();
      t.setEnableAdd(i), i ? (t.setEnableRemove(!1), document.body.style.cursor = "pointer") : document.body.style.cursor = "default"
    },
    removeBendPoint: function(e) {
      ACTIVITI_EDITOR_TOUR.sequenceFlowBendpoint(e.$scope, e.$translate, e.$q, !0);
      var t = KISBPM.TOOLBAR.ACTIONS._getOryxDockerPlugin(e.$scope),
        i = !t.enabledRemove();
      t.setEnableRemove(i), i ? (t.setEnableAdd(!1), document.body.style.cursor = "pointer") : document.body.style.cursor = "default"
    },
    _getOryxEditPlugin: function(e) {
      return (void 0 === e.oryxEditPlugin || null === e.oryxEditPlugin) && (e.oryxEditPlugin = new ORYX.Plugins.Edit(e.editor)), e.oryxEditPlugin
    },
    zoomIn: function(e) {
      KISBPM.TOOLBAR.ACTIONS._getOryxViewPlugin(e.$scope).zoom([1 + ORYX.CONFIG.ZOOM_OFFSET])
    },
    zoomOut: function(e) {
      KISBPM.TOOLBAR.ACTIONS._getOryxViewPlugin(e.$scope).zoom([1 - ORYX.CONFIG.ZOOM_OFFSET])
    },
    zoomActual: function(e) {
      KISBPM.TOOLBAR.ACTIONS._getOryxViewPlugin(e.$scope).setAFixZoomLevel(1)
    },
    zoomFit: function(e) {
      KISBPM.TOOLBAR.ACTIONS._getOryxViewPlugin(e.$scope).zoomFitToModel()
    },
    alignVertical: function(e) {
      KISBPM.TOOLBAR.ACTIONS._getOryxArrangmentPlugin(e.$scope).alignShapes([ORYX.CONFIG.EDITOR_ALIGN_MIDDLE])
    },
    alignHorizontal: function(e) {
      KISBPM.TOOLBAR.ACTIONS._getOryxArrangmentPlugin(e.$scope).alignShapes([ORYX.CONFIG.EDITOR_ALIGN_CENTER])
    },
    sameSize: function(e) {
      KISBPM.TOOLBAR.ACTIONS._getOryxArrangmentPlugin(e.$scope).alignShapes([ORYX.CONFIG.EDITOR_ALIGN_SIZE])
    },
    help: function(e) {
      ACTIVITI_EDITOR_TOUR.gettingStarted(e.$scope, e.$translate, e.$q)
    },
    feedback: function(e) {
      var t = {
        template: "editor-app/configuration/properties/feedback-popup.html?version=" + Date.now(),
        scope: e.$scope
      };
      _internalCreateModal(t, e.$modal, e.scope)
    },
    _getOryxViewPlugin: function(e) {
      return (void 0 === e.oryxViewPlugin || null === e.oryxViewPlugin) && (e.oryxViewPlugin = new ORYX.Plugins.View(e.editor)), e.oryxViewPlugin
    },
    _getOryxArrangmentPlugin: function(e) {
      return (void 0 === e.oryxArrangmentPlugin || null === e.oryxArrangmentPlugin) && (e.oryxArrangmentPlugin = new ORYX.Plugins.Arrangement(e.editor)), e.oryxArrangmentPlugin
    },
    _getOryxDockerPlugin: function(e) {
      return (void 0 === e.oryxDockerPlugin || null === e.oryxDockerPlugin) && (e.oryxDockerPlugin = new ORYX.Plugins.AddDocker(e.editor)), e.oryxDockerPlugin
    }
  }
}, angular.module("activitiModeler").controller("SaveModelCtrl", ["$rootScope", "$scope", "$http", "$route", "ProcessScopeService", function(e, t, i, o, n) {
  var r = t.editor.getModelMetaData(),
    s = "";
  r.description && (s = r.description);
  var a = {
    name: r.name,
    description: s,
    newVersion: !1,
    comment: "",
    validationErrors: !1
  };
  t.saveDialog = a;
  var l = t.editor.getJSON();
  l = JSON.stringify(l);
  var d = {
    modeltype: r.model.modelType,
    json_xml: l,
    name: "model",
    parentProcessScopeIdentifiers: JSON.stringify(n.getParentIdentifiers())
  };
  i({
    method: "POST",
    data: d,
    headers: {
      Accept: "application/json",
      "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8"
    },
    transformRequest: function(e) {
      var t = [];
      for (var i in e) t.push(encodeURIComponent(i) + "=" + encodeURIComponent(e[i]));
      return t.join("&")
    },
    url: KISBPM.URL.validateModel(r.modelId)
  }).success(function(i) {
    return e.hideValidationIcons(!0), 0 == i.length ? (e.validationErrors = [], void 0) : (e.validationErrors = i, t.saveDialog.validationErrors = !0, e.showValidationIcons(), void 0)
  }).error(function(e) {
    console.log("Error while validating model:" + JSON.stringify(e))
  }), t.status = {
    loading: !1
  }, t.close = function() {
    t.$hide()
  }, t.saveAndClose = function() {
    t.save(function() {
      n.navigateBack("/processes")
    })
  }, t.save = function(o) {
    if (t.saveDialog.name && 0 != t.saveDialog.name.length) {
      t.status = {
        loading: !0
      }, e.hideValidationIcons(!0), r.name = t.saveDialog.name, r.description = t.saveDialog.description;
      var n = t.editor.getJSON();
      n = JSON.stringify(n);
      var s = {
        modeltype: r.model.modelType,
        json_xml: n,
        name: t.saveDialog.name,
        description: t.saveDialog.description,
        newversion: t.saveDialog.newVersion,
        comment: t.saveDialog.comment,
        lastUpdated: r.lastUpdated
      };
      t.error && t.error.isConflict && (s.conflictResolveAction = t.error.conflictResolveAction, "saveAs" === t.error.conflictResolveAction && (s.saveAs = t.error.saveAs)), i({
        method: "POST",
        data: s,
        ignoreErrors: !0,
        headers: {
          Accept: "application/json",
          "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8"
        },
        transformRequest: function(e) {
          var t = [];
          for (var i in e) t.push(encodeURIComponent(i) + "=" + encodeURIComponent(e[i]));
          return t.join("&")
        },
        url: KISBPM.URL.putModel(r.modelId)
      }).success(function(i) {
        t.editor.handleEvents({
          type: ORYX.CONFIG.EVENT_SAVED
        }), t.modelData.name = t.saveDialog.name, t.modelData.lastUpdated = i.lastUpdated, e.showValidationIcons(), t.status.loading = !1, t.$hide();
        var n = {
          type: KISBPM.eventBus.EVENT_TYPE_MODEL_SAVED,
          model: s,
          modelId: r.modelId,
          eventType: "update-model"
        };
        KISBPM.eventBus.dispatch(KISBPM.eventBus.EVENT_TYPE_MODEL_SAVED, n), t.error = void 0, t.status.loading = !1, o && o()
      }).error(function(e, i) {
        t.error = {}, 409 == i ? (t.error.isConflict = !0, t.error.userFullName = e.customData.userFullName, t.error.isNewVersionAllowed = e.customData.newVersionAllowed, t.error.saveAs = r.name + "_2") : console.log("Something went wrong when updating the process model:" + JSON.stringify(e)), t.status.loading = !1
      })
    }
  }, t.isOkButtonDisabled = function() {
    return t.status.loading ? !1 : t.error && t.error.conflictResolveAction ? "saveAs" === t.error.conflictResolveAction ? !t.error.saveAs || 0 == t.error.saveAs.length : !1 : !0
  }, t.okClicked = function() {
    t.error && ("discardChanges" === t.error.conflictResolveAction ? (t.close(), o.reload()) : "overwrite" === t.error.conflictResolveAction || "newVersion" === t.error.conflictResolveAction ? t.save() : "saveAs" === t.error.conflictResolveAction && t.save(function() {
      e.ignoreChanges = !0, n.navigateBack("/processes")
    }))
  }
}]), angular.module("activitiModeler").controller("BpmnFeedbackPopupCtrl", ["$scope", "$http", function(e, t) {
  e.model = {
    feedback: ""
  }, e.send = function() {
    var i = e.editor.getModelMetaData(),
      o = {
        modelId: i.modelId,
        feedback: e.model.feedback
      };
    t({
      method: "POST",
      data: o,
      headers: {
        Accept: "application/json"
      },
      url: KISBPM.URL.postFeedback()
    }), e.$hide()
  }, e.cancel = function() {
    e.$hide()
  }
}]), angular.module("activitiModeler").controller("KisBpmStringPropertyCtrl", ["$scope", function(e) {
  e.shapeId = e.selectedShape.id, e.valueFlushed = !1, e.inputBlurred = function() {
    e.valueFlushed = !0, e.property.value && (e.property.value = e.property.value.replace(/(<([^>]+)>)/gi, "")), e.updatePropertyInModel(e.property)
  }, e.enterPressed = function(t) {
    t && 13 === t.which && (t.preventDefault(), e.inputBlurred())
  }, e.$on("$destroy", function() {
    e.valueFlushed || (e.property.value && (e.property.value = e.property.value.replace(/(<([^>]+)>)/gi, "")), e.updatePropertyInModel(e.property, e.shapeId))
  })
}]), angular.module("activitiModeler").controller("KisBpmBooleanPropertyCtrl", ["$scope", function(e) {
  e.changeValue = function() {
    if ("oryx-defaultflow" === e.property.key && e.property.value) {
      var t = e.selectedShape;
      if (t) {
        var i = t.getIncomingShapes();
        if (i && i.length > 0) {
          var o = i[0],
            n = o.getOutgoingShapes();
          if (n && n.length > 1)
            for (var r = 0; n.length > r; r++)
              if (n[r].resourceId != t.resourceId) {
                var s = n[r].properties["oryx-defaultflow"];
                s && n[r].setProperty("oryx-defaultflow", !1, !0)
              }
        }
      }
    }
    e.updatePropertyInModel(e.property)
  }
}]), angular.module("activitiModeler").controller("KisBpmTextPropertyCtrl", ["$scope", "$modal", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/text-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("KisBpmTextPropertyPopupCtrl", ["$scope", function(e) {
  e.propertyValue = angular.copy(e.property.value), e.save = function() {
    e.property.value = e.propertyValue, e.updatePropertyInModel(e.property), e.close()
  }, e.$parent.$on("modal.hide.before", function() {
    e.close(), e.$parent.$apply()
  }), e.close = function() {
    e.property.mode = "read", e.$hide()
  }
}]), angular.module("activitiModeler").controller("BpmnScriptTextPropertyCtrl", ["$scope", "$modal", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/script-text-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("BpmnScriptTextPropertyPopupCtrl", ["$scope", "$timeout", function(e, t) {
  e.propertyValue = angular.copy(e.property.value), e.save = function() {
    e.property.value = e.propertyValue, e.updatePropertyInModel(e.property), e.close()
  }, e.$parent.$on("modal.hide.before", function() {
    e.close(), e.$parent.$apply()
  }), e.close = function() {
    e.property.mode = "read", e.$hide()
  }, e.aceLoaded = function(e) {
    t(function() {
      e.focus()
    })
  }
}]), angular.module("activitiModeler").controller("BpmnCustomVariablePropertyCtrl", ["$scope", "$modal", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/variable-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("BpmnCustomVariablePropertyPopupCtrl", ["$scope", "$timeout", "FormBuilderService", "VariableUtilService", function(e) {
  e.popup = {
    valueType: "static"
  }, void 0 != e.property.value && null != e.property.value && (e.property.value.valueType && e.property.value.valueType.length > 0 && (e.popup.valueType = e.property.value.valueType), e.property.value.staticValue && e.property.value.staticValue.length > 0 ? e.popup.staticValue = e.property.value.staticValue : e.property.value.formField && e.property.value.formField.id ? e.popup.formField = e.property.value.formField : e.property.value.variableField && e.property.value.variableField.id && (e.popup.variableField = e.property.value.variableField)), e.allSteps = EDITOR.UTIL.collectSortedElementsFromPrecedingElements(e.selectedShape), e.setStaticValue = function() {
    e.popup.valueType = "static", e.popup.formField = void 0, e.popup.variableField = void 0
  }, e.setFormFieldValue = function() {
    e.popup.valueType = "field", e.popup.staticValue = void 0, e.popup.variableField = void 0
  }, e.setVariableValue = function() {
    e.popup.valueType = "variable", e.popup.staticValue = void 0, e.popup.formField = void 0
  }, e.save = function() {
    var t = {
      valueType: e.popup.valueType,
      staticValue: e.popup.staticValue,
      formField: e.popup.formField,
      variableField: e.popup.variableField
    };
    e.property.value = t, e.updatePropertyInModel(e.property), e.close()
  }, e.$parent.$on("modal.hide.before", function() {
    e.close(), e.$parent.$apply()
  }), e.close = function() {
    e.property.mode = "read", e.$hide()
  }
}]), angular.module("activitiModeler").controller("KisBpmExecutionListenersCtrl", ["$scope", "$modal", "$timeout", "$translate", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/execution-listeners-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("KisBpmExecutionListenersPopupCtrl", ["$scope", "$q", "$translate", "$timeout", function(e, t, i, o) {
  if (void 0 !== e.property.value && null !== e.property.value && void 0 !== e.property.value.executionListeners && null !== e.property.value.executionListeners) {
    e.executionListeners = e.property.value.executionListeners.constructor == String ? JSON.parse(e.property.value.executionListeners) : angular.copy(e.property.value.executionListeners);
    for (var n = 0; e.executionListeners.length > n; n++) {
      var r = e.executionListeners[n];
      void 0 !== r.className && "" !== r.className ? r.implementation = r.className : void 0 !== r.expression && "" !== r.expression ? r.implementation = r.expression : void 0 !== r.delegateExpression && "" !== r.delegateExpression && (r.implementation = r.delegateExpression)
    }
  } else e.executionListeners = [];
  e.selectedListener = void 0, e.selectedField = void 0, e.fields = [], e.translationsRetrieved = !1, e.labels = {};
  var s = i("PROPERTY.EXECUTIONLISTENERS.EVENT"),
    a = i("PROPERTY.EXECUTIONLISTENERS.FIELDS.IMPLEMENTATION"),
    l = i("PROPERTY.EXECUTIONLISTENERS.FIELDS.NAME");
  t.all([s, a, l]).then(function(t) {
    e.labels.eventLabel = t[0], e.labels.implementationLabel = t[1], e.labels.nameLabel = t[2], e.translationsRetrieved = !0, e.gridOptions = {
      data: e.executionListeners,
      headerRowHeight: 28,
      enableRowSelection: !0,
      enableRowHeaderSelection: !1,
      multiSelect: !1,
      modifierKeysToMultiSelect: !1,
      enableHorizontalScrollbar: 0,
      enableColumnMenus: !1,
      enableSorting: !1,
      columnDefs: [{
        field: "event",
        displayName: e.labels.eventLabel
      }, {
        field: "implementation",
        displayName: e.labels.implementationLabel
      }]
    }, e.gridOptions.onRegisterApi = function(t) {
      e.gridApi = t, t.selection.on.rowSelectionChanged(e, function(t) {
        if (e.selectedListener = t.entity, e.selectedField = void 0, e.selectedListener) {
          var i = e.selectedListener.fields;
          if (void 0 !== i && null !== i)
            for (var o = 0; i.length > o; o++) {
              var n = i[o];
              void 0 !== n.stringValue && "" !== n.stringValue ? n.implementation = n.stringValue : void 0 !== n.expression && "" !== n.expression ? n.implementation = n.expression : void 0 !== n.string && "" !== n.string && (n.implementation = n.string)
            } else e.selectedListener.fields = [];
          e.fields.length = 0;
          for (var o = 0; e.selectedListener.fields.length > o; o++) e.fields.push(e.selectedListener.fields[o])
        }
      })
    }, e.gridFieldOptions = {
      data: e.fields,
      headerRowHeight: 28,
      enableRowSelection: !0,
      enableRowHeaderSelection: !1,
      multiSelect: !1,
      modifierKeysToMultiSelect: !1,
      enableHorizontalScrollbar: 0,
      enableColumnMenus: !1,
      enableSorting: !1,
      columnDefs: [{
        field: "name",
        displayName: e.labels.name
      }, {
        field: "implementation",
        displayName: e.labels.implementationLabel
      }]
    }, e.gridFieldOptions.onRegisterApi = function(t) {
      e.fieldGridApi = t, t.selection.on.rowSelectionChanged(e, function(t) {
        e.selectedField = t.entity
      })
    }
  }), e.listenerDetailsChanged = function() {
    e.selectedListener.implementation = "" !== e.selectedListener.className ? e.selectedListener.className : "" !== e.selectedListener.expression ? e.selectedListener.expression : "" !== e.selectedListener.delegateExpression ? e.selectedListener.delegateExpression : ""
  }, e.addNewListener = function() {
    var t = {
      event: "start",
      implementation: "",
      className: "",
      expression: "",
      delegateExpression: ""
    };
    e.executionListeners.push(t), o(function() {
      e.gridApi.selection.toggleRowSelection(t)
    })
  }, e.removeListener = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.executionListeners.indexOf(t[0]);
      e.gridApi.selection.toggleRowSelection(t[0]), e.executionListeners.splice(i, 1), 0 == e.executionListeners.length && (e.selectedListener = void 0), o(function() {
        e.executionListeners.length > 0 && e.gridApi.selection.toggleRowSelection(e.executionListeners[0])
      })
    }
  }, e.moveListenerUp = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.executionListeners.indexOf(t[0]);
      if (0 != i) {
        var n = e.executionListeners[i];
        e.executionListeners.splice(i, 1), o(function() {
          e.executionListeners.splice(i + -1, 0, n), o(function() {
            e.gridApi.selection.toggleRowSelection(n)
          })
        })
      }
    }
  }, e.moveListenerDown = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.executionListeners.indexOf(t[0]);
      if (i != e.executionListeners.length - 1) {
        var n = e.executionListeners[i];
        e.executionListeners.splice(i, 1), o(function() {
          e.executionListeners.splice(i + 1, 0, n), o(function() {
            e.gridApi.selection.toggleRowSelection(n)
          })
        })
      }
    }
  }, e.fieldDetailsChanged = function() {
    e.selectedField.implementation = "" != e.selectedField.stringValue ? e.selectedField.stringValue : "" != e.selectedField.expression ? e.selectedField.expression : "" != e.selectedField.string ? e.selectedField.string : ""
  }, e.addNewField = function() {
    if (e.selectedListener) {
      void 0 == e.selectedListener.fields && (e.selectedListener.fields = []);
      var t = {
        name: "fieldName",
        implementation: "",
        stringValue: "",
        expression: "",
        string: ""
      };
      e.fields.push(t), e.selectedListener.fields.push(t), o(function() {
        e.fieldGridApi.selection.toggleRowSelection(t)
      })
    }
  }, e.removeField = function() {
    var t = e.fieldGridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.fields.indexOf(t[0]);
      e.fieldGridApi.selection.toggleRowSelection(t[0]), e.fields.splice(i, 1), e.selectedListener.fields.splice(i, 1), 0 == e.fields.length && (e.selectedField = void 0), o(function() {
        e.fields.length > 0 && e.fieldGridApi.selection.toggleRowSelection(e.fields[0])
      })
    }
  }, e.moveFieldUp = function() {
    var t = e.fieldGridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.fields.indexOf(t[0]);
      if (0 != i) {
        var n = e.fields[i];
        e.fields.splice(i, 1), e.selectedListener.fields.splice(i, 1), o(function() {
          e.fields.splice(i + -1, 0, n), e.selectedListener.fields.splice(i + -1, 0, n), o(function() {
            e.fieldGridApi.selection.toggleRowSelection(n)
          })
        })
      }
    }
  }, e.moveFieldDown = function() {
    var t = e.fieldGridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.fields.indexOf(t[0]);
      if (i != e.fields.length - 1) {
        var n = e.fields[i];
        e.fields.splice(i, 1), e.selectedListener.fields.splice(i, 1), o(function() {
          e.fields.splice(i + 1, 0, n), e.selectedListener.fields.splice(i + 1, 0, n), o(function() {
            e.fieldGridApi.selection.toggleRowSelection(n)
          })
        })
      }
    }
  }, e.save = function() {
    e.executionListeners.length > 0 ? (e.property.value = {}, e.property.value.executionListeners = e.executionListeners) : e.property.value = null, e.updatePropertyInModel(e.property), e.close()
  }, e.cancel = function() {
    e.$hide(), e.property.mode = "read"
  }, e.$parent.$on("modal.hide.before", function() {
    e.close(), e.$parent.$apply()
  }), e.close = function() {
    e.$hide(), e.property.mode = "read"
  }
}]), angular.module("activitiModeler").controller("KisBpmEventListenersCtrl", ["$scope", "$modal", "$timeout", "$translate", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/event-listeners-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("KisBpmEventListenersPopupCtrl", ["$scope", "$q", "$translate", "$timeout", function(e, t, i, o) {
  e.eventListeners = void 0 !== e.property.value && null !== e.property.value && void 0 !== e.property.value.eventListeners && null !== e.property.value.eventListeners ? e.property.value.eventListeners.constructor == String ? JSON.parse(e.property.value.eventListeners) : angular.copy(e.property.value.eventListeners) : [], e.translationsRetrieved = !1, e.labels = {};
  var n = i("PROPERTY.EXECUTIONLISTENERS.EVENT"),
    r = i("PROPERTY.EXECUTIONLISTENERS.FIELDS.IMPLEMENTATION"),
    s = i("PROPERTY.EXECUTIONLISTENERS.FIELDS.NAME");
  t.all([n, r, s]).then(function(t) {
    e.labels.eventLabel = t[0], e.labels.implementationLabel = t[1], e.labels.nameLabel = t[2], e.translationsRetrieved = !0, e.gridOptions = {
      data: e.eventListeners,
      headerRowHeight: 28,
      enableRowSelection: !0,
      enableRowHeaderSelection: !1,
      multiSelect: !1,
      modifierKeysToMultiSelect: !1,
      enableHorizontalScrollbar: 0,
      enableColumnMenus: !1,
      enableSorting: !1,
      columnDefs: [{
        field: "event",
        displayName: e.labels.eventLabel
      }, {
        field: "implementation",
        displayName: e.labels.implementationLabel
      }]
    }, e.gridOptions.onRegisterApi = function(t) {
      e.gridApi = t, t.selection.on.rowSelectionChanged(e, function(t) {
        if (e.selectedListener = t.entity, e.selectedListener) {
          var i = e.selectedListener.fields;
          if (void 0 !== i && null !== i)
            for (var o = 0; i.length > o; o++) {
              var n = i[o];
              void 0 !== n.stringValue && "" !== n.stringValue ? n.implementation = n.stringValue : void 0 !== n.expression && "" !== n.expression ? n.implementation = n.expression : void 0 !== n.string && "" !== n.string && (n.implementation = n.string)
            } else e.selectedListener.fields = [];
          e.selectedListener.events || (e.selectedListener.events = [{
            event: ""
          }])
        }
      })
    }
  }), e.addEventValue = function(t) {
    e.selectedListener.events.splice(t + 1, 0, {
      event: ""
    })
  }, e.removeEventValue = function(t) {
    e.selectedListener.events.splice(t, 1), e.listenerDetailsChanged()
  }, e.listenerDetailsChanged = function() {
    var t = e.selectedListener;
    if (t.events) {
      for (var i = "", o = 0; t.events.length > o; o++) o > 0 && (i += ", "), i += t.events[o].event;
      e.selectedListener.event = i
    }
    if (t.rethrowEvent) {
      var n = "";
      t.rethrowType && t.rethrowType.length > 0 && ("error" === t.rethrowType && "" !== t.errorcode ? n = "Rethrow as error " + t.errorcode : "message" === t.rethrowType && "" !== t.messagename ? n = "Rethrow as message " + t.messagename : "signal" !== t.rethrowType && "globalSignal" !== t.rethrowType || "" === t.signalname || (n = "Rethrow as signal " + t.signalname)), e.selectedListener.implementation = n
    } else e.selectedListener.implementation = "" !== e.selectedListener.className ? e.selectedListener.className : "" !== e.selectedListener.delegateExpression ? e.selectedListener.delegateExpression : ""
  }, e.addNewListener = function() {
    var t = {
      event: "",
      implementation: "",
      className: "",
      delegateExpression: "",
      retrowEvent: !1
    };
    e.eventListeners.push(t), o(function() {
      e.gridApi.selection.toggleRowSelection(t)
    })
  }, e.removeListener = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.eventListeners.indexOf(t[0]);
      e.gridApi.selection.toggleRowSelection(t[0]), e.eventListeners.splice(i, 1), 0 == e.eventListeners.length && (e.selectedListener = void 0), o(function() {
        e.eventListeners.length > 0 && e.gridApi.selection.toggleRowSelection(e.eventListeners[0])
      })
    }
  }, e.moveListenerUp = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.eventListeners.indexOf(t[0]);
      if (0 != i) {
        var n = e.eventListeners[i];
        e.eventListeners.splice(i, 1), o(function() {
          e.eventListeners.splice(i + -1, 0, n), o(function() {
            e.gridApi.selection.toggleRowSelection(n)
          })
        })
      }
    }
  }, e.moveListenerDown = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.eventListeners.indexOf(t[0]);
      if (i != e.eventListeners.length - 1) {
        var n = e.eventListeners[i];
        e.eventListeners.splice(i, 1), o(function() {
          e.eventListeners.splice(i + 1, 0, n), o(function() {
            e.gridApi.selection.toggleRowSelection(n)
          })
        })
      }
    }
  }, e.save = function() {
    e.eventListeners.length > 0 ? (e.property.value = {}, e.property.value.eventListeners = e.eventListeners) : e.property.value = null, e.updatePropertyInModel(e.property), e.close()
  }, e.cancel = function() {
    e.property.mode = "read", e.$hide()
  }, e.$parent.$on("modal.hide.before", function() {
    e.close(), e.$parent.$apply()
  }), e.close = function() {
    e.property.mode = "read", e.$hide()
  }
}]), angular.module("activitiModeler").controller("KisBpmAssignmentCtrl", ["$scope", "$modal", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/assignment-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("KisBpmAssignmentPopupCtrl", ["$rootScope", "$scope", "$translate", "$http", "UserService", "GroupService", "ProcessScopeService", function(e, t, i, o, n, r, s) {
  function a(e) {
    e.popup.assignmentObject.static.candidateUsers && 0 != e.popup.assignmentObject.static.candidateUsers.length || (e.popup.assignmentObject.static.candidateUsers = [{
      value: ""
    }]), e.popup.assignmentObject.static.candidateGroups && 0 != e.popup.assignmentObject.static.candidateGroups.length || (e.popup.assignmentObject.static.candidateGroups = [{
      value: ""
    }])
  }
  if (t.assignment = void 0 !== t.property.value && null !== t.property.value && void 0 !== t.property.value.assignment && null !== t.property.value.assignment ? t.property.value.assignment : {
    type: "idm",
    idm: "initiator"
  }, t.popup = {
    userField: {},
    groupField: {},
    userFieldFilter: ["people"],
    groupFieldFilter: ["functional-group"],
    assignmentObject: {
      type: t.assignment.type,
      idm: {
        type: void 0,
        assignee: void 0,
        candidateUsers: [],
        candidateUserFields: [],
        candidateGroups: [],
        candidateGroupFields: []
      },
      "static": {
        assignee: void 0,
        candidateUsers: [],
        candidateGroups: []
      }
    }
  }, t.assignmentOptions = [{
    id: "initiator",
    title: i.instant("PROPERTY.ASSIGNMENT.IDM.DROPDOWN.INITIATOR")
  }, {
    id: "user",
    title: i.instant("PROPERTY.ASSIGNMENT.IDM.DROPDOWN.USER")
  }, {
    id: "users",
    title: i.instant("PROPERTY.ASSIGNMENT.IDM.DROPDOWN.USERS")
  }], null !== t.account.tenantId && void 0 !== t.account.tenantId && t.assignmentOptions.push({
    id: "groups",
    title: i.instant("PROPERTY.ASSIGNMENT.IDM.DROPDOWN.GROUPS")
  }), t.assignment.idm && t.assignment.idm.type)
    for (var l = 0; t.assignmentOptions.length > l; l++)
      if (t.assignmentOptions[l].id == t.assignment.idm.type) {
        t.assignmentOption = t.assignmentOptions[l];
        break
      }
  if (t.assignmentOption) {
    if (t.assignment.idm) {
      if (t.assignment.idm.assignee ? t.popup.assignmentObject.idm.assignee = t.assignment.idm.assignee.id ? t.assignment.idm.assignee : {
        email: t.assignment.idm.assignee.email
      } : t.assignment.idm.assigneeField && (t.popup.assignmentObject.idm.assigneeField = t.assignment.idm.assigneeField), t.assignment.idm.candidateUsers && t.assignment.idm.candidateUsers.length > 0)
        for (var l = 0; t.assignment.idm.candidateUsers.length > l; l++) t.popup.assignmentObject.idm.candidateUsers.push(t.assignment.idm.candidateUsers[l]);
      if (t.assignment.idm.candidateUserFields && t.assignment.idm.candidateUserFields.length > 0)
        for (var l = 0; t.assignment.idm.candidateUserFields.length > l; l++) t.popup.assignmentObject.idm.candidateUserFields.push(t.assignment.idm.candidateUserFields[l]);
      if (t.assignment.idm.candidateGroups && t.assignment.idm.candidateGroups.length > 0)
        for (var l = 0; t.assignment.idm.candidateGroups.length > l; l++) t.popup.assignmentObject.idm.candidateGroups.push(t.assignment.idm.candidateGroups[l]);
      if (t.assignment.idm.candidateGroupFields && t.assignment.idm.candidateGroupFields.length > 0)
        for (var l = 0; t.assignment.idm.candidateGroupFields.length > l; l++) t.popup.assignmentObject.idm.candidateGroupFields.push(t.assignment.idm.candidateGroupFields[l])
    }
  } else t.assignmentOption = t.assignmentOptions[0];
  if (t.assignment.assignee && (t.popup.assignmentObject.static.assignee = t.assignment.assignee), t.assignment.candidateUsers && t.assignment.candidateUsers.length > 0)
    for (var l = 0; t.assignment.candidateUsers.length > l; l++) t.popup.assignmentObject.static.candidateUsers.push(t.assignment.candidateUsers[l]);
  if (t.assignment.candidateGroups && t.assignment.candidateGroups.length > 0)
    for (var l = 0; t.assignment.candidateGroups.length > l; l++) t.popup.assignmentObject.static.candidateGroups.push(t.assignment.candidateGroups[l]);
  a(t), t.$watch("popup.groupFilter", function() {
    t.updateGroupFilter()
  }), t.$watch("popup.filter", function() {
    t.updateFilter()
  }), t.updateFilter = function() {
    (void 0 == t.popup.oldFilter || t.popup.oldFilter != t.popup.filter) && (t.popup.oldFilter = t.popup.filter ? t.popup.filter : "", null !== t.popup.filter && void 0 !== t.popup.filter && n.getFilteredUsers(t.popup.filter).then(function(e) {
      for (var i = [], o = 0; e.data.length > o; o++) {
        var n = e.data[o],
          r = !1;
        if (null !== t.popup.assignmentObject.idm.candidateUsers && void 0 !== t.popup.assignmentObject.idm.candidateUsers)
          for (var s = 0; t.popup.assignmentObject.idm.candidateUsers.length > s; s++) {
            var a = t.popup.assignmentObject.idm.candidateUsers[s];
            if (a.id === n.id) {
              r = !0;
              break
            }
          }
        r || i.push(n)
      }
      t.popup.userResults = i, t.resetSelection()
    }))
  }, t.updateGroupFilter = function() {
    (void 0 == t.popup.oldGroupFilter || t.popup.oldGroupFilter != t.popup.groupFilter) && (t.popup.oldGroupFilter = t.popup.groupFilter ? t.popup.groupFilter : "", r.getFilteredGroups(t.popup.groupFilter).then(function(e) {
      t.popup.groupResults = e.data, t.resetGroupSelection()
    }))
  }, t.confirmUser = function(e) {
    if (!e) {
      var i = t.popup.userResults;
      t.popup.selectedIndex >= 0 && t.popup.selectedIndex < i.length && (e = i[t.popup.selectedIndex])
    }
    if (e)
      if ("user" == t.assignmentOption.id) t.popup.assignmentObject.idm.assignee = e, t.popup.assignmentObject.idm.assigneeField = void 0;
      else if ("users" == t.assignmentOption.id) {
        var o = !1;
        if (t.popup.assignmentObject.idm.candidateUsers)
          for (var n = 0; t.popup.assignmentObject.idm.candidateUsers.length > n; n++)
            if (t.popup.assignmentObject.idm.candidateUsers[n].id === e.id) {
              o = !0;
              break
            }
        o || t.addCandidateUser(e)
      }
  }, t.confirmEmail = function() {
    if ("user" == t.assignmentOption.id) t.popup.assignmentObject.idm.assignee = {
      email: t.popup.email
    }, t.popup.assignmentObject.idm.assigneeField = void 0;
    else if ("users" == t.assignmentOption.id) {
      var e = !1;
      if (t.popup.assignmentObject.idm.candidateUsers)
        for (var i = 0; t.popup.assignmentObject.idm.candidateUsers.length > i; i++)
          if (t.popup.assignmentObject.idm.candidateUsers[i].id) {
            if (t.popup.assignmentObject.idm.candidateUsers[i].id === user.id) {
              e = !0;
              break
            }
          } else if (t.popup.assignmentObject.idm.candidateUsers[i].email && t.popup.assignmentObject.idm.candidateUsers[i].email === t.popup.email) {
            e = !0;
            break
          }
      e || t.addCandidateUser({
        email: t.popup.email
      })
    }
  }, t.confirmGroup = function(e) {
    if (!e) {
      var i = t.popup.groupResults;
      t.popup.selectedGroupIndex >= 0 && t.popup.selectedGroupIndex < i.length && (e = i[t.popup.selectedGroupIndex])
    }
    if (e) {
      var o = !1;
      if (t.popup.assignmentObject.idm.candidateGroups)
        for (var n = 0; t.popup.assignmentObject.idm.candidateGroups.length > n; n++)
          if (t.popup.assignmentObject.idm.candidateGroups[n].id === e.id) {
            o = !0;
            break
          }
      o || t.addCandidateGroup(e)
    }
  }, t.addCandidateUser = function(e) {
    t.popup.assignmentObject.idm.candidateUsers.push(e)
  }, t.addCandidateUserField = function(e) {
    t.popup.assignmentObject.idm.candidateUserFields.push(e)
  }, t.removeCandidateUser = function(e) {
    for (var i = t.popup.assignmentObject.idm.candidateUsers, o = -1, n = 0; i.length > n; n++)
      if (e.id) {
        if (e.id === i[n].id) {
          o = n;
          break
        }
      } else if (e.email === i[n].email) {
        o = n;
        break
      }
    o >= 0 && i.splice(o, 1)
  }, t.removeCandidateUserField = function(e) {
    for (var i = t.popup.assignmentObject.idm.candidateUserFields, o = -1, n = 0; i.length > n; n++)
      if (e.id === i[n].id) {
        o = n;
        break
      }
    o >= 0 && i.splice(o, 1)
  }, t.addCandidateGroup = function(e) {
    t.popup.assignmentObject.idm.candidateGroups.push(e)
  }, t.addCandidateGroupField = function(e) {
    t.popup.assignmentObject.idm.candidateGroupFields.push(e)
  }, t.removeCandidateGroup = function(e) {
    for (var i = t.popup.assignmentObject.idm.candidateGroups, o = -1, n = 0; i.length > n; n++)
      if (e.id == i[n].id) {
        o = n;
        break
      }
    o >= 0 && i.splice(o, 1)
  }, t.removeCandidateGroupField = function(e) {
    for (var i = t.popup.assignmentObject.idm.candidateGroupFields, o = -1, n = 0; i.length > n; n++)
      if (e.id == i[n].id) {
        o = n;
        break
      }
    o >= 0 && i.splice(o, 1)
  }, t.resetSelection = function() {
    t.popup.selectedIndex = t.popup.userResults && t.popup.userResults.length > 0 ? 0 : -1
  }, t.nextUser = function() {
    var e = t.popup.userResults;
    e && e.length > 0 && t.popup.selectedIndex < e.length - 1 && (t.popup.selectedIndex += 1)
  }, t.previousUser = function() {
    var e = t.popup.userResults;
    e && e.length > 0 && t.popup.selectedIndex > 0 && (t.popup.selectedIndex -= 1)
  }, t.resetGroupSelection = function() {
    t.popup.selectedGroupIndex = t.popup.groupResults && t.popup.groupResults.length > 0 ? 0 : -1
  }, t.nextGroup = function() {
    var e = t.popup.groupResults;
    e && e.length > 0 && t.popup.selectedGroupIndex < e.length - 1 && (t.popup.selectedGroupIndex += 1)
  }, t.previousGroup = function() {
    var e = t.popup.groupResults;
    e && e.length > 0 && t.popup.selectedGroupIndex > 0 && (t.popup.selectedGroupIndex -= 1)
  }, t.removeAssignee = function() {
    t.popup.assignmentObject.idm.assignee = void 0, t.popup.assignmentObject.idm.assigneeField = void 0
  }, t.addCandidateUserValue = function(e) {
    t.popup.assignmentObject.static.candidateUsers.splice(e + 1, 0, {
      value: ""
    })
  }, t.removeCandidateUserValue = function(e) {
    t.popup.assignmentObject.static.candidateUsers.splice(e, 1)
  }, t.addCandidateGroupValue = function(e) {
    t.popup.assignmentObject.static.candidateGroups.splice(e + 1, 0, {
      value: ""
    })
  }, t.removeCandidateGroupValue = function(e) {
    t.popup.assignmentObject.static.candidateGroups.splice(e, 1)
  }, t.setSearchType = function() {
    t.popup.assignmentObject.assignmentSourceType = "search"
  }, t.setFormFieldType = function() {
    t.popup.assignmentObject.assignmentSourceType = "field"
  }, t.$watch("popup.userField", function() {
    if (t.popup.userField && t.popup.userField.id) {
      var e = {
        id: t.popup.userField.id,
        name: t.popup.userField.name,
        type: t.popup.userField.type
      };
      if ("user" == t.assignmentOption.id) t.popup.assignmentObject.idm.assigneeField = e, t.popup.assignmentObject.idm.assignee = void 0;
      else if ("users" == t.assignmentOption.id) {
        var i = !1;
        if (t.popup.assignmentObject.idm.candidateUserFields)
          for (var o = 0; t.popup.assignmentObject.idm.candidateUserFields.length > o; o++)
            if (t.popup.assignmentObject.idm.candidateUserFields[o].id === e.id) {
              i = !0;
              break
            }
        i || t.addCandidateUserField(e)
      }
      t.popup.userField = {}
    }
  }), t.$watch("popup.groupField", function() {
    if (t.popup.groupField && t.popup.groupField.id) {
      var e = {
          id: t.popup.groupField.id,
          name: t.popup.groupField.name,
          type: t.popup.groupField.type
        },
        i = !1;
      if (t.popup.assignmentObject.idm.candidateGroupFields)
        for (var o = 0; t.popup.assignmentObject.idm.candidateGroupFields.length > o; o++)
          if (t.popup.assignmentObject.idm.candidateGroupFields[o].id === e.id) {
            i = !0;
            break
          }
      i || t.addCandidateGroupField(e), t.popup.groupField = {}
    }
  });
  var d = EDITOR.UTIL.collectSortedElementsFromPrecedingElements(t.selectedShape);
  t.popup.fields = s.getFormFieldsForStep(d, t.selectedShape.resourceId, ["people", "functional-group"]), t.save = function() {
    if (c(t.popup.assignmentObject.static), t.assignment.type = t.popup.assignmentObject.type, "idm" === t.popup.assignmentObject.type) {
      t.popup.assignmentObject.static = void 0;
      var e = {
        type: t.assignmentOption.id
      };
      "user" == e.type ? t.popup.assignmentObject.idm.assignee ? e.assignee = t.popup.assignmentObject.idm.assignee : t.popup.assignmentObject.idm.assigneeField && (e.assigneeField = t.popup.assignmentObject.idm.assigneeField) : "users" == e.type ? (t.popup.assignmentObject.idm.candidateUsers && t.popup.assignmentObject.idm.candidateUsers.length > 0 && (e.candidateUsers = t.popup.assignmentObject.idm.candidateUsers), t.popup.assignmentObject.idm.candidateUserFields && t.popup.assignmentObject.idm.candidateUserFields.length > 0 && (e.candidateUserFields = t.popup.assignmentObject.idm.candidateUserFields)) : "groups" == e.type && (t.popup.assignmentObject.idm.candidateGroups && t.popup.assignmentObject.idm.candidateGroups.length > 0 && (e.candidateGroups = t.popup.assignmentObject.idm.candidateGroups), t.popup.assignmentObject.idm.candidateGroupFields && t.popup.assignmentObject.idm.candidateGroupFields.length > 0 && (e.candidateGroupFields = t.popup.assignmentObject.idm.candidateGroupFields)), t.assignment.idm = e, t.assignment.assignee = void 0, t.assignment.candidateUsers = void 0, t.assignment.candidateGroups = void 0
    }
    "static" === t.popup.assignmentObject.type && (t.popup.assignmentObject.idm = void 0, t.assignment.idm = void 0, t.assignment.assignee = t.popup.assignmentObject.static.assignee, t.assignment.candidateUsers = t.popup.assignmentObject.static.candidateUsers, t.assignment.candidateGroups = t.popup.assignmentObject.static.candidateGroups), t.property.value = {}, t.property.value.assignment = t.assignment, t.updatePropertyInModel(t.property), t.close()
  }, t.$parent.$on("modal.hide.before", function() {
    t.close(), t.$parent.$apply()
  }), t.close = function() {
    t.property.mode = "read", t.$hide()
  };
  var c = function(e) {
    function t(e) {
      return void 0 === e || null === e || 0 === e.trim().length
    }
    t(e.assignee) && (e.assignee = void 0);
    var i, o = 0,
      n = 0;
    if (e.candidateUsers) {
      for (i = [], n = 0; e.candidateUsers.length > n; n++) t(e.candidateUsers[n].value) && (i[i.length] = n);
      if (i.length == e.candidateUsers.length) e.candidateUsers = void 0;
      else
        for (o = 0, n = 0; i.length > n; n++) e.candidateUsers.splice(i[n] - o, 1), o++
    }
    if (e.candidateGroups) {
      for (i = [], n = 0; e.candidateGroups.length > n; n++) t(e.candidateGroups[n].value) && (i[i.length] = n);
      if (i.length == e.candidateGroups.length) e.candidateGroups = void 0;
      else
        for (o = 0, n = 0; i.length > n; n++) e.candidateGroups.splice(i[n] - o, 1), o++
    }
  }
}]), angular.module("activitiModeler").controller("KisBpmMailToCtrl", ["$scope", "$modal", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/mail-to-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("KisBpmMailToPopupCtrl", ["$rootScope", "$scope", "$translate", "$http", "UserService", "ProcessScopeService", function(e, t, i, o, n, r) {
  if (void 0 !== t.property.value && null !== t.property.value && void 0 !== t.property.value.mailTo && null !== t.property.value.mailTo ? t.mailTo = t.property.value.mailTo : (t.mailTo = {}, t.mailToExpression = t.property.value), t.popup = {
    userField: {},
    userFieldFilter: ["people"],
    mailToObject: {
      type: void 0,
      recipient: void 0,
      candidateUsers: [],
      candidateUserFields: [],
      candidateUserEmails: []
    },
    expression: ""
  }, t.mailToOptions = [{
    id: "initiator",
    title: i.instant("PROPERTY.MAIL_TO.IDM.DROPDOWN.INITIATOR")
  }, {
    id: "user",
    title: i.instant("PROPERTY.MAIL_TO.IDM.DROPDOWN.USER")
  }, {
    id: "users",
    title: i.instant("PROPERTY.MAIL_TO.IDM.DROPDOWN.USERS")
  }], t.mailTo && t.mailTo.type)
    for (var s = 0; t.mailToOptions.length > s; s++)
      if (t.mailToOptions[s].id == t.mailTo.type) {
        t.mailToOption = t.mailToOptions[s];
        break
      }
  if (t.mailToOption) {
    if (t.mailTo.recipient ? t.popup.mailToObject.recipient = t.mailTo.recipient.id ? t.mailTo.recipient : {
      email: t.mailTo.recipient.email
    } : t.mailTo.recipientField && (t.popup.mailToObject.recipientField = t.mailTo.recipientField), t.mailTo.candidateUsers && t.mailTo.candidateUsers.length > 0)
      for (var s = 0; t.mailTo.candidateUsers.length > s; s++) t.popup.mailToObject.candidateUsers.push(t.mailTo.candidateUsers[s]);
    if (t.mailTo.candidateUserFields && t.mailTo.candidateUserFields.length > 0)
      for (var s = 0; t.mailTo.candidateUserFields.length > s; s++) t.popup.mailToObject.candidateUserFields.push(t.mailTo.candidateUserFields[s]);
    if (t.mailTo.candidateUserEmails && t.mailTo.candidateUserEmails.length > 0)
      for (var s = 0; t.mailTo.candidateUserEmails.length > s; s++) t.popup.mailToObject.candidateUserEmails.push(t.mailTo.candidateUserEmails[s]);
    t.popup.mailToObject.type = "idm"
  } else t.mailToOption = t.mailToOptions[0], t.popup.expression = t.mailToExpression;
  t.$watch("popup.filter", function() {
    t.updateFilter()
  }), t.updateFilter = function() {
    (void 0 == t.popup.oldFilter || t.popup.oldFilter != t.popup.filter) && (t.popup.oldFilter = t.popup.filter ? t.popup.filter : "", null !== t.popup.filter && void 0 !== t.popup.filter && n.getFilteredUsers(t.popup.filter).then(function(e) {
      for (var i = [], o = 0; e.data.length > o; o++) {
        var n = e.data[o],
          r = !1;
        if (null !== t.popup.mailToObject.candidateUsers && void 0 !== t.popup.mailToObject.candidateUsers)
          for (var s = 0; t.popup.mailToObject.candidateUsers.length > s; s++) {
            var a = t.popup.mailToObject.candidateUsers[s];
            if (a.id === n.id) {
              r = !0;
              break
            }
          }
        r || i.push(n)
      }
      t.popup.userResults = i, t.resetSelection()
    }))
  }, t.confirmUser = function(e) {
    if (!e) {
      var i = t.popup.userResults;
      t.popup.selectedIndex >= 0 && t.popup.selectedIndex < i.length && (e = i[t.popup.selectedIndex])
    }
    if (e)
      if ("user" == t.mailToOption.id) t.popup.mailToObject.recipient = e, t.popup.mailToObject.recipientField = void 0;
      else if ("users" == t.mailToOption.id) {
        var o = !1;
        if (t.popup.mailToObject.candidateUsers)
          for (var n = 0; t.popup.mailToObject.candidateUsers.length > n; n++)
            if (t.popup.mailToObject.candidateUsers[n].id === e.id) {
              o = !0;
              break
            }
        o || t.addCandidateUser(e)
      }
  }, t.confirmEmail = function() {
    if ("user" == t.mailToOption.id) t.popup.mailToObject.recipient = {
      email: t.popup.email
    }, t.popup.mailToObject.recipientField = void 0;
    else if ("users" == t.mailToOption.id) {
      var e = !1;
      if (t.popup.mailToObject.candidateUsers)
        for (var i = 0; t.popup.mailToObject.candidateUsers.length > i; i++)
          if (t.popup.mailToObject.candidateUsers[i].id) {
            if (t.popup.mailToObject.candidateUsers[i].id === user.id) {
              e = !0;
              break
            }
          } else if (t.popup.mailToObject.candidateUsers[i].email && t.popup.mailToObject.candidateUsers[i].email === t.popup.email) {
            e = !0;
            break
          }
      e || t.addCandidateUser({
        email: t.popup.email
      })
    }
  }, t.addCandidateUser = function(e) {
    t.popup.mailToObject.candidateUsers.push(e)
  }, t.addCandidateUserField = function(e) {
    t.popup.mailToObject.candidateUserFields.push(e)
  }, t.removeCandidateUser = function(e) {
    for (var i = t.popup.mailToObject.candidateUsers, o = -1, n = 0; i.length > n; n++)
      if (e.id) {
        if (e.id === i[n].id) {
          o = n;
          break
        }
      } else if (e.email === i[n].email) {
        o = n;
        break
      }
    o >= 0 && i.splice(o, 1)
  }, t.removeCandidateUserField = function(e) {
    for (var i = t.popup.mailToObject.candidateUserFields, o = -1, n = 0; i.length > n; n++)
      if (e.id === i[n].id) {
        o = n;
        break
      }
    o >= 0 && i.splice(o, 1)
  }, t.removeCandidateUserEmail = function(e) {
    for (var i = t.popup.mailToObject.candidateUserEmails, o = -1, n = 0; i.length > n; n++)
      if (e.email === i[n].email) {
        o = n;
        break
      }
    o >= 0 && i.splice(o, 1)
  }, t.resetSelection = function() {
    t.popup.selectedIndex = t.popup.userResults && t.popup.userResults.length > 0 ? 0 : -1
  }, t.nextUser = function() {
    var e = t.popup.userResults;
    e && e.length > 0 && t.popup.selectedIndex < e.length - 1 && (t.popup.selectedIndex += 1)
  }, t.previousUser = function() {
    var e = t.popup.userResults;
    e && e.length > 0 && t.popup.selectedIndex > 0 && (t.popup.selectedIndex -= 1)
  }, t.removeAssignee = function() {
    t.popup.mailToObject.recipient = void 0, t.popup.mailToObject.recipientField = void 0
  }, t.setSearchType = function() {
    t.popup.mailToObject.mailToSourceType = "search"
  }, t.setFormFieldType = function() {
    t.popup.mailToObject.mailToSourceType = "field"
  }, t.$watch("popup.userField", function() {
    if (t.popup.userField && t.popup.userField.id) {
      var e = {
        id: t.popup.userField.id,
        name: t.popup.userField.name,
        type: t.popup.userField.type
      };
      if ("user" == t.mailToOption.id) t.popup.mailToObject.recipientField = e, t.popup.mailToObject.recipient = void 0;
      else if ("users" == t.mailToOption.id) {
        var i = !1;
        if (t.popup.mailToObject.candidateUserFields)
          for (var o = 0; t.popup.mailToObject.candidateUserFields.length > o; o++)
            if (t.popup.mailToObject.candidateUserFields[o].id === e.id) {
              i = !0;
              break
            }
        i || t.addCandidateUserField(e)
      }
      t.popup.userField = {}
    }
  });
  var a = EDITOR.UTIL.collectSortedElementsFromPrecedingElements(t.selectedShape);
  t.popup.fields = r.getFormFieldsForStep(a, t.selectedShape.resourceId, ["people"]), t.save = function() {
    if ("idm" == t.popup.mailToObject.type) {
      t.mailTo.type = t.popup.mailToObject.type;
      var e = {
        type: t.mailToOption.id
      };
      "user" == e.type ? t.popup.mailToObject.recipient ? e.recipient = t.popup.mailToObject.recipient : t.popup.mailToObject.recipientField && (e.recipientField = t.popup.mailToObject.recipientField) : "users" == e.type && (t.popup.mailToObject.candidateUsers && t.popup.mailToObject.candidateUsers.length > 0 && (e.candidateUsers = t.popup.mailToObject.candidateUsers), t.popup.mailToObject.candidateUserFields && t.popup.mailToObject.candidateUserFields.length > 0 && (e.candidateUserFields = t.popup.mailToObject.candidateUserFields), t.popup.mailToObject.candidateUserEmails && t.popup.mailToObject.candidateUserEmails.length > 0 && (e.candidateUserEmails = t.popup.mailToObject.candidateUserEmails)), t.mailTo = e, t.property.value = {}, t.property.value.mailTo = t.mailTo
    } else t.property.value = t.popup.expression;
    t.updatePropertyInModel(t.property), t.close()
  }, t.$parent.$on("modal.hide.before", function() {
    t.close(), t.$parent.$apply()
  }), t.close = function() {
    t.property.mode = "read", t.$hide()
  }
}]), angular.module("activitiModeler").controller("KisBpmFieldsCtrl", ["$scope", "$modal", "$timeout", "$translate", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/fields-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("KisBpmFieldsPopupCtrl", ["$scope", "$q", "$translate", "$timeout", function(e, t, i, o) {
  if (void 0 !== e.property.value && null !== e.property.value && void 0 !== e.property.value.fields && null !== e.property.value.fields) {
    e.fields = angular.copy(e.property.value.fields);
    for (var n = 0; e.fields.length > n; n++) {
      var r = e.fields[n];
      void 0 !== r.stringValue && "" !== r.stringValue ? r.implementation = r.stringValue : void 0 !== r.expression && "" !== r.expression ? r.implementation = r.expression : void 0 !== r.string && "" !== r.string && (r.implementation = r.string)
    }
  } else e.fields = [];
  e.translationsRetrieved = !1, e.labels = {};
  var s = i("PROPERTY.FIELDS.NAME"),
    a = i("PROPERTY.FIELDS.IMPLEMENTATION");
  t.all([s, a]).then(function(t) {
    e.labels.nameLabel = t[0], e.labels.implementationLabel = t[1], e.translationsRetrieved = !0, e.gridOptions = {
      data: e.fields,
      headerRowHeight: 28,
      enableRowSelection: !0,
      enableRowHeaderSelection: !1,
      multiSelect: !1,
      modifierKeysToMultiSelect: !1,
      enableHorizontalScrollbar: 0,
      enableColumnMenus: !1,
      enableSorting: !1,
      columnDefs: [{
        field: "name",
        displayName: e.labels.nameLabel
      }, {
        field: "implementation",
        displayName: e.labels.implementationLabel
      }]
    }, e.gridOptions.onRegisterApi = function(t) {
      e.gridApi = t, t.selection.on.rowSelectionChanged(e, function(t) {
        e.selectedField = t.entity
      })
    }
  }), e.fieldDetailsChanged = function() {
    e.selectedField.implementation = "" != e.selectedField.stringValue ? e.selectedField.stringValue : "" != e.selectedField.expression ? e.selectedField.expression : "" != e.selectedField.string ? e.selectedField.string : ""
  }, e.addNewField = function() {
    var t = {
      name: "fieldName",
      implementation: "",
      stringValue: "",
      expression: "",
      string: ""
    };
    e.fields.push(t), o(function() {
      e.gridApi.selection.toggleRowSelection(t)
    })
  }, e.removeField = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.fields.indexOf(t[0]);
      e.gridApi.selection.toggleRowSelection(t[0]), e.fields.splice(i, 1), 0 == e.fields.length && (e.selectedField = void 0), o(function() {
        e.fields.length > 0 && e.gridApi.selection.toggleRowSelection(e.fields[0])
      })
    }
  }, e.moveFieldUp = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.fields.indexOf(t[0]);
      if (0 != i) {
        var n = e.fields[i];
        e.fields.splice(i, 1), o(function() {
          e.fields.splice(i + -1, 0, n), o(function() {
            e.gridApi.selection.toggleRowSelection(n)
          })
        })
      }
    }
  }, e.moveFieldDown = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.fields.indexOf(t[0]);
      if (i != e.fields.length - 1) {
        var n = e.fields[i];
        e.fields.splice(i, 1), o(function() {
          e.fields.splice(i + 1, 0, n), o(function() {
            e.gridApi.selection.toggleRowSelection(n)
          })
        })
      }
    }
  }, e.save = function() {
    e.fields.length > 0 ? (e.property.value = {}, e.property.value.fields = e.fields) : e.property.value = null, e.updatePropertyInModel(e.property), e.close()
  }, e.cancel = function() {
    e.$hide()
  }, e.$parent.$on("modal.hide.before", function() {
    e.close(), e.$parent.$apply()
  }), e.close = function() {
    e.property.mode = "read", e.$hide()
  }
}]), angular.module("activitiModeler").controller("KisBpmFormPropertiesCtrl", ["$scope", "$modal", "$timeout", "$translate", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/form-properties-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("KisBpmFormPropertiesPopupCtrl", ["$scope", "$q", "$translate", "$timeout", function(e, t, i, o) {
  e.formProperties = void 0 !== e.property.value && null !== e.property.value && void 0 !== e.property.value.formProperties && null !== e.property.value.formProperties ? angular.copy(e.property.value.formProperties) : [], e.translationsRetrieved = !1, e.labels = {};
  var n = i("PROPERTY.FORMPROPERTIES.ID"),
    r = i("PROPERTY.FORMPROPERTIES.NAME"),
    s = i("PROPERTY.FORMPROPERTIES.TYPE");
  t.all([n, r, s]).then(function(t) {
    e.labels.idLabel = t[0], e.labels.nameLabel = t[1], e.labels.typeLabel = t[2], e.translationsRetrieved = !0, e.gridOptions = {
      data: e.formProperties,
      headerRowHeight: 28,
      enableRowSelection: !0,
      enableRowHeaderSelection: !1,
      multiSelect: !1,
      modifierKeysToMultiSelect: !1,
      enableHorizontalScrollbar: 0,
      enableColumnMenus: !1,
      enableSorting: !1,
      columnDefs: [{
        field: "id",
        displayName: e.labels.idLabel
      }, {
        field: "name",
        displayName: e.labels.nameLabel
      }, {
        field: "type",
        displayName: e.labels.typeLabel
      }]
    }, e.gridOptions.onRegisterApi = function(t) {
      e.gridApi = t, t.selection.on.rowSelectionChanged(e, function(t) {
        e.selectedProperty = t.entity
      })
    }
  }), e.propertyTypeChanged = function() {
    "date" === e.selectedProperty.type ? e.selectedProperty.datePattern = "MM-dd-yyyy hh:mm" : delete e.selectedProperty.datePattern, "enum" === e.selectedProperty.type ? e.selectedProperty.enumValues = [{
      value: "value 1"
    }, {
      value: "value 2"
    }] : delete e.selectedProperty.enumValues
  };
  var a = 3;
  e.addEnumValue = function(t) {
    e.selectedProperty.enumValues.splice(t + 1, 0, {
      value: "value " + a++
    })
  }, e.removeEnumValue = function(t) {
    e.selectedProperty.enumValues.splice(t, 1)
  };
  var l = 1;
  e.addNewProperty = function() {
    var t = {
      id: "new_property_" + l++,
      name: "",
      type: "string",
      readable: !0,
      writable: !0
    };
    e.formProperties.push(t), o(function() {
      e.gridApi.selection.toggleRowSelection(t)
    })
  }, e.removeProperty = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.formProperties.indexOf(t[0]);
      e.gridApi.selection.toggleRowSelection(t[0]), e.formProperties.splice(i, 1), 0 == e.formProperties.length && (e.selectedProperty = void 0), o(function() {
        e.formProperties.length > 0 && e.gridApi.selection.toggleRowSelection(e.formProperties[0])
      })
    }
  }, e.movePropertyUp = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.formProperties.indexOf(t[0]);
      if (0 != i) {
        var n = e.formProperties[i];
        e.formProperties.splice(i, 1), o(function() {
          e.formProperties.splice(i + -1, 0, n), o(function() {
            e.gridApi.selection.toggleRowSelection(n)
          })
        })
      }
    }
  }, e.movePropertyDown = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.formProperties.indexOf(t[0]);
      if (i != e.formProperties.length - 1) {
        var n = e.formProperties[i];
        e.formProperties.splice(i, 1), o(function() {
          e.formProperties.splice(i + 1, 0, n), o(function() {
            e.gridApi.selection.toggleRowSelection(n)
          })
        })
      }
    }
  }, e.save = function() {
    e.formProperties.length > 0 ? (e.property.value = {}, e.property.value.formProperties = e.formProperties) : e.property.value = null, e.updatePropertyInModel(e.property), e.close()
  }, e.cancel = function() {
    e.$hide(), e.property.mode = "read"
  }, e.$parent.$on("modal.hide.before", function() {
    e.close(), e.$parent.$apply()
  }), e.close = function() {
    e.$hide(), e.property.mode = "read"
  }
}]), angular.module("activitiModeler").controller("KisBpmInParametersCtrl", ["$scope", "$modal", "$timeout", "$translate", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/in-parameters-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("KisBpmInParametersPopupCtrl", ["$scope", "$q", "$translate", "$timeout", function(e, t, i, o) {
  e.parameters = void 0 !== e.property.value && null !== e.property.value && void 0 !== e.property.value.inParameters && null !== e.property.value.inParameters ? angular.copy(e.property.value.inParameters) : [], e.translationsRetrieved = !1, e.labels = {};
  var n = i("PROPERTY.PARAMETER.SOURCE"),
    r = i("PROPERTY.PARAMETER.SOURCEEXPRESSION"),
    s = i("PROPERTY.PARAMETER.TARGET");
  t.all([n, r, s]).then(function(t) {
    e.labels.sourceLabel = t[0], e.labels.sourceExpressionLabel = t[1], e.labels.targetLabel = t[2], e.translationsRetrieved = !0, e.gridOptions = {
      data: e.parameters,
      headerRowHeight: 28,
      enableRowSelection: !0,
      enableRowHeaderSelection: !1,
      multiSelect: !1,
      modifierKeysToMultiSelect: !1,
      enableHorizontalScrollbar: 0,
      enableColumnMenus: !1,
      enableSorting: !1,
      columnDefs: [{
        field: "source",
        displayName: e.labels.sourceLabel
      }, {
        field: "sourceExpression",
        displayName: e.labels.sourceExpressionLabel
      }, {
        field: "target",
        displayName: e.labels.targetLabel
      }]
    }, e.gridOptions.onRegisterApi = function(t) {
      e.gridApi = t, t.selection.on.rowSelectionChanged(e, function(t) {
        e.selectedParameter = t.entity
      })
    }
  }), e.addNewParameter = function() {
    var t = {
      source: "",
      sourceExpression: "",
      target: ""
    };
    e.parameters.push(t), o(function() {
      e.gridApi.selection.toggleRowSelection(t)
    })
  }, e.removeParameter = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.parameters.indexOf(t[0]);
      e.gridApi.selection.toggleRowSelection(t[0]), e.parameters.splice(i, 1), 0 == e.parameters.length && (e.selectedParameter = void 0), o(function() {
        e.parameters.length > 0 && e.gridApi.selection.toggleRowSelection(e.parameters[0])
      })
    }
  }, e.moveParameterUp = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.parameters.indexOf(t[0]);
      if (0 != i) {
        var n = e.parameters[i];
        e.parameters.splice(i, 1), o(function() {
          e.parameters.splice(i + -1, 0, n), o(function() {
            e.gridApi.selection.toggleRowSelection(n)
          })
        })
      }
    }
  }, e.moveParameterDown = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.parameters.indexOf(t[0]);
      if (i != e.parameters.length - 1) {
        var n = e.parameters[i];
        e.parameters.splice(i, 1), o(function() {
          e.parameters.splice(i + 1, 0, n), o(function() {
            e.gridApi.selection.toggleRowSelection(n)
          })
        })
      }
    }
  }, e.save = function() {
    e.parameters.length > 0 ? (e.property.value = {}, e.property.value.inParameters = e.parameters) : e.property.value = null, e.updatePropertyInModel(e.property), e.close()
  }, e.cancel = function() {
    e.close()
  }, e.$parent.$on("modal.hide.before", function() {
    e.close(), e.$parent.$apply()
  }), e.close = function() {
    e.property.mode = "read", e.$hide()
  }
}]), angular.module("activitiModeler").controller("KisBpmMultiInstanceCtrl", ["$scope", function(e) {
  void 0 == e.property.value && null == e.property.value && (e.property.value = "None"), e.multiInstanceChanged = function() {
    e.updatePropertyInModel(e.property)
  }
}]), angular.module("activitiModeler").controller("KisBpmOutParametersCtrl", ["$scope", "$modal", "$timeout", "$translate", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/out-parameters-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("KisBpmOutParametersPopupCtrl", ["$scope", "$q", "$translate", "$timeout", function(e, t, i, o) {
  e.parameters = void 0 !== e.property.value && null !== e.property.value && void 0 !== e.property.value.outParameters && null !== e.property.value.outParameters ? angular.copy(e.property.value.outParameters) : [], e.translationsRetrieved = !1, e.labels = {};
  var n = i("PROPERTY.PARAMETER.SOURCE"),
    r = i("PROPERTY.PARAMETER.SOURCEEXPRESSION"),
    s = i("PROPERTY.PARAMETER.TARGET");
  t.all([n, r, s]).then(function(t) {
    e.labels.sourceLabel = t[0], e.labels.sourceExpressionLabel = t[1], e.labels.targetLabel = t[2], e.translationsRetrieved = !0, e.gridOptions = {
      data: e.parameters,
      headerRowHeight: 28,
      enableRowSelection: !0,
      enableRowHeaderSelection: !1,
      multiSelect: !1,
      modifierKeysToMultiSelect: !1,
      enableHorizontalScrollbar: 0,
      enableColumnMenus: !1,
      enableSorting: !1,
      columnDefs: [{
        field: "source",
        displayName: e.labels.sourceLabel
      }, {
        field: "sourceExpression",
        displayName: e.labels.sourceExpressionLabel
      }, {
        field: "target",
        displayName: e.labels.targetLabel
      }]
    }, e.gridOptions.onRegisterApi = function(t) {
      e.gridApi = t, t.selection.on.rowSelectionChanged(e, function(t) {
        e.selectedParameter = t.entity
      })
    }
  }), e.addNewParameter = function() {
    var t = {
      source: "",
      sourceExpression: "",
      target: ""
    };
    e.parameters.push(t), o(function() {
      e.gridApi.selection.toggleRowSelection(t)
    })
  }, e.removeParameter = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.parameters.indexOf(t[0]);
      e.gridApi.selection.toggleRowSelection(t[0]), e.parameters.splice(i, 1), 0 == e.parameters.length && (e.selectedParameter = void 0), o(function() {
        e.parameters.length > 0 && e.gridApi.selection.toggleRowSelection(e.parameters[0])
      })
    }
  }, e.moveParameterUp = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.parameters.indexOf(t[0]);
      if (0 != i) {
        var n = e.parameters[i];
        e.parameters.splice(i, 1), o(function() {
          e.parameters.splice(i + -1, 0, n), o(function() {
            e.gridApi.selection.toggleRowSelection(n)
          })
        })
      }
    }
  }, e.moveParameterDown = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.parameters.indexOf(t[0]);
      if (i != e.parameters.length - 1) {
        var n = e.parameters[i];
        e.parameters.splice(i, 1), o(function() {
          e.parameters.splice(i + 1, 0, n), o(function() {
            e.gridApi.selection.toggleRowSelection(n)
          })
        })
      }
    }
  }, e.save = function() {
    e.parameters.length > 0 ? (e.property.value = {}, e.property.value.outParameters = e.parameters) : e.property.value = null, e.updatePropertyInModel(e.property), e.close()
  }, e.cancel = function() {
    e.close()
  }, e.$parent.$on("modal.hide.before", function() {
    e.close(), e.$parent.$apply()
  }), e.close = function() {
    e.property.mode = "read", e.$hide()
  }
}]), angular.module("activitiModeler").controller("KisBpmTaskListenersCtrl", ["$scope", "$modal", "$timeout", "$translate", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/task-listeners-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("KisBpmTaskListenersPopupCtrl", ["$scope", "$q", "$translate", "$timeout", function(e, t, i, o) {
  if (void 0 !== e.property.value && null !== e.property.value && void 0 !== e.property.value.taskListeners && null !== e.property.value.taskListeners) {
    e.taskListeners = e.property.value.taskListeners.constructor == String ? JSON.parse(e.property.value.taskListeners) : angular.copy(e.property.value.taskListeners);
    for (var n = 0; e.taskListeners.length > n; n++) {
      var r = e.taskListeners[n];
      void 0 !== r.className && "" !== r.className ? r.implementation = r.className : void 0 !== r.expression && "" !== r.expression ? r.implementation = r.expression : void 0 !== r.delegateExpression && "" !== r.delegateExpression && (r.implementation = r.delegateExpression)
    }
  } else e.taskListeners = [];
  e.selectedListener = void 0, e.selectedField = void 0, e.fields = [], e.translationsRetrieved = !1, e.labels = {};
  var s = i("PROPERTY.TASKLISTENERS.EVENT"),
    a = i("PROPERTY.TASKLISTENERS.FIELDS.IMPLEMENTATION"),
    l = i("PROPERTY.TASKLISTENERS.FIELDS.NAME");
  t.all([s, a, l]).then(function(t) {
    e.labels.eventLabel = t[0], e.labels.implementationLabel = t[1], e.labels.nameLabel = t[2], e.translationsRetrieved = !0, e.gridOptions = {
      data: e.taskListeners,
      headerRowHeight: 28,
      enableRowSelection: !0,
      enableRowHeaderSelection: !1,
      multiSelect: !1,
      modifierKeysToMultiSelect: !1,
      enableHorizontalScrollbar: 0,
      enableColumnMenus: !1,
      enableSorting: !1,
      columnDefs: [{
        field: "event",
        displayName: e.labels.eventLabel
      }, {
        field: "implementation",
        displayName: e.labels.implementationLabel
      }]
    }, e.gridOptions.onRegisterApi = function(t) {
      e.gridApi = t, t.selection.on.rowSelectionChanged(e, function(t) {
        if (e.selectedListener = t.entity, e.selectedField = void 0, e.selectedListener) {
          var i = e.selectedListener.fields;
          if (void 0 !== i && null !== i)
            for (var o = 0; i.length > o; o++) {
              var n = i[o];
              void 0 !== n.stringValue && "" !== n.stringValue ? n.implementation = n.stringValue : void 0 !== n.expression && "" !== n.expression ? n.implementation = n.expression : void 0 !== n.string && "" !== n.string && (n.implementation = n.string)
            } else e.selectedListener.fields = [];
          e.fields.length = 0;
          for (var o = 0; e.selectedListener.fields.length > o; o++) e.fields.push(e.selectedListener.fields[o])
        }
      })
    }, e.gridFieldOptions = {
      data: e.fields,
      headerRowHeight: 28,
      enableRowSelection: !0,
      enableRowHeaderSelection: !1,
      multiSelect: !1,
      modifierKeysToMultiSelect: !1,
      columnDefs: [{
        field: "name",
        displayName: e.labels.name
      }, {
        field: "implementation",
        displayName: e.labels.implementationLabel
      }]
    }, e.gridFieldOptions.onRegisterApi = function(t) {
      e.fieldGridApi = t, t.selection.on.rowSelectionChanged(e, function(t) {
        e.selectedField = t.entity
      })
    }
  }), e.listenerDetailsChanged = function() {
    e.selectedListener.implementation = "" !== e.selectedListener.className ? e.selectedListener.className : "" !== e.selectedListener.expression ? e.selectedListener.expression : "" !== e.selectedListener.delegateExpression ? e.selectedListener.delegateExpression : ""
  }, e.addNewListener = function() {
    var t = {
      event: "create",
      implementation: "",
      className: "",
      expression: "",
      delegateExpression: ""
    };
    e.taskListeners.push(t), o(function() {
      e.gridApi.selection.toggleRowSelection(t)
    })
  }, e.removeListener = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.taskListeners.indexOf(t[0]);
      e.gridApi.selection.toggleRowSelection(t[0]), e.taskListeners.splice(i, 1), 0 == e.taskListeners.length && (e.selectedListener = void 0), o(function() {
        e.taskListeners.length > 0 && e.gridApi.selection.toggleRowSelection(e.taskListeners[0])
      })
    }
  }, e.moveListenerUp = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.taskListeners.indexOf(t[0]);
      if (0 != i) {
        var n = e.taskListeners[i];
        e.taskListeners.splice(i, 1), o(function() {
          e.taskListeners.splice(i + -1, 0, n), o(function() {
            e.gridApi.selection.toggleRowSelection(n)
          })
        })
      }
    }
  }, e.moveListenerDown = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.taskListeners.indexOf(t[0]);
      if (i != e.taskListeners.length - 1) {
        var n = e.taskListeners[i];
        e.taskListeners.splice(i, 1), o(function() {
          e.taskListeners.splice(i + 1, 0, n), o(function() {
            e.gridApi.selection.toggleRowSelection(n)
          })
        })
      }
    }
  }, e.fieldDetailsChanged = function() {
    e.selectedField.implementation = "" != e.selectedField.stringValue ? e.selectedField.stringValue : "" != e.selectedField.expression ? e.selectedField.expression : "" != e.selectedField.string ? e.selectedField.string : ""
  }, e.addNewField = function() {
    if (e.selectedListener) {
      void 0 == e.selectedListener.fields && (e.selectedListener.fields = []);
      var t = {
        name: "fieldName",
        implementation: "",
        stringValue: "",
        expression: "",
        string: ""
      };
      e.fields.push(t), e.selectedListener.fields.push(t), o(function() {
        e.fieldGridApi.selection.toggleRowSelection(t)
      })
    }
  }, e.removeField = function() {
    var t = e.fieldGridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.fields.indexOf(t[0]);
      e.fieldGridApi.selection.toggleRowSelection(t[0]), e.fields.splice(i, 1), e.selectedListener.fields.splice(i, 1), 0 == e.fields.length && (e.selectedField = void 0), o(function() {
        e.fields.length > 0 && e.fieldGridApi.selection.toggleRowSelection(e.fields[0])
      })
    }
  }, e.moveFieldUp = function() {
    var t = e.fieldGridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.fields.indexOf(t[0]);
      if (0 != i) {
        var n = e.fields[i];
        e.fields.splice(i, 1), e.selectedListener.fields.splice(i, 1), o(function() {
          e.fields.splice(i + -1, 0, n), e.selectedListener.fields.splice(i + -1, 0, n), o(function() {
            e.fieldGridApi.selection.toggleRowSelection(n)
          })
        })
      }
    }
  }, e.moveFieldDown = function() {
    var t = e.fieldGridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.fields.indexOf(t[0]);
      if (i != e.fields.length - 1) {
        var n = e.fields[i];
        e.fields.splice(i, 1), e.selectedListeners.fields.splice(i, 1), o(function() {
          e.fields.splice(i + 1, 0, n), e.selectedListener.fields.splice(i + 1, 0, n), o(function() {
            e.fieldGridApi.selection.toggleRowSelection(n)
          })
        })
      }
    }
  }, e.save = function() {
    e.taskListeners.length > 0 ? (e.property.value = {}, e.property.value.taskListeners = e.taskListeners) : e.property.value = null, e.updatePropertyInModel(e.property), e.close()
  }, e.cancel = function() {
    e.close()
  }, e.$parent.$on("modal.hide.before", function() {
    e.close(), e.$parent.$apply()
  }), e.close = function() {
    e.property.mode = "read", e.$hide()
  }
}]), angular.module("activitiModeler").controller("KisBpmCollapsedSubprocessReferenceCrtl", ["$scope", "$modal", "$http", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/subprocess-reference-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("KisBpmCollapsedSubprocessReferencePopupCrtl", ["$scope", "$http", "ProcessScopeService", function(e, t, i) {
  e.state = {
    loadingSubprocesses: !0,
    error: !1
  }, e.popup = {
    state: "subProcessReference"
  }, e.$parent.$on("modal.hide.before", function() {
    e.close(), e.$parent.$apply()
  }), e.close = function() {
    e.property.mode = "read", e.$hide()
  }, e.selectSubProcess = function(t, i) {
    i.stopPropagation(), e.selectedSubProcess = e.selectedSubProcess && e.selectedSubProcess.id && t.id == e.selectedSubProcess.id ? null : t
  }, e.save = function() {
    e.property.value = e.selectedSubProcess ? {
      id: e.selectedSubProcess.id,
      name: e.selectedSubProcess.name
    } : null, e.updatePropertyInModel(e.property), i.refresh(), e.close()
  }, e.open = function() {
    if (e.selectedSubProcess) {
      e.property.value = {
        id: e.selectedSubProcess.id,
        name: e.selectedSubProcess.name
      }, e.updatePropertyInModel(e.property);
      var o = e.editor.getModelMetaData(),
        n = e.editor.getJSON();
      n = JSON.stringify(n);
      var r = {
        modeltype: o.model.modelType,
        json_xml: n,
        name: o.name,
        description: o.description,
        newversion: !1,
        lastUpdated: o.lastUpdated
      };
      t({
        method: "POST",
        data: r,
        ignoreErrors: !0,
        headers: {
          Accept: "application/json",
          "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8"
        },
        transformRequest: function(e) {
          var t = [];
          for (var i in e) t.push(encodeURIComponent(i) + "=" + encodeURIComponent(e[i]));
          return t.join("&")
        },
        url: KISBPM.URL.putModel(o.modelId)
      }).success(function() {
        e.editor.handleEvents({
          type: ORYX.CONFIG.EVENT_SAVED
        }), i.navigateForward("editor/" + encodeURIComponent(e.selectedSubProcess.id), e.selectedShape.resourceId)
      }).error(function() {}), e.close()
    }
  }, e.newSubProcess = function() {
    e.popup.state = "newSubProcess";
    var t = e.editor.getModelMetaData();
    e.model = {
      loading: !1,
      subProcess: {
        name: "",
        description: "",
        modelType: 0,
        referenceId: t.modelId,
        stencilSet: 0
      },
      defaultStencilSet: void 0
    }
  }, e.createSubProcess = function() {
    if (e.model.subProcess.name && 0 != e.model.subProcess.name.length) {
      var o = e.model.subProcess.stencilSet;
      e.model.loading = !0, t({
        method: "POST",
        url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models",
        data: e.model.subProcess
      }).success(function(n) {
        var r = n.id;
        e.property.value = {
          id: r,
          name: n.name
        }, e.updatePropertyInModel(e.property);
        var s = e.editor.getModelMetaData(),
          a = e.editor.getJSON();
        a = JSON.stringify(a);
        var l = {
          modeltype: s.model.modelType,
          json_xml: a,
          name: s.name,
          description: s.description,
          newversion: !1,
          lastUpdated: s.lastUpdated,
          stencilSet: o
        };
        t({
          method: "POST",
          data: l,
          ignoreErrors: !0,
          headers: {
            Accept: "application/json",
            "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8"
          },
          transformRequest: function(e) {
            var t = [];
            for (var i in e) t.push(encodeURIComponent(i) + "=" + encodeURIComponent(e[i]));
            return t.join("&")
          },
          url: KISBPM.URL.putModel(s.modelId)
        }).success(function() {
          e.editor.handleEvents({
            type: ORYX.CONFIG.EVENT_SAVED
          }), e.model.loading = !1, e.$hide(), i.navigateForward("editor/" + encodeURIComponent(r), e.selectedShape.resourceId)
        }).error(function() {
          e.model.loading = !1, e.$hide()
        })
      }).error(function() {
        e.model.loading = !1, e.$hide()
      })
    }
  }, e.cancel = function() {
    e.close()
  }, e.loadProcesses = function() {
    var i = e.editor.getModelMetaData();
    t.get(ACTIVITI.CONFIG.contextRoot + "/app/rest/models?filter=myBpmnProcessReferences&referenceId=" + i.modelId).success(function(t) {
      e.state.loadingSubprocesses = !1, e.state.subprocessError = !1, e.subProcesses = t.data
    }).error(function() {
      e.state.loadingSubprocesses = !1, e.state.subprocessError = !0
    })
  }, e.property && e.property.value && e.property.value.id && (e.selectedSubProcess = e.property.value), e.loadProcesses()
}]), angular.module("activitiModeler").controller("KisBpmFormReferenceCrtl", ["$scope", "$modal", "$http", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/form-reference-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("KisBpmFormReferencePopupCrtl", ["$rootScope", "$scope", "$http", "$location", "EventTrackingService", "ProcessScopeService", function(e, t, i, o, n, r) {
  t.state = {
    loadingForms: !0,
    formError: !1
  }, t.popup = {
    state: "formReference"
  }, t.foldersBreadCrumbs = [], t.$parent.$on("modal.hide.before", function() {
    t.close(), t.$parent.$apply()
  }), t.close = function() {
    t.property.mode = "read", t.$hide()
  }, t.selectForm = function(e, i) {
    i.stopPropagation(), t.selectedForm = t.selectedForm && t.selectedForm.id && e.id == t.selectedForm.id ? null : e
  }, t.save = function() {
    t.property.value = t.selectedForm ? {
      id: t.selectedForm.id,
      name: t.selectedForm.name
    } : null, t.updatePropertyInModel(t.property), r.refresh(), t.close()
  }, t.open = function() {
    if (t.selectedForm) {
      t.property.value = {
        id: t.selectedForm.id,
        name: t.selectedForm.name
      }, t.updatePropertyInModel(t.property);
      var e = t.editor.getModelMetaData(),
        o = t.editor.getJSON();
      o = JSON.stringify(o);
      var n = {
        modeltype: e.model.modelType,
        json_xml: o,
        name: e.name,
        description: e.description,
        newversion: !1,
        lastUpdated: e.lastUpdated
      };
      i({
        method: "POST",
        data: n,
        ignoreErrors: !0,
        headers: {
          Accept: "application/json",
          "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8"
        },
        transformRequest: function(e) {
          var t = [];
          for (var i in e) t.push(encodeURIComponent(i) + "=" + encodeURIComponent(e[i]));
          return t.join("&")
        },
        url: KISBPM.URL.putModel(e.modelId)
      }).success(function() {
        t.editor.handleEvents({
          type: ORYX.CONFIG.EVENT_SAVED
        }), r.navigateForward("form-editor/" + encodeURIComponent(t.selectedForm.id), t.selectedShape.resourceId)
      }).error(function() {}), t.close()
    }
  }, t.newForm = function() {
    t.popup.state = "newForm";
    var o = t.editor.getModelMetaData();
    t.model = {
      loading: !1,
      form: {
        name: "",
        description: "",
        modelType: 2,
        referenceId: o.modelId,
        stencilSet: 0
      },
      defaultStencilSet: void 0,
      formStencilSets: []
    }, "enterprise" === e.account.type && (t.model.loading = !0, i({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/available-form-stencil-sets"
    }).success(function(e) {
      if (t.model.formStencilSets = e.data, t.model.stencilSets && t.model.stencilSets.length > 0)
        for (var i = 0; t.model.stencilSets.length > i; i++)
          if (t.model.stencilSets[i].defaultStencilSet) {
            t.model.defaultStencilSet = t.model.stencilSets[i], t.model.form.stencilSet = t.defaultStencilSet.id;
            break
          }
      t.model.loading = !1
    }).error(function() {
      t.model.loading = !1
    }))
  }, t.createForm = function() {
    if (t.model.form.name && 0 != t.model.form.name.length) {
      var e = t.model.form.stencilSet;
      t.model.loading = !0, i({
        method: "POST",
        url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models",
        data: t.model.form
      }).success(function(o) {
        n.trackEvent("editor", "form-model-create-via-bpmneditor");
        var s = o.id;
        t.property.value = {
          id: s,
          name: o.name
        }, t.updatePropertyInModel(t.property);
        var a = t.editor.getModelMetaData(),
          l = t.editor.getJSON();
        l = JSON.stringify(l);
        var d = {
          modeltype: a.model.modelType,
          json_xml: l,
          name: a.name,
          description: a.description,
          newversion: !1,
          lastUpdated: a.lastUpdated,
          stencilSet: e
        };
        i({
          method: "POST",
          data: d,
          ignoreErrors: !0,
          headers: {
            Accept: "application/json",
            "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8"
          },
          transformRequest: function(e) {
            var t = [];
            for (var i in e) t.push(encodeURIComponent(i) + "=" + encodeURIComponent(e[i]));
            return t.join("&")
          },
          url: KISBPM.URL.putModel(a.modelId)
        }).success(function() {
          t.editor.handleEvents({
            type: ORYX.CONFIG.EVENT_SAVED
          }), t.model.loading = !1, t.$hide(), r.navigateForward("form-editor/" + encodeURIComponent(s), t.selectedShape.resourceId)
        }).error(function() {
          t.model.loading = !1, t.$hide()
        })
      }).error(function() {
        t.model.loading = !1, t.$hide()
      })
    }
  }, t.cancel = function() {
    t.close()
  }, t.loadForms = function() {
    var e = t.editor.getModelMetaData();
    i.get(ACTIVITI.CONFIG.contextRoot + "/app/rest/form-models?referenceId=" + e.modelId).success(function(e) {
      t.state.loadingForms = !1, t.state.formError = !1, t.forms = e.data
    }).error(function() {
      t.state.loadingForms = !1, t.state.formError = !0
    })
  }, t.property && t.property.value && t.property.value.id && (t.selectedForm = t.property.value), t.loadForms()
}]), angular.module("activitiModeler").controller("KisBpmSequenceFlowOrderCtrl", ["$scope", "$modal", "$timeout", "$translate", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/sequenceflow-order-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("KisBpmSequenceFlowOrderPopupCtrl", ["$scope", "$translate", function(e, t) {
  var i = [],
    o = e.selectedShape;
  if (o) {
    for (var n = o.getOutgoingShapes(), r = 0; n.length > r; r++)
      if ("BPMN-EDITOR.ITEM.SEQUENCE-FLOW.TITLE" === n[r].getStencil().title()) {
        var s = n[r].getTarget();
        i.push({
          id: n[r].resourceId,
          targetTitle: s.properties["oryx-name"],
          targetType: t.instant(s.getStencil().title())
        })
      }
  } else console.log("Programmatic error: no selected shape found");
  var a = [];
  if (e.property.value && e.property.value.sequenceFlowOrder) {
    for (var l = e.property.value.sequenceFlowOrder, d = 0; l.length > d; d++)
      for (var c = 0; i.length > c; c++)
        if (i[c].id === l[d]) {
          a.push(i[c]), i.splice(c, 1);
          break
        }
    a = a.concat(i)
  } else a = i;
  e.outgoingSequenceFlow = a, e.moveUp = function(t) {
    var i = e.outgoingSequenceFlow[t];
    e.outgoingSequenceFlow[t] = e.outgoingSequenceFlow[t - 1], e.outgoingSequenceFlow[t - 1] = i
  }, e.moveDown = function(t) {
    var i = e.outgoingSequenceFlow[t];
    e.outgoingSequenceFlow[t] = e.outgoingSequenceFlow[t + 1], e.outgoingSequenceFlow[t + 1] = i
  }, e.save = function() {
    if (e.outgoingSequenceFlow.length > 0) {
      e.property.value = {}, e.property.value.sequenceFlowOrder = [];
      for (var t = 0; e.outgoingSequenceFlow.length > t; t++) e.property.value.sequenceFlowOrder.push(e.outgoingSequenceFlow[t].id)
    } else e.property.value = null;
    e.updatePropertyInModel(e.property), e.close()
  }, e.cancel = function() {
    e.close()
  }, e.$parent.$on("modal.hide.before", function() {
    e.close(), e.$parent.$apply()
  }), e.close = function() {
    e.property.mode = "read", e.$hide()
  }
}]), angular.module("activitiModeler").controller("KisBpmConditionExpressionCtrl", ["$scope", "$modal", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/condition-expression-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("KisBpmConditionExpressionPopupCtrl", ["$rootScope", "$scope", "$translate", "FormBuilderService", "ProcessScopeService", function(e, t, i, o, n) {
  t.model = {
    condition: {}
  }, void 0 !== t.property.value && null !== t.property.value && void 0 !== t.property.value.expression && null !== t.property.value.expression && (t.model.condition = angular.copy(t.property.value.expression), t.model.condition.nextCondition ? t.model.condition.type = "advanced" : t.model.condition.type || (t.model.condition.fieldId ? (t.model.condition.leftFormFieldId = t.model.condition.fieldId, t.model.condition.type = "variables") : t.model.condition.responseVariableName ? (t.model.condition.leftRestResponseId = t.model.condition.responseVariableName, t.model.condition.type = "variables") : t.model.condition.outcomeFormId && (t.model.condition.rightOutcomeFormId = t.model.condition.outcomeFormId, t.model.condition.rightOutcomeFormName = t.model.condition.outcomeFormName, t.model.condition.outcomeName && (t.model.condition.rightOutcomeName = t.model.condition.outcomeName), t.model.condition.type = "variables"), t.model.condition.value && (t.model.condition.rightValue = t.model.condition.value, t.model.condition.value = void 0), t.model.condition.fieldId = void 0, t.model.condition.fieldType = void 0, t.model.condition.fieldName = void 0, t.model.condition.outcomeName = void 0, t.model.condition.value = void 0)), t.model.condition.type || (t.model.condition.type = "none"), "variables" === t.model.condition.type ? t.model.condition.leftFieldType = t.model.condition.outcomeFormId ? "outcome" : t.model.condition.leftRestResponseId ? "restResponse" : "formField" : "static" === t.model.condition.type && (t.model.condition.staticValue || (t.model.condition.type = "none")), t.getOperatorLabel = function(e) {
    return "==" == e.condition.operator ? i.instant("FORM-BUILDER.VISIBILITY.OPERATORS.EQUALS") : "!=" == e.condition.operator ? i.instant("FORM-BUILDER.VISIBILITY.OPERATORS.NOTEQUALS") : "<" == e.condition.operator ? i.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.LESSTHAN") : ">" == e.condition.operator ? i.instant("FORM-BUILDER.VISIBILITY.OPERATORS.INTEGER.GREATERTHAN") : "empty" == e.condition.operator ? i.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISEMPTY") : "notEmpty" == e.condition.operator ? i.instant("FORM-BUILDER.VISIBILITY.OPERATORS.ISNOTEMPTY") : i.instant("PROCESS-BUILDER.CHOICE-STEP.CONDITION.SELECT-OPERATOR")
  }, t.isShowRightHandSide = function() {
    return null !== t.model.condition && void 0 !== t.model.condition && "empty" !== t.model.condition.operator && "notEmpty" !== t.model.condition.operator
  }, t.prepareForSave = function() {
    var e = function(t, i) {
        t && (t.nextCondition = void 0);
        var o = {};
        return i.length > 0 ? (o = i.shift(), t.nextCondition = o, e(t.nextCondition, i), void 0) : o
      },
      i = function(e) {
        if (e && e.length > 0) {
          var t = 0;
          for (t = 0; e.length > t; t++) e[t] && (void 0 != e[t].leftFieldType && ("formField" === e[t].leftFieldType ? (e[t].leftRestResponseId = void 0, e[t].outcomeFormId = void 0, e[t].outcomeFormName = void 0, "variables" === e[t].type && (e[t].rightRestResponseId = void 0, e[t].rightOutcomeFormId = void 0, e[t].rightOutcomeName = void 0, e[t].rightFormFieldId = void 0, e[t].rightFieldType = void 0)) : "restResponse" === e[t].leftFieldType ? (e[t].leftFormFieldId = void 0, e[t].outcomeFormId = void 0, e[t].outcomeFormName = void 0, "variables" === e[t].type && (e[t].rightRestResponseId = void 0, e[t].rightOutcomeFormId = void 0, e[t].rightOutcomeName = void 0, e[t].rightFormFieldId = void 0, e[t].rightFieldType = void 0)) : "outcome" === e[t].leftFieldType && (e[t].leftFormFieldId = void 0, e[t].leftRestResponseId = void 0, "variables" === e[t].type && (e[t].rightRestResponseId = void 0, e[t].rightValue = void 0, e[t].rightFormFieldId = void 0)), e[t].leftFieldType = void 0), void 0 != e[t].rightFieldType && ("formField" === e[t].rightFieldType ? (e[t].rightRestResponseId = void 0, e[t].rightValue = void 0, e[t].rightOutcomeFormId = void 0, e[t].rightOutcomeName = void 0) : "restResponse" === e[t].rightFieldType ? (e[t].rightFormFieldId = void 0, e[t].rightValue = void 0, e[t].rightOutcomeFormId = void 0, e[t].rightOutcomeName = void 0) : "outcome" === e[t].rightFieldType ? (e[t].rightRestResponseId = void 0, e[t].rightValue = void 0, e[t].rightFormFieldId = void 0) : "staticValue" === e[t].rightFieldType && (e[t].rightFormFieldId = void 0, e[t].rightRestResponseId = void 0, e[t].rightOutcomeFormId = void 0, e[t].rightOutcomeFormName = void 0, e[t].rightOutcomeName = void 0), e[t].rightFieldType = void 0), void 0 != e[t].$$hashKey && (e[t].$$hashKey = void 0))
        }
      };
    if ("variables" === t.model.condition.type) {
      t.model.condition.nextCondition = void 0, t.model.condition.nextConditionOperator = void 0;
      var o = [t.model.condition];
      o = r(o), i(o), t.flowCondition = o[0]
    } else if ("advanced" === t.model.condition.type) {
      t.tabFlowConditions = r(t.tabFlowConditions), i(t.tabFlowConditions);
      var n = t.tabFlowConditions.shift();
      e(n, t.tabFlowConditions), t.flowCondition = n, t.flowCondition && (t.flowCondition.type = "advanced")
    } else t.flowCondition = void 0
  };
  var r = function(e) {
    return e.filter(function(e) {
      return !!(void 0 != e.leftFormFieldId && "" != e.leftFormFieldId || void 0 != e.leftOutcomeFormId && "" != e.leftOutcomeFormId || void 0 != e.leftRestResponseId && "" != e.leftRestResponseId || void 0 != e.operator && "" != e.operator || void 0 != e.rightValue && "" != e.rightValue || void 0 != e.rightFormFieldId && "" != e.rightFormFieldId || void 0 != e.rightOutcomeFormId && "" != e.rightOutcomeFormId || void 0 != e.rightRestResponseId && "" != e.rightRestResponseId)
    })
  };
  t.save = function() {
    function e(e) {
      return e && "static" != e.expression.type && (e.expression.staticValue = void 0, void 0 == e.expression.leftFormFieldId && void 0 == e.expression.leftRestResponseId && void 0 == e.expression.outcomeFormId && void 0 == e.expression.rightFormFieldId && void 0 == e.expression.rightRestResponseId && void 0 == e.expression.rightOutcomeFormId && void 0 == e.expression.rightValue && (e = "")), e
    }
    var i = "";
    "none" === t.model.condition.type ? t.property.value = void 0 : (t.prepareForSave(), t.flowCondition ? i = {
      expression: t.flowCondition
    } : "static" === t.model.condition.type && (i = {
      expression: {
        type: "static",
        staticValue: t.model.condition.staticValue
      }
    }), t.property.value = e(i)), t.updatePropertyInModel(t.property), t.close()
  }, t.$parent.$on("modal.hide.before", function() {
    t.close(), t.$parent.$apply()
  }), t.close = function() {
    t.property.mode = "read", t.$hide()
  }, t.allSteps = EDITOR.UTIL.collectSortedElementsFromPrecedingElements(t.selectedShape);
  var s = ["text", "integer", "date", "boolean", "dropdown", "radio-buttons", "typeahead", "amount"];
  t.refreshAvailableFormFields = function() {
    var e = EDITOR.UTIL.collectSortedElementsFromPrecedingElements(t.selectedShape);
    t.availableFormFields = n.getFormFieldsForStep(e, t.selectedShape.resourceId, s)
  }, t.refreshAvailableForms = function() {
    var e = EDITOR.UTIL.collectSortedElementsFromPrecedingElements(t.selectedShape);
    t.availableForms = n.getFormsForStep(e, t.selectedShape.resourceId)
  }, t.refreshAvailableOutcomes = function(e) {
    e && (t.availableFormOutcomes = n.getFormOutcomesForForm(e))
  }, t.refreshAvailableResponseVariables = function() {
    var e = EDITOR.UTIL.collectSortedElementsFromPrecedingElements(t.selectedShape),
      i = n.getVariablesForStep(e, t.selectedShape.resourceId);
    t.availableRestResponseVariables = i
  }, t.selectConditionField = function(e, t) {
    e.leftFormFieldId = t.id
  }, t.selectChoiceForm = function(e) {
    t.model.condition.outcomeFormId = e.id, t.model.condition.outcomeFormName = e.name, t.model.condition.rightOutcomeName = void 0, t.refreshAvailableOutcomes(e.id)
  }, t.selectConditionOutcome = function(e, t) {
    e.rightOutcomeName = t.name, e.rightOutcomeFormId = e.outcomeFormId, e.rightOutcomeFormName = e.outcomeFormName, e.rightFieldType = "outcome"
  }, t.selectResponseVariable = function(e, t) {
    e.leftRestResponseId = t.processVariableName
  }
}]), angular.module("activitiModeler").controller("ActivitiSignalDefinitionsCtrl", ["$scope", "$modal", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/signal-definitions-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("ActivitiSignalDefinitionsPopupCtrl", ["$scope", "$q", "$translate", "$timeout", function(e, t, i, o) {
  e.signalDefinitions = void 0 !== e.property.value && null !== e.property.value && e.property.value.length > 0 ? e.property.value.constructor == String ? JSON.parse(e.property.value) : angular.copy(e.property.value) : [], e.selectedSignalDefinition = void 0, e.translationsRetrieved = !1, e.labels = {};
  var n = i("PROPERTY.SIGNALDEFINITIONS.ID"),
    r = i("PROPERTY.SIGNALDEFINITIONS.NAME"),
    s = i("PROPERTY.SIGNALDEFINITIONS.SCOPE");
  t.all([n, r, s]).then(function(t) {
    e.labels.idLabel = t[0], e.labels.nameLabel = t[1], e.labels.scopeLabel = t[2], e.translationsRetrieved = !0, e.gridOptions = {
      data: e.signalDefinitions,
      headerRowHeight: 28,
      enableRowSelection: !0,
      enableRowHeaderSelection: !1,
      multiSelect: !1,
      modifierKeysToMultiSelect: !1,
      enableHorizontalScrollbar: 0,
      enableColumnMenus: !1,
      enableSorting: !1,
      columnDefs: [{
        field: "id",
        displayName: e.labels.idLabel
      }, {
        field: "name",
        displayName: e.labels.nameLabel
      }, {
        field: "scope",
        displayName: e.labels.scopeLabel
      }]
    }, e.gridOptions.onRegisterApi = function(t) {
      e.gridApi = t, t.selection.on.rowSelectionChanged(e, function(t) {
        e.selectedSignalDefinition = t.entity
      })
    }
  }), e.addNewSignalDefinition = function() {
    var t = {
      id: "",
      name: "",
      scope: "global"
    };
    e.signalDefinitions.push(t), o(function() {
      e.gridApi.selection.toggleRowSelection(t)
    })
  }, e.removeSignalDefinition = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.signalDefinitions.indexOf(t[0]);
      e.gridApi.selection.toggleRowSelection(t[0]), e.signalDefinitions.splice(i, 1), 0 == e.signalDefinitions.length && (e.selectedSignalDefinition = void 0), o(function() {
        e.signalDefinitions.length > 0 && e.gridApi.selection.toggleRowSelection(e.signalDefinitions[0])
      })
    }
  }, e.scopeOptions = [{
    value: "global",
    translationId: "PROPERTY.SIGNALDEFINITIONS.SCOPE-GLOBAL"
  }, {
    value: "processInstance",
    translationId: "PROPERTY.SIGNALDEFINITIONS.SCOPE-PROCESSINSTANCE"
  }], e.save = function() {
    e.property.value = e.signalDefinitions.length > 0 ? e.signalDefinitions : null, e.updatePropertyInModel(e.property), e.close()
  }, e.cancel = function() {
    e.property.mode = "read", e.$hide()
  }, e.$parent.$on("modal.hide.before", function() {
    e.close(), e.$parent.$apply()
  }), e.close = function() {
    e.property.mode = "read", e.$hide()
  }
}]), angular.module("activitiModeler").controller("ActivitiSignalRefCtrl", ["$scope", function(e) {
  for (var t = void 0, i = e.selectedShape; null !== i && void 0 !== i && void 0 === t;) i.properties && i.properties["oryx-signaldefinitions"] ? t = i.properties["oryx-signaldefinitions"] : i = i.parent;
  try {
    t = JSON.parse(t), "string" == typeof t && (t = JSON.parse(t))
  } catch (o) {}
  e.signalDefinitions = t, e.signalChanged = function() {
    e.updatePropertyInModel(e.property)
  }
}]), angular.module("activitiModeler").controller("ActivitiMessageDefinitionsCtrl", ["$scope", "$modal", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/message-definitions-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("ActivitiMessageDefinitionsPopupCtrl", ["$scope", "$q", "$translate", "$timeout", function(e, t, i, o) {
  e.messageDefinitions = void 0 !== e.property.value && null !== e.property.value && e.property.value.length > 0 ? e.property.value.constructor == String ? JSON.parse(e.property.value) : angular.copy(e.property.value) : [], e.selectedMessageDefinition = void 0, e.translationsRetrieved = !1, e.labels = {};
  var n = i("PROPERTY.MESSAGEDEFINITIONS.ID"),
    r = i("PROPERTY.MESSAGEDEFINITIONS.NAME");
  t.all([n, r]).then(function(t) {
    e.labels.idLabel = t[0], e.labels.nameLabel = t[1], e.translationsRetrieved = !0, e.gridOptions = {
      data: e.messageDefinitions,
      headerRowHeight: 28,
      enableRowSelection: !0,
      enableRowHeaderSelection: !1,
      multiSelect: !1,
      modifierKeysToMultiSelect: !1,
      enableHorizontalScrollbar: 0,
      enableColumnMenus: !1,
      enableSorting: !1,
      columnDefs: [{
        field: "id",
        displayName: e.labels.idLabel
      }, {
        field: "name",
        displayName: e.labels.nameLabel
      }]
    }, e.gridOptions.onRegisterApi = function(t) {
      e.gridApi = t, t.selection.on.rowSelectionChanged(e, function(t) {
        e.selectedMessageDefinition = t.entity
      })
    }
  }), e.addNewMessageDefinition = function() {
    var t = {
      id: "",
      name: ""
    };
    e.messageDefinitions.push(t), o(function() {
      e.gridApi.selection.toggleRowSelection(t)
    })
  }, e.removeMessageDefinition = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.messageDefinitions.indexOf(t[0]);
      e.gridApi.selection.toggleRowSelection(t[0]), e.messageDefinitions.splice(i, 1), 0 == e.messageDefinitions.length && (e.selectedMesageDefinition = void 0), o(function() {
        e.messageDefinitions.length > 0 && e.gridApi.selection.toggleRowSelection(e.messageDefinitions[0])
      })
    }
  }, e.save = function() {
    e.property.value = e.messageDefinitions.length > 0 ? e.messageDefinitions : null, e.updatePropertyInModel(e.property), e.close()
  }, e.cancel = function() {
    e.property.mode = "read", e.$hide()
  }, e.$parent.$on("modal.hide.before", function() {
    e.close(), e.$parent.$apply()
  }), e.close = function() {
    e.property.mode = "read", e.$hide()
  }
}]), angular.module("activitiModeler").controller("ActivitiMessageRefCtrl", ["$scope", function(e) {
  for (var t = void 0, i = e.selectedShape; null !== i && void 0 !== i && void 0 === t;) i.properties && i.properties["oryx-messagedefinitions"] ? t = i.properties["oryx-messagedefinitions"] : i = i.parent;
  try {
    t = JSON.parse(t), "string" == typeof t && (t = JSON.parse(t))
  } catch (o) {}
  e.messageDefinitions = t, e.messageChanged = function() {
    e.updatePropertyInModel(e.property)
  }
}]), angular.module("activitiModeler").controller("KisBpmAlfrescoContentCtrl", ["$scope", "$modal", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/publish-alfresco-content-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("KisBpmAlfrescoContentPopupCtrl", ["$scope", "FormBuilderService", "ProcessScopeService", function(e, t, i) {
  e.alfrescoSourceOptions = [{
    id: "process",
    title: "Publish all content uploaded in process"
  }, {
    id: "field",
    title: "Publish content uploaded in field"
  }], e.model = {
    currentTab: "documentDefinition"
  }, e.allSteps = EDITOR.UTIL.collectSortedElementsFromPrecedingElements(e.selectedShape);
  var o = i.getFormFieldsForStep(e.allSteps, e.selectedShape.resourceId),
    n = i.getVariablesForStep(e.allSteps, e.selectedShape.resourceId);
  if (void 0 !== e.property.value && null !== e.property.value) {
    for (var r = 0; e.alfrescoSourceOptions.length > r; r++)
      if (e.alfrescoSourceOptions[r].id === e.property.value.source) {
        e.alfrescoSourceOption = e.alfrescoSourceOptions[r];
        break
      }
    if (e.property.value.field) {
      if (o && o.length > 0)
        for (var s = !1, r = 0; o.length > r; r++)
          if (o[r].id === e.property.value.field) {
            e.selectedFormField = {
              field: o[r]
            }, e.variableType = "formField", s = !0;
            break
          }
      if (!s && n && n.length > 0)
        for (var r = 0; n.length > r; r++)
          if (n[r].processVariableName === e.property.value.field) {
            e.selectedFormField = {
              field: {
                id: n[r].processVariableName,
                name: n[r].processVariableName
              }
            }, e.variableType = "variable";
            break
          }
      e.alfrescoSourceOption = e.alfrescoSourceOptions[1]
    }
  } else e.alfrescoSourceOption = {};
  e.selectedFormField && void 0 !== e.selectedFormField || (e.selectedFormField = {}), e.variableType && void 0 !== e.variableType || (e.variableType = "formField"), e.save = function() {
    e.alfrescoSourceOption ? (e.property.value = {}, "process" === e.alfrescoSourceOption.id ? e.property.value = {
      source: "process"
    } : "field" === e.alfrescoSourceOption.id && (e.property.value = {
      source: "field",
      field: e.selectedFormField.field.id
    }), e.property.value.metaDataColumnDefinitions = e.metaDataColumnDefinitions, e.property.value.documentAspects = e.model.documentAspects, e.property.value.documentType = e.model.documentType) : e.property.value = null, e.updatePropertyInModel(e.property), e.close()
  }, e.cancel = function() {
    e.close()
  }, e.$parent.$on("modal.hide.before", function() {
    e.close(), e.$parent.$apply()
  }), e.close = function() {
    e.property.mode = "read", e.$hide()
  }, e.setActiveTab = function(t) {
    e.activeTab = t
  }, e.activeTab = "documentDefinition"
}]), angular.module("activitiModeler").controller("KisBpmAlfrescoContentPopupDocumentDefinitionController", ["$rootScope", "$scope", "$q", "$translate", "$http", "$timeout", "$modal", function(e, t, i, o, n, r) {
  t.stepId = t.selectedShape.resourceId, t.labels = [], void 0 !== t.property.value && null !== t.property.value && (t.model.documentAspects = t.property.value.documentAspects, t.model.documentType = t.property.value.documentType), t.model.documentAspects || (t.model.documentAspects = [{
    aspectName: "cm:titled"
  }], t.property.value.documentAspects = t.model.documentAspects), t.model.documentType || (t.model.documentType = "cmis:document", t.property.value.documentType = t.model.documentType), t.urlDynamicTableConfig = {
    position: 0,
    field: ""
  };
  var s = t.model.documentAspects;
  t.selectedDocumentAspect = void 0, t.labels.aspectName = o.instant("PROCESS-BUILDER.PUBLISH-STEP.DOCUMENT-DEFINITION.POPUP.DOCUMENT-ASPECTS-TABLE-ASPECT-NAME-HEADER"), t.documentAspectsGrid = {
    data: s,
    headerRowHeight: 28,
    enableRowSelection: !0,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableColumnMenus: !1,
    enableSorting: !1,
    columnDefs: [{
      field: "aspectName",
      displayName: t.labels.aspectName
    }]
  }, t.documentAspectsGrid.onRegisterApi = function(e) {
    t.gridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
      t.selectedDocumentAspect = e.entity, t.focusFirstField()
    })
  }, t.focusFirstField = function() {
    r(function() {
      var e = document.getElementById("aspectName");
      e && e.focus()
    }, 100)
  }, t.addNewDocumentAspect = function() {
    var e = {
      aspectName: ""
    };
    t.model.documentAspects.push(e), t.gridApi.selection.clearSelectedRows(), r(function() {
      t.gridApi.selection.toggleRowSelection(e)
    })
  }, t.removeDocumentAspect = function() {
    if (t.selectedDocumentAspect) {
      var e = t.model.documentAspects.indexOf(t.selectedDocumentAspect);
      t.gridApi.selection.toggleRowSelection(t.selectedDocumentAspect), t.selectedDocumentAspect = void 0, t.model.documentAspects.splice(e, 1), r(function() {
        t.model.documentAspects.length > 0 && t.gridApi.selection.toggleRowSelection(t.model.documentAspects[0])
      })
    }
  }
}]), angular.module("activitiModeler").controller("PublishStepMetadataMappingController", ["$rootScope", "$scope", "$q", "$translate", "$http", "$timeout", "$modal", "uiGridConstants", function(e, t, i, o, n, r, s, a) {
  t.labels = [];
  var l = [];
  t.step && (void 0 !== t.property.value && null !== t.property.value && (t.step.metaDataColumnDefinitions = t.property.value.metaDataColumnDefinitions), t.step.metaDataColumnDefinitions || (t.step.metaDataColumnDefinitions = []), l = t.step.metaDataColumnDefinitions), t.propertyTypes = ["boolean", "date", "number", "string"], t.urlDynamicTableConfig = {
    position: 0,
    field: ""
  }, t.metaDataSelectedColumnDefinition = void 0, t.labels.filePropertyLabel = o.instant("FORM-BUILDER.COMPONENT.ATTACH-FILE.METADATA.HEADER-FILE-PROPERTY"), t.labels.variableLabel = o.instant("FORM-BUILDER.COMPONENT.ATTACH-FILE.METADATA.HEADER-VARIABLE"), t.labels.formFieldLabel = o.instant("FORM-BUILDER.COMPONENT.ATTACH-FILE.METADATA.HEADER-FORM-FIELD"), t.setValueType = function(e) {
    t.metaDataSelectedColumnDefinition.valueType = e
  }, t.metaDataGridOptions = {
    data: l,
    headerRowHeight: 28,
    enableRowSelection: !0,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableColumnMenus: !1,
    enableSorting: !1,
    columnDefs: [{
      field: "fileProperty",
      displayName: t.labels.filePropertyLabel
    }, {
      field: "formField",
      displayName: t.labels.formFieldLabel,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getMappingColumnValue("formField",row.entity)}}</div>'
    }, {
      field: "processVariable",
      displayName: t.labels.variableLabel,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getMappingColumnValue("processVariable",row.entity)}}</div>'
    }]
  }, t._getMappingColumnValue = function(e, t) {
    var i = "";
    return t ? (t[e] && (i = t[e].name), i) : i
  }, t.metaDataGridOptions.onRegisterApi = function(e) {
    t.gridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
      t.metaDataSelectedColumnDefinition = e.entity
    })
  }, t.addNewPropertyMapping = function() {
    t.popup = {
      selectedPropertyMapping: {
        propertyType: "String",
        propertyValueType: "field"
      }
    }, _internalCreateModal({
      template: "views/popup/map-metadata-property.html?version=" + Date.now(),
      scope: t
    }, s, t)
  }, t.removePropertyMapping = function() {
    if (t.metaDataSelectedColumnDefinition) {
      var e = t.step.metaDataColumnDefinitions.indexOf(t.metaDataSelectedColumnDefinition);
      t.gridApi.selection.toggleRowSelection(t.metaDataSelectedColumnDefinition), t.step.metaDataColumnDefinitions.splice(e, 1), r(function() {
        t.step.metaDataColumnDefinitions.length > 0 ? t.gridApi.selection.toggleRowSelection(t.step.metaDataColumnDefinitions[0]) : t.metaDataSelectedColumnDefinition = void 0
      })
    }
  };
  var d = function(e) {
    t.popup = {
      selectedPropertyMapping: {
        propertyName: t.metaDataSelectedColumnDefinition.fileProperty,
        propertyValueFormField: t.metaDataSelectedColumnDefinition.formField,
        propertyValueVariable: t.metaDataSelectedColumnDefinition.processVariable,
        propertyType: t.metaDataSelectedColumnDefinition.propertyType
      }
    }, t.popup.selectedPropertyMapping.propertyValueFormField ? t.popup.selectedPropertyMapping.propertyValueType = "field" : t.popup.selectedPropertyMapping.propertyValueVariable && (t.popup.selectedPropertyMapping.propertyValueType = "variable"), t.popup.selectedPropertyMapping.state = e, _internalCreateModal({
      template: "views/popup/map-metadata-property.html?version=" + Date.now(),
      scope: t
    }, s, t)
  };
  t.editPropertyMapping = function() {
    d("edit")
  }, t.showPropertyMapping = function() {
    d("view")
  }, t.setPropertyMappingFormFieldValue = function() {
    t.popup.selectedPropertyMapping.propertyValueType = "field"
  }, t.setPropertyMappingVariableValue = function() {
    t.popup.selectedPropertyMapping.propertyValueType = "variable"
  }, t.cancelPropertyMapping = function() {
    t.popup.selectedPropertyMapping = void 0, t.modal.hide()
  }, t.savePropertyMapping = function() {
    "field" == t.popup.selectedPropertyMapping.propertyValueType ? t.popup.selectedPropertyMapping.propertyValueVariable = void 0 : "variable" == t.popup.selectedPropertyMapping.propertyValueType && (t.popup.selectedPropertyMapping.propertyValueFormField = void 0), "edit" === t.popup.selectedPropertyMapping.state && (t.metaDataSelectedColumnDefinition.fileProperty = t.popup.selectedPropertyMapping.propertyName, t.metaDataSelectedColumnDefinition.formField = t.popup.selectedPropertyMapping.propertyValueFormField, t.metaDataSelectedColumnDefinition.processVariable = t.popup.selectedPropertyMapping.propertyValueVariable, t.metaDataSelectedColumnDefinition.propertyType = t.popup.selectedPropertyMapping.propertyType, t.gridApi.core.notifyDataChange(a.dataChange.ALL), t.gridApi.selection.toggleRowSelection(t.metaDataSelectedColumnDefinition)), "edit" != t.popup.selectedPropertyMapping.state && (t.metaDataSelectedColumnDefinition = {
      fileProperty: t.popup.selectedPropertyMapping.propertyName,
      formField: t.popup.selectedPropertyMapping.propertyValueFormField,
      processVariable: t.popup.selectedPropertyMapping.propertyValueVariable,
      propertyType: t.popup.selectedPropertyMapping.propertyType
    }, t.step.metaDataColumnDefinitions.push(t.metaDataSelectedColumnDefinition)), t.metaDataSelectedColumnDefinition.processVariable && (t.metaDataSelectedColumnDefinition.processVariable.type = void 0, t.metaDataSelectedColumnDefinition.processVariable.$$hashKey = void 0), t.popup.selectedPropertyMapping = void 0, t.modal.hide()
  }
}]), angular.module("activitiModeler").controller("PublishStepDocumentDefinitionController", ["$rootScope", "$scope", "$q", "$translate", "$http", "$timeout", "$modal", "uiGridConstants", function(e, t, i, o, n, r) {
  t.labels = [];
  var s = [];
  t.step && (void 0 !== t.property.value && null !== t.property.value && (t.step.documentAspects = t.property.value.documentAspects, t.step.documentType = t.property.value.documentType), t.step.documentAspects || (t.step.documentAspects = [{
    aspectName: "cm:titled"
  }]), t.step.documentType || (t.step.documentType = "cmis:document"), s = t.step.documentAspects), t.selectedDocumentAspect = void 0, t.labels.aspectName = o.instant("PROCESS-BUILDER.PUBLISH-STEP.DOCUMENT-DEFINITION.POPUP.DOCUMENT-ASPECTS-TABLE-ASPECT-NAME-HEADER"), t.documentAspectsGrid = {
    data: s,
    headerRowHeight: 28,
    enableRowSelection: !0,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableColumnMenus: !1,
    enableSorting: !1,
    columnDefs: [{
      field: "aspectName",
      displayName: t.labels.aspectName
    }]
  }, t.documentAspectsGrid.onRegisterApi = function(e) {
    t.gridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
      t.selectedDocumentAspect = e.entity, t.focusFirstField()
    })
  }, t.focusFirstField = function() {
    r(function() {
      var e = document.getElementById("aspectName");
      e && e.focus()
    }, 100)
  }, t.addNewDocumentAspect = function() {
    var e = {
      aspectName: ""
    };
    s.push(e), t.gridApi.selection.clearSelectedRows(), r(function() {
      t.gridApi.selection.toggleRowSelection(e)
    })
  }, t.removeDocumentAspect = function() {
    if (t.selectedDocumentAspect) {
      var e = s.indexOf(t.selectedDocumentAspect);
      t.gridApi.selection.toggleRowSelection(t.selectedDocumentAspect), t.selectedDocumentAspect = void 0, s.splice(e, 1), r(function() {
        s.length > 0 && t.gridApi.selection.toggleRowSelection(s[0])
      })
    }
  }
}]), angular.module("activitiModeler").controller("KisBpmAlfrescoDestinationCtrl", ["$scope", "$modal", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/publish-alfresco-destination-popup.html?version=" + Date.now(),
    scope: e,
    backdrop: "static",
    keyboard: !1
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("KisBpmAlfrescoDestinationPopupCtrl", ["$rootScope", "$scope", "$http", "ContentAccountService", "UserService", "ProcessScopeService", function(e, t, i, o, n, r) {
  var s;
  if (void 0 !== t.property.value && null !== t.property.value && (t.accountId = t.property.value.account, t.network = t.property.value.network, t.siteId = t.property.value.site, t.pathId = t.property.value.path, t.userId = t.property.value.user, t.userName = t.property.value.username, t.publishAsType = t.property.value.publish_as_type, t.site = t.property.value.site_title, t.path = t.property.value.path_title, s = t.property.value.folder), t.popup = {
    assignmentObject: {
      candidateUsers: [],
      candidateGroups: []
    }
  }, t.selectDestinationFolder = function(e) {
    e.account && (t.accountId = e.account.id), e.network && (t.network = e.network), e.site && e.path && (t.siteId = e.site.id, t.pathId = e.path.id, t.path = e.path.title, t.site = e.site.title)
  }, t.setPublishAs = function(e) {
    "process_initiator" === e && (t.userId = void 0, t.userName = void 0), t.publishAsType = e
  }, t.publishAsType || (t.publishAsType = "process_initiator"), t.alfrescoAccount = {
    selected: ""
  }, t.loadAlfrescoAccounts = function() {
    t.contentAlfrescoAccounts = {
      loading: !0,
      onPrem: !1
    };
    var e = [],
      i = !1;
    o.getAccounts().then(function(o) {
      if (o && o.data)
        for (var n = 0; o.data.length > n; n++) "alfresco-" === o.data[n].serviceId.substring(0, 9) && (e.push(o.data[n]), "alfresco-cloud" != o.data[n].serviceId && 0 == i ? i = !0 : "alfresco-cloud" === o.data[n].serviceId && (o.data[n].name = "Alfresco Cloud"));
      if (t.accountId || t.network)
        for (var n = 0; e.length > n; n++) {
          if (t.account && e[n].serviceId === t.accountId) {
            t.alfrescoAccount.selected = e[n];
            break
          }
          if (t.network && "alfresco-cloud" === e[n].serviceId) {
            t.alfrescoAccount.selected = e[n];
            break
          }
        } else t.alfrescoAccount.selected = e[0];
      t.contentAlfrescoAccounts.onPrem = i, t.contentAlfrescoAccounts.rawList = e, t.contentAlfrescoAccounts.loading = !1
    })
  }, t.resetDestination = function() {
    t.network = void 0, t.site = void 0, t.path = void 0, t.userId = void 0, t.userName = void 0, t.account = void 0, t.publishAsType = void 0, t.selectedFolder = void 0
  }, t.loadAlfrescoAccounts(), t.$watch("popup.filter", function() {
    t.updateFilter()
  }), t.updateFilter = function() {
    (void 0 == t.popup.oldFilter || t.popup.oldFilter != t.popup.filter) && (t.popup.oldFilter = t.popup.filter ? t.popup.filter : "", null !== t.popup.filter && void 0 !== t.popup.filter && n.getFilteredUsers(t.popup.filter).then(function(e) {
      for (var i = [], o = 0; e.data.length > o; o++) {
        var n = e.data[o],
          r = !1;
        if (null !== t.popup.assignmentObject.candidateUsers && void 0 !== t.popup.assignmentObject.candidateUsers)
          for (var s = 0; t.popup.assignmentObject.candidateUsers.length > s; s++) {
            var a = t.popup.assignmentObject.candidateUsers[s];
            if (a.id === n.id) {
              r = !0;
              break
            }
          }
        r || i.push(n)
      }
      t.popup.userResults = i, t.resetSelection()
    }))
  }, t.confirmUser = function(e) {
    if (!e) {
      var i = t.popup.userResults;
      t.popup.selectedIndex >= 0 && t.popup.selectedIndex < i.length && (e = i[t.popup.selectedIndex])
    }
    e && (t.popup.assignmentObject.assignee = e, t.userId = e.id, t.userName = e.firstName ? e.firstName + " " + e.lastName : e.lastName, t.publishAsType = "user")
  }, t.resetSelection = function() {
    t.popup.selectedIndex = t.popup.userResults && t.popup.userResults.length > 0 ? 0 : -1
  }, t.nextUser = function() {
    var e = t.popup.userResults;
    e && e.length > 0 && t.popup.selectedIndex < e.length - 1 && (t.popup.selectedIndex += 1)
  }, t.previousUser = function() {
    var e = t.popup.userResults;
    e && e.length > 0 && t.popup.selectedIndex > 0 && (t.popup.selectedIndex -= 1)
  }, t.allSteps = EDITOR.UTIL.collectSortedElementsFromPrecedingElements(t.selectedShape), t.createFolderField = {}, s) {
    t.popup.useSubFolder = !0;
    var a = r.getFormFieldsForStep(t.allSteps, t.selectedShape.resourceId, ["text"]);
    if (a && a.length > 0)
      for (var l = 0; a.length > l; l++)
        if (a[l].id === s) {
          t.createFolderField = {
            field: a[l]
          };
          break
        }
  } else t.popup.useSubFolder = !1, t.createFolderField.field = {};
  t.save = function() {
    if ((t.network || t.accountId) && t.site && t.path) {
      t.property.value = {};
      var e = {};
      t.network ? e = {
        network: t.network,
        site: t.siteId,
        path: t.pathId,
        user: t.userId,
        path_title: t.path,
        site_title: t.site,
        username: t.userName,
        publish_as_type: t.publishAsType
      } : t.accountId && (e = {
        account: t.accountId,
        site: t.siteId,
        path: t.pathId,
        user: t.userId,
        path_title: t.path,
        site_title: t.site,
        username: t.userName,
        publish_as_type: t.publishAsType
      }), t.popup.useSubFolder && (e.folder = t.createFolderField.field.id), t.property.value = e
    } else t.property.value = null;
    t.updatePropertyInModel(t.property), t.close()
  }, t.cancel = function() {
    t.close()
  }, t.close = function() {
    t.property.mode = "read", t.$hide()
  }
}]), angular.module("activitiModeler").controller("KisBpmBoxContentCtrl", ["$scope", "$modal", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/publish-box-content-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("KisBpmBoxContentPopupCtrl", ["$scope", "FormBuilderService", "ContentAccountService", "ProcessScopeService", function(e, t, i, o) {
  e.boxSourceOptions = [{
    id: "process",
    title: "Publish all content uploaded in process"
  }, {
    id: "field",
    title: "Publish content uploaded in field"
  }], e.allSteps = EDITOR.UTIL.collectSortedElementsFromPrecedingElements(e.selectedShape);
  var n = o.getFormFieldsForStep(e.allSteps, e.selectedShape.resourceId),
    r = o.getVariablesForStep(e.allSteps, e.selectedShape.resourceId);
  if (void 0 !== e.property.value && null !== e.property.value) {
    for (var s = 0; e.boxSourceOptions.length > s; s++)
      if (e.boxSourceOptions[s].id === e.property.value.source) {
        e.boxSourceOption = e.boxSourceOptions[s];
        break
      }
    if (e.property.value.field) {
      if (n && n.length > 0)
        for (var a = !1, s = 0; n.length > s; s++)
          if (n[s].id === e.property.value.field) {
            e.selectedFormField = {
              field: n[s]
            }, e.variableType = "formField", a = !0;
            break
          }
      if (!a && r && r.length > 0)
        for (var s = 0; r.length > s; s++)
          if (r[s].processVariableName === e.property.value.field) {
            e.selectedFormField = {
              field: {
                id: r[s].processVariableName,
                name: r[s].processVariableName
              }
            }, e.variableType = "variable";
            break
          }
      e.boxSourceOption = e.boxSourceOptions[1]
    }
  } else e.boxSourceOption = {};
  e.selectedFormField && void 0 !== e.selectedFormField || (e.selectedFormField = {}), e.variableType && void 0 !== e.variableType || (e.variableType = "formField"), e.isMetaDataAllowed = !1, i.isBoxMetaDataAllowed().then(function(t) {
    e.isMetaDataAllowed = t
  }), e.save = function() {
    e.boxSourceOption ? (e.property.value = {}, "process" === e.boxSourceOption.id ? e.property.value = {
      source: "process"
    } : "field" === e.boxSourceOption.id && (e.property.value = {
      source: "field",
      field: e.selectedFormField.field.id
    }), e.property.value.metaDataColumnDefinitions = e.metaDataColumnDefinitions) : e.property.value = null, e.updatePropertyInModel(e.property), e.close()
  }, e.cancel = function() {
    e.close()
  }, e.close = function() {
    e.property.mode = "read", e.$hide()
  }
}]), angular.module("activitiModeler").controller("KisBpmBoxDestinationCtrl", ["$scope", "$modal", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/publish-box-destination-popup.html?version=" + Date.now(),
    scope: e,
    backdrop: "static",
    keyboard: !1
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("KisBpmBoxDestinationPopupCtrl", ["$rootScope", "$scope", "$http", "ContentAccountService", "UserService", "ProcessScopeService", function(e, t, i, o, n, r) {
  var s;
  if (void 0 !== t.property.value && null !== t.property.value && (t.accountId = t.property.value.account, t.pathId = t.property.value.path, t.userId = t.property.value.user, t.userName = t.property.value.username, t.path = t.property.value.path_title, t.publishAsType = t.property.value.publish_as_type, s = t.property.value.folder, s && s.id && (s = s.id)), t.popup = {
    assignmentObject: {
      candidateUsers: [],
      candidateGroups: []
    }
  }, t.selectDestinationFolder = function(e) {
    e.account && (t.accountId = e.account.id), e.path && (t.pathId = e.path.id, t.path = e.path.title)
  }, t.setPublishAs = function(e) {
    "process_initiator" === e && (t.user = void 0, t.userName = void 0), t.publishAsType = e
  }, t.publishAsType || (t.publishAsType = "process_initiator"), t.boxAccount = {
    selected: ""
  }, t.loadBoxAccounts = function() {
    t.contentBoxAccounts = {
      loading: !0
    };
    var e = [];
    o.getAccounts().then(function(i) {
      if (i && i.data)
        for (var o = 0; i.data.length > o; o++) "box" === i.data[o].serviceId.substring(0, 3) && (e.push(i.data[o]), "box" === i.data[o].serviceId && (i.data[o].name = "Box"));
      if (t.accountId)
        for (var o = 0; e.length > o; o++) {
          if (t.account && e[o].serviceId === t.accountId) {
            t.boxAccount.selected = e[o];
            break
          }
          if ("box" === e[o].serviceId) {
            t.boxAccount.selected = e[o];
            break
          }
        } else t.boxAccount.selected = e[0];
      t.contentBoxAccounts.rawList = e, t.contentBoxAccounts.loading = !1
    })
  }, t.resetDestination = function() {
    t.path = void 0, t.userId = void 0, t.userName = void 0, t.account = void 0, t.publishAsType = void 0
  }, t.loadBoxAccounts(), t.$watch("popup.filter", function() {
    t.updateFilter()
  }), t.updateFilter = function() {
    (void 0 == t.popup.oldFilter || t.popup.oldFilter != t.popup.filter) && (t.popup.oldFilter = t.popup.filter ? t.popup.filter : "", null !== t.popup.filter && void 0 !== t.popup.filter && n.getFilteredUsers(t.popup.filter).then(function(e) {
      for (var i = [], o = 0; e.data.length > o; o++) {
        var n = e.data[o],
          r = !1;
        if (null !== t.popup.assignmentObject.candidateUsers && void 0 !== t.popup.assignmentObject.candidateUsers)
          for (var s = 0; t.popup.assignmentObject.candidateUsers.length > s; s++) {
            var a = t.popup.assignmentObject.candidateUsers[s];
            if (a.id === n.id) {
              r = !0;
              break
            }
          }
        r || i.push(n)
      }
      t.popup.userResults = i, t.resetSelection()
    }))
  }, t.confirmUser = function(e) {
    if (!e) {
      var i = t.popup.userResults;
      t.popup.selectedIndex >= 0 && t.popup.selectedIndex < i.length && (e = i[t.popup.selectedIndex])
    }
    e && (t.popup.assignmentObject.assignee = e, t.userId = e.id, t.userName = e.firstName ? e.firstName + " " + e.lastName : e.lastName, t.publishAsType = "user")
  }, t.resetSelection = function() {
    t.popup.selectedIndex = t.popup.userResults && t.popup.userResults.length > 0 ? 0 : -1
  }, t.nextUser = function() {
    var e = t.popup.userResults;
    e && e.length > 0 && t.popup.selectedIndex < e.length - 1 && (t.popup.selectedIndex += 1)
  }, t.previousUser = function() {
    var e = t.popup.userResults;
    e && e.length > 0 && t.popup.selectedIndex > 0 && (t.popup.selectedIndex -= 1)
  }, t.allSteps = EDITOR.UTIL.collectSortedElementsFromPrecedingElements(t.selectedShape), t.createFolderField = {}, s) {
    t.popup.useSubFolder = !0;
    var a = r.getFormFieldsForStep(t.allSteps, t.selectedShape.resourceId, ["text"]);
    if (a && a.length > 0)
      for (var l = 0; a.length > l; l++)
        if (a[l].id === s) {
          t.createFolderField = {
            field: a[l]
          };
          break
        }
  } else t.popup.useSubFolder = !1, t.createFolderField.field = {};
  t.save = function() {
    if (t.accountId && t.path) {
      t.property.value = {};
      var e = {};
      t.accountId && (e = {
        account: t.accountId,
        path: t.pathId,
        user: t.userId,
        path_title: t.path,
        username: t.userName,
        publish_as_type: t.publishAsType
      }), t.popup.useSubFolder && (e.folder = t.createFolderField.field.id), t.property.value = e
    } else t.property.value = null;
    t.updatePropertyInModel(t.property), t.close()
  }, t.cancel = function() {
    t.close()
  }, t.close = function() {
    t.property.mode = "read", t.$hide()
  }, t.allSteps = EDITOR.UTIL.collectSortedElementsFromPrecedingElements(t.selectedShape)
}]), angular.module("activitiModeler").controller("KisBpmGoogleDriveContentCtrl", ["$scope", "$modal", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/publish-google-drive-content-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("KisBpmGoogleDriveContentPopupCtrl", ["$scope", "FormBuilderService", "ProcessScopeService", function(e, t, i) {
  e.googleDriveSourceOptions = [{
    id: "process",
    title: "Publish all content uploaded in process"
  }, {
    id: "field",
    title: "Publish content uploaded in field"
  }], e.allSteps = EDITOR.UTIL.collectSortedElementsFromPrecedingElements(e.selectedShape);
  var o = i.getFormFieldsForStep(e.allSteps, e.selectedShape.resourceId),
    n = i.getVariablesForStep(e.allSteps, e.selectedShape.resourceId);
  if (void 0 !== e.property.value && null !== e.property.value) {
    for (var r = 0; e.googleDriveSourceOptions.length > r; r++)
      if (e.googleDriveSourceOptions[r].id === e.property.value.source) {
        e.googleDriveSourceOption = e.googleDriveSourceOptions[r];
        break
      }
    if (e.property.value.field) {
      if (o && o.length > 0)
        for (var s = !1, r = 0; o.length > r; r++)
          if (o[r].id === e.property.value.field) {
            e.selectedFormField = {
              field: o[r]
            }, e.variableType = "formField", s = !0;
            break
          }
      if (!s && n && n.length > 0)
        for (var r = 0; n.length > r; r++)
          if (n[r].processVariableName === e.property.value.field) {
            e.selectedFormField = {
              field: {
                id: n[r].processVariableName,
                name: n[r].processVariableName
              }
            }, e.variableType = "variable";
            break
          }
      e.googleDriveSourceOption = e.googleDriveSourceOptions[1]
    }
  } else e.googleDriveSourceOption = {};
  e.selectedFormField && void 0 !== e.selectedFormField || (e.selectedFormField = {}), e.variableType && void 0 !== e.variableType || (e.variableType = "formField"), e.save = function() {
    e.googleDriveSourceOption ? (e.property.value = {}, "process" === e.googleDriveSourceOption.id ? e.property.value = {
      source: "process"
    } : "field" === e.googleDriveSourceOption.id && (e.property.value = {
      source: "field",
      field: e.selectedFormField.field.id
    }), e.property.value.metaDataColumnDefinitions = e.metaDataColumnDefinitions) : e.property.value = null, e.updatePropertyInModel(e.property), e.close()
  }, e.cancel = function() {
    e.close()
  }, e.close = function() {
    e.property.mode = "read", e.$hide()
  }
}]), angular.module("activitiModeler").controller("KisBpmGoogleDriveDestinationCtrl", ["$scope", "$modal", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/publish-google-drive-destination-popup.html?version=" + Date.now(),
    scope: e,
    backdrop: "static",
    keyboard: !1
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("KisBpmGoogleDriveDestinationPopupCtrl", ["$rootScope", "$scope", "$http", "ContentAccountService", "UserService", "ProcessScopeService", function(e, t, i, o, n, r) {
  var s;
  if (void 0 !== t.property.value && null !== t.property.value && (t.accountId = t.property.value.account, t.pathId = t.property.value.path, t.userId = t.property.value.user, t.userName = t.property.value.username, t.path = t.property.value.path_title, t.publishAsType = t.property.value.publish_as_type, s = t.property.value.folder, s && s.id && (s = s.id)), t.popup = {
    assignmentObject: {
      candidateUsers: [],
      candidateGroups: []
    }
  }, t.selectDestinationFolder = function(e) {
    e.account && (t.accountId = e.account.id), e.path && (t.pathId = e.path.id, t.path = e.path.title)
  }, t.setPublishAs = function(e) {
    "process_initiator" === e && (t.user = void 0, t.userName = void 0), t.publishAsType = e
  }, t.publishAsType || (t.publishAsType = "process_initiator"), t.googleDriveAccount = {
    selected: ""
  }, t.loadGoogleDriveAccounts = function() {
    t.contentGoogleDriveAccounts = {
      loading: !0
    };
    var e = [];
    o.getAccounts().then(function(i) {
      if (i && i.data)
        for (var o = 0; i.data.length > o; o++) i.data[o].serviceId && i.data[o].serviceId.length >= 12 && "google-drive" === i.data[o].serviceId.substring(0, 12) && (e.push(i.data[o]), "google-drive" === i.data[o].serviceId && (i.data[o].name = "Google Drive"));
      if (t.accountId)
        for (var o = 0; e.length > o; o++) {
          if (t.account && e[o].serviceId === t.accountId) {
            t.googleDriveAccount.selected = e[o];
            break
          }
          if ("google-drive" === e[o].serviceId) {
            t.googleDriveAccount.selected = e[o];
            break
          }
        } else t.googleDriveAccount.selected = e[0];
      t.contentGoogleDriveAccounts.rawList = e, t.contentGoogleDriveAccounts.loading = !1
    })
  }, t.resetDestination = function() {
    t.path = void 0, t.userId = void 0, t.userName = void 0, t.account = void 0, t.publishAsType = void 0
  }, t.loadGoogleDriveAccounts(), t.$watch("popup.filter", function() {
    t.updateFilter()
  }), t.updateFilter = function() {
    (void 0 == t.popup.oldFilter || t.popup.oldFilter != t.popup.filter) && (t.popup.oldFilter = t.popup.filter ? t.popup.filter : "", null !== t.popup.filter && void 0 !== t.popup.filter && n.getFilteredUsers(t.popup.filter).then(function(e) {
      for (var i = [], o = 0; e.data.length > o; o++) {
        var n = e.data[o],
          r = !1;
        if (null !== t.popup.assignmentObject.candidateUsers && void 0 !== t.popup.assignmentObject.candidateUsers)
          for (var s = 0; t.popup.assignmentObject.candidateUsers.length > s; s++) {
            var a = t.popup.assignmentObject.candidateUsers[s];
            if (a.id === n.id) {
              r = !0;
              break
            }
          }
        r || i.push(n)
      }
      t.popup.userResults = i, t.resetSelection()
    }))
  }, t.confirmUser = function(e) {
    if (!e) {
      var i = t.popup.userResults;
      t.popup.selectedIndex >= 0 && t.popup.selectedIndex < i.length && (e = i[t.popup.selectedIndex])
    }
    e && (t.popup.assignmentObject.assignee = e, t.userId = e.id, t.userName = e.firstName ? e.firstName + " " + e.lastName : e.lastName, t.publishAsType = "user")
  }, t.resetSelection = function() {
    t.popup.selectedIndex = t.popup.userResults && t.popup.userResults.length > 0 ? 0 : -1
  }, t.nextUser = function() {
    var e = t.popup.userResults;
    e && e.length > 0 && t.popup.selectedIndex < e.length - 1 && (t.popup.selectedIndex += 1)
  }, t.previousUser = function() {
    var e = t.popup.userResults;
    e && e.length > 0 && t.popup.selectedIndex > 0 && (t.popup.selectedIndex -= 1)
  }, t.allSteps = EDITOR.UTIL.collectSortedElementsFromPrecedingElements(t.selectedShape), t.createFolderField = {}, s) {
    t.popup.useSubFolder = !0;
    var a = r.getFormFieldsForStep(t.allSteps, t.selectedShape.resourceId, ["text"]);
    if (a && a.length > 0)
      for (var l = 0; a.length > l; l++)
        if (a[l].id === s) {
          t.createFolderField = {
            field: a[l]
          };
          break
        }
  } else t.popup.useSubFolder = !1, t.createFolderField.field = {};
  t.save = function() {
    if (t.accountId && t.path) {
      t.property.value = {};
      var e = {};
      t.accountId && (e = {
        account: t.accountId,
        path: t.pathId,
        user: t.userId,
        path_title: t.path,
        username: t.userName,
        publish_as_type: t.publishAsType
      }), t.popup.useSubFolder && (e.folder = t.createFolderField.field.id), t.property.value = e
    } else t.property.value = null;
    t.updatePropertyInModel(t.property), t.close()
  }, t.cancel = function() {
    t.close()
  }, t.close = function() {
    t.property.mode = "read", t.$hide()
  }, t.allSteps = EDITOR.UTIL.collectSortedElementsFromPrecedingElements(t.selectedShape)
}]), angular.module("activitiModeler").controller("KisBpmContentPopupMetadataMappingController", ["$rootScope", "$scope", "$q", "$translate", "$http", "$timeout", function(e, t, i, o, n, r) {
  t.stepId = t.selectedShape.resourceId, t.labels = [], void 0 !== t.property.value && null !== t.property.value && (e.metaDataColumnDefinitions = t.property.value.metaDataColumnDefinitions), e.metaDataColumnDefinitions || (e.metaDataColumnDefinitions = []), t.propertyTypes = ["boolean", "date", "number", "string"], t.urlDynamicTableConfig = {
    position: 0,
    field: ""
  };
  var s = e.metaDataColumnDefinitions;
  t.metaDataSelectedColumnDefinition = void 0, t.labels.filePropertyLabel = o.instant("FORM-BUILDER.COMPONENT.ATTACH-FILE.METADATA.HEADER-FILE-PROPERTY"), t.labels.variableLabel = o.instant("FORM-BUILDER.COMPONENT.ATTACH-FILE.METADATA.HEADER-VARIABLE"), t.setValueType = function(e) {
    t.metaDataSelectedColumnDefinition.valueType = e
  }, t.metaDataGridOptions = {
    data: s,
    headerRowHeight: 28,
    enableRowSelection: !0,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableColumnMenus: !1,
    enableSorting: !1,
    columnDefs: [{
      field: "fileProperty",
      displayName: t.labels.filePropertyLabel
    }, {
      field: "formField",
      displayName: t.labels.formFieldLabel,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getMappingColumnValue("formField",row.entity)}}</div>'
    }, {
      field: "processVariable",
      displayName: t.labels.variableLabel,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getMappingColumnValue("processVariable",row.entity)}}</div>'
    }]
  }, t._getMappingColumnValue = function(e, t) {
    var i = "";
    return t ? (t[e] && (i = t[e].name), i) : i
  }, t.metaDataGridOptions.onRegisterApi = function(e) {
    t.gridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
      t.metaDataSelectedColumnDefinition = e.entity, t.focusFirstField()
    })
  }, t.focusFirstField = function() {
    r(function() {
      var e = document.getElementById("filePropertyField");
      e && e.focus()
    }, 100)
  }, t.addNewPropertyMapping = function() {
    var i = {
      fileProperty: "",
      propertyType: "string",
      propertyValueType: "field",
      processVariable: void 0,
      formField: void 0
    };
    e.metaDataColumnDefinitions.push(i), t.gridApi.selection.clearSelectedRows(), r(function() {
      t.gridApi.selection.toggleRowSelection(i)
    })
  }, t.removePropertyMapping = function() {
    if (t.metaDataSelectedColumnDefinition) {
      var i = e.metaDataColumnDefinitions.indexOf(t.metaDataSelectedColumnDefinition);
      t.gridApi.selection.toggleRowSelection(t.metaDataSelectedColumnDefinition), t.metaDataColumnDefinitions.splice(i, 1), r(function() {
        e.metaDataColumnDefinitions.length > 0 ? t.gridApi.selection.toggleRowSelection(e.metaDataColumnDefinitions[0]) : t.metaDataSelectedColumnDefinition = void 0
      })
    }
  }, t.setPropertyMappingFormFieldValue = function() {
    t.metaDataSelectedColumnDefinition.propertyValueType = "field", t.metaDataSelectedColumnDefinition.processVariable = void 0
  }, t.setPropertyMappingVariableValue = function() {
    t.metaDataSelectedColumnDefinition.propertyValueType = "variable", t.metaDataSelectedColumnDefinition.formField = void 0
  }
}]), angular.module("activitiModeler").controller("BpmnEditorDueDateCtrl", ["$scope", "$modal", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/duedate-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("BpmnEditorDueDatePopupCtrl", ["$rootScope", "$scope", "$translate", "ProcessScopeService", function(e, t, i, o) {
  t.popup = void 0 !== t.property.value && null !== t.property.value ? void 0 !== t.property.value.duedate && null !== t.property.value.duedate ? {
    duedate: t.property.value.duedate
  } : void 0 !== t.property.value.duedateExpression && null !== t.property.value.duedateExpression ? {
    duedateExpression: t.property.value.duedateExpression
  } : {
    duedateExpression: t.property.value
  } : {}, t.taskDueDateOptions = [{
    id: "none",
    title: i.instant("PROPERTY.DUEDATE.TASK-DUE-DATE-OPTIONS.NO-DUEDATE")
  }, {
    id: "expression",
    title: i.instant("PROPERTY.DUEDATE.TASK-DUE-DATE-OPTIONS.EXPRESSION")
  }, {
    id: "static",
    title: i.instant("PROPERTY.DUEDATE.TASK-DUE-DATE-OPTIONS.STATIC")
  }, {
    id: "field",
    title: i.instant("PROPERTY.DUEDATE.TASK-DUE-DATE-OPTIONS.FIELD")
  }, {
    id: "variable",
    title: i.instant("PROPERTY.DUEDATE.TASK-DUE-DATE-OPTIONS.VARIABLE")
  }], t.popup.selectedDueDateOption = t.popup.duedate || t.popup.duedateExpression ? t.popup.duedate ? t.popup.duedate.fixed ? t.taskDueDateOptions[2].id : t.popup.duedate.field ? t.taskDueDateOptions[3].id : t.popup.duedate.variable ? t.taskDueDateOptions[4].id : t.taskDueDateOptions[0].id : t.taskDueDateOptions[1].id : t.taskDueDateOptions[0].id, t.dueDateOptionChanged = function() {
    "expression" === t.popup.selectedDueDateOption ? t.popup.duedate = void 0 : "none" === t.popup.selectedDueDateOption ? (t.popup.duedate = void 0, t.popup.duedateExpression = void 0) : "static" === t.popup.selectedDueDateOption ? (t.popup.duedate = {
      fixed: {}
    }, t.popup.duedateExpression = void 0) : "field" === t.popup.selectedDueDateOption ? (t.popup.duedate = {
      field: {}
    }, t.popup.duedateExpression = void 0) : "variable" === t.popup.selectedDueDateOption && (t.popup.duedate = {
      variable: {}
    }, t.popup.duedateExpression = void 0)
  }, t.setAddCalculationType = function(e) {
    e && (e.taskDueDateCalculationType = "add")
  }, t.setSubtractCalculationType = function(e) {
    e && (e.taskDueDateCalculationType = "subtract")
  }, t.allSteps = EDITOR.UTIL.collectSortedElementsFromPrecedingElements(t.selectedShape), t.getRestResponseVariables = function() {
    return o.getVariablesForStep(t.allSteps, t.selectedShape.resourceId)
  }, t.selectResponseVariable = function(e) {
    t.popup.duedate.variable.taskDueDateVariable = e
  }, t.save = function() {
    t.property.value = {}, t.popup.duedate ? t.property.value.duedate = t.popup.duedate : t.popup.duedateExpression ? t.property.value.duedateExpression = t.popup.duedateExpression : t.property.value = "", t.updatePropertyInModel(t.property), t.close()
  }, t.close = function() {
    t.property.mode = "read", t.$hide()
  }
}]), angular.module("activitiModeler").controller("ActivitiRestCallEndpointCtrl", ["$scope", "$modal", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/restcall-endpoint-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("ActivitiRestCallEndpointPopupCtrl", ["$rootScope", "$scope", "$translate", "$timeout", "$http", "ProcessBuilderService", "EndpointUtilService", function(e, t, i, o, n, r, s) {
  function a() {
    var e = t.selectedShape.properties["oryx-restcalltask_request_headers"],
      i = t.popup.endpoint,
      o = void 0;
    if (t.property.value && (o = t.property.value.endpoint_config), e && e.length > 0 && o && o.requestHeaders && o.requestHeaders.length > 0) {
      for (var n = angular.copy(e), r = {}, s = 0; o.requestHeaders.length > s; s++) r[o.requestHeaders[s].name] = o.requestHeaders[s].value;
      for (var a = [], s = 0; n.length > s; s++) void 0 === r[n[s].name] && a.push(n[s]);
      e.length = 0, angular.copy(a, e)
    }
    if (e && i && i.requestHeaders && i.requestHeaders.length > 0) {
      for (var l = {}, s = 0; e.length > s; s++) l[e[s].name] = e[s].value;
      for (var s = 0; i.requestHeaders.length > s; s++)
        if (void 0 === l[i.requestHeaders[s].name]) {
          var d = {
            name: i.requestHeaders[s].name,
            value: i.requestHeaders[s].value
          };
          e.push(d)
        }
    }
  }
  t.popup = {}, void 0 != t.property.value && null != t.property.value && (void 0 != t.property.value.endpoint_config && null != t.property.value.endpoint_config && (t.popup.endpoint = t.property.value.endpoint_config), void 0 != t.property.value.http_method && null != t.property.value.http_method && (t.popup.httpMethod = t.property.value.http_method), void 0 != t.property.value.rest_url && null != t.property.value.rest_url && (t.popup.restUrl = t.property.value.rest_url)), t.popup.restEndpointFieldTypes = ["text", "integer", "date", "boolean", "dropdown", "radio-buttons", "typeahead", "amount"], t.popup.insertRestUrlField = {
    position: 0
  }, t.model = {
    urlFieldType: "formField",
    requestMappingValues: []
  }, t.setUrlFieldType = function(e) {
    "restResponse" === e ? t.model = {
      urlFieldType: "restResponse"
    } : "formField" === e && (t.model = {
      urlFieldType: "formField"
    })
  }, t.$watch("popup.insertRestUrlField.field", function(e) {
    if (e) {
      var i = t.popup.restUrl,
        n = "${" + e.id + "}";
      i = i ? i.substring(0, t.popup.insertRestUrlField.position) + n + i.substring(t.popup.insertRestUrlField.position) : n, t.popup.insertRestUrlField.field = void 0, o(function() {
        var e = angular.element("#rest-url-value");
        e.focus(), e.val(i), t.popup.restUrl = i
      }, 200)
    }
  }), t.endpointLabel = function(e, t, i, o, n) {
    return s.getEndpointLabel(e, t, i, o, n)
  }, t.loadBaseEndpoints = function() {
    s.getAllEndpointConfigurations().then(function(e) {
      if (t.popup.endpointConfigurations = e, t.popup.endpoint)
        for (var i = 0; t.popup.endpointConfigurations.length > i; i++) t.popup.endpointConfigurations[i].id == t.popup.endpoint.id && (t.popup.endpoint = t.popup.endpointConfigurations[i])
    })
  }, t.getFullEndpointURL = function() {
    return s.getFullEndpointURL(t.popup.endpoint, t.popup.restUrl)
  }, t.executeEndpointTest = function() {
    t.endpointTestVisible = {
      visible: !0
    }
  }, t.popup.httpMethods = ["GET", "POST", "PUT", "DELETE"], t.popup.httpMethod || (t.popup.httpMethod = t.popup.httpMethods[0]), t.cancel = function() {
    t.close()
  }, t.$parent.$on("modal.hide.before", function() {
    t.close(), t.$parent.$apply()
  }), t.close = function() {
    t.property.mode = "read", t.$hide()
  }, t.save = function() {
    if (a(), t.popup.httpMethod && (t.popup.endpoint || t.popup.restUrl)) {
      t.property.value = {};
      var e = {};
      e.http_method = t.popup.httpMethod, t.popup.endpoint && (e.endpoint_config = t.popup.endpoint), t.popup.restUrl && (e.rest_url = t.popup.restUrl), t.property.value = e
    } else t.property.value = null;
    t.updatePropertyInModel(t.property), t.close()
  }, t.showEndpointTest = function() {
    return ACTIVITI.CONFIG && ACTIVITI.CONFIG.onPremise ? ACTIVITI.CONFIG.onPremise : !1
  }, t.allSteps = EDITOR.UTIL.collectSortedElementsFromPrecedingElements(t.selectedShape), t.loadBaseEndpoints()
}]), angular.module("activitiModeler").controller("EditorEndpointCheckController", ["$rootScope", "$scope", "EndpointUtilService", "FormBuilderService", "ProcessScopeService", function(e, t, i, o, n) {
  var r, s, a;
  if (t.popup) {
    t.popup.httpMethod && "" != t.popup.httpMethod && (r = t.popup.httpMethod), t.popup.restUrl && "" != t.popup.restUrl && (s = t.popup.restUrl), t.popup.endpoint && (a = t.popup.endpoint);
    var l = function() {
      var e = t.selectedShape.properties["oryx-restcalltask_request_mapping"],
        o = t.selectedShape.properties["oryx-restcalltask_request_headers"];
      if (o && a && a.requestHeaders && a.requestHeaders.length > 0) {
        for (var l = {}, d = 0; o.length > d; d++) l[o[d].name] = o[d].value;
        for (var d = 0; a.requestHeaders.length > d; d++)
          if (void 0 === l[a.requestHeaders[d].name]) {
            var c = {
              name: a.requestHeaders[d].name,
              value: a.requestHeaders[d].value
            };
            o.push(c)
          }
      }
      if (i.isTestDataNeeded(s, e, o)) {
        var p = EDITOR.UTIL.collectSortedElementsFromPrecedingElements(t.selectedShape),
          u = n.getFormFieldsForStep(p, t.selectedShape.id),
          h = n.getVariablesForStep(p, t.selectedShape.id);
        t.testDataFields = i.getTestDataFields(s, u, h, e, o)
      } else i.executeEndpointCheck(r, a, s).then(function(e) {
        t.requestResult = e, t.formattedResult = i.getFormattedRequestResult(e)
      })
    };
    t.isRequestSuccessful = function() {
      var e = !1;
      return t.requestResult && t.requestResult.statusCode && t.requestResult.statusCode >= 200 && 400 > t.requestResult.statusCode && (e = !0), e
    }, t.cancel = function() {
      t.endpointTestVisible.visible = !1
    }, t.ok = function() {
      i.executeEndpointCheck(r, a, s, t.testDataFields).then(function(e) {
        t.requestResult = e, t.formattedResult = i.getFormattedRequestResult(e)
      })
    }, t.back = function() {
      delete t.requestResult, t.testDataFields || t.cancel()
    }, l()
  }
}]), angular.module("activitiModeler").controller("ActivitiRestCallRequestMappingCtrl", ["$scope", "$modal", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/restcall-request-mapping-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("ActivitiRestCallRequestMappingPopupCtrl", ["$rootScope", "$scope", "$translate", "$timeout", "FormBuilderService", "ProcessScopeService", function(e, t, i, o, n, r) {
  t.allSteps = EDITOR.UTIL.collectSortedElementsFromPrecedingElements(t.selectedShape);
  var s = r.getFormFieldsForStep(t.allSteps, t.selectedShape.resourceId),
    a = r.getVariablesForStep(t.allSteps, t.selectedShape.resourceId);
  if (t.popup = {
    requestMappings: []
  }, void 0 != t.property.value && null != t.property.value) {
    for (var l = [], d = 0; t.property.value.length > d; d++) {
      var c = {};
      if (void 0 != t.property.value[d].jsonPropertyName && null != t.property.value[d].jsonPropertyName && (c.jsonPropertyName = t.property.value[d].jsonPropertyName), void 0 != t.property.value[d].jsonPropertyType && null != t.property.value[d].jsonPropertyType && (c.jsonPropertyType = t.property.value[d].jsonPropertyType), void 0 != t.property.value[d].jsonPropertyValue && null != t.property.value[d].jsonPropertyValue) c.jsonPropertyValue = t.property.value[d].jsonPropertyValue, c.jsonPropertyValueType = "static";
      else if (void 0 != t.property.value[d].jsonPropertyValueFormField && null != t.property.value[d].jsonPropertyValueFormField.id) {
        if (s && s.length > 0)
          for (var p = 0; s.length > p; p++)
            if (s[p].id === t.property.value[d].jsonPropertyValueFormField.id) {
              c.jsonPropertyValueFormField = s[p];
              break
            }
        c.jsonPropertyValueType = "field"
      } else if (void 0 != t.property.value[d].jsonPropertyValueRestResponseField && null != t.property.value[d].jsonPropertyValueRestResponseField.id) {
        if (a && a.length > 0)
          for (var p = 0; a.length > p; p++)
            if (a[p].processVariableName === t.property.value[d].jsonPropertyValueRestResponseField.id) {
              c.jsonPropertyValueRestResponseField = {
                id: a[p].processVariableName,
                name: a[p].processVariableName,
                type: a[p].processVariableType
              };
              break
            }
        c.jsonPropertyValueType = "restResponse"
      }
      l.push(c)
    }
    t.popup.requestMappings = l
  }
  t.popup.restRequestMappingFieldTypes = ["text", "integer", "date", "boolean", "dropdown", "radio-buttons", "typeahead", "amount"], t.popup.jsonTypes = ["string", "boolean", "long", "date"];
  var u = i.instant("PROCESS-BUILDER.REST-CALL-STEP.REQUEST-MESSAGE.JSON-PROPERTY"),
    h = i.instant("PROCESS-BUILDER.REST-CALL-STEP.REQUEST-MESSAGE.JSON-VALUE");
  t.requestMessageGridOptions = {
    data: t.popup.requestMappings,
    headerRowHeight: 28,
    enableRowSelection: !0,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    unselect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableColumnMenus: !1,
    enableSorting: !1,
    columnDefs: [{
      field: "jsonPropertyValue",
      displayName: h,
      cellTemplate: '<div class="ui-grid-cell-contents">{{grid.appScope._getVariableColumnValue(row.entity)}}</div>'
    }, {
      field: "jsonPropertyName",
      displayName: u
    }]
  }, t.requestMessageGridOptions.onRegisterApi = function(e) {
    t.requestMessageGridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
      e.isSelected ? (t.popup.selectedRequestMapping = e.entity, t.popup.selectedRequestMapping.jsonPropertyValueFormField ? (t.popup.selectedRequestMapping.jsonPropertyValueType = "field", t.jsonPropertyValueFormField = {
        field: t.popup.selectedRequestMapping.jsonPropertyValueFormField
      }) : t.jsonPropertyValueFormField = {}) : t.popup.selectedRequestMapping = void 0
    })
  }, t._getVariableColumnValue = function(e) {
    var t = "";
    return e ? (e.jsonPropertyValueFormField ? t = e.jsonPropertyValueFormField.name : e.jsonPropertyValueRestResponseField ? t = e.jsonPropertyValueRestResponseField.name : e.jsonPropertyValue && "" != e.jsonPropertyValue && (t = e.jsonPropertyValue), t) : t
  }, t.addNewRequestMapping = function() {
    var e = {
      jsonPropertyType: t.popup.jsonTypes[0]
    };
    t.jsonPropertyValueFormField = {}, t.popup.requestMappings.push(e), o(function() {
      t.requestMessageGridApi.selection.toggleRowSelection(e)
    })
  }, t.removeRequestMapping = function() {
    if (t.popup.selectedRequestMapping) {
      var e = t.popup.requestMappings.indexOf(t.popup.selectedRequestMapping);
      t.requestMessageGridApi.selection.toggleRowSelection(t.popup.selectedRequestMapping), t.popup.requestMappings.splice(e, 1), o(function() {
        t.popup.requestMappings.length > 0 ? t.requestMessageGridApi.selection.toggleRowSelection(t.popup.requestMappings[0]) : t.popup.selectedRequestMapping = void 0
      })
    }
  }, t.setRequestMessageStaticValue = function() {
    t.popup.selectedRequestMapping.jsonPropertyValueType = "static", t.popup.selectedRequestMapping.jsonPropertyValueFormField = void 0, t.popup.selectedRequestMapping.jsonPropertyValueRestResponseField = void 0
  }, t.setRequestMessageFormFieldValue = function() {
    t.popup.selectedRequestMapping.jsonPropertyValueType = "field", t.popup.selectedRequestMapping.jsonPropertyValue = void 0, t.popup.selectedRequestMapping.jsonPropertyValueRestResponseField = void 0
  }, t.setRequestMessageRestResponseValue = function() {
    t.popup.selectedRequestMapping.jsonPropertyValueType = "restResponse", t.popup.selectedRequestMapping.jsonPropertyValue = void 0, t.popup.selectedRequestMapping.jsonPropertyValueFormField = void 0
  }, t.cancel = function() {
    t.close()
  }, t.$parent.$on("modal.hide.before", function() {
    t.close(), t.$parent.$apply()
  }), t.close = function() {
    t.property.mode = "read", t.$hide()
  }, t.save = function() {
    t.popup.requestMappings.length > 0 ? (t.property.value = [], t.property.value = t.popup.requestMappings) : t.property.value = null, t.updatePropertyInModel(t.property), t.close()
  }, t.processModelId = t.modelData.modelId
}]), angular.module("activitiModeler").controller("ActivitiRestCallResponseMappingCtrl", ["$scope", "$modal", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/restcall-response-mapping-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("ActivitiRestCallResponseMappingPopupCtrl", ["$scope", "$translate", "$timeout", "ProcessScopeService", function(e, t, i, o) {
  if (e.popup = {
    responseMappings: []
  }, void 0 != e.property.value && null != e.property.value) {
    for (var n = [], r = 0; e.property.value.length > r; r++) {
      var s = {};
      void 0 != e.property.value[r].jsonPropertyName && null != e.property.value[r].jsonPropertyName && (s.jsonPropertyName = e.property.value[r].jsonPropertyName), void 0 != e.property.value[r].processVariableName && null != e.property.value[r].processVariableName && (s.processVariableName = e.property.value[r].processVariableName), void 0 != e.property.value[r].processVariableType && null != e.property.value[r].processVariableType && (s.processVariableType = e.property.value[r].processVariableType), n.push(s)
    }
    e.popup.responseMappings = n
  }
  e.popup.jsonTypes = ["string", "boolean", "long", "date"];
  var a = t.instant("PROCESS-BUILDER.REST-CALL-STEP.RESPONSE-MESSAGE.JSON-PROPERTY"),
    l = t.instant("PROCESS-BUILDER.REST-CALL-STEP.RESPONSE-MESSAGE.PROCESS-VARIABLE");
  e.responseMessageGridOptions = {
    data: e.popup.responseMappings,
    headerRowHeight: 28,
    enableRowSelection: !0,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableColumnMenus: !1,
    enableSorting: !1,
    columnDefs: [{
      field: "jsonPropertyName",
      displayName: a
    }, {
      field: "processVariableName",
      displayName: l
    }]
  }, e.responseMessageGridOptions.onRegisterApi = function(t) {
    e.responseMessageGridApi = t, t.selection.on.rowSelectionChanged(e, function(t) {
      e.popup.selectedResponseMapping = t.isSelected ? t.entity : void 0
    })
  }, e.addNewResponseMapping = function() {
    var t = {
      processVariableType: e.popup.jsonTypes[0]
    };
    e.popup.responseMappings.push(t), i(function() {
      e.responseMessageGridApi.selection.toggleRowSelection(t)
    })
  }, e.removeResponseMapping = function() {
    if (e.popup.selectedResponseMapping) {
      var t = e.popup.responseMappings.indexOf(e.selectedResponseMapping);
      e.responseMessageGridApi.selection.toggleRowSelection(e.selectedResponseMapping), e.popup.responseMappings.splice(t, 1), i(function() {
        e.popup.responseMappings.length > 0 ? e.responseMessageGridApi.selection.toggleRowSelection(e.popup.responseMappings[0]) : e.popup.selectedResponseMapping = void 0
      })
    }
  }, e.cancel = function() {
    e.close()
  }, e.$parent.$on("modal.hide.before", function() {
    e.close(), e.$parent.$apply()
  }), e.close = function() {
    e.property.mode = "read", e.$hide()
  }, e.save = function() {
    e.popup.responseMappings.length > 0 ? (e.property.value = [], e.property.value = e.popup.responseMappings) : e.property.value = null, e.updatePropertyInModel(e.property), e.close()
  }, e.$watch("popup.responseMappings", function(t, i) {
    if (i !== t)
      if (t) {
        for (var n = [], r = 0; t.length > r; r++) {
          var s = {
            jsonPropertyName: t[r].jsonPropertyName,
            processVariableName: t[r].processVariableName,
            processVariableType: t[r].processVariableType
          };
          n.push(s)
        }
        o.updateResponseVariablesCache(e.selectedShape.resourceId, n)
      } else o.updateResponseVariablesCache(e.selectedShape.resourceId)
  }, !0)
}]), angular.module("activitiModeler").controller("ActivitiRestCallRequestHeadersCtrl", ["$scope", "$modal", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/restcall-request-headers-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("ActivitiRestCallRequestHeadersPopupCtrl", ["$rootScope", "$scope", "$translate", "$timeout", "EndpointUtilService", "ProcessScopeService", "uiGridConstants", function(e, t, i, o, n, r, s) {
  t.selectedRequestHeaders = [], t.labels = [], t.updateRequestHeadersFromEndpoint = function() {
    var e = t.selectedShape.properties["oryx-restcalltask_endpoint"],
      i = void 0;
    e && e.endpoint_config && n.getAllEndpointConfigurations().then(function(o) {
      t.popup.endpointConfigurations = o;
      for (var n = 0; o.length > n; n++)
        if (e.endpoint_config.id == o[n].id) {
          i = o[n];
          break
        }
      if (i && i.requestHeaders && i.requestHeaders.length > 0) {
        for (var r = {}, n = 0; t.property.value.length > n; n++) r[t.property.value[n].name] = t.property.value[n].value;
        for (var n = 0; i.requestHeaders.length > n; n++)
          if (void 0 === r[i.requestHeaders[n].name]) {
            var s = {
              name: i.requestHeaders[n].name,
              value: i.requestHeaders[n].value
            };
            t.property.value.push(s)
          }
      }
      t.requestHeadersGridOptions.data = t.property.value
    })
  }, t.property.value && 0 !== t.property.value.length || (t.property.value = []), t.updateRequestHeadersFromEndpoint(), t.restHeaderConfig = {
    position: 0,
    field: ""
  }, t.selectedRequestHeader = void 0, t.labels.idLabel = i.instant("PROCESS-BUILDER.REST-CALL-STEP.REQUEST-HEADERS.HEADER-NAME"), t.labels.nameLabel = i.instant("PROCESS-BUILDER.REST-CALL-STEP.REQUEST-HEADERS.HEADER-VALUE"), t.requestHeadersGridOptions = {
    data: t.property.value,
    headerRowHeight: 28,
    enableRowSelection: !0,
    enableRowHeaderSelection: !1,
    multiSelect: !1,
    modifierKeysToMultiSelect: !1,
    enableHorizontalScrollbar: 0,
    enableColumnMenus: !1,
    enableSorting: !1,
    columnDefs: [{
      field: "name",
      displayName: t.labels.idLabel,
      cellClass: function(e, t, i) {
        return "" === e.getCellValue(t, i) || 0 == e.getCellValue(t, i) ? "dynamicTable-cellError" : void 0
      }
    }, {
      field: "value",
      displayName: t.labels.nameLabel,
      cellClass: function(e, t, i) {
        return "" === e.getCellValue(t, i) || 0 == e.getCellValue(t, i) ? "dynamicTable-cellError" : void 0
      }
    }]
  }, t.requestHeadersGridOptions.onRegisterApi = function(e) {
    t.gridApi = e, e.selection.on.rowSelectionChanged(t, function(e) {
      t.selectedRequestHeader = e.entity, t.focusFirstField()
    })
  }, t.focusFirstField = function() {
    o(function() {
      var e = document.getElementById("headerName");
      e && e.focus()
    }, 100)
  }, t.$on("endpoint-selection-changed", function(e, i) {
    i && (t.property.value = angular.copy(i.requestHeaders), t.requestHeadersGridOptions.data = t.property.value, t.gridApi.core.notifyDataChange(s.dataChange.ALL), t.selectedRequestHeader = void 0)
  }), t.$watch("restHeaderConfig.field", function(e) {
    if (e) {
      var i = t.selectedRequestHeader.value,
        n = "${" + e.id + "}";
      i = i ? i.substring(0, t.restHeaderConfig.position) + n + i.substring(t.restHeaderConfig.position) : n, t.restHeaderConfig.field = void 0, o(function() {
        var e = angular.element("#rest-header-value");
        e.focus(), e.val(i), t.selectedRequestHeader.value = i
      }, 200)
    }
  }), t.addNewRequestHeader = function() {
    var e = {
      name: "",
      value: ""
    };
    t.property.value.push(e), t.selectedRequestHeader = e, t.gridApi.core.notifyDataChange(s.dataChange.ALL), o(function() {
      t.gridApi.selection.toggleRowSelection(t.selectedRequestHeader)
    })
  }, t.removeRequestHeader = function() {
    if (t.selectedRequestHeader) {
      var e = t.property.value.indexOf(t.selectedRequestHeader);
      t.gridApi.selection.toggleRowSelection(t.selectedRequestHeader), t.property.value.splice(e, 1), t.gridApi.core.notifyDataChange(s.dataChange.ALL), t.selectedRequestHeader = void 0, o(function() {
        t.property.value.length > 0 && t.gridApi.selection.toggleRowSelection(t.property.value[0])
      })
    }
  }, t.popup = {
    headerFieldType: "formField"
  }, t.setUrlFieldType = function(e) {
    "restResponse" === e ? t.popup = {
      headerFieldType: "restResponse"
    } : "formField" === e && (t.popup = {
      headerFieldType: "formField"
    })
  }, t.close = function() {
    t.property.mode = "read", t.$hide()
  }, t.save = function() {
    t.requestHeadersGridOptions.data.length > 0 ? (t.property.value = [], t.property.value = angular.copy(t.requestHeadersGridOptions.data)) : t.property.value = null, t.updatePropertyInModel(t.property), t.close()
  }
}]), angular.module("activitiModeler").controller("ActivitiExecutionVariablesCtrl", ["$scope", "$modal", "$timeout", "$translate", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/execution-variables-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("ActivitiExecutionVariablesPopupCtrl", ["$scope", "$q", "$translate", "$timeout", "ProcessScopeService", function(e, t, i, o, n) {
  e.variables = void 0 !== e.property.value && null !== e.property.value && e.property.value.length > 0 ? e.property.value.constructor == String ? JSON.parse(e.property.value) : angular.copy(e.property.value) : [], e.selectedVariable = void 0, e.labels = {}, e.variableTypes = ["string", "integer", "boolean", "people", "group"];
  var r = i("PROPERTY.EXECUTION.VARIABLES.VARIABLENAME.LABEL"),
    s = i("PROPERTY.EXECUTION.VARIABLES.VARIABLETYPE.LABEL");
  t.all([r, s]).then(function(t) {
    e.labels.variableNameLabel = t[0], e.labels.variableTypeLabel = t[1], e.translationsRetrieved = !0, e.gridOptions = {
      data: e.variables,
      headerRowHeight: 28,
      enableRowSelection: !0,
      enableRowHeaderSelection: !1,
      multiSelect: !1,
      modifierKeysToMultiSelect: !1,
      enableHorizontalScrollbar: 0,
      enableColumnMenus: !1,
      enableSorting: !1,
      columnDefs: [{
        field: "variableName",
        displayName: e.labels.variableNameLabel
      }, {
        field: "variableType",
        displayName: e.labels.variableTypeLabel
      }]
    }, e.gridOptions.onRegisterApi = function(t) {
      e.gridApi = t, t.selection.on.rowSelectionChanged(e, function(t) {
        e.selectedVariable = t.isSelected ? t.entity : void 0
      })
    }
  }), e.addNewVariable = function() {
    var t = {
      variableName: "",
      variableType: e.variableTypes[0]
    };
    e.variables.push(t), o(function() {
      e.gridApi.selection.toggleRowSelection(t)
    })
  }, e.removeVariable = function() {
    var t = e.gridApi.selection.getSelectedRows();
    if (t && t.length > 0) {
      var i = e.variables.indexOf(t[0]);
      e.gridApi.selection.toggleRowSelection(t[0]), e.variables.splice(i, 1), 0 == e.variables.length && (e.selectedVariable = void 0), o(function() {
        e.variables.length > 0 && e.gridApi.selection.toggleRowSelection(e.variables[0])
      })
    }
  }, e.save = function() {
    var t = e.selectedShape.resourceId;
    if (e.selectedShape && -1 !== e.selectedShape.getStencil().id().indexOf("BPMNDiagram") && (t = "__root__process__"), e.variables.length > 0) {
      for (var i = [], o = 0; e.variables.length > o; o++) {
        var r = {
          variableType: e.variables[o].variableType,
          variableName: e.variables[o].variableName
        };
        i.push(r)
      }
      n.updateExecutionVariablesCache(t, i), e.property.value = [], Array.prototype.push.apply(e.property.value, e.variables)
    } else e.property.value = null, n.updateExecutionVariablesCache(t);
    e.updatePropertyInModel(e.property), e.close()
  }, e.cancel = function() {
    e.$hide(), e.property.mode = "read"
  }, e.close = function() {
    e.$hide(), e.property.mode = "read"
  }
}]), angular.module("activitiModeler").controller("ActivitiExecutionSingleVariableCtrl", ["$scope", "ProcessScopeService", function(e, t) {
  e.shapeId = e.selectedShape.id, e.resourceId = e.selectedShape.resourceId, e.valueFlushed = !1, e.inputBlurred = function() {
    e.valueFlushed = !0, e.property.value && (e.property.value = i(e.resourceId, e.property.key, e.property.value)), e.updatePropertyInModel(e.property)
  }, e.enterPressed = function(t) {
    t && 13 === t.which && (t.preventDefault(), e.inputBlurred())
  }, e.$on("$destroy", function() {
    e.valueFlushed || (e.property.value && (e.property.value = i(e.resourceId, e.property.key, e.property.value)), e.updatePropertyInModel(e.property, e.shapeId))
  });
  var i = function(e, i, o) {
    if (e && void 0 !== e && i && void 0 !== i && o && void 0 !== o)
      if (o.variableName && "" !== o.variableName && (o.variableName = o.variableName.replace(/(<([^>]+)>)/gi, "")), o.variableName && "" !== o.variableName) {
        var n;
        "oryx-executionvariable_string" === i ? n = "string" : "oryx-executionvariable_document" === i && (n = "document"), o.variableType = n;
        var r = [o];
        t.updateExecutionVariablesCache(e, r)
      } else o = null, t.updateExecutionVariablesCache(e);
    return o
  }
}]), angular.module("activitiModeler").controller("ActivitiGenerateDocumentOutputFormatController", ["$scope", function(e) {
  void 0 == e.property.value && null == e.property.value && (e.property.value = "None"), e.outputFormatChanged = function() {
    e.updatePropertyInModel(e.property)
  }
}]), angular.module("activitiModeler").controller("ActivitiGenerateDocumentTemplateCtrl", ["$scope", "$modal", "$timeout", "Upload", "DocumentTemplateService", function(e, t, i, o, n) {
  e.documentTemplate = e.property.value && void 0 !== e.property.value ? angular.copy(e.property.value) : {};
  var r = _internalCreateModal({
    template: "editor-app/configuration/properties/generatedocument-template-popup.html?version=" + Date.now(),
    scope: e
  }, t, e);
  e.save = function() {
    e.property.value = e.documentTemplate && void 0 !== e.documentTemplate ? e.documentTemplate : null, e.updatePropertyInModel(e.property), r.$scope.$hide()
  }, e.cancel = function() {
    r.$scope.$hide(), e.property.mode = "read"
  }, e.close = function() {
    e.cancel()
  }, e.$parent.$on("modal.hide.before", function() {
    e.close(), e.$parent.$apply()
  }), e.documentTemplateModel = {
    currentTab: "tenantTemplates",
    currentTemplateDownloadUrl: "",
    nameFilter: "",
    sort: "sort_by_name_asc",
    page: 0,
    pageSize: 20,
    possibleSorts: [{
      id: "sort_by_name_asc",
      title: "PROPERTY.GENERATEDOCUMENT.TEMPLATE.SORT-NAME-ASC"
    }, {
      id: "sort_by_name_desc",
      title: "PROPERTY.GENERATEDOCUMENT.TEMPLATE.SORT-NAME-DESC"
    }, {
      id: "sort_by_create_date_asc",
      title: "PROPERTY.GENERATEDOCUMENT.TEMPLATE.SORT-CREATED-ASC"
    }, {
      id: "sort_by_create_date_desc",
      title: "PROPERTY.GENERATEDOCUMENT.TEMPLATE.SORT-CREATED-DESC"
    }]
  }, e.onNewUploadSelected = function(t, i) {
    e.documentTemplateModel.loading = !0;
    for (var n = 0; t.length > n; n++) {
      var r, s = t[n];
      r = i ? ACTIVITI.CONFIG.contextRoot + "/app/rest/admin/document-templates/text" : ACTIVITI.CONFIG.contextRoot + "/app/rest/admin/document-templates", o.upload({
        url: r,
        method: "POST",
        params: {
          modelId: e.editor.getModelMetaData().modelId
        },
        file: s
      }).progress(function(t) {
        e.documentTemplateModel.uploadProgress = parseInt(100 * t.loaded / t.total)
      }).success(function(t) {
        null !== t.id && void 0 !== t.id && (e.selectTemplate(t), e.save()), e.documentTemplateModel.loading = !1
      }).error(function(t) {
        t && t.message && (e.documentTemplateModel.errorMessage = t.message), e.documentTemplateModel.error = !0, e.documentTemplateModel.loading = !1
      })
    }
  };
  var s = function() {
    e.documentTemplateModel.loadingDocumentTemplates = !0, n.findAllDocumentTemplates(e.documentTemplateModel.nameFilter, e.documentTemplateModel.sort, e.documentTemplateModel.page, e.documentTemplateModel.pageSize).then(function(t) {
      e.documentTemplateModel.templates = t, e.documentTemplateModel.moreTemplates = t.total > (e.documentTemplateModel.page + 1) * e.documentTemplateModel.pageSize;
      for (var i = 0; e.documentTemplateModel.templates.data.length > i; i++) e.documentTemplateModel.templates.data[i].downloadUrl = ACTIVITI.CONFIG.contextRoot + "/app/rest/document-templates/" + e.documentTemplateModel.templates.data[i].id + "/file?version=" + Date.now();
      e.documentTemplateModel.loadingDocumentTemplates = !1
    })
  };
  e.cancelUploadNew = function() {
    e.uploadNewPopup.$scope.$hide()
  }, e.sortChanged = function() {
    e.documentTemplateModel.page = 0, s()
  }, e.refreshDelayed = function() {
    e.documentTemplateModel.waiting ? e.documentTemplateModel.delayed = !0 : e.scheduleDelayedRefresh()
  }, e.scheduleDelayedRefresh = function() {
    e.documentTemplateModel.waiting = !0, i(function() {
      e.documentTemplateModel.waiting = !1, e.documentTemplateModel.delayed ? (e.documentTemplateModel.delayed = !1, e.scheduleDelayedRefresh()) : (e.documentTemplateModel.page = 0, s())
    }, 100)
  }, e.showPreviousTemplates = function() {
    e.documentTemplateModel.page--, s()
  }, e.showNextTemplates = function() {
    e.documentTemplateModel.page++, s()
  }, e.selectTemplate = function(t) {
    e.documentTemplate = {
      id: t.id,
      name: t.name
    }, e.property.noValue = !1, e.buildDownloadUrl()
  }, e.buildDownloadUrl = function() {
    e.documentTemplate && e.documentTemplate.id && (e.documentTemplateModel.currentTemplateDownloadUrl = ACTIVITI.CONFIG.contextRoot + "/app/rest/document-templates/" + e.documentTemplate.id + "/file?version=" + Date.now())
  }, s(), e.buildDownloadUrl()
}]), angular.module("activitiModeler").service("DocumentTemplateService", ["$http", "$q", "$rootScope", "$translate", function(e, t) {
  var i = function(i) {
    var o = t.defer();
    return e(i).success(function(e) {
      o.resolve(e)
    }).error(function(e) {
      o.reject(e)
    }), o.promise
  };
  this.findAllDocumentTemplates = function(e, t, o, n) {
    var r = {
      nameFilter: e,
      start: o,
      size: n,
      sort: t
    };
    return i({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/document-templates",
      params: r
    })
  }
}]), angular.module("activitiModeler").controller("ActivitiDecisionTableReferenceCtrl", ["$scope", "$modal", "$http", function(e, t) {
  var i = {
    template: "editor-app/configuration/properties/decisiontable-reference-popup.html?version=" + Date.now(),
    scope: e
  };
  _internalCreateModal(i, t, e)
}]), angular.module("activitiModeler").controller("ActivitiDecisionTableReferencePopupCtrl", ["$rootScope", "$scope", "$http", "$location", "EventTrackingService", "ProcessScopeService", function(e, t, i, o, n, r) {
  t.state = {
    loadingDecisionTables: !0,
    decisionTableError: !1
  }, t.popup = {
    state: "decisionTableReference"
  }, t.foldersBreadCrumbs = [], t.$parent.$on("modal.hide.before", function() {
    t.close(), t.$parent.$apply()
  }), t.close = function() {
    t.property.mode = "read", t.$hide()
  }, t.selectDecisionTable = function(e, i) {
    i.stopPropagation(), t.selectedDecisionTable = t.selectedDecisionTable && t.selectedDecisionTable.id && e.id == t.selectedDecisionTable.id ? null : e
  }, t.save = function() {
    t.property.value = t.selectedDecisionTable ? {
      id: t.selectedDecisionTable.id,
      name: t.selectedDecisionTable.name
    } : null, t.updatePropertyInModel(t.property), r.refresh(), t.close()
  }, t.open = function() {
    if (t.selectedDecisionTable) {
      t.property.value = {
        id: t.selectedDecisionTable.id,
        name: t.selectedDecisionTable.name
      }, t.updatePropertyInModel(t.property);
      var e = t.editor.getModelMetaData(),
        o = t.editor.getJSON();
      o = JSON.stringify(o);
      var n = {
        modeltype: e.model.modelType,
        json_xml: o,
        name: e.name,
        description: e.description,
        newversion: !1,
        lastUpdated: e.lastUpdated
      };
      i({
        method: "POST",
        data: n,
        ignoreErrors: !0,
        headers: {
          Accept: "application/json",
          "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8"
        },
        transformRequest: function(e) {
          var t = [];
          for (var i in e) t.push(encodeURIComponent(i) + "=" + encodeURIComponent(e[i]));
          return t.join("&")
        },
        url: KISBPM.URL.putModel(e.modelId)
      }).success(function() {
        t.editor.handleEvents({
          type: ORYX.CONFIG.EVENT_SAVED
        }), r.navigateForward("decision-table-editor/" + encodeURIComponent(t.selectedDecisionTable.id), t.selectedShape.resourceId)
      }).error(function() {}), t.close()
    }
  }, t.newDecisionTable = function() {
    t.popup.state = "newDecisionTable";
    var e = t.editor.getModelMetaData();
    t.model = {
      loading: !1,
      decisionTable: {
        name: "",
        description: "",
        modelType: 4,
        referenceId: e.modelId,
        stencilSet: 0
      },
      defaultStencilSet: void 0,
      decisionTableStencilSets: []
    }
  }, t.createDecisionTable = function() {
    if (t.model.decisionTable.name && 0 != t.model.decisionTable.name.length) {
      var e = t.model.decisionTable.stencilSet;
      t.model.loading = !0, i({
        method: "POST",
        url: ACTIVITI.CONFIG.contextRoot + "/app/rest/models",
        data: t.model.decisionTable
      }).success(function(o) {
        n.trackEvent("editor", "decision-table-model-create-via-bpmneditor");
        var s = o.id;
        t.property.value = {
          id: s,
          name: o.name
        }, t.updatePropertyInModel(t.property);
        var a = t.editor.getModelMetaData(),
          l = t.editor.getJSON();
        l = JSON.stringify(l);
        var d = {
          modeltype: a.model.modelType,
          json_xml: l,
          name: a.name,
          description: a.description,
          newversion: !1,
          lastUpdated: a.lastUpdated,
          stencilSet: e
        };
        i({
          method: "POST",
          data: d,
          ignoreErrors: !0,
          headers: {
            Accept: "application/json",
            "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8"
          },
          transformRequest: function(e) {
            var t = [];
            for (var i in e) t.push(encodeURIComponent(i) + "=" + encodeURIComponent(e[i]));
            return t.join("&")
          },
          url: KISBPM.URL.putModel(a.modelId)
        }).success(function() {
          t.editor.handleEvents({
            type: ORYX.CONFIG.EVENT_SAVED
          }), t.model.loading = !1, t.$hide(), r.navigateForward("decision-table-editor/" + encodeURIComponent(s), t.selectedShape.resourceId)
        }).error(function() {
          t.model.loading = !1, t.$hide()
        })
      }).error(function() {
        t.model.loading = !1, t.$hide()
      })
    }
  }, t.cancel = function() {
    t.close()
  }, t.loadDecisionTables = function() {
    var e = t.editor.getModelMetaData();
    i.get(ACTIVITI.CONFIG.contextRoot + "/app/rest/decision-table-models?referenceId=" + e.modelId).success(function(e) {
      t.state.loadingDecisionTables = !1, t.state.decisionTableError = !1, t.decisionTables = e.data
    }).error(function() {
      t.state.loadingDecisionTables = !1, t.state.decisionTableError = !0
    })
  }, t.property && t.property.value && t.property.value.id && (t.selectedDecisionTable = t.property.value), t.loadDecisionTables()
}]);
var KISBPM = KISBPM || {};
KISBPM.CONFIG = {
  showRemovedProperties: !1
}, KISBPM.HEADER_CONFIG = {
  showAppTitle: !0,
  showHeaderMenu: !0,
  showMainNavigation: !0,
  showPageHeader: !0
};
var KISBPM = KISBPM || {};
KISBPM.URL = {
  getModel: function(e) {
    return ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + e + "/editor/json?version=" + Date.now()
  },
  getStencilSet: function(e) {
    return ACTIVITI.CONFIG.contextRoot + "/app/rest/stencil-sets/" + e + "/editor?version=" + Date.now()
  },
  putModel: function(e) {
    return ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + e + "/editor/json"
  },
  validateModel: function(e) {
    return ACTIVITI.CONFIG.contextRoot + "/app/rest/models/" + e + "/editor/validate"
  },
  postFeedback: function() {
    return ACTIVITI.CONFIG.contextRoot + "/app/rest/feedback"
  },
  getEditorValues: function(e) {
    for (var t = "", i = 0; e.length > i; i++) t.length > 0 && (t += "&"), t += "formId=" + e[i];
    return t.length > 0 && (t += "&"), t += "version=" + Date.now(), ACTIVITI.CONFIG.contextRoot + "/app/rest/form-models/editor-values?" + t
  }
};
var KISBPM = KISBPM || {};
KISBPM.TOOLBAR_CONFIG = {
  items: [{
    type: "button",
    title: "TOOLBAR.ACTION.SAVE",
    cssClass: "editor-icon editor-icon-save",
    action: "KISBPM.TOOLBAR.ACTIONS.saveModel"
  }, {
    type: "button",
    title: "TOOLBAR.ACTION.VALIDATE",
    cssClass: "glyphicon glyphicon-ok",
    action: "KISBPM.TOOLBAR.ACTIONS.validateModel"
  }, {
    type: "separator",
    title: "",
    cssClass: "toolbar-separator"
  }, {
    type: "button",
    title: "TOOLBAR.ACTION.CUT",
    cssClass: "editor-icon editor-icon-cut",
    action: "KISBPM.TOOLBAR.ACTIONS.cut",
    enabled: !1,
    enabledAction: "element"
  }, {
    type: "button",
    title: "TOOLBAR.ACTION.COPY",
    cssClass: "editor-icon editor-icon-copy",
    action: "KISBPM.TOOLBAR.ACTIONS.copy",
    enabled: !1,
    enabledAction: "element"
  }, {
    type: "button",
    title: "TOOLBAR.ACTION.PASTE",
    cssClass: "editor-icon editor-icon-paste",
    action: "KISBPM.TOOLBAR.ACTIONS.paste",
    enabled: !1
  }, {
    type: "button",
    title: "TOOLBAR.ACTION.DELETE",
    cssClass: "editor-icon editor-icon-delete",
    action: "KISBPM.TOOLBAR.ACTIONS.deleteItem",
    enabled: !1,
    enabledAction: "element"
  }, {
    type: "separator",
    title: "TOOLBAR.ACTION.SAVE",
    cssClass: "toolbar-separator"
  }, {
    type: "button",
    title: "TOOLBAR.ACTION.REDO",
    cssClass: "editor-icon editor-icon-redo",
    action: "KISBPM.TOOLBAR.ACTIONS.redo",
    enabled: !1
  }, {
    type: "button",
    title: "TOOLBAR.ACTION.UNDO",
    cssClass: "editor-icon editor-icon-undo",
    action: "KISBPM.TOOLBAR.ACTIONS.undo",
    enabled: !1
  }, {
    type: "separator",
    title: "TOOLBAR.ACTION.SAVE",
    cssClass: "toolbar-separator"
  }, {
    type: "button",
    title: "TOOLBAR.ACTION.ALIGNVERTICAL",
    cssClass: "editor-icon editor-icon-align-vertical",
    action: "KISBPM.TOOLBAR.ACTIONS.alignVertical",
    enabled: !1,
    enabledAction: "element",
    disableInForm: !0,
    minSelectionCount: 2
  }, {
    type: "button",
    title: "TOOLBAR.ACTION.ALIGNHORIZONTAL",
    cssClass: "editor-icon editor-icon-align-horizontal",
    action: "KISBPM.TOOLBAR.ACTIONS.alignHorizontal",
    enabledAction: "element",
    enabled: !1,
    disableInForm: !0,
    minSelectionCount: 2
  }, {
    type: "button",
    title: "TOOLBAR.ACTION.SAMESIZE",
    cssClass: "editor-icon editor-icon-same-size",
    action: "KISBPM.TOOLBAR.ACTIONS.sameSize",
    enabledAction: "element",
    enabled: !1,
    disableInForm: !0,
    minSelectionCount: 2
  }, {
    type: "separator",
    title: "TOOLBAR.ACTION.SAVE",
    cssClass: "toolbar-separator",
    disableInForm: !0
  }, {
    type: "button",
    title: "TOOLBAR.ACTION.ZOOMIN",
    cssClass: "editor-icon editor-icon-zoom-in",
    action: "KISBPM.TOOLBAR.ACTIONS.zoomIn"
  }, {
    type: "button",
    title: "TOOLBAR.ACTION.ZOOMOUT",
    cssClass: "editor-icon editor-icon-zoom-out",
    action: "KISBPM.TOOLBAR.ACTIONS.zoomOut"
  }, {
    type: "button",
    title: "TOOLBAR.ACTION.ZOOMACTUAL",
    cssClass: "editor-icon editor-icon-zoom-actual",
    action: "KISBPM.TOOLBAR.ACTIONS.zoomActual"
  }, {
    type: "button",
    title: "TOOLBAR.ACTION.ZOOMFIT",
    cssClass: "editor-icon editor-icon-zoom-fit",
    action: "KISBPM.TOOLBAR.ACTIONS.zoomFit"
  }, {
    type: "separator",
    title: "TOOLBAR.ACTION.SAVE",
    cssClass: "toolbar-separator",
    disableInForm: !0
  }, {
    type: "button",
    title: "TOOLBAR.ACTION.BENDPOINT.ADD",
    cssClass: "editor-icon editor-icon-bendpoint-add",
    action: "KISBPM.TOOLBAR.ACTIONS.addBendPoint",
    id: "add-bendpoint-button",
    disableInForm: !0
  }, {
    type: "button",
    title: "TOOLBAR.ACTION.BENDPOINT.REMOVE",
    cssClass: "editor-icon editor-icon-bendpoint-remove",
    action: "KISBPM.TOOLBAR.ACTIONS.removeBendPoint",
    id: "remove-bendpoint-button",
    disableInForm: !0
  }, {
    type: "separator",
    title: "",
    cssClass: "toolbar-separator",
    disableInForm: !0
  }, {
    type: "button",
    title: "TOOLBAR.ACTION.HELP",
    cssClass: "glyphicon glyphicon-question-sign",
    action: "KISBPM.TOOLBAR.ACTIONS.help"
  }, {
    type: "button",
    title: "TOOLBAR.ACTION.FEEDBACK",
    cssClass: "glyphicon glyphicon-envelope",
    action: "KISBPM.TOOLBAR.ACTIONS.feedback"
  }],
  secondaryItems: []
};
var KISBPM = KISBPM || {};
KISBPM.PROPERTY_CONFIG = {
  string: {
    readModeTemplateUrl: "editor-app/configuration/properties/default-value-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/string-property-write-mode-template.html"
  },
  "boolean": {
    templateUrl: "editor-app/configuration/properties/boolean-property-template.html"
  },
  text: {
    readModeTemplateUrl: "editor-app/configuration/properties/default-value-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/text-property-write-template.html"
  },
  scripttext: {
    readModeTemplateUrl: "editor-app/configuration/properties/default-value-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/script-text-property-write-template.html"
  },
  variable: {
    readModeTemplateUrl: "editor-app/configuration/properties/variable-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/variable-property-write-template.html"
  },
  "kisbpm-multiinstance": {
    readModeTemplateUrl: "editor-app/configuration/properties/default-value-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/multiinstance-property-write-template.html"
  },
  "oryx-formproperties-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/form-properties-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/form-properties-write-template.html"
  },
  "oryx-executionlisteners-multiplecomplex": {
    readModeTemplateUrl: "editor-app/configuration/properties/execution-listeners-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/execution-listeners-write-template.html"
  },
  "oryx-tasklisteners-multiplecomplex": {
    readModeTemplateUrl: "editor-app/configuration/properties/task-listeners-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/task-listeners-write-template.html"
  },
  "oryx-eventlisteners-multiplecomplex": {
    readModeTemplateUrl: "editor-app/configuration/properties/event-listeners-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/event-listeners-write-template.html"
  },
  "oryx-usertaskassignment-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/assignment-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/assignment-write-template.html"
  },
  "oryx-servicetaskfields-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/fields-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/fields-write-template.html"
  },
  "oryx-callactivityinparameters-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/in-parameters-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/in-parameters-write-template.html"
  },
  "oryx-callactivityoutparameters-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/out-parameters-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/out-parameters-write-template.html"
  },
  "oryx-subprocessreference-subprocess-link": {
    readModeTemplateUrl: "editor-app/configuration/properties/subprocess-reference-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/subprocess-reference-write-template.html"
  },
  "oryx-formreference-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/form-reference-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/form-reference-write-template.html"
  },
  "oryx-sequencefloworder-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/sequenceflow-order-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/sequenceflow-order-write-template.html"
  },
  "oryx-conditionsequenceflow-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/condition-expression-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/condition-expression-write-template.html"
  },
  "oryx-signaldefinitions-multiplecomplex": {
    readModeTemplateUrl: "editor-app/configuration/properties/signal-definitions-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/signal-definitions-write-template.html"
  },
  "oryx-signalref-string": {
    readModeTemplateUrl: "editor-app/configuration/properties/default-value-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/signal-property-write-template.html"
  },
  "oryx-messagedefinitions-multiplecomplex": {
    readModeTemplateUrl: "editor-app/configuration/properties/message-definitions-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/message-definitions-write-template.html"
  },
  "oryx-messageref-string": {
    readModeTemplateUrl: "editor-app/configuration/properties/default-value-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/message-property-write-template.html"
  },
  "oryx-alfresco_cloud_content-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/publish-alfresco-content-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/publish-alfresco-content-write-template.html"
  },
  "oryx-alfresco_cloud_destination-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/publish-alfresco-destination-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/publish-alfresco-destination-write-template.html"
  },
  "oryx-box_cloud_content-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/publish-box-content-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/publish-box-content-write-template.html"
  },
  "oryx-box_cloud_destination-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/publish-box-destination-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/publish-box-destination-write-template.html"
  },
  "oryx-google_drive_content-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/publish-google-drive-content-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/publish-google-drive-content-write-template.html"
  },
  "oryx-google_drive_destination-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/publish-google-drive-destination-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/publish-google-drive-destination-write-template.html"
  },
  "oryx-duedatedefinition-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/duedate-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/duedate-write-template.html"
  },
  "oryx-restcalltask_endpoint-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/restcall-endpoint-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/restcall-endpoint-write-template.html"
  },
  "oryx-restcalltask_request_mapping-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/restcall-request-mapping-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/restcall-request-mapping-write-template.html"
  },
  "oryx-restcalltask_response_mapping-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/restcall-response-mapping-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/restcall-response-mapping-write-template.html"
  },
  "oryx-restcalltask_request_headers-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/restcall-request-headers-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/restcall-request-headers-write-template.html"
  },
  "oryx-executionvariables-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/execution-variables-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/execution-variables-write-template.html"
  },
  "oryx-executionvariable_string-string": {
    readModeTemplateUrl: "editor-app/configuration/properties/execution-single-variable-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/execution-single-variable-write-template.html"
  },
  "oryx-executionvariable_document-string": {
    readModeTemplateUrl: "editor-app/configuration/properties/execution-single-variable-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/execution-single-variable-write-template.html"
  },
  "oryx-generatedocumenttemplate-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/generatedocument-template-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/generatedocument-template-write-template.html"
  },
  "oryx-generatedocumenttaskoutputformat-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/generatedocument-outputformat-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/generatedocument-outputformat-write-template.html"
  },
  "oryx-decisiontaskdecisiontablereference-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/decisiontable-reference-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/decisiontable-reference-write-template.html"
  },
  "oryx-mailtaskto-complex": {
    readModeTemplateUrl: "editor-app/configuration/properties/mail-to-display-template.html",
    writeModeTemplateUrl: "editor-app/configuration/properties/mail-to-write-template.html"
  }
}, KISBPM.HEADER_CONFIG.showAppTitle = !1, KISBPM.HEADER_CONFIG.showHeaderMenu = !1, KISBPM.HEADER_CONFIG.showMainNavigation = !1, KISBPM.HEADER_CONFIG.showPageHeader = !1, KISBPM.TOOLBAR.ACTIONS.closeEditor = function(e) {
  e.ProcessScopeService.navigateBack("/processes")
}, KISBPM.TOOLBAR.ACTIONS.navigateToProcess = function(e) {
  var t = {
    type: KISBPM.eventBus.EVENT_TYPE_NAVIGATE_TO_PROCESS,
    processId: e
  };
  KISBPM.eventBus.dispatch(KISBPM.eventBus.EVENT_TYPE_NAVIGATE_TO_PROCESS, t)
}, KISBPM.TOOLBAR_CONFIG.secondaryItems.push({
  type: "button",
  title: "Close",
  cssClass: "glyphicon glyphicon-remove",
  action: "KISBPM.TOOLBAR.ACTIONS.closeEditor"
}), activitiModule.service("RelatedContentService", ["$http", "$q", "$rootScope", "$translate", "$location", "Upload", "EventTrackingService", "$timeout", function(e, t, i, o, n, r, s, a) {
  var l = function(i) {
    var o = t.defer();
    return e(i).success(function(e) {
      o.resolve(e)
    }).error(function(e) {
      o.reject(e)
    }), o.promise
  };
  this.deleteContent = function(e, t) {
    var i = l({
      method: "DELETE",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/content/" + e
    });
    return i.then(function() {
      t ? s.trackEvent("workflow", "task-remove-related-content") : s.trackEvent("workflow", "remove-related-content")
    }), i
  }, this.addRelatedContent = function(e, i, o, n, a) {
    var l, d, c = t.defer();
    if (e) {
      var p = "";
      a && (p += "?isRelatedContent=true"), d = n ? ACTIVITI.CONFIG.contextRoot + "/app/rest/tasks/" + e + "/raw-content/text" + p : ACTIVITI.CONFIG.contextRoot + "/app/rest/tasks/" + e + "/raw-content" + p, l = r.upload({
        url: d,
        method: "POST",
        file: o
      })
    } else i ? (d = n ? ACTIVITI.CONFIG.contextRoot + "/app/rest/process-instances/" + i + "/raw-content/text" : ACTIVITI.CONFIG.contextRoot + "/app/rest/process-instances/" + i + "/raw-content", l = r.upload({
      url: d,
      method: "POST",
      file: o
    })) : (d = n ? ACTIVITI.CONFIG.contextRoot + "/app/rest/content/raw/text" : ACTIVITI.CONFIG.contextRoot + "/app/rest/content/raw", l = r.upload({
      url: d,
      method: "POST",
      file: o
    }));
    var u = this;
    l.success(function(e) {
      e && e.id && u.addUrlToContent(e), c.resolve(e)
    }).error(function(e) {
      c.reject(e)
    });
    var h = c.promise;
    return h.progress = function(e) {
      return l.progress(e), h
    }, h.then(function() {
      e ? s.trackEvent("workflow", "task-add-related-content") : i ? s.trackEvent("workflow", "processinstance-add-related-content") : s.trackEvent("workflow", "add-related-content")
    }), h
  }, this.addRelatedContentFromSource = function(i, o, n, r, a, l, d, c, p) {
    var u, h = "";
    p && (h += "?isRelatedContent=true"), u = i ? ACTIVITI.CONFIG.contextRoot + "/app/rest/tasks/" + i + "/content" + h : o ? ACTIVITI.CONFIG.contextRoot + "/app/rest/process-instances/" + o + "/content" : ACTIVITI.CONFIG.contextRoot + "/app/rest/content", c = 1 == c;
    var m = {
        source: n,
        sourceId: r,
        name: a,
        link: c,
        mimeType: l,
        simpleType: d
      },
      f = this,
      g = t.defer();
    e({
      method: "POST",
      url: u,
      data: m
    }).success(function(e) {
      e && e.id && f.addUrlToContent(e), g.resolve(e)
    }).error(function(e) {
      g.reject(e)
    });
    var v = g.promise;
    return v.then(function() {
      i ? s.trackEvent("workflow", "task-add-related-content") : o ? s.trackEvent("workflow", "processinstance-add-related-content") : s.trackEvent("workflow", "add-related-content")
    }), v
  }, this.getRelatedContent = function(i) {
    var o = ACTIVITI.CONFIG.contextRoot + "/app/rest/content/" + i,
      n = t.defer();
    e({
      method: "GET",
      url: o
    }).success(function(e) {
      n.resolve(e)
    }).error(function(e) {
      n.reject(e)
    });
    var r = n.promise;
    return r
  }, this.checkRenditions = function(e, t) {
    void 0 == t ? t = 10 : 0 == t && (e.previewStatus = "unsupported", e.thumbnailStatus = "unsupported"), "processing" == e.previewStatus || "queued" == e.previewStatus || "processing" == e.thumbnailStatus || "queued" == e.thumbnailStatus ? this.scheduleRefresh(e, t) : this.addUrlToContent(e)
  }, this.scheduleRefresh = function(e, t) {
    var i = this;
    e && t > 0 && a(function() {
      i.getRelatedContent(e.id).then(function(o) {
        angular.extend(e, o), i.checkRenditions(e, t - 1)
      })
    }, 2e3)
  }, this.getProcessContent = function(i) {
    var o = this,
      n = t.defer();
    return e({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/process-instances/" + i + "/field-content"
    }).success(function(e) {
      if (e.data && e.data.length > 0)
        for (var t = 0; e.data.length > t; t++) {
          var i = e.data[t];
          if (i.content && i.content.length > 0)
            for (var r = 0; i.content.length > r; r++) o.addUrlToContent(i.content[r])
        }
      n.resolve(e)
    }).error(function(e) {
      n.reject(e)
    }), n.promise
  }, this.addUrlToContent = function(e) {
    if (e && e.id) {
      e.rawUrl = ACTIVITI.CONFIG.contextRoot + "/app/rest/content/" + e.id + "/raw";
      var t = e.name.split(".").pop();
      e.link || "word" != e.simpleType && "excel" != e.simpleType && "powerpoint" != e.simpleType || (e.officeUrl = ACTIVITI.CONFIG.contextRoot + "/aos/" + e.id + "/" + e.name), "created" == e.thumbnailStatus && (e.thumbnailUrl || (e.thumbnailUrl = ACTIVITI.CONFIG.contextRoot + "/app/rest/content/" + e.id + "/rendition/thumbnail?noCache=" + (new Date).getTime())), "created" == e.previewStatus ? e.pdfUrl = ACTIVITI.CONFIG.contextRoot + "/app/rest/content/" + e.id + "/rendition/preview?noCache=" + (new Date).getTime() : "image" === e.simpleType || "jpg" === t || "jpeg" === t || "png" === t ? (e.imageUrl = e.rawUrl, !e.thumbnailUrl && e.contentAvailable && (e.thumbnailUrl = e.rawUrl)) : "pdf" == e.simpleType && (e.pdfUrl = e.rawUrl)
    }
  }
}]), activitiModule.service("ContentAccountService", ["$http", "$q", "$rootScope", "$translate", "$location", function(e, t, i, o) {
  var n = function(o, n) {
    var r = t.defer();
    return e(o).success(function(e) {
      r.resolve(e)
    }).error(function(e, t) {
      409 == t ? i.$broadcast("integration.account.autherror", n) : i.$broadcast("integration.account.error", n), r.reject(e)
    }), r.promise
  };
  this.getAccounts = function() {
    return n({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/integration",
      transformResponse: function(e) {
        return angular.isString(e) && (e = JSON.parse(e)), angular.isArray(e.data) && e.data.forEach(function(e) {
          var t = "COMMON.ACCOUNTS." + e.serviceId;
          e.serviceName = o.instant(t, e), e.serviceName == t && (e.serviceName = o.instant(t.replace(/[0-9]+/g, "*"), e))
        }), e
      }
    })
  }, this.getNetworks = function() {
    return n({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/integration/alfresco-cloud/networks"
    }, "alfresco-cloud")
  }, this.getCloudSites = function(e) {
    return n({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/integration/alfresco-cloud/networks/" + e + "/sites"
    }, "alfresco-cloud")
  }, this.getSites = function(e) {
    var t = e.replace("alfresco-", "");
    return n({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/integration/alfresco/" + t + "/sites"
    }, e)
  }, this.getCloudContentInSite = function(e, t) {
    return n({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/integration/alfresco-cloud/networks/" + e + "/sites/" + t + "/content"
    }, "alfresco-cloud")
  }, this.getContentInSite = function(e, t) {
    var i = e.replace("alfresco-", "");
    return n({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/integration/alfresco/" + i + "/sites/" + t + "/content"
    }, e)
  }, this.getCloudContentInFolder = function(e, t) {
    return n({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/integration/alfresco-cloud/networks/" + e + "/folders/" + t + "/content"
    }, "alfresco-cloud")
  }, this.getContentInFolder = function(e, t) {
    var i = e.replace("alfresco-", "");
    return n({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/integration/alfresco/" + i + "/folders/" + t + "/content"
    }, e)
  }, this.getGoogleDriveFiles = function(e, t, i) {
    var o = {
      filter: e,
      parent: t,
      currentFolderOnly: i
    };
    return n({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/integration/google-drive/files",
      params: o
    }, "google-drive")
  }, this.getBoxFiles = function(e, t) {
    var i = {
      filter: e,
      parent: t
    };
    return n({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/integration/box/files",
      params: i
    }, "box")
  }, this.isBoxMetaDataAllowed = function() {
    return n({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/integration/box/metadata-status"
    })
  }
}]), activitiModule.directive("appLinks", ["$popover", "$timeout", "appResourceRoot", function(e) {
  return {
    restrict: "E",
    templateUrl: ACTIVITI.CONFIG.webContextRoot + "/views/common/popover/app-links-button.html",
    replace: !0,
    link: function() {},
    scope: {},
    controller: ["$scope", "$element", "RuntimeAppDefinitionService", "$translate", function(t, i, o, n) {
      var r;
      t.goToLink = function(e) {
        t.onDestroyPopover(), window.location.href = e
      }, t.onDestroyPopover = function() {
        r && (r.$scope.$destroy(), r.destroy(), r = void 0)
      }, t.showAppLinks = function() {
        t.apps = [], o.getApplications().then(function(e) {
          for (var i = e.defaultApps.concat(e.customApps), o = 0; i.length > o; o++) {
            var r = i[o];
            if (null !== r.pages && void 0 !== r.pages && r.pages.length > 0) {
              for (var s = 0, a = 0; r.pages.length > a; a++) {
                var l = {};
                l.name = r.pages[a], l.theme = r.theme, l.icon = r.icon, null !== r.defaultAppId && void 0 !== r.defaultAppId ? (l.titleKey = r.titleKey + "-" + l.name.toUpperCase(), l.fixedUrl = r.fixedUrl + "#/" + r.pages[a]) : (l.titleKey = n.instant("APP.CUSTOM-APP.TITLE-" + l.name.toUpperCase(), r), l.fixedUrl = r.fixedBaseUrl + r.pages[a]), i.splice(o + a + 1, 0, l), s++
              }
              i.splice(o, 1), o = o + s - 1
            }
          }
          t.apps = i
        }), r = e(i, {
          template: ACTIVITI.CONFIG.webContextRoot + "/views/common/popover/app-links-popover.html",
          placement: "bottom-right",
          show: !0,
          scope: t,
          autoClose: !0
        }), r.$scope.$on("tooltip.hide", function() {
          t.onDestroyPopover()
        })
      }
    }]
  }
}]), activitiModule.directive("variableIdentifier", ["$rootScope", "$timeout", function() {
  return {
    restrict: "A",
    require: "ngModel",
    link: function(e, t, i, o) {
      function n(e, t) {
        var i = "",
          o = 0;
        for (o = 0; e.length > o; o++) t.test(i + e[o]) && (i += e[o]);
        return i
      }
      e.identifierRegExp = /^[a-zA-Z][_a-zA-Z0-9]*$/, e.forbidenNames = ["abstract", "continue", "for", "new", "switch", "assert", "default", "if", "package", "synchronized", "boolean", "do", "goto", "private", "this", "break", "double", "implements", "protected", "throw", "byte", "else", "import", "public", "throws", "case", "enum", "instanceof", "return", "transient", "catch", "extends", "int", "short", "try", "char", "final", "interface", "static", "void", "class", "finally", "long", "strictfp", "volatile", "const", "float", "native", "super", "while", "null"], e.$watch(i.ngModel, function(t) {
        var r = !0;
        if (t && t.length > 0) {
          var s = n(t, e.identifierRegExp);
          s != t ? (o.$setViewValue(s), o.$render()) : r = e.identifierRegExp.test(s) ? -1 == e.forbidenNames.indexOf(s) : !1
        }
        o.$setValidity(i.ngModel, r)
      })
    }
  }
}]), activitiModule.directive("ngTrim", function() {
  return {
    require: "ngModel",
    priority: 300,
    link: function(e, t, i, o) {
      "false" === i.ngTrim && o.$parsers.unshift(function() {
        return t.val()
      })
    }
  }
}), activitiModule.directive("spacelessValue", ["$rootScope", "$timeout", function() {
  return {
    restrict: "A",
    require: "ngModel",
    link: function(e, t, i, o) {
      function n(e, t) {
        var i = "",
          o = 0;
        for (o = 0; e.length > o; o++) t.test(i + e[o]) && (i += e[o]);
        return i
      }
      e.identifierRegExp = /^\S*$/, e.$watch(i.ngModel, function(t) {
        var r = !0;
        if (t && t.length > 0) {
          var s = n(t, e.identifierRegExp);
          s != t ? (o.$setViewValue(s), o.$render()) : e.identifierRegExp.test(s) || (r = !1)
        }
        o.$setValidity(i.ngModel, r)
      })
    }
  }
}]), activitiModule.directive("restrictInput", ["$parse", function() {
  return {
    restrict: "A",
    require: "ngModel",
    priority: 1002,
    link: function(e, t, i, o) {
      function n(e) {
        var t = e.toUpperCase(),
          i = t.replace(/-D-/, "-DD-").replace(/^D-/, "DD-").replace(/-D$/, "-DD"),
          o = t.replace(/-M-/, "-MM-").replace(/^M-/, "MM-").replace(/-M$/, "-MM"),
          n = i.replace(/-M-/, "-MM-").replace(/^M-/, "MM-").replace(/-M$/, "-MM");
        return [t, i, o, n]
      }

      function r(e, t) {
        if (void 0 === e || null == e || "" === e) return !0;
        if (e.length > t.length) return !1;
        for (var i = 0; Math.min(t.length, e.length) > i; i++) {
          var o = t[i];
          if (o.toUpperCase().match(/D|M|Y/)) {
            if (null == e[i].match(/\d/)) return !1
          } else if (e[i] != o) return !1
        }
        return !0
      }
      var s = i.restrictInput;
      (void 0 == s || null == s || "" == s) && (s = i.dateFormat), e.field.acceptedFormat = s;
      var a = n(s),
        l = !1;
      (void 0 == s || null == s || "" == s) && (l = !0);
      var d = o.$render;
      o.$render = function() {
        t.val(o.$viewValue), o.$dateValue && !isNaN(o.$dateValue.getTime()) && d && d()
      }, o.$parsers.unshift(function(e) {
        if (l) return e;
        for (var t = !1, i = 0; a.length > i && !t; i++) t |= r(e, a[i]);
        return t ? (o.$lastValidText = e, (void 0 === e || null == e || "" === e) && (o.$dateValue = null), e) : (o.$dateValue = null, o.$setViewValue(o.$lastValidText), o.$render(), o.$lastValidText)
      })
    }
  }
}]), activitiModule.directive("autoHeight", ["$rootScope", "$timeout", function(e, t) {
  return {
    restrict: "AC",
    scope: {
      toWatch: "=autoHeight"
    },
    compile: function() {
      return function(i, o, n) {
        var r = 0;
        n.offset && (r = parseInt(n.offset), (0 / 0 == r || void 0 == r) && (r = 0));
        var s = function(e) {
          t(function() {
            var t = e.parent().outerHeight() - r,
              i = !1;
            e.parent().children().filter(":visible").each(function() {
              i || (e[0] == this ? i = !0 : t -= angular.element(this).outerHeight())
            }), i && e.height(t)
          }, 0)
        };
        i.$watch("toWatch", function() {
          s(o)
        }), i.unregisterWatcher && i.unregisterWatcher(), i.unregisterWatcher = e.$watch("window.height", function() {
          s(o)
        }), i.unregisterForceWatcher && i.unregisterForceWatcher(), i.unregisterForceWatcher = e.$watch("window.forceRefresh", function() {
          s(o)
        }), i.$on("$destroy", function() {
          i.unregisterWatcher && i.unregisterWatcher(), i.unregisterForceWatcher && i.unregisterForceWatcher()
        })
      }
    }
  }
}]), activitiModule.directive("scrollToActive", ["$timeout", function(e) {
  return {
    restrict: "AC",
    scope: {
      toWatch: "=scrollToActiveModel"
    },
    compile: function() {
      return function(t, i, o) {
        t.$watch("toWatch", function() {
          e(function() {
            var e = o.useParent,
              t = o.offsetTop;
            t && (t = parseInt(t), 0 / 0 == t && (t = 0)), t || (t = 0);
            var n = i.children(".active");
            if (n && n.length > 0) {
              var r = angular.element(n[0]);
              e && (i = angular.element(i.parent()));
              var s = r.position().top - i.position().top + i.scrollTop(),
                a = s + r.outerHeight(),
                l = i.scrollTop() + i.innerHeight(),
                d = l - i.innerHeight();
              d >= s ? i.scrollTop(s - r.outerHeight() - t) : a > l && i.scrollTop(d + r.outerHeight() - t)
            }
          }, 0)
        })
      }
    }
  }
}]), activitiModule.directive("autoScroll", ["$timeout", function(e) {
  return {
    restrict: "AC",
    compile: function() {
      return function(t, i) {
        t.$on("tooltip.show", function() {
          e(function() {
            for (var e = i[0]; e && !(e.className && e.className.indexOf("scroll-container") >= 0);) e = e.parentNode;
            if (e) {
              e = angular.element(e);
              var t = i.offset().top - e.offset().top + i.scrollTop(),
                o = t + i.outerHeight();
              o + 30 >= e.outerHeight() && e.scrollTop(t)
            }
          }, 50)
        })
      }
    }
  }
}]), activitiModule.directive("userName", function() {
  var e = {};
  return e.template = '{{user.firstName && user.firstName || ""}} {{user.lastName && user.lastName || ""}} {{ (user.email && !user.firstName && !user.lastName) && user.email || ""}}', e.scope = {
    user: "=userName"
  }, e
}), activitiModule.directive("clickAnywhere", ["$document", "$parse", function(e, t) {
  var i = function(i, o, n) {
    var r = n.clickAnywhere,
      s = t(r),
      a = n.ignore,
      l = n.ignoreClass,
      d = "true" == n.ignorePopupEvents,
      c = function(e) {
        for (var t = e.target; t;) {
          if (t == o[0] || a && t.id == a || l && t.className && t.className.indexOf(l) >= 0) return e.stopPropagation(), e.preventDefault(), void 0;
          t = t.parentNode
        }
        i.$apply(function() {
          s(i, {
            $event: e
          })
        })
      };
    e.on("click", c), i.$on("$destroy", function() {
      e.off("click", c)
    });
    var p = i.$on("tooltip.hide", function() {
      d || (e.off("click", c), p())
    })
  };
  return i
}]), activitiModule.directive("autoFocus", ["$timeout", "$parse", function(e, t) {
  return {
    restrict: "AC",
    compile: function(i, o) {
      var n;
      return o.selectText && (n = t(o.selectText)),
        function(t, i, o) {
          var r = void 0 !== o.focusFirstChild;
          e(function() {
            if (r) {
              var e = i.find("input");
              e && e.length > 0 && (e[0].focus(), n && n(t.$parent) && input[0].setSelectionRange(0, input[0].value.length))
            } else i[0].focus(), n && n(t.$parent) && i[0].setSelectionRange(0, i[0].value.length)
          }, 100)
        }
    }
  }
}]), activitiModule.directive("focusWhen", ["$timeout", function(e) {
  return {
    link: function(t, i, o) {
      t.$watch(o.ngFocus, function(t) {
        angular.isDefined(t) && t && e(function() {
          i[0].focus()
        })
      }, !0), i.bind("blur", function() {
        angular.isDefined(o.ngFocusLost) && t.safeApply(o.ngFocusLost)
      })
    }
  }
}]), activitiModule.directive("loading", [function() {
  var e = {};
  return e.restrict = "A", e.template = '<div class="loading" ng-show="loading"><div class="l1"></div><div class="l2"></div><div class="l3"></div></div>', e.scope = {
    loading: "=loading",
    loadingText: "=loadingText"
  }, e
}]), activitiModule.directive("activitiFixDropdownBug", function() {
  return {
    restrict: "AEC",
    link: function(e, t) {
      t.on("hidden.bs.dropdown	", function() {
        t.show()
      })
    }
  }
}), activitiModule.directive("userLink", function() {
  var e = {};
  return e.template = '{{user.firstName && user.firstName || ""}} {{user.lastName && user.lastName || ""}} {{ (user.email && !user.firstName && !user.lastName) && user.email || ""}}', e.scope = {
    user: "=userLink"
  }, e.compile = function(e) {
    e.addClass("people-link")
  }, e
}), activitiModule.directive("formField", function() {
  var e = {};
  return e.template = ' {{field.name || ""}} - {{field.id}}', e.scope = {
    field: "=formField"
  }, e.compile = function(e) {
    e.addClass("form-field")
  }, e
}), activitiModule.directive("customKeys", ["$parse", function(e) {
  var t = {};
  return t.compile = function(t, i) {
    var o, n, r, s;
    return i.upPressed && (o = e(i.upPressed)), i.downPressed && (n = e(i.downPressed)), i.enterPressed && (r = e(i.enterPressed)), i.escapePressed && (s = e(i.escapePressed)),
      function(e, t) {
        t.on("keyup", function(t) {
          38 === t.keyCode ? e.$apply(function() {
            o && o(e, {
              $event: t
            })
          }) : 40 === t.keyCode ? e.$apply(function() {
            n && n(e, {
              $event: t
            })
          }) : 13 === t.keyCode ? e.$apply(function() {
            r && r(e, {
              $event: t
            })
          }) : 27 === t.keyCode && e.$apply(function() {
            s && s(e, {
              $event: t
            })
          })
        }), t.on("keydown", t, function(e) {
          (38 === e.keyCode || 40 === e.keyCode || 13 === e.keyCode || 27 === e.keyCode) && e.preventDefault()
        })
      }
  }, t
}]), activitiModule.directive("delayedModel", ["$timeout", function(e) {
  return {
    scope: {
      targetModel: "=delayedModel"
    },
    link: function(t, i, o) {
      i.val(t.targetModel), t.$watch("targetModel", function(o, r) {
        n && e.cancel(n), o !== r && i.val(t.targetModel)
      });
      var n;
      i.on("keyup paste search", function() {
        i.val() !== t.targetModel && (n && e.cancel(n), n = e(function() {
          t.targetModel = i[0].value, i.val(t.targetModel), t.$apply()
        }, o.delay || 200))
      })
    }
  }
}]), activitiModule.directive("ngDebounce", ["$timeout", function(e) {
  return {
    restrict: "A",
    require: "ngModel",
    priority: 99,
    link: function(t, i, o, n) {
      if ("radio" !== o.type && "checkbox" !== o.type) {
        i.unbind("input");
        var r;
        i.bind("input", function() {
          e.cancel(r), r = e(function() {
            t.$apply(function() {
              n.$setViewValue(i.val())
            })
          }, o.ngDebounce || 1e3)
        }), i.bind("blur", function() {
          t.$apply(function() {
            n.$setViewValue(i.val())
          })
        })
      }
    }
  }
}]), activitiModule.directive("externalContentAuthenticator", ["$parse", "$timeout", function() {
  var e = {};
  return e.restrict = "A", e.templateUrl = ACTIVITI.CONFIG.webContextRoot + "/views/common/templates/external-content-authenticator-template.html", e.scope = {
    taskId: "=taskId",
    accountType: "@accountType"
  }, e.controller = ["$scope", "$element", "ContentAccountService", "$modal", "$window", "$translate", "$rootScope", function(e, t, i, o, n, r, s) {
    e.$on("integration.account.error", function(t, i) {
      e.currentAccount && i == e.currentAccount.serviceId && e.contentBrowseModal && ("alfresco-cloud" === i ? r("INTEGRATION.ALERT.ALFRESCO-ERROR").then(function(t) {
        e.contentBrowseModal.$scope.errorMessage = t, e.currentAccount.loading = !1
      }) : "google-drive" === i ? r("INTEGRATION.ALERT.GOOGLE-DRIVE-ERROR").then(function(t) {
        e.contentBrowseModal.$scope.errorMessage = t, e.currentAccount.loading = !1
      }) : "box" === i && r("INTEGRATION.ALERT.BOX-ERROR").then(function(t) {
        e.contentBrowseModal.$scope.errorMessage = t, e.currentAccount.loading = !1
      }))
    }), e.openAuthenticationPopup = function(t, i) {
      e.openContentAccountAuth(t, i)
    }, e.clearPopupError = function() {
      e.contentBrowseModal && (e.contentBrowseModal.$scope.errorMessage = void 0)
    }, e.$on("integration.account.autherror", function(t, i) {
      i && (e.contentAccounts[i].authorized = !1, "alfresco-cloud" === i ? r("INTEGRATION.ALERT.ALFRESCO-CLOUD-NOT-AUTHORIZED").then(function(t) {
        s.addAlert(t, "error"), e.errorMessage = t
      }) : "google-drive" === i ? r("INTEGRATION.ALERT.GOOGLE-DRIVE-NOT-AUTHORIZED").then(function(t) {
        s.addAlert(t, "error"), e.errorMessage = t
      }) : "box" === i && r("INTEGRATION.ALERT.BOX-NOT-AUTHORIZED").then(function(t) {
        s.addAlert(t, "error"), e.errorMessage = t
      }), e.contentBrowseModal && e.contentBrowseModal.$scope.$hide())
    }), e.openContentAccountAuth = function(t, i) {
      var o = angular.element(n),
        r = (o.width() - 500) / 2,
        s = (o.height() - 400) / 2,
        a = n.open(e.contentAccounts[i].authorizationUrl, i, "width= 500, height=400, toolbar=no, status=no, titlebar=no, location=no, menubar=no, top=" + s + ", left=" + r);
      n.contentAccountAuthConfirmed = function() {
        e.$apply(function() {
          e.contentAccounts[i].authorizationUrl = void 0, e.contentAccounts[i].authorized = !0, e.currentAccount = e.contentAccounts[i], a.close(), e.$emit("task-completed", {
            taskId: e.taskId
          })
        })
      }
    }, e.loadAccounts = function() {
      e.contentAccounts = {
        loading: !0
      }, i.getAccounts().then(function(t) {
        if (t && t.data)
          for (var i = 0; t.data.length > i; i++) {
            var o = t.data[i];
            e.contentAccounts[o.serviceId] = o
          }
        e.contentAccounts.rawList = t.data, e.contentAccounts.loading = !1
      })
    }, e.loadAccounts()
  }], e
}]), activitiModule.directive("externalContent", ["$parse", "$timeout", function(e, t) {
  var i = {};
  return i.restrict = "A", i.templateUrl = ACTIVITI.CONFIG.webContextRoot + "/views/common/templates/external-content-template.html", i.scope = {
    taskId: "=taskId",
    processInstanceId: "=formDefinition",
    folderSelect: "=folderSelect",
    linkOnly: "=linkOnly",
    preSelectedAccount: "=account",
    uploadInProgress: "=uploadInProgress",
    isRelatedContent: "=isRelatedContent",
    contentSource: "=?contentSource"
  }, i.link = function(i, o, n) {
    n.onContentUpload && (i.uploadedCallback = e(n.onContentUpload)), n.onFolderSelect && (i.folderSelectCallback = e(n.onFolderSelect)), n.onUploadInProgress && (i.uploadInProgressCallback = e(n.onUploadInProgress)), t(function() {
      o.find("div.select-file").click(function() {
        o.find('input[type="file"]').click()
      })
    }, 200)
  }, i.controller = ["$scope", "$element", "RelatedContentService", "ContentAccountService", "$modal", "$window", "$translate", "$rootScope", function(e, t, i, o, n, r, s, a) {
    e.uploadModel = {
      uploading: !1
    }, e.BOX_DRIVE_ACCOUNT_ID = "box", e.GOOGLE_DRIVE_ACCOUNT_ID = "google-drive", e.ALFRESCO_ACCOUNT_ID_PREFIX = "alfresco-", e.ALFRESCO_CLOUD_ACCOUNT_ID = "alfresco-cloud", e.ALL_SOURCES_ACCOUNT_ID = "all-file-sources", e.LOCAL_FILE_ACCOUNT_ID = "local-file", e.filterNavigableContent = function(t) {
      return !t.folder || (!e.contentSource || e.contentSource && !e.contentSource.notAllowNavigateFolders) && t.folder
    }, e.browseButtonIsVisible = function() {
      return !e.linkOnly && (e.contentSource && (e.contentSource.serviceId === e.ALL_SOURCES_ACCOUNT_ID || e.contentSource.serviceId === e.LOCAL_FILE_ACCOUNT_ID) || !e.contentSource)
    }, e.contentAccountsByServiceId = function(t) {
      return !e.contentSource || e.contentSource.serviceId === e.ALL_SOURCES_ACCOUNT_ID || e.contentSource.serviceId === t.serviceId
    }, e.selectFolder = function(t) {
      if (e.preSelectedAccount || e.folderSelect) {
        var i = e.folderSelect;
        i.substring(0, 9) === e.ALFRESCO_ACCOUNT_ID_PREFIX && (i = e.ALFRESCO_CLOUD_ACCOUNT_ID), (i === e.ALFRESCO_CLOUD_ACCOUNT_ID || i === e.GOOGLE_DRIVE_ACCOUNT_ID || i === e.BOX_DRIVE_ACCOUNT_ID) && e.browseRepositoryContent(t, i, e.preSelectedAccount)
      }
    }, e.$on("integration.account.error", function(t, i) {
      e.currentAccount && i == e.currentAccount.serviceId && (e.contentBrowseModal && s("INTEGRATION.ALERT.ALFRESCO-ERROR").then(function(t) {
        e.contentBrowseModal.$scope.errorMessage = t, e.currentAccount.loading = !1
      }), e.contentBrowseModal && s("INTEGRATION.ALERT.BOX-ERROR").then(function(t) {
        e.contentBrowseModal.$scope.errorMessage = t, e.currentAccount.loading = !1
      }))
    }), e.clearPopupError = function() {
      e.contentBrowseModal && (e.contentBrowseModal.$scope.errorMessage = void 0)
    }, e.$on("integration.account.autherror", function(t, i) {
      i && (e.contentAccounts[i].authorized = !1, i === e.ALFRESCO_CLOUD_ACCOUNT_ID ? (s("INTEGRATION.ALERT.ALFRESCO-CLOUD-NOT-AUTHORIZED").then(function(t) {
        a.addAlert(t, "error"), e.errorMessage = t
      }), e.contentBrowseModal && e.contentBrowseModal.$scope.$hide()) : i == e.GOOGLE_DRIVE_ACCOUNT_ID ? (s("INTEGRATION.ALERT.GOOGLE-DRIVE-NOT-AUTHORIZED").then(function(t) {
        a.addAlert(t, "error"), e.errorMessage = t
      }), e.contentBrowseModal && e.contentBrowseModal.$scope.$hide()) : "box" == i && (s("INTEGRATION.ALERT.BOX-NOT-AUTHORIZED").then(function(t) {
        a.addAlert(t, "error"), e.errorMessage = t
      }), e.contentBrowseModal && e.contentBrowseModal.$scope.$hide()))
    }), e.openFileSelect = function(t) {
      e.errorMessage = void 0;
      var i = angular.element(t).parent();
      i.children("input").click()
    }, e.confirmFolderSelection = function() {
      if (e.currentFolderTree && e.folderSelectCallback) {
        var t = e.createContentBrowserPayload(e.currentAccount);
        e.folderSelectCallback(e.$parent, {
          folder: t
        }), e.contentBrowseModal.$scope.$hide()
      }
    }, e.confirmBoxFolderSelection = function() {
      var t = 0;
      if (e.folderSelectCallback) {
        var i = "";
        if (e.currentFolderTree && e.currentFolderTree.length > 0) {
          for (var o = 0; e.currentFolderTree.length > o; o++) o > 0 && (i += " > "), i += e.currentFolderTree[o].title;
          t = e.currentFolderTree[e.currentFolderTree.length - 1].id
        } else i += "/", t = 0;
        var n = {
          account: {
            id: e.currentAccount.serviceId,
            name: e.currentAccount.name
          },
          path: {
            id: t,
            title: i
          }
        };
        e.folderSelectCallback(e.$parent, {
          folder: n
        }), e.contentBrowseModal.$scope.$hide()
      }
    }, e.onFileSelect = function(t, o) {
      if (e.errorMessage = void 0, !e.linkOnly && (e.errorMessage = void 0, !e.folderSelect && !e.uploadModel.uploading && t.length > 0)) {
        e.uploadInProgressCallback && e.uploadInProgressCallback(e.$parent, {
          status: !0
        }), e.uploadModel.uploading = !0;
        var n = t[0];
        e.clearPopupError(), i.addRelatedContent(e.taskId, e.processInstanceId, n, o, e.isRelatedContent).progress(function(t) {
          e.uploadModel.uploadProgress = parseInt(100 * t.loaded / t.total)
        }).then(function(t) {
          e.uploadInProgressCallback && e.uploadInProgressCallback(e.$parent, {
            status: !1
          }), e.uploadModel.uploading = !1, e.uploadedCallback && e.uploadedCallback(e.$parent, {
            content: t
          })
        }, function(t) {
          if (e.uploadInProgressCallback && e.uploadInProgressCallback(e.$parent, {
            status: !1
          }), t && t.messageKey) {
            var i = {};
            t.customData && (i.quota = e.formatFileSize(t.customData.quota)), s(t.messageKey, i).then(function(t) {
              e.errorMessage = t
            })
          }
          e.uploadModel.uploading = !1
        })
      }
    }, e.selectAccountContent = function(t, i) {
      e.currentAccount = i, i.serviceId === e.GOOGLE_DRIVE_ACCOUNT_ID ? e.selectGoogleDriveContent(t) : i.serviceId == e.BOX_DRIVE_ACCOUNT_ID ? e.selectBoxContent(t) : e.browseRepositoryContent(t, e.ALFRESCO_CLOUD_ACCOUNT_ID, i)
    }, e.selectGoogleDriveContent = function(t) {
      e.errorMessage = void 0, e.contentAccounts[e.GOOGLE_DRIVE_ACCOUNT_ID] && (e.contentAccounts[e.GOOGLE_DRIVE_ACCOUNT_ID].authorized ? e.openGoogleDriveBrowser(t) : e.openContentAccountAuth(t, e.GOOGLE_DRIVE_ACCOUNT_ID))
    }, e.selectBoxContent = function(t) {
      e.errorMessage = void 0, e.contentAccounts[e.BOX_DRIVE_ACCOUNT_ID] && (e.contentAccounts[e.BOX_DRIVE_ACCOUNT_ID].authorized ? e.openBoxBrowser(t) : e.openContentAccountAuth(t, e.BOX_DRIVE_ACCOUNT_ID))
    }, e.browseRepositoryContent = function(t, i, o) {
      o && o.serviceId !== e.BOX_DRIVE_ACCOUNT_ID && o.serviceId !== e.ALFRESCO_CLOUD_ACCOUNT_ID && o.serviceId !== e.GOOGLE_DRIVE_ACCOUNT_ID ? (e.currentAccount = o, e.openContentAccountBrowser(t, i)) : (e.errorMessage = void 0, e.account && e.account.authorized ? (e.currentAccount = o, e.openContentAccountBrowser(t, i)) : e.contentAccounts[i] && e.contentAccounts[i].authorized ? (e.currentAccount = e.contentAccounts[i], e.openContentAccountBrowser(t, i)) : e.openContentAccountAuth(t, i))
    }, e.openContentAccountAuth = function(t, i) {
      var o = angular.element(r),
        n = (o.width() - 500) / 2,
        s = (o.height() - 400) / 2,
        a = r.open(e.contentAccounts[i].authorizationUrl, i, "width= 500, height=400, toolbar=no, status=no, titlebar=no, location=no, menubar=no, top=" + s + ", left=" + n);
      r.contentAccountAuthConfirmed = function() {
        e.$apply(function() {
          e.contentAccounts[i].authorizationUrl = void 0, e.contentAccounts[i].authorized = !0, e.currentAccount = e.contentAccounts[i], a.close(), e.openContentAccountBrowser(t, i)
        })
      }
    }, e.openContentAccountBrowser = function(t, i) {
      i === e.GOOGLE_DRIVE_ACCOUNT_ID ? e.openGoogleDriveBrowser(t) : i === e.ALFRESCO_CLOUD_ACCOUNT_ID ? e.openAlfrescoBrowser(t) : i === e.BOX_DRIVE_ACCOUNT_ID && e.openBoxBrowser(t)
    }, e.openAlfrescoBrowser = function() {
      if (e.currentFolderTree = [], e.selectedNetwork = void 0, e.selectedSite = void 0, e.alfrescoSites = void 0, e.contentSource && e.contentSource.serviceId.substring(0, 9) === e.ALFRESCO_ACCOUNT_ID_PREFIX) {
        var t = e.contentSource.selectedFolder;
        t && (e.selectedNetwork = {
          id: t.network
        }, e.selectedSite = {
          id: t.siteId,
          title: t.site
        }, e.selectedFolder = {
          id: t.pathId
        }, e.currentFolderTree = t.folderTree)
      }
      e.contentSource && e.contentSource.serviceId === e.ALFRESCO_CLOUD_ACCOUNT_ID ? e.loadAlfrescoNetworks(function() {
        e.loadAlfrescoSites(e.loadFolderContent)
      }) : e.currentAccount && e.currentAccount.serviceId === e.ALFRESCO_CLOUD_ACCOUNT_ID ? (e.uploadModel.noNetwork = !1, e.loadAlfrescoNetworks()) : (e.uploadModel.noNetwork = !0, e.loadAlfrescoSites(e.loadFolderContent)), e.createContentBrowserPayload = function(t) {
        for (var i = "", o = 0; e.currentFolderTree.length > o; o++) o > 0 && (i += " > "), i += e.currentFolderTree[o].title;
        var n = null;
        e.currentFolderTree.length > 0 && (n = e.currentFolderTree[e.currentFolderTree.length - 1].id);
        var r = {
          path: {
            id: n,
            title: i,
            folderTree: e.currentFolderTree
          }
        };
        return e.uploadModel.noNetwork ? r.account = {
          id: t.serviceId,
          name: t.name
        } : r.network = e.selectedNetwork.id, r.site = {
          id: e.selectedSite.id,
          title: e.selectedSite.title
        }, r
      }, e.contentBrowseModal = _internalCreateModal({
        template: ACTIVITI.CONFIG.webContextRoot + "/views/common/modal/browse-alfresco-cloud.html",
        show: !0,
        scope: e
      }, n, e)
    }, e.selectNetwork = function(t) {
      e.currentAccount.loading || e.currentAccount.serviceId === e.ALFRESCO_CLOUD_ACCOUNT_ID && (e.selectedNetwork = t, e.selectedSite = void 0, e.alfrescoSites = void 0, t && e.loadAlfrescoSites())
    }, e.selectSite = function(t) {
      e.currentAccount.loading || (e.selectedSite = t, e.alfrescoFolders = void 0, t && e.loadSiteContent())
    }, e.loadAlfrescoNetworks = function(t) {
      e.currentAccount.loading || (e.currentAccount.loading = !0, e.clearPopupError(), o.getNetworks().then(function(i) {
        e.alfrescoNetworks = i, e.currentAccount.loading = !1, t && t()
      }))
    }, e.loadAlfrescoSites = function(t) {
      e.currentAccount.loading || (e.currentAccount.loading = !0, e.clearPopupError(), e.currentAccount && e.currentAccount.serviceId !== e.ALFRESCO_CLOUD_ACCOUNT_ID ? o.getSites(e.currentAccount.serviceId).then(function(i) {
        e.alfrescoSites = i, e.currentAccount.loading = !1, t && t()
      }) : e.selectedNetwork ? o.getCloudSites(e.selectedNetwork.id).then(function(i) {
        e.alfrescoSites = i, e.currentAccount.loading = !1, t && t()
      }) : (e.currentAccount.loading = !1, t && t()))
    }, e.loadSiteContent = function() {
      e.currentAccount.loading || (e.currentAccount.loading = !0, e.currentFolderTree = [], e.currentContent = void 0, e.clearPopupError(), e.currentAccount.serviceId === e.ALFRESCO_CLOUD_ACCOUNT_ID ? o.getCloudContentInSite(e.selectedNetwork.id, e.selectedSite.id).then(function(t) {
        e.currentContent = t, e.currentAccount.loading = !1
      }) : o.getContentInSite(e.currentAccount.serviceId, e.selectedSite.id).then(function(t) {
        e.currentContent = t, e.currentAccount.loading = !1
      }))
    }, e.navigateToFolder = function(t) {
      var i = e.currentFolderTree[t];
      i && (e.currentFolderTree.splice(t + 1, e.currentFolderTree.length - t - 1), e.selectedFolder = i, e.loadFolderContent())
    }, e.loadFolderContent = function(t) {
      e.selectedFolder && (e.currentAccount.loading || (e.currentContent = void 0, e.currentAccount.loading = !0, e.clearPopupError(), e.currentAccount.serviceId === e.ALFRESCO_CLOUD_ACCOUNT_ID ? o.getCloudContentInFolder(e.selectedNetwork.id, e.selectedFolder.id).then(function(i) {
        e.currentContent = i, e.currentAccount.loading = !1, t && t()
      }) : o.getContentInFolder(e.currentAccount.serviceId, e.selectedFolder.id).then(function(i) {
        e.currentContent = i, e.currentAccount.loading = !1, t && t()
      })))
    }, e.openBoxBrowser = function() {
      if (e.currentFolderTree = [], e.contentSource && e.contentSource.serviceId === e.BOX_DRIVE_ACCOUNT_ID) {
        var t = e.contentSource.selectedFolder;
        t && (e.selectedFolder = {
          id: t.pathId
        }, e.currentFolderTree = t.folderTree)
      }
      e.createContentBrowserPayload = function(t) {
        for (var i = "/", o = 0; e.currentFolderTree.length > o; o++) o > 0 && (i += " > "), i += e.currentFolderTree[o].title;
        var n = null;
        return e.currentFolderTree.length > 0 && (n = e.currentFolderTree[e.currentFolderTree.length - 1].id), {
          path: {
            id: n,
            title: i,
            folderTree: e.currentFolderTree
          },
          account: {
            id: t.serviceId,
            name: t.name
          }
        }
      }, e.contentBrowseModal = _internalCreateModal({
        template: ACTIVITI.CONFIG.webContextRoot + "/views/common/modal/browse-box.html",
        show: !0,
        scope: e
      }, n, e), e.contentBrowseModal.$scope.$watch("filter", function(t) {
        e.loadBoxFiles(t)
      })
    }, e.navigateToBoxFolder = function(t) {
      var i = e.currentFolderTree[t];
      i && (e.currentFolderTree.splice(t + 1, e.currentFolderTree.length - t - 1), "" != e.contentBrowseModal.$scope.filter ? e.contentBrowseModal.$scope.filter = "" : e.loadBoxFiles(""))
    }, e.navigateToBoxRoot = function() {
      e.currentFolderTree = [], "" != e.contentBrowseModal.$scope.filter ? e.contentBrowseModal.$scope.filter = "" : e.loadBoxFiles("")
    }, e.loadBoxFiles = function(t) {
      e.contentAccounts[e.BOX_DRIVE_ACCOUNT_ID] && (e.contentAccounts[e.BOX_DRIVE_ACCOUNT_ID].loading = !0), t || (e.boxFiles = void 0);
      var i;
      e.currentFolderTree && e.currentFolderTree.length > 0 && (i = e.currentFolderTree[e.currentFolderTree.length - 1].id), o.getBoxFiles(t, i).then(function(t) {
        e.boxFiles = t, e.contentAccounts[e.BOX_DRIVE_ACCOUNT_ID].loading = !1
      })
    }, e.openGoogleDriveBrowser = function() {
      if (e.currentFolderTree = [], e.contentSource && e.contentSource.serviceId === e.GOOGLE_DRIVE_ACCOUNT_ID) {
        var t = e.contentSource.selectedFolder;
        t && (e.selectedFolder = {
          id: t.pathId
        }, e.currentFolderTree = t.folderTree)
      }
      e.createContentBrowserPayload = function(t) {
        for (var i = "", o = 0; e.currentFolderTree.length > o; o++) o > 0 && (i += " > "), i += e.currentFolderTree[o].title;
        var n = null;
        return e.currentFolderTree.length > 0 && (n = e.currentFolderTree[e.currentFolderTree.length - 1].id), {
          path: {
            id: n,
            title: i,
            folderTree: e.currentFolderTree
          },
          account: {
            id: t.serviceId,
            name: t.name
          }
        }
      }, e.contentBrowseModal = _internalCreateModal({
        template: ACTIVITI.CONFIG.webContextRoot + "/views/common/modal/browse-google-drive.html",
        show: !0,
        scope: e
      }, n, e), e.contentBrowseModal.$scope.$watch("filter", function(t) {
        e.loadGoogleDriveFiles(t)
      })
    }, e.navigateToGoogleDriveFolder = function(t) {
      var i = e.currentFolderTree[t];
      i && (e.currentFolderTree.splice(t + 1, e.currentFolderTree.length - t - 1), "" != e.contentBrowseModal.$scope.filter ? e.contentBrowseModal.$scope.filter = "" : e.loadGoogleDriveFiles(""))
    }, e.navigateToGoogleDriveRoot = function() {
      e.currentFolderTree = [], "" != e.contentBrowseModal.$scope.filter ? e.contentBrowseModal.$scope.filter = "" : e.loadGoogleDriveFiles("")
    }, e.loadGoogleDriveFiles = function(t) {
      e.contentAccounts[e.GOOGLE_DRIVE_ACCOUNT_ID] && (e.contentAccounts[e.GOOGLE_DRIVE_ACCOUNT_ID].loading = !0), t || (e.googleDriveFiles = void 0);
      var i;
      e.currentFolderTree && e.currentFolderTree.length > 0 && (i = e.currentFolderTree[e.currentFolderTree.length - 1].id);
      var n = !1;
      e.contentSource && e.contentSource.notAllowNavigateFolders && 1 == e.contentSource.notAllowNavigateFolders && (n = !0), o.getGoogleDriveFiles(t, i, n).then(function(t) {
        e.googleDriveFiles = t, e.contentAccounts[e.GOOGLE_DRIVE_ACCOUNT_ID].loading = !1
      })
    }, e.addContentFromSource = function(t, o, n, r, s, a, l) {
      i.addRelatedContentFromSource(e.taskId, e.processInstanceId, t, o, n, r, s, e.linkOnly, e.isRelatedContent).then(function(t) {
        e.uploadedCallback && e.uploadedCallback(e.$parent, {
          content: t
        }), a && a(t)
      }, function(e) {
        l && l(e)
      })
    }, e.boxContentSelected = function(t) {
      t.folder ? (e.currentFolderTree && 0 != e.currentFolderTree.length ? e.currentFolderTree.push(t) : e.currentFolderTree = [t], "" != e.contentBrowseModal.$scope.filter ? e.contentBrowseModal.$scope.filter = "" : e.loadBoxFiles("")) : (e.contentAccounts.box.loading = !0, e.addContentFromSource("box", t.id, t.title, t.mimeType, t.simpleType, function() {
        e.contentBrowseModal.$scope.$hide()
      }, function() {
        e.contentBrowseModal.$scope.$hide()
      }), t.title = "Uploading: " + t.title, e.boxFiles.data = [t])
    }, e.googleDriveContentSelected = function(t) {
      t.folder ? (e.currentFolderTree && 0 != e.currentFolderTree.length ? e.currentFolderTree.push(t) : e.currentFolderTree = [t], "" != e.contentBrowseModal.$scope.filter ? e.contentBrowseModal.$scope.filter = "" : e.loadGoogleDriveFiles("")) : (e.contentAccounts[e.GOOGLE_DRIVE_ACCOUNT_ID].loading = !0, e.addContentFromSource(e.GOOGLE_DRIVE_ACCOUNT_ID, t.id, t.title, t.mimeType, t.simpleType, function() {
        e.contentBrowseModal.$scope.$hide()
      }, function() {
        e.contentBrowseModal.$scope.$hide()
      }), t.title = "Uploading: " + t.title, e.googleDriveFiles.data = [t])
    }, e.selectAlfrescoContent = function(t) {
      if (!e.currentAccount.loading)
        if (e.clearPopupError(), t.folder) e.currentFolderTree.push(t), e.selectedFolder = t, e.loadFolderContent();
        else if (!e.folderSelect) {
          e.currentAccount.loading = !0;
          var i;
          i = e.currentAccount && e.currentAccount.serviceId === e.ALFRESCO_CLOUD_ACCOUNT_ID ? t.id + "@" + e.selectedSite.id + "@" + e.selectedNetwork.id : t.id + "@" + e.selectedSite.id, e.addContentFromSource(e.currentAccount.serviceId, i, t.title, t.mimeType, t.simpleType, function() {
            e.contentBrowseModal.$scope.$hide(), e.currentAccount.loading = !1
          }, function() {
            e.contentBrowseModal.$scope.$hide(), e.currentAccount.loading = !1
          }), t.title = "Uploading: " + t.title, e.currentContent.data = [t]
        }
    }, e.formatFileSize = function(e) {
      var t = Math.floor(Math.log(e) / Math.log(1024));
      return 1 * (e / Math.pow(1024, t)).toFixed(2) + " " + ["B", "kB", "MB", "GB", "TB"][t]
    }, e.loadAccounts = function() {
      e.contentAccounts = {
        loading: !0
      }, o.getAccounts().then(function(t) {
        if (t && t.data)
          for (var i = 0; t.data.length > i; i++) {
            var o = t.data[i];
            e.contentAccounts[o.serviceId] = o
          }
        e.contentAccounts.rawList = t.data, e.contentAccounts.loading = !1
      })
    }, e.loadAccounts()
  }], i
}]), activitiModule.directive("selectPeoplePopover", ["$rootScope", "$http", "$popover", "appResourceRoot", "UserService", "SystemPropertiesService", "$parse", function(e, t, i, o, n, r, s) {
  var a = {};
  return a.restrict = "A", a.scope = {
    excludeTaskId: "=excludeTaskId",
    excludeProcessId: "=excludeProcessId",
    excludeUserId: "=excludeUserId",
    excludeUserIds: "=excludeUserIds",
    tenantId: "=tenantId",
    type: "=type",
    restrictWithGroup: "=restrictWithGroup",
    selectPeopleFormFields: "=selectPeopleFormFields",
    ignoreContainer: "=ignoreContainer",
    emailModeDisabled: "=emailModeDisabled"
  }, a.link = function(t, o, a) {
    var l = "bottom";
    o.addClass("toggle-people-select"), a.placement && (l = a.placement);
    var d = a.selectYourselfMode,
      c = !0;
    void 0 !== a.closeOnSelect && (c = a.closeOnSelect), t.popover = i(o, {
      template: ACTIVITI.CONFIG.webContextRoot + "/views/common/popover/select-people-popover.html?" + Date.now(),
      placement: l
    });
    var p, u, h;
    a.onPeopleSelected && (p = s(a.onPeopleSelected)), a.onCancel && (u = s(a.onCancel)), a.onEmailSelected && (h = s(a.onEmailSelected));
    var m = "workflow";
    null !== t.type && void 0 !== t.type && (m = t.type);
    var f = t.popover.$scope;
    if (f.title = a.popoverTitle, f.popupModel = {
      emailMode: !1,
      showRecentResults: !1,
      userResults: [],
      userField: {},
      userFieldFilter: ["people"],
      loading: !1
    }, t.selectPeopleFormFields && (f.popupModel.formFields = t.selectPeopleFormFields), a.emailModeDisabled || t.emailModeDisabled) {
      var g = t.emailModeDisabled || a.emailModeDisabled;
      ("true" === g || g === !0) && (f.popupModel.emailDisabled = !0)
    }(void 0 == f.popupModel.emailDisabled || 0 == f.popupModel.emailDisabled) && r.getSystemProperties().then(function(e) {
      f.popupModel.emailDisabled = !e.allowInvolveByEmail
    });
    var v = function() {
      if (f.popupModel.emailMode = !1, e.account && e.account.capabilities) {
        var t = e.account.capabilities.indexOf("tenant-mgmt") > -1 || e.account.capabilities.indexOf("tenant-admin") > -1;
        t === !1 && (null === f.account.tenantId || void 0 === f.account.tenantId) && (f.popupModel.emailMode = !0)
      }
    };
    v(), f.setSearchType = function() {
      f.popupModel.userSourceType = "search"
    }, f.setFormFieldType = function() {
      f.popupModel.userSourceType = "field"
    }, f.$watch("popupModel.userField", function() {
      if (f.popupModel.userField && f.popupModel.userField.id) {
        if (p) {
          var e = {
            id: f.popupModel.userField.id,
            name: f.popupModel.userField.name,
            email: f.popupModel.userField.email,
            type: f.popupModel.userField.type
          };
          p(t.$parent, {
            userField: e
          }), f.popupModel.userField = {}
        }(c || "true" === c) && f.$hide()
      }
    }), f.$watch("popupModel.filter", function() {
      if (f.popupModel.filter && f.popupModel.filter.length > 0) {
        f.popupModel.loading = !0;
        var e;
        e = "idm" === m ? n.getFilteredUsersStrict(f.popupModel.filter, t.tenantId, t.restrictWithGroup) : n.getFilteredUsers(f.popupModel.filter, t.excludeTaskId, t.excludeProcessId, t.tenantId, t.restrictWithGroup), e.then(function(e) {
          f.popupModel.showRecentResults = !1, f.popupModel.loading = !1;
          var i = [],
            o = null !== t.excludeUserId && void 0 !== t.excludeUserId,
            n = null !== t.excludeUserIds && void 0 !== t.excludeUserIds;
          if (o === !0 || n === !0)
            for (var r = 0; e.data.length > r; r++) {
              var s = !1;
              o === !0 && e.data[r].id === t.excludeUserId && (s = !0), n === !0 && t.excludeUserIds.indexOf(e.data[r].id) >= 0 && (s = !0), s || i.push(e.data[r])
            } else i = e.data;
          f.popupModel.userResults = i, f.resetSelection()
        })
      } else f.resetSelection(), f.popupModel.userResults = []
    }), f.resetSelection = function() {
      f.popupModel.selectedUser = void 0, f.popupModel.selectedIndex = -1
    }, f.nextUser = function() {
      var e = f.popupModel.userResults;
      e && e.length > 0 && f.popupModel.selectedIndex < e.length - 1 && (f.popupModel.selectedIndex += 1, f.popupModel.selectedUser = e[f.popupModel.selectedIndex])
    }, f.previousUser = function() {
      var e = f.popupModel.userResults;
      e && e.length > 0 && f.popupModel.selectedIndex > 0 && (f.popupModel.selectedIndex -= 1, f.popupModel.selectedUser = e[f.popupModel.selectedIndex])
    }, f.confirmUser = function(e) {
      if (!e) {
        var i = f.popupModel.userResults;
        f.popupModel.selectedIndex >= 0 && f.popupModel.selectedIndex < i.length && (e = i[f.popupModel.selectedIndex])
      }
      if (e)
        if (p && p(t.$parent, {
          user: e
        }), "true" === c) f.$hide();
        else {
          var i = f.popupModel.userResults;
          i.splice(jQuery.inArray(e, i), 1), f.popupModel.selectedIndex = 0, f.popupModel.selectedUser = i[f.popupModel.selectedIndex]
        }
    }, f.selectPersonByEmail = function(e) {
      e && h && (h(t.$parent, {
        email: f.popupModel.email
      }), f.$hide())
    }, f.getSelectYourselfLabelKey = function() {
      return "INVOLVE-PEOPLE." + d.toUpperCase() + "-YOURSELF"
    }, f.isCurrentUserSelectable = function() {
      return d && !(t.excludeUserId && t.excludeUserId == e.account.id || t.excludeUserIds && -1 != t.excludeUserIds.indexOf(e.account.id))
    }, f.selectYourself = function() {
      p && (p(t.$parent, {
        user: e.account
      }), f.$hide())
    }, f.$on("tooltip.hide", function() {
      f.popupModel.showRecentResults && f.popupModel.added && (f.popupModel.recentUsers = []), f.popupModel.userResults = [], f.popupModel.filter = "", f.popupModel.emailMode = !1, v(), f.popupModel.added ? f.popupModel.added = !1 : u && u(t.$parent)
    })
  }, a
}]), activitiModule.directive("selectFunctionalGroupPopover", ["$rootScope", "$http", "$popover", "FunctionalGroupService", "$parse", function(e, t, i, o, n) {
  var r = {};
  return r.restrict = "A", r.scope = {
    type: "=type",
    restrictWithGroup: "=restrictWithGroup",
    excludeGroupIds: "=excludeGroupIds"
  }, r.link = function(t, r, s) {
    var a = "bottom";
    r.addClass("toggle-functional-group-select"), s.placement && (a = s.placement);
    var l = !0;
    void 0 !== s.closeOnSelect && (l = s.closeOnSelect), t.popover = i(r, {
      template: ACTIVITI.CONFIG.webContextRoot + "/views/common/popover/select-functional-group-popover.html?" + Date.now(),
      placement: a
    });
    var d, c;
    s.onGroupSelected && (d = n(s.onGroupSelected)), s.onCancel && (c = n(s.onCancel));
    var p = t.popover.$scope;
    p.title = s.popoverTitle, p.popupModel = {
      groupResults: []
    }, p.$watch("popupModel.filter", function() {
      if (p.popupModel.filter && p.popupModel.filter.length > 0) {
        var i;
        null !== e.common && void 0 !== e.common && null !== e.common.selectedTenantId && void 0 !== e.common.selectedTenantId && (i = e.common.selectedTenantId > 0 ? e.common.selectedTenantId : void 0), o.getFilteredGroups(p.popupModel.filter, t.restrictWithGroup, i).then(function(e) {
          var i = [];
          if (null != t.excludeGroupId && t.excludeGroupId)
            for (var o = 0; e.data.length > o; o++) e.data[o].id !== t.excludeGroupId && i.push(e.data[o]);
          else if (null != t.excludeGroupIds && void 0 !== t.excludeGroupIds)
            for (var o = 0; e.data.length > o; o++) 0 > t.excludeGroupIds.indexOf(e.data[o].id) && i.push(e.data[o]);
          else i = e.data;
          p.popupModel.groupResults = i, p.resetSelection()
        })
      } else p.resetSelection(), p.popupModel.groupResults = []
    }), p.resetSelection = function() {
      p.popupModel.selectedGroup = void 0, p.popupModel.selectedIndex = -1
    }, p.nextGroup = function() {
      var e = p.popupModel.groupResults;
      e && e.length > 0 && p.popupModel.selectedIndex < e.length - 1 && (p.popupModel.selectedIndex += 1, p.popupModel.groupUser = e[p.popupModel.selectedIndex])
    }, p.previousGroup = function() {
      var e = p.popupModel.groupResults;
      e && e.length > 0 && p.popupModel.selectedIndex > 0 && (p.popupModel.selectedIndex -= 1, p.popupModel.selectedGroup = e[p.popupModel.selectedIndex])
    }, p.confirmGroup = function(e) {
      if (!e) {
        var i = p.popupModel.groupResults;
        p.popupModel.selectedIndex >= 0 && p.popupModel.selectedIndex < i.length && (e = i[p.popupModel.selectedIndex])
      }
      if (e)
        if (d && d(t.$parent, {
          group: e
        }), "true" === l) p.$hide();
        else {
          var i = p.popupModel.groupResults;
          i.splice(jQuery.inArray(e, i), 1), p.popupModel.selectedIndex = 0, p.popupModel.selectedGroup = i[p.popupModel.selectedIndex]
        }
    }, p.$on("tooltip.hide", function() {
      p.popupModel.groupResults = [], p.popupModel.filter = "", p.popupModel.added ? p.popupModel.added = !1 : c && c(t.$parent)
    })
  }, r
}]), activitiModule.directive("tabControl", ["$compile", "$http", "$templateCache", function(e, t, i) {
  var o = function(o, n) {
      if (!o.activeTemplate || o.activeTemplate != o.activeTab.id) {
        var r = $(n.children()[1]),
          s = angular.element(n.children()[1]).scope();
        if (o.activeTemplate && s != o && s.$destroy(), o.activeTab && o.activeTab.templateUrl) {
          var a = t.get(o.activeTab.templateUrl, {
            cache: i
          });
          a.success(function(e) {
            r.html(e)
          }).then(function() {
            o.activeTemplate = o.activeTab.id, r.replaceWith(e(r.html())(o))
          })
        } else r.empty()
      }
    },
    n = {};
  return n.restrict = "A", n.replace = !0, n.transclude = !0, n.template = '<div><div class="clearfix"><ul class="tabs clearfix"><li ng-repeat="tab in tabs" ng-class="{\'active\': tab.id == activeTab.id}"><a ng-click="tabClicked(tab)">{{tab.title && (tab.title | translate) || (tab.name | translate)}}</a></li></ul></div><div></div></div>', n.scope = {
    possibleTabs: "=tabControl",
    model: "=model",
    activeTabReference: "=activeTab"
  }, n.controller = ["$scope", "$element", function(e, t) {
    e.refreshTabs = function() {
      for (var t = [], i = 0; e.possibleTabs.length > i; i++) {
        var o = e.possibleTabs[i];
        o.hide || t.push(o)
      }
      e.tabs = t
    }, e.$watch("possibleTabs", function() {
      e.refreshTabs()
    }, !0), e.$watch("activeTabReference", function(t) {
      if (!e.activeTab || e.activeTab.id != t) {
        var i = e.findTab(t);
        i && e.tabClicked(i)
      }
    }), e.findTab = function(t) {
      if (e.possibleTabs)
        for (var i = 0; e.possibleTabs.length > i; i++)
          if (e.possibleTabs[i].id == t) return e.possibleTabs[i];
      return void 0
    }, e.tabClicked = function(i) {
      i.hide && (i.hide = !1, e.refreshTabs()), e.activeTab = i, e.activeTabReference = i ? i.id : void 0, o(e, t)
    }, e.refreshTabs(), e.tabs && e.tabs.length > 0 && (e.activeTabReference && (e.activeTab = e.findTab(e.activeTabReference)), e.activeTab || (e.activeTab = e.tabs[0]), e.tabClicked(e.activeTab))
  }], n.link = o, n
}]), activitiModule.directive("toggleDragover", ["$document", "$parse", function(e, t) {
  var i = function(e, i, o) {
    var n = o.toggleDragover,
      r = t(n),
      s = i[0];
    s.addEventListener("dragenter", function() {
      return e.$apply(function() {
        r(e, {
          over: !0
        })
      }), !1
    }, !1), s.addEventListener("dragleave", function() {
      return e.$apply(function() {
        r(e, {
          over: !1
        })
      }), !1
    }, !1)
  };
  return i
}]), activitiModule.directive("editInPlace", function() {
  return {
    restrict: "E",
    scope: {
      value: "="
    },
    template: '<span ng-click="edit()" ng-bind="value"></span><span class="glyphicon glyphicon-pencil edit-in-place-icon"></span><input ng-model="value" class="inline-edit-value form-control" ng-blur="stopEdit()" custom-keys enter-pressed="stopEdit()">',
    link: function(e, t) {
      angular.element(t.children()[1]);
      var i = angular.element(t.children()[2]);
      t.addClass("edit-in-place"), e.editing = !1, e.edit = function() {
        e.editing = !0, t.addClass("active"), i[0].focus()
      }, e.stopEdit = function() {
        e.editing = !1, t.removeClass("active")
      }
    }
  }
});
var _internalCreateModal = function(e, t, i) {
  return null !== i && void 0 !== i ? (i.modal = t(e), i.$on("$routeChangeStart", function() {
    i.modal && i.modal.hide()
  }), i.modal) : t(e)
};
activitiModule.directive("numberInputCheck", function() {
  return {
    require: "ngModel",
    link: function(e, t, i, o) {
      o.$parsers.push(function(e) {
        var t;
        return e && 0 == e.indexOf("-") ? (t = e.substr(1).replace(/([^0-9])/g, ""), t = "-" + t) : t = e.replace(/([^0-9])/g, ""), t != e && (o.$setViewValue(t), o.$render()), t
      })
    }
  }
}), activitiModule.directive("columnListScroll", ["$rootScope", "$timeout", "$interval", function(e, t, i) {
  return {
    restrict: "A",
    scope: {},
    link: function(e, o, n) {
      o.addClass("column-container-scroll"), e.columnHeaderClass = n.columnListScroll || "column-header", e.updateHeight = function() {
        var t;
        e.header ? t = e.header.outerHeight() : o.parent().children("." + e.columnHeaderClass).each(function() {
          if (e.header = angular.element(this), e.header.addClass("column-header-fixed"), e.resizeSensor = new ResizeSensor(this, e.updateHeight), e.header.hasClass("ng-hide")) var o = i(function() {
            e.header.hasClass("ng-hide") || (i.cancel(o), e.updateHeight())
          }, 20, 400, !1);
          else t = e.header.outerHeight()
        }), t && (e.emptyChild || (e.emptyChild = o.children(".column-list-scroll-push")), e.emptyChild && e.emptyChild.height(t))
      }, t(e.updateHeight, 1), e.$on("$destroy", function() {
        e.header && e.resizeSensor.detach(e.header[0])
      })
    }
  }
}]), activitiModule.directive("externalTarget", function() {
  return {
    restrict: "A",
    scope: {
      href: "@"
    },
    link: function(e, t, i) {
      var o = t[0];
      e.$watch("href", function() {
        (o.protocol != location.protocol || o.host != location.host) && (o.target = i.externalTarget)
      })
    }
  }
}), activitiModule.config(["$httpProvider", "$translateProvider", function(e) {
  e.defaults.headers.get || (e.defaults.headers.get = {}), e.defaults.headers.get["Cache-Control"] = "no-cache, no-store, must-revalidate", e.defaults.headers.get.Pragma = "no-cache", e.defaults.headers.get.Expires = "0"
}]), activitiModule.service("ResourceService", ["$http", "$q", "appResourceRoot", function(e, t, i) {
  function o(e, t) {
    var o = i + e;
    if (!t || !a[o])
      if (t && (a[o] = !0), document.createStyleSheet) try {
        document.createStyleSheet(e)
      } catch (n) {} else {
        var r = document.createElement("link");
        r.rel = "stylesheet", r.type = "text/css", r.media = "all", r.href = o, document.getElementsByTagName("head")[0].appendChild(r)
      }
  }

  function n(e, t, o) {
    var n = i + e;
    if (o && a[n] && t) t();
    else {
      o && (a[n] = !0);
      var r = document.createElement("script");
      if (r.type = "text/javascript", r.src = n, t) {
        var s = !1;
        r.onload = r.onreadystatechange = function() {
          s || this.readyState && "loaded" != this.readyState && "complete" != this.readyState || (s = !0, t())
        }
      }
      var l = document.getElementsByTagName("head")[0];
      l.appendChild(r)
    }
  }

  function r(e, t, i) {
    function o() {
      var r = e.shift();
      r ? n.call(this, r, o.bind(this), i) : t && t()
    }
    o.call(this)
  }

  function s(t, i, n) {
    e.get(t).success(function(e) {
      var t;
      if (window.DOMParser) {
        var s = new DOMParser;
        t = s.parseFromString(e, "text/xml")
      } else t = new ActiveXObject("Microsoft.XMLDOM"), t.async = !1, t.loadXML(e);
      for (var a, l = t.getElementsByTagName("link"), d = [], c = 0, p = l.length; p > c; c++) a = l[c].getAttribute("href"), a && o(a, n);
      for (l = t.getElementsByTagName("script"), c = 0, p = l.length; p > c; c++) a = l[c].getAttribute("src"), a && d.push(a);
      r(d, i, n)
    })
  }
  var a = {};
  this.loadFromHtml = s, this.loadScript = n, this.loadStylesheet = o
}]),
  function() {
    if (null !== ACTIVITI.CONFIG.isEventTrackingEnabled && void 0 !== ACTIVITI.CONFIG.isEventTrackingEnabled && ACTIVITI.CONFIG.isEventTrackingEnabled === !0)
      if (null !== ACTIVITI.CONFIG.trackingCode && void 0 !== ACTIVITI.CONFIG.trackingCode) {
        (function(e, t, i, o, n, r, s) {
          e.GoogleAnalyticsObject = n, e[n] = e[n] || function() {
            (e[n].q = e[n].q || []).push(arguments)
          }, e[n].l = 1 * new Date, r = t.createElement(i), s = t.getElementsByTagName(i)[0], r.async = 1, r.src = o, s.parentNode.insertBefore(r, s)
        })(window, document, "script", "//www.google-analytics.com/analytics.js", "ga");
        var e;
        e = null !== ACTIVITI.CONFIG.isDevMode && void 0 !== ACTIVITI.CONFIG.isDevMode && ACTIVITI.CONFIG.isDevMode === !0 ? {
          cookieDomain: "none"
        } : "auto", ga("create", ACTIVITI.CONFIG.trackingCode, e), ga("require", "displayfeatures"), ga("send", "pageview")
      } else console.log("Could not initialise event tracking: no tracking code found (set property in ACTIVITI.CONFIG.trackingCode)")
  }(), activitiModule.run(["$rootScope", "$location", "EventTrackingService", function(e, t, i) {
  e.$on("$locationChangeSuccess", function() {
    var e = t.url();
    null !== e && void 0 !== e && e.length > 0 && i.trackPageView(t.url())
  })
}]), activitiModule.config(["$provide", function(e) {
  e.decorator("$exceptionHandler", ["$delegate", "EventTrackingService", function(e, t) {
    return function(i, o) {
      if (e(i, o), i) {
        var n;
        i && i.stack && (n = angular.toJson(i.stack)), n && t.trackException(n, !1)
      }
    }
  }])
}]), activitiModule.service("EventTrackingService", [function() {
  var e = function() {
      return null !== ACTIVITI.CONFIG.isEventTrackingEnabled && void 0 !== ACTIVITI.CONFIG.isEventTrackingEnabled && ACTIVITI.CONFIG.isEventTrackingEnabled === !0
    },
    t = function(e) {
      null !== ACTIVITI.CONFIG.isDevMode && void 0 !== ACTIVITI.CONFIG.isDevMode && ACTIVITI.CONFIG.isDevMode === !0 && console.log("[Event Tracker] " + e)
    };
  this.trackPageView = function(i) {
    e() && (t("pageview : " + i), ga("set", "page", i), ga("send", "pageview"))
  }, this.trackEvent = function(i, o, n, r) {
    e() && (t("custom event : " + i + " - " + o), ga("send", "event", i, o, n, r))
  }, this.trackException = function(i, o) {
    e() && (t("exception : " + i + ", is fatal: " + o), ga("send", "event", "exception", "webapp", i.substring(0, 400)))
  }
}]), activitiModule.filter("trackEvent", ["EventTrackingService", function(e) {
  return function(t, i, o, n, r) {
    return e.trackEvent(i, o, n, r), t
  }
}]), activitiModule.factory("RecursionHelper", ["$compile", function(e) {
  return {
    compile: function(t, i) {
      angular.isFunction(i) && (i = {
        post: i
      });
      var o, n = t.contents().remove();
      return {
        pre: i && i.pre ? i.pre : null,
        post: function(t, r) {
          o || (o = e(n)), o(t, function(e) {
            r.append(e)
          }), i && i.post && i.post.apply(null, arguments)
        }
      }
    }
  }
}]), activitiApp.service("FormUtilService", [function() {
  var e = function(t, i) {
    var i = i || [];
    return t && t.forEach(function(t) {
      if (i.push(t), ("container" === t.type || "group" === t.type) && t.fields)
        for (var o in t.fields) e(t.fields[o], i)
    }), i
  };
  this.flattenFields = e;
  var t = function(e, t) {
    var i = e.indexOf(t);
    if (i >= 0) return i;
    for (var o = 0; e.length > o; o++)
      if ("container" === e[o].type)
        for (var n in e[o].fields)
          if (e[o].fields[n].indexOf(t) >= 0) return o
  };
  this.determineContainerIndex = t;
  var i = function(e, t) {
    var i = e.indexOf(t);
    i >= 0 && e.splice(i, 1);
    for (var o = function(t) {
      var i;
      e.forEach(function(e, o) {
        if ("container" === e.type && e.fields) {
          var n = !1,
            r = !0;
          for (var s in e.fields) e.fields[s] === t && (n = !0), e.fields[s] && e.fields[s].length > 0 && (r = !1);
          n && r && (i = o)
        }
      }), void 0 !== i && i > -1 && e.splice(i, 1)
    }, n = 0; e.length > n; n++)
      if ("container" === e[n].type)
        for (var r in e[n].fields)
          if (e[n].fields[r].indexOf(t) >= 0) {
            e[n].fields[r].splice(e[n].fields[r].indexOf(t), 1), o(e[n].fields[r]);
            break
          }
  };
  this.removeFormElement = i
}]),
  function() {
    angular.module("http-auth-interceptor", ["http-auth-interceptor-buffer"]).factory("authService", ["$rootScope", "httpBuffer", function(e, t) {
        return {
          loginConfirmed: function(i, o) {
            var n = o || function(e) {
              return e
            };
            e.$broadcast("event:auth-loginConfirmed", i), t.retryAll(n)
          },
          loginCancelled: function(i, o) {
            t.rejectAll(o), e.$broadcast("event:auth-loginCancelled", i)
          }
        }
      }]).config(["$httpProvider", function(e) {
        var t = ["$rootScope", "$q", "httpBuffer", "$translate", function(e, t, i, o) {
          return {
            responseError: function(n) {
              if (401 === n.status && !n.config.ignoreAuthModule) {
                var r = t.defer();
                return i.append(n.config, r), e.$broadcast("event:auth-loginRequired", n), r.promise
              }
              return 401 === n.status && (e.invalidCredentials = !0), n.status >= 500 && 599 >= n.status && n.config && !n.config.ignoreErrors && (n.data && n.data.messageKey ? e.addAlertPromise(o(n.data.messageKey), "error") : n.data && n.data.message ? e.addAlert(n.data.message, "error") : e.addAlertPromise(o("GENERAL.ERROR.GENERIC"), "error")), t.reject(n)
            }
          }
        }];
        e.interceptors.push(t)
      }]), angular.module("http-auth-interceptor-buffer", []).factory("httpBuffer", ["$injector", function(e) {
      function t(t, o) {
        function n(e) {
          o.resolve(e)
        }

        function r(e) {
          o.reject(e)
        }
        i = i || e.get("$http"), i(t).then(n, r)
      }
      var i, o = [];
      return {
        append: function(e, t) {
          o.push({
            config: e,
            deferred: t
          })
        },
        rejectAll: function(e) {
          if (e)
            for (var t = 0; o.length > t; ++t) o[t].deferred.reject(e);
          o = []
        },
        retryAll: function(e) {
          for (var i = 0; o.length > i; ++i) t(e(o[i].config), o[i].deferred);
          o = []
        }
      }
    }])
  }(), activitiApp.factory("AuthenticationSharedService", ["$rootScope", "$http", "authService", "$q", "$location", "$window", function(e, t, i, o) {
  return {
    authenticate: function() {
      var i = o.defer();
      return t.get(ACTIVITI.CONFIG.contextRoot + "/app/rest/authenticate", {
        ignoreErrors: !0,
        ignoreAuthModule: "ignoreAuthModule"
      }).success(function() {
        var o = ACTIVITI.CONFIG.contextRoot + "/app/rest/account";
        ACTIVITI.CONFIG.integrationProfile && (o += "?includeApps=true"), t.get(o).success(function(t) {
          e.account = t, e.invalidCredentials = !1, e.$broadcast("event:auth-authConfirmed"), i.resolve()
        }).error(function(t) {
          i.reject(t), e.$broadcast("event:auth-loginRequired")
        })
      }).error(function(t) {
        i.reject(t), e.$broadcast("event:auth-loginRequired")
      }), i.promise
    },
    login: function(o) {
      var n = "j_username=" + encodeURIComponent(o.username) + "&j_password=" + encodeURIComponent(o.password) + "&_spring_security_remember_me=true&submit=Login";
      t.post(ACTIVITI.CONFIG.contextRoot + "/app/authentication", n, {
        headers: {
          "Content-Type": "application/x-www-form-urlencoded"
        },
        ignoreAuthModule: "ignoreAuthModule"
      }).success(function(t, n, r, s) {
        e.authenticationError = !1, o.success && o.success(t, n, r, s), i.loginConfirmed()
      }).error(function(t, i, n, r) {
        e.$broadcast("event:auth-loginFailed"), o.error && o.error(t, i, n, r)
      })
    },
    logout: function() {
      e.authenticated = !1, e.authenticationError = !1, t.get(ACTIVITI.CONFIG.contextRoot + "/app/logout").success(function() {
        e.login = null, e.authenticated = !1, i.loginCancelled({
          isFromLogout: !0
        })
      })
    },
    hasCapability: function(t) {
      return e.account && e.account.capabilities ? e.account.capabilities.indexOf(t) > -1 : !1
    },
    hasTenantManagementCapability: function() {
      return this.hasCapability("tenant-mgmt")
    },
    hasTenantAdminCapability: function() {
      return this.hasCapability("tenant-admin")
    },
    hasAccessReportsCapability: function() {
      return this.hasCapability("access-reports")
    }
  }
}]), activitiApp.service("RuntimeAppDefinitionService", ["$http", "$q", "$location", "EventTrackingService", "AuthenticationSharedService", "appName", function(e, t, i, o, n, r) {
  var s = function(i) {
    var o = t.defer();
    return e(i).success(function(e) {
      o.resolve(e)
    }).error(function(e) {
      o.reject(e)
    }), o.promise
  };
  this.getApplications = function() {
    var e = n.hasTenantManagementCapability() || n.hasTenantAdminCapability(),
      t = [],
      o = i.absUrl(),
      a = o.indexOf("/#");
    a >= 0 && (o = o.substring(0, a)), a = o.indexOf("?"), a >= 0 && (o = o.substring(0, a)), "/" == o[o.length - 1] && (o = o.substring(0, o.length - 1)), r.length > 0 && o.substring(o.length - r.length) == r && (o = o.substring(0, o.length - r.length - 1));
    var l = {
        editor: o + "/editor/",
        identity: o + "/idm/",
        workflow: o + "/workflow/",
        admin: "http://localhost:8080/activiti-admin",
        analytics: o + "/analytics/"
      },
      d = function(i) {
        for (var n = JSON.parse(i), r = [], s = 0; n.data.length > s; s++) {
          var a = n.data[s];
          if (void 0 !== a.defaultAppId && null !== a.defaultAppId)
            if ("kickstart" === a.defaultAppId) t.push({
              id: "kickstart",
              titleKey: "APP.KICKSTART.TITLE",
              descriptionKey: "APP.KICKSTART.DESCRIPTION",
              defaultAppId: a.defaultAppId,
              theme: "theme-1",
              icon: "icon icon-choice",
              fixedBaseUrl: l.editor + "/#/",
              fixedUrl: l.editor,
              pages: ["processes", "forms", "apps", "stencils", "decision-tables"]
            });
            else if ("tasks" === a.defaultAppId) t.push({
              id: "tasks",
              titleKey: "APP.TASKS.TITLE",
              descriptionKey: "APP.TASKS.DESCRIPTION",
              defaultAppId: a.defaultAppId,
              theme: "theme-2",
              icon: "icon icon-clock",
              fixedBaseUrl: l.workflow + "/#/",
              fixedUrl: l.workflow,
              pages: ["tasks", "processes", "processes?mode=start"]
            });
            else if ("identity" === a.defaultAppId) {
              var d = {
                id: "identity",
                titleKey: e ? "APP.IDENTITY-MANAGEMENT.TITLE-TENANT-ADMIN" : "APP.IDENTITY-MANAGEMENT.TITLE",
                descriptionKey: e ? "APP.IDENTITY-MANAGEMENT.DESCRIPTION-TENANT-ADMIN" : "APP.IDENTITY-MANAGEMENT.DESCRIPTION",
                defaultAppId: a.defaultAppId,
                theme: "theme-3",
                icon: "icon icon-user",
                fixedBaseUrl: l.identity + "/#/",
                fixedUrl: l.identity
              };
              e && (d.pages = ["tenant-mgmt", "user-mgmt", "system-group-mgmt", "functional-group-mgmt", "profile"]), t.push(d)
            } else "analytics" === a.defaultAppId && t.push({
              id: "analytics",
              titleKey: "APP.ANALYTICS.TITLE",
              descriptionKey: "APP.ANALYTICS.DESCRIPTION",
              defaultAppId: a.defaultAppId,
              theme: "theme-6",
              icon: "glyphicon glyphicon-stats",
              fixedBaseUrl: l.analytics + "/#/",
              fixedUrl: l.analytics
            });
          else a.icon = "glyphicon " + a.icon, a.fixedBaseUrl = o + "/workflow/#/apps/" + a.id + "/", a.fixedUrl = a.fixedBaseUrl + "tasks", a.pages = ["tasks", "processes", "processes?mode=start"], a.deletable = !0, r.push(a)
        }
        return {
          defaultApps: t,
          customApps: r
        }
      };
    return s({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/runtime/app-definitions",
      transformResponse: d
    })
  }, this.deleteAppDefinition = function(e) {
    var t = s({
      method: "DELETE",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/runtime/app-definitions/" + e
    });
    return t.then(function() {
      o.trackEvent("landing", "runtime-app-delete")
    }), t
  }
}]), activitiApp.service("SystemPropertiesService", ["$http", "$q", function(e, t) {
  var i = function(i) {
    var o = t.defer();
    return e(i).success(function(e) {
      o.resolve(e)
    }).error(function(e) {
      o.reject(e)
    }), o.promise
  };
  this.getSystemProperties = function() {
    return i({
      method: "GET",
      url: ACTIVITI.CONFIG.contextRoot + "/app/rest/system/properties"
    })
  }
}]), activitiApp.controller("AboutActivitiPopupCrtl", ["$rootScope", "$scope", "$http", "$translate", "$interval", "$dateFormatter", function(e, t, i, o, n, r) {
  t.popup = {
    loading: !0,
    activitiVersion: {},
    licenseHolder: ""
  }, i({
    method: "GET",
    url: ACTIVITI.CONFIG.contextRoot + "/app/rest/about-info"
  }).success(function(e) {
    t.popup.licenseHolder = e.holder, t.popup.activitiVersion = e.versionInfo.edition + " v" + e.versionInfo.majorVersion + "." + e.versionInfo.minorVersion + "." + e.versionInfo.revisionVersion, t.popup.activitiVersionType = e.versionInfo.type, e.goodBeforeDate && (t.popup.goodBeforeDate = r.formatDate(new Date(e.goodBeforeDate))), t.popup.loading = !1
  }).error(function() {
    t.popup.loading = !1
  }), t.cancel = function() {
    t.close()
  }, t.close = function() {
    t.$hide()
  }
}]);